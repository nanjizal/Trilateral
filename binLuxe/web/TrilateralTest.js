// Generated by Haxe 3.4.0 (git build development @ 4a40be3)
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) if(x.next() == elt) {
		return true;
	}
	return false;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) if(pred(x.next())) {
			++n;
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Luxe = function() { };
$hxClasses["Luxe"] = Luxe;
Luxe.__name__ = ["Luxe"];
Luxe.__properties__ = {set_fixed_frame_time:"set_fixed_frame_time",get_fixed_frame_time:"get_fixed_frame_time",get_fixed_alpha:"get_fixed_alpha",set_fixed_timestep:"set_fixed_timestep",get_fixed_timestep:"get_fixed_timestep",set_fixed_delta:"set_fixed_delta",get_fixed_delta:"get_fixed_delta",get_sim_delta:"get_sim_delta",get_sim_time:"get_sim_time",set_timescale:"set_timescale",get_timescale:"get_timescale",get_tick_delta:"get_tick_delta",get_tick_start_prev:"get_tick_start_prev",get_tick_start:"get_tick_start",set_update_rate:"set_update_rate",get_update_rate:"get_update_rate",set_frame_max_delta:"set_frame_max_delta",get_frame_max_delta:"get_frame_max_delta",get_frame_start_prev:"get_frame_start_prev",get_frame_start:"get_frame_start",get_dt:"get_dt",get_build:"get_build",get_version:"get_version",get_screen:"get_screen",get_time:"get_time",get_snow:"get_snow"}
Luxe.on = function(event,handler) {
	Luxe.core.emitter.on(event,handler);
};
Luxe.off = function(event,handler) {
	return Luxe.core.emitter.off(event,handler);
};
Luxe.next = function(func) {
	if(func != null) {
		snow_Snow.next_queue.push(func);
	}
};
Luxe.shutdown = function() {
	Luxe.core.shutdown();
};
Luxe.showConsole = function(_show) {
	Luxe.core.debug.set_visible(_show);
};
Luxe.get_snow = function() {
	return Luxe.core.app;
};
Luxe.get_screen = function() {
	return Luxe.core.screen;
};
Luxe.get_time = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
Luxe.get_version = function() {
	return Luxe.core.version;
};
Luxe.get_build = function() {
	return Luxe.core.build;
};
Luxe.get_dt = function() {
	return Luxe.core.frame_delta;
};
Luxe.get_frame_start = function() {
	return Luxe.core.frame_start;
};
Luxe.get_frame_start_prev = function() {
	return Luxe.core.frame_start_prev;
};
Luxe.get_frame_max_delta = function() {
	return Luxe.core.frame_max_delta;
};
Luxe.get_update_rate = function() {
	return Luxe.core.update_rate;
};
Luxe.get_tick_start = function() {
	return Luxe.core.tick_start;
};
Luxe.get_tick_start_prev = function() {
	return Luxe.core.tick_start_prev;
};
Luxe.get_tick_delta = function() {
	return Luxe.core.tick_delta;
};
Luxe.get_timescale = function() {
	return Luxe.core.timescale;
};
Luxe.get_sim_time = function() {
	return Luxe.core.sim_time;
};
Luxe.get_sim_delta = function() {
	return Luxe.core.sim_delta;
};
Luxe.get_fixed_delta = function() {
	return Luxe.core.fixed_delta;
};
Luxe.get_fixed_timestep = function() {
	return Luxe.core.fixed_timestep;
};
Luxe.get_fixed_alpha = function() {
	return Luxe.core.fixed_alpha;
};
Luxe.get_fixed_frame_time = function() {
	return Luxe.core.fixed_frame_time;
};
Luxe.set_timescale = function(_val) {
	return Luxe.core.timescale = _val;
};
Luxe.set_fixed_delta = function(_val) {
	return Luxe.core.fixed_delta = _val;
};
Luxe.set_update_rate = function(_val) {
	return Luxe.core.update_rate = _val;
};
Luxe.set_fixed_timestep = function(_val) {
	return Luxe.core.fixed_timestep = _val;
};
Luxe.set_frame_max_delta = function(_val) {
	return Luxe.core.frame_max_delta = _val;
};
Luxe.set_fixed_frame_time = function(_val) {
	return Luxe.core.fixed_frame_time = _val;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var fracs_DifferencePreference = $hxClasses["fracs.DifferencePreference"] = { __ename__ : ["fracs","DifferencePreference"], __constructs__ : ["CLOCKWISE","ANTICLOCKWISE","SMALL","LARGE"] };
fracs_DifferencePreference.CLOCKWISE = ["CLOCKWISE",0];
fracs_DifferencePreference.CLOCKWISE.toString = $estr;
fracs_DifferencePreference.CLOCKWISE.__enum__ = fracs_DifferencePreference;
fracs_DifferencePreference.ANTICLOCKWISE = ["ANTICLOCKWISE",1];
fracs_DifferencePreference.ANTICLOCKWISE.toString = $estr;
fracs_DifferencePreference.ANTICLOCKWISE.__enum__ = fracs_DifferencePreference;
fracs_DifferencePreference.SMALL = ["SMALL",2];
fracs_DifferencePreference.SMALL.toString = $estr;
fracs_DifferencePreference.SMALL.__enum__ = fracs_DifferencePreference;
fracs_DifferencePreference.LARGE = ["LARGE",3];
fracs_DifferencePreference.LARGE.toString = $estr;
fracs_DifferencePreference.LARGE.__enum__ = fracs_DifferencePreference;
var fracs_Angles = function() { };
$hxClasses["fracs.Angles"] = fracs_Angles;
fracs_Angles.__name__ = ["fracs","Angles"];
fracs_Angles.pi2pi = function(angle) {
	if(angle <= Math.PI && angle > -Math.PI) {
		return angle;
	} else {
		var a = (angle + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			return a - Math.PI;
		} else {
			return a + Math.PI;
		}
	}
};
fracs_Angles.zeroto2pi = function(angle) {
	if(angle >= 0 && angle > Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		if(a >= 0) {
			return a;
		} else {
			return a + 2 * Math.PI;
		}
	}
};
fracs_Angles.zerotoMinus2pi = function(angle) {
	if(angle <= 0 && angle > -Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		return -(Math.PI * 2 - (a >= 0 ? a : a + 2 * Math.PI));
	}
};
fracs_Angles.differencePrefer = function(a,b,prefer) {
	switch(prefer[1]) {
	case 0:
		a >= 0 && a > Math.PI;
		b >= 0 && b > Math.PI;
		var theta = Math.abs(a - b);
		var dif = a < b ? theta : -theta;
		if(dif > 0) {
			return dif;
		} else {
			return 2 * Math.PI + dif;
		}
		break;
	case 1:
		a >= 0 && a > Math.PI;
		b >= 0 && b > Math.PI;
		var theta1 = Math.abs(a - b);
		var dif1 = a < b ? theta1 : -theta1;
		if(dif1 < 0) {
			return dif1;
		} else {
			return -2 * Math.PI + dif1;
		}
		break;
	case 2:
		a >= 0 && a > Math.PI;
		b >= 0 && b > Math.PI;
		var theta2 = Math.abs(a - b);
		var clockwise = a < b;
		if(theta2 <= Math.PI) {
			return clockwise ? theta2 : -theta2;
		} else if(clockwise) {
			return -(2 * Math.PI - theta2);
		} else {
			return 2 * Math.PI - theta2;
		}
		break;
	case 3:
		a >= 0 && a > Math.PI;
		b >= 0 && b > Math.PI;
		var theta3 = Math.abs(a - b);
		var clockwise1 = a < b;
		if(theta3 > Math.PI) {
			return clockwise1 ? theta3 : -theta3;
		} else if(clockwise1) {
			return -(2 * Math.PI - theta3);
		} else {
			return 2 * Math.PI - theta3;
		}
		break;
	}
};
fracs_Angles.difference = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	if(a < b) {
		return theta;
	} else {
		return -theta;
	}
};
fracs_Angles.differenceClockWise = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	var dif = a < b ? theta : -theta;
	if(dif > 0) {
		return dif;
	} else {
		return 2 * Math.PI + dif;
	}
};
fracs_Angles.differenceAntiClockwise = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	var dif = a < b ? theta : -theta;
	if(dif < 0) {
		return dif;
	} else {
		return -2 * Math.PI + dif;
	}
};
fracs_Angles.differenceSmall = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	if(theta <= Math.PI) {
		return clockwise ? theta : -theta;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
fracs_Angles.differenceLarge = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	if(theta > Math.PI) {
		return clockwise ? theta : -theta;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
fracs_Angles.differenceSmallLarge = function(a,b) {
	a >= 0 && a > Math.PI;
	b >= 0 && b > Math.PI;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	var other = clockwise ? -(2 * Math.PI - theta) : 2 * Math.PI - theta;
	if(theta <= Math.PI) {
		return { small : dif, large : other};
	} else {
		return { small : other, large : dif};
	}
};
var fracs__$Fraction_FractionArray_$Impl_$ = {};
$hxClasses["fracs._Fraction.FractionArray_Impl_"] = fracs__$Fraction_FractionArray_$Impl_$;
fracs__$Fraction_FractionArray_$Impl_$.__name__ = ["fracs","_Fraction","FractionArray_Impl_"];
fracs__$Fraction_FractionArray_$Impl_$._new = function(val) {
	return val == null ? [] : val;
};
fracs__$Fraction_FractionArray_$Impl_$.add = function(this1,val) {
	this1[this1.length] = val;
};
fracs__$Fraction_FractionArray_$Impl_$.toString = function(this1) {
	var l = this1.length;
	var str = "";
	var _g1 = 0;
	while(_g1 < l) {
		var this2 = this1[_g1++];
		var n = this2.numerator;
		var d = this2.denominator;
		str = str + "\n" + (n == 0 ? "0" : n == d ? "1" : d == 1 ? this2.positive ? "" + n : "-" + n : this2.positive ? "" + n + "/" + d : "-" + n + "/" + d);
	}
	return str;
};
var fracs__$Fraction_Fraction_$Impl_$ = {};
$hxClasses["fracs._Fraction.Fraction_Impl_"] = fracs__$Fraction_Fraction_$Impl_$;
fracs__$Fraction_Fraction_$Impl_$.__name__ = ["fracs","_Fraction","Fraction_Impl_"];
fracs__$Fraction_Fraction_$Impl_$._new = function(numerator,denominator,positive,value) {
	if(positive == null) {
		positive = true;
	}
	var this1;
	var numNeg = numerator < 0;
	var denoNeg = denominator < 0;
	if(value == null) {
		if(positive) {
			value = numerator / denominator;
		} else {
			value = -numerator / denominator;
		}
	}
	if(numNeg || denoNeg) {
		if(!(numNeg && denoNeg)) {
			positive = !positive;
		}
		if(numNeg) {
			numerator = -numerator;
		}
		if(denoNeg) {
			denominator = -denominator;
		}
	}
	this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
	return this1;
};
fracs__$Fraction_Fraction_$Impl_$.optimize = function(this1) {
	var f = this1.value;
	var arr = fracs_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var fracStore = arr[0];
	var _g1 = 0;
	while(_g1 < l) {
		var frac = arr[_g1++];
		if(frac.positive) {
			fracFloat = frac.numerator / frac.denominator;
		} else {
			fracFloat = -frac.numerator / frac.denominator;
		}
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac;
		}
	}
	return fracStore;
};
fracs__$Fraction_Fraction_$Impl_$.optimizeFraction = function(this1) {
	var f = this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator;
	var arr = fracs_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var fracStore = arr[0];
	var _g1 = 0;
	while(_g1 < l) {
		var frac = arr[_g1++];
		if(frac.positive) {
			fracFloat = frac.numerator / frac.denominator;
		} else {
			fracFloat = -frac.numerator / frac.denominator;
		}
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac;
		}
	}
	return fracStore;
};
fracs__$Fraction_Fraction_$Impl_$.toFloat = function(this1) {
	if(this1.positive) {
		return this1.numerator / this1.denominator;
	} else {
		return -this1.numerator / this1.denominator;
	}
};
fracs__$Fraction_Fraction_$Impl_$["float"] = function(this1) {
	return this1.value;
};
fracs__$Fraction_Fraction_$Impl_$.verbose = function(this1) {
	return "{ numerator:" + this1.numerator + ", denominator: " + this1.denominator + ", positive: " + (this1.positive == null ? "null" : "" + this1.positive) + ", value: " + this1.value + " }";
};
fracs__$Fraction_Fraction_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var this1;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = false;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = fracs_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var fracStore = arr[0];
		var _g1 = 0;
		while(_g1 < l) {
			var frac1 = arr[_g1++];
			if(frac1.positive) {
				fracFloat = frac1.numerator / frac1.denominator;
			} else {
				fracFloat = -frac1.numerator / frac1.denominator;
			}
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac1;
			}
		}
		frac = fracStore;
	}
	return frac;
};
fracs__$Fraction_Fraction_$Impl_$.toString = function(this1) {
	var n = this1.numerator;
	var d = this1.denominator;
	return n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
};
fracs__$Fraction_Fraction_$Impl_$.fromFloat = function(f) {
	var arr = fracs_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var fracStore = arr[0];
	var _g1 = 0;
	while(_g1 < l) {
		var frac = arr[_g1++];
		if(frac.positive) {
			fracFloat = frac.numerator / frac.denominator;
		} else {
			fracFloat = -frac.numerator / frac.denominator;
		}
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac;
		}
	}
	return fracStore;
};
fracs__$Fraction_Fraction_$Impl_$.firstFloat = function(f) {
	return fracs_Fracs.approximateFractions(f)[0];
};
fracs__$Fraction_Fraction_$Impl_$.byDenominator = function(this1,val) {
	var n = this1.numerator;
	var d = this1.denominator;
	var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
	if(!(this1.denominator == val || out == "0" || out == "1")) {
		var dom = Math.round(this1.value * val);
		var numerator = dom;
		var denominator = val;
		var positive = true;
		var value = null;
		var this2;
		var numNeg = dom < 0;
		var denoNeg = val < 0;
		if(value == null) {
			value = dom / val;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = false;
			}
			if(numNeg) {
				numerator = -dom;
			}
			if(denoNeg) {
				denominator = -val;
			}
		}
		this2 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		var frac = this2;
		var n1 = frac.numerator;
		var d1 = frac.denominator;
		out = n1 == 0 ? "0" : n1 == d1 ? "1" : d1 == 1 ? frac.positive ? "" + n1 : "-" + n1 : frac.positive ? "" + n1 + "/" + d1 : "-" + n1 + "/" + d1;
	}
	return out;
};
fracs__$Fraction_Fraction_$Impl_$.all = function(f) {
	return fracs_Fracs.approximateFractions(f);
};
fracs__$Fraction_Fraction_$Impl_$.similarToFraction = function(this1) {
	return fracs_Fracs.approximateFractions(this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator);
};
fracs__$Fraction_Fraction_$Impl_$.similarToValue = function(this1) {
	return fracs_Fracs.approximateFractions(this1.value);
};
var fracs_Fracs = function() { };
$hxClasses["fracs.Fracs"] = fracs_Fracs;
fracs_Fracs.__name__ = ["fracs","Fracs"];
fracs_Fracs.grabDecimalInput = function(decimalVal) {
	var decimal = Math.abs(parseFloat(decimalVal));
	if(isNaN(decimal)) {
		return 0.;
	} else {
		return decimal;
	}
};
fracs_Fracs.approximateFractions = function(f) {
	var positive = f <= 0 ? false : true;
	var numerators = [0,1];
	var denominators = [1,0];
	var f2 = f <= 0 ? -f : f;
	var fStr = f2 == null ? "null" : "" + f2;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var L2 = f2;
	var numIntDigits = (L2 == null ? "null" : "" + L2).length;
	if(L2 == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = digits.length - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	var maxNumerator = L;
	var d2 = f2;
	var calcD;
	var prevCalcD = null;
	var arrFraction = [];
	var _g = 2;
	while(_g < 1000) {
		var i1 = _g++;
		var L21 = Math.floor(d2);
		numerators[i1] = L21 * numerators[i1 - 1] + numerators[i1 - 2] | 0;
		if(Math.abs(numerators[i1]) > maxNumerator) {
			break;
		}
		denominators[i1] = L21 * denominators[i1 - 1] + denominators[i1 - 2] | 0;
		calcD = numerators[i1] / denominators[i1];
		if(calcD == prevCalcD) {
			break;
		}
		var numerator = numerators[i1];
		var denominator = denominators[i1];
		var positive1 = positive;
		var value = f;
		var this1;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(f == null) {
			if(positive1) {
				value = numerator / denominator;
			} else {
				value = -numerator / denominator;
			}
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive1 = !positive1;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		this1 = { numerator : numerator, denominator : denominator, positive : positive1, value : value};
		fracs__$Fraction_FractionArray_$Impl_$.add(arrFraction,this1);
		if(calcD == f2) {
			break;
		}
		prevCalcD = calcD;
		d2 = 1 / (d2 - L21);
	}
	return arrFraction;
};
fracs_Fracs.getMaxNumerator = function(f) {
	var fStr = f == null ? "null" : "" + f;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var numIntDigits = (f == null ? "null" : "" + f).length;
	if(f == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = digits.length - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
fracs_Fracs.extractDigitStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	return digits;
};
fracs_Fracs.getMaxNumeratorStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	var numIntDigits = fStr.length;
	if(fStr == "0") {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = digits.length - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(fStr);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
var fracs__$Pi2pi_Pi2pi_$Impl_$ = {};
$hxClasses["fracs._Pi2pi.Pi2pi_Impl_"] = fracs__$Pi2pi_Pi2pi_$Impl_$;
fracs__$Pi2pi_Pi2pi_$Impl_$.__name__ = ["fracs","_Pi2pi","Pi2pi_Impl_"];
fracs__$Pi2pi_Pi2pi_$Impl_$.__properties__ = {set_degrees:"set_degrees",get_degrees:"get_degrees"}
fracs__$Pi2pi_Pi2pi_$Impl_$._new = function(f) {
	return f;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1;
	f = this1 - b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1;
	f = this1 / b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1;
	f = this1 * b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.addition = function(this1,b) {
	var f = this1;
	f = this1 + b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1;
	f = this1 - b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.divide = function(this1,b) {
	var f = this1;
	f = this1 / b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.times = function(this1,b) {
	var f = this1;
	f = this1 * b;
	f <= Math.PI && f > -Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			f1 = a - Math.PI;
		} else {
			f1 = a + Math.PI;
		}
	}
	return f1;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.fromFraction = function(val) {
	return (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = fracs_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var fracStore = arr[0];
	var _g1 = 0;
	while(_g1 < l) {
		var frac = arr[_g1++];
		if(frac.positive) {
			fracFloat = frac.numerator / frac.denominator;
		} else {
			fracFloat = -frac.numerator / frac.denominator;
		}
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac;
		}
	}
	return fracStore;
};
fracs__$Pi2pi_Pi2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var this1;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = false;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = fracs_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var fracStore = arr[0];
		var _g1 = 0;
		while(_g1 < l) {
			var frac1 = arr[_g1++];
			if(frac1.positive) {
				fracFloat = frac1.numerator / frac1.denominator;
			} else {
				fracFloat = -frac1.numerator / frac1.denominator;
			}
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac1;
			}
		}
		frac = fracStore;
	}
	var frac2 = frac;
	return (frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator) * Math.PI;
};
var fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$ = {};
$hxClasses["fracs._ZeroTo2Pi.ZeroTo2pi_Impl_"] = fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$;
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.__name__ = ["fracs","_ZeroTo2Pi","ZeroTo2pi_Impl_"];
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.__properties__ = {set_degrees:"set_degrees",get_degrees:"get_degrees"}
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$._new = function(f) {
	return f;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1;
	f = this1 - b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1;
	f = this1 / b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1;
	f = this1 * b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.addition = function(this1,b) {
	var f = this1;
	f = this1 + b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1;
	f = this1 - b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.divide = function(this1,b) {
	var f = this1;
	f = this1 / b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.times = function(this1,b) {
	var f = this1;
	f = this1 * b;
	f >= 0 && f > Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		if(a >= 0) {
			f1 = a;
		} else {
			f1 = a + 2 * Math.PI;
		}
	}
	return f1;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.fromFraction = function(val) {
	return (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = fracs_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var fracStore = arr[0];
	var _g1 = 0;
	while(_g1 < l) {
		var frac = arr[_g1++];
		if(frac.positive) {
			fracFloat = frac.numerator / frac.denominator;
		} else {
			fracFloat = -frac.numerator / frac.denominator;
		}
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac;
		}
	}
	return fracStore;
};
fracs__$ZeroTo2Pi_ZeroTo2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var this1;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = false;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = fracs_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var fracStore = arr[0];
		var _g1 = 0;
		while(_g1 < l) {
			var frac1 = arr[_g1++];
			if(frac1.positive) {
				fracFloat = frac1.numerator / frac1.denominator;
			} else {
				fracFloat = -frac1.numerator / frac1.denominator;
			}
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac1;
			}
		}
		frac = fracStore;
	}
	var frac2 = frac;
	return (frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator) * Math.PI;
};
var haxe_StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			return haxe_crypto_Base64.decode(x.data).toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var _g1 = 0;
				var _g2 = v["length"];
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				this.buf.b += "v";
				this.buf.b += Std.string(v.getTime());
				break;
			case List:
				this.buf.b += "l";
				var _g_head = v.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					this.serialize(val);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v3 = v;
				var k = v3.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v3.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v4 = v;
				var k2 = v4.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v4.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v5 = v;
				var k4 = v5.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v5.getReserved(k5) : v5.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v6 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v6.length * 8 / 6));
				this.buf.b += ":";
				var i1 = 0;
				var max = v6.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					b64 = new Array(length);
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i2 = _g11++;
						b64[i2] = HxOverrides.cca(haxe_Serializer.BASE64,i2);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i1 < max) {
					var b1 = v6.b[i1++];
					var b2 = v6.b[i1++];
					var b3 = v6.b[i1++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i1 == max) {
					var b11 = v6.b[i1++];
					var b21 = v6.b[i1++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i1 == max + 1) {
					var b12 = v6.b[i1++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(_g[2]));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l = v["length"];
			this.buf.b += Std.string(l - 2);
			var _g12 = 2;
			var _g4 = l;
			while(_g12 < _g4) this.serialize(v[_g12++]);
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function() { };
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s] != null) {
					h1.setReserved(s,value);
				} else {
					h1.h[s] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer((len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0)));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf.charCodeAt(i1++)];
				var c2 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf.charCodeAt(i1++)];
				var c21 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s1 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s1 = decodeURIComponent(s1.split("+").join(" "));
			this.scache.push(s1);
			return s1;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_Utf8 = function(size) {
	this.__b = "";
};
$hxClasses["haxe.Utf8"] = haxe_Utf8;
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.prototype = {
	__class__: haxe_Utf8
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	return m.hex(m.doEncode(haxe_crypto_Md5.str2blks(s)));
};
haxe_crypto_Md5.str2blks = function(str) {
	var str1 = haxe_io_Bytes.ofString(str);
	var nblk = (str1.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g1 = 0;
	while(_g1 < blksSize) blks[_g1++] = 0;
	var i = 0;
	var max = str1.length;
	var l = max * 8;
	while(i < max) {
		blks[i >> 2] |= str1.b[i] << (l + i) % 4 * 8;
		++i;
	}
	blks[i >> 2] |= 128 << (l + i) % 4 * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] = (blks[k] |= (l >>> 8 & 255) << 8) | (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		return (a >>> 1 | b >>> 1) << 1 | (a & 1 | b & 1);
	}
	,bitXOR: function(a,b) {
		return (a >>> 1 ^ b >>> 1) << 1 | a & 1 ^ b & 1;
	}
	,bitAND: function(a,b) {
		return (a >>> 1 & b >>> 1) << 1 | a & 1 & (b & 1);
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		return (x >> 16) + (y >> 16) + (lsw >> 16) << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += "0123456789abcdef".charAt(num >> j * 8 + 4 & 15) + "0123456789abcdef".charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return (1 - (i >>> 31 << 1)) * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.join = function(paths) {
	var paths1 = paths.filter(function(s) {
		if(s != null) {
			return s != "";
		} else {
			return false;
		}
	});
	if(paths1.length == 0) {
		return "";
	}
	var path = paths1[0];
	var _g1 = 1;
	var _g = paths1.length;
	while(_g1 < _g) {
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths1[_g1++];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	path = path.split("\\").join("/");
	if(path == "/") {
		return "/";
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split("/");
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join("/");
	var regex_r = new RegExp("([^:])/+","g".split("u").join(""));
	tmp.replace(regex_r,"$1" + "/");
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var _g21 = HxOverrides.cca(tmp,_g11++);
		if(_g21 == null) {
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += Std.string(String.fromCharCode(_g21));
		} else {
			switch(_g21) {
			case 47:
				if(!colon) {
					slashes = true;
				} else {
					colon = false;
					if(slashes) {
						acc_b += "/";
						slashes = false;
					}
					acc_b += Std.string(String.fromCharCode(_g21));
				}
				break;
			case 58:
				acc_b += ":";
				colon = true;
				break;
			default:
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += Std.string(String.fromCharCode(_g21));
			}
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var justPath_IPathContext = function() { };
$hxClasses["justPath.IPathContext"] = justPath_IPathContext;
justPath_IPathContext.__name__ = ["justPath","IPathContext"];
justPath_IPathContext.prototype = {
	__class__: justPath_IPathContext
};
var justPath_PathContextTrace = function() {
};
$hxClasses["justPath.PathContextTrace"] = justPath_PathContextTrace;
justPath_PathContextTrace.__name__ = ["justPath","PathContextTrace"];
justPath_PathContextTrace.__interfaces__ = [justPath_IPathContext];
justPath_PathContextTrace.prototype = {
	moveTo: function(x,y) {
		haxe_Log.trace("moveTo( " + x + ", " + y + " );",{ fileName : "PathContextTrace.hx", lineNumber : 8, className : "justPath.PathContextTrace", methodName : "moveTo"});
	}
	,lineTo: function(x,y) {
		haxe_Log.trace("lineTo( " + x + ", " + y + " );",{ fileName : "PathContextTrace.hx", lineNumber : 11, className : "justPath.PathContextTrace", methodName : "lineTo"});
	}
	,quadTo: function(x1,y1,x2,y2) {
		haxe_Log.trace("quadTo( " + x1 + ", " + y1 + ", " + x2 + ", " + y2 + " );",{ fileName : "PathContextTrace.hx", lineNumber : 14, className : "justPath.PathContextTrace", methodName : "quadTo"});
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		haxe_Log.trace("curveTo( " + x1 + ", " + y1 + ", " + x2 + ", " + y2 + ", " + x3 + ", " + y3 + " );",{ fileName : "PathContextTrace.hx", lineNumber : 17, className : "justPath.PathContextTrace", methodName : "curveTo"});
	}
	,__class__: justPath_PathContextTrace
};
var justPath_StoreF6 = function() {
	this.count = 0;
	this.l = 0;
};
$hxClasses["justPath.StoreF6"] = justPath_StoreF6;
justPath_StoreF6.__name__ = ["justPath","StoreF6"];
justPath_StoreF6.prototype = {
	clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		default:
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		default:
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = null;
			this.l--;
		}
		return out;
	}
	,toString: function() {
		return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		default:
		}
		return out;
	}
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			default:
			}
			_g.count++;
			arr.push(out);
		}
	}
	,__class__: justPath_StoreF6
};
var justPath_StoreF8 = function() {
	this.count = 0;
	this.l = 0;
};
$hxClasses["justPath.StoreF8"] = justPath_StoreF8;
justPath_StoreF8.__name__ = ["justPath","StoreF8"];
justPath_StoreF8.prototype = {
	clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
		this.s6 = null;
		this.s7 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		case 6:
			this.s6 = v;
			break;
		case 7:
			this.s7 = v;
			break;
		default:
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		case 6:
			out = this.s6;
			this.s6 = null;
			break;
		case 7:
			out = this.s7;
			this.s6 = null;
			break;
		default:
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		this.s7 = this.s6;
		this.s6 = this.s5;
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = this.s6;
			this.s6 = this.s7;
			this.s7 = null;
			this.l--;
		}
		return out;
	}
	,toString: function() {
		return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		case 6:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6;
			break;
		case 7:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
			break;
		default:
		}
		return out;
	}
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			case 6:
				out = _g.s6;
				break;
			case 7:
				out = _g.s7;
				break;
			default:
			}
			_g.count++;
			arr.push(out);
		}
	}
	,__class__: justPath_StoreF8
};
var justPath_SvgPath = function(pathContext_) {
	this.sy = 1;
	this.sx = 1;
	this.dy = 0;
	this.dx = 0;
	this.lastY = 0;
	this.lastX = 0;
	this.pathContext = pathContext_;
};
$hxClasses["justPath.SvgPath"] = justPath_SvgPath;
justPath_SvgPath.__name__ = ["justPath","SvgPath"];
justPath_SvgPath.prototype = {
	parse: function(str_,dx_,dy_,sx_,sy_) {
		if(sy_ == null) {
			sy_ = 1;
		}
		if(sx_ == null) {
			sx_ = 1;
		}
		if(dy_ == null) {
			dy_ = 0;
		}
		if(dx_ == null) {
			dx_ = 0;
		}
		this.str = str_;
		this.dx = dx_;
		this.dy = dy_;
		this.sx = sx_;
		this.sy = sy_;
		this.pos = 0;
		this.l = this.str.length;
		this.c = this.str.charCodeAt(this.pos++);
		this.store = new justPath_StoreF6();
		while(this.pos < this.l) {
			switch(this.c) {
			case 65:
				haxe_Log.trace("elliptical_Arc - not implemented",{ fileName : "SvgPath.hx", lineNumber : 160, className : "justPath.SvgPath", methodName : "parse"});
				this.extractArgs();
				break;
			case 66:
				haxe_Log.trace("bearing - not implemented",{ fileName : "SvgPath.hx", lineNumber : 171, className : "justPath.SvgPath", methodName : "parse"});
				throw new js__$Boot_HaxeError("bearing not supported please remove");
				break;
			case 67:
				this.extractArgs();
				this.controlX = this.store.s2;
				this.controlY = this.store.s3;
				this.lastX = this.store.s4;
				this.lastY = this.store.s5;
				this.pathContext.curveTo(this.store.s0,this.store.s1,this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 72:
				this.extractArgs(false);
				this.lastX = this.store.s0 * this.sx + this.dx;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 76:
				this.extractArgs();
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 77:
				this.extractArgs();
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.moveTo(this.lastX,this.lastY);
				break;
			case 81:
				this.extractArgs();
				this.controlX = this.store.s0;
				this.controlY = this.store.s1;
				this.lastX = this.store.s2;
				this.lastY = this.store.s3;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 83:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.pathContext.curveTo(this.controlX,this.controlY,this.store.s0,this.store.s1,this.store.s2,this.store.s3);
				this.controlX = this.store.s0;
				this.controlY = this.store.s1;
				break;
			case 84:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 86:
				this.extractArgs(false);
				this.lastY = this.store.s0 * this.sy + this.dy;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 90:case 122:
				this.lastX = 0;
				this.lastY = 0;
				break;
			case 97:
				haxe_Log.trace("relative elliptical_Arc - not implemented",{ fileName : "SvgPath.hx", lineNumber : 163, className : "justPath.SvgPath", methodName : "parse"});
				this.extractArgs();
				break;
			case 99:
				this.extractArgs();
				this.controlX = this.store.s2 + this.lastX;
				this.controlY = this.store.s3 + this.lastY;
				var endX = this.store.s4 + this.lastX;
				var endY = this.store.s5 + this.lastY;
				this.pathContext.curveTo(this.store.s0 + this.lastX,this.store.s1 + this.lastY,this.controlX,this.controlY,endX,endY);
				this.lastX = endX;
				this.lastY = endY;
				break;
			case 104:
				this.extractArgs(false);
				this.lastX = this.lastX + this.store.s0 * this.sx + this.dx;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 108:
				this.extractArgs();
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 109:
				this.extractArgs();
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.moveTo(this.lastX,this.lastY);
				break;
			case 113:
				this.extractArgs();
				this.controlX = this.lastX + this.store.s0;
				this.controlY = this.lastY + this.store.s1;
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 115:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				var endX1 = this.store.s2 + this.lastX;
				var endY1 = this.store.s3 + this.lastY;
				this.pathContext.curveTo(this.controlX,this.controlY,this.store.s0 + this.lastX,this.store.s1 + this.lastY,endX1,endY1);
				this.controlX = this.store.s0 + this.lastX;
				this.controlY = this.store.s1 + this.lastY;
				this.lastX = endX1;
				this.lastY = endY1;
				break;
			case 116:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.lastX = this.store.s0 + this.lastY;
				this.lastY = this.store.s1 + this.lastX;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 118:
				this.extractArgs(false);
				this.lastY = this.lastY + this.store.s0 * this.sy + this.dy;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			default:
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
		return str_;
	}
	,extractArgs: function(process) {
		if(process == null) {
			process = true;
		}
		var _this = this.store;
		_this.l = 0;
		_this.s0 = null;
		_this.s1 = null;
		_this.s2 = null;
		_this.s3 = null;
		_this.s4 = null;
		_this.s5 = null;
		this.c = this.str.charCodeAt(this.pos++);
		var temp = "";
		try {
			while(true) {
				switch(this.c) {
				case 32:case 44:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this1 = this.store;
								var v = parseFloat(temp) * this.sx + this.dx;
								switch(_this1.l) {
								case 0:
									_this1.s0 = v;
									break;
								case 1:
									_this1.s1 = v;
									break;
								case 2:
									_this1.s2 = v;
									break;
								case 3:
									_this1.s3 = v;
									break;
								case 4:
									_this1.s4 = v;
									break;
								case 5:
									_this1.s5 = v;
									break;
								default:
								}
								_this1.l++;
							} else {
								var _this2 = this.store;
								var v1 = parseFloat(temp) * this.sy + this.dy;
								switch(_this2.l) {
								case 0:
									_this2.s0 = v1;
									break;
								case 1:
									_this2.s1 = v1;
									break;
								case 2:
									_this2.s2 = v1;
									break;
								case 3:
									_this2.s3 = v1;
									break;
								case 4:
									_this2.s4 = v1;
									break;
								case 5:
									_this2.s5 = v1;
									break;
								default:
								}
								_this2.l++;
							}
						} else {
							var _this3 = this.store;
							var v2 = parseFloat(temp);
							switch(_this3.l) {
							case 0:
								_this3.s0 = v2;
								break;
							case 1:
								_this3.s1 = v2;
								break;
							case 2:
								_this3.s2 = v2;
								break;
							case 3:
								_this3.s3 = v2;
								break;
							case 4:
								_this3.s4 = v2;
								break;
							case 5:
								_this3.s5 = v2;
								break;
							default:
							}
							_this3.l++;
						}
						temp = "";
					}
					break;
				case 45:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this4 = this.store;
								var v3 = parseFloat(temp) * this.sx + this.dx;
								switch(_this4.l) {
								case 0:
									_this4.s0 = v3;
									break;
								case 1:
									_this4.s1 = v3;
									break;
								case 2:
									_this4.s2 = v3;
									break;
								case 3:
									_this4.s3 = v3;
									break;
								case 4:
									_this4.s4 = v3;
									break;
								case 5:
									_this4.s5 = v3;
									break;
								default:
								}
								_this4.l++;
							} else {
								var _this5 = this.store;
								var v4 = parseFloat(temp) * this.sy + this.dy;
								switch(_this5.l) {
								case 0:
									_this5.s0 = v4;
									break;
								case 1:
									_this5.s1 = v4;
									break;
								case 2:
									_this5.s2 = v4;
									break;
								case 3:
									_this5.s3 = v4;
									break;
								case 4:
									_this5.s4 = v4;
									break;
								case 5:
									_this5.s5 = v4;
									break;
								default:
								}
								_this5.l++;
							}
						} else {
							var _this6 = this.store;
							var v5 = parseFloat(temp);
							switch(_this6.l) {
							case 0:
								_this6.s0 = v5;
								break;
							case 1:
								_this6.s1 = v5;
								break;
							case 2:
								_this6.s2 = v5;
								break;
							case 3:
								_this6.s3 = v5;
								break;
							case 4:
								_this6.s4 = v5;
								break;
							case 5:
								_this6.s5 = v5;
								break;
							default:
							}
							_this6.l++;
						}
					}
					temp = "-";
					break;
				case 46:
					temp += ".";
					break;
				case 48:
					temp += "0";
					break;
				case 49:
					temp += "1";
					break;
				case 50:
					temp += "2";
					break;
				case 51:
					temp += "3";
					break;
				case 52:
					temp += "4";
					break;
				case 53:
					temp += "5";
					break;
				case 54:
					temp += "6";
					break;
				case 55:
					temp += "7";
					break;
				case 56:
					temp += "8";
					break;
				case 57:
					temp += "9";
					break;
				default:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this7 = this.store;
								var v6 = parseFloat(temp) * this.sx + this.dx;
								switch(_this7.l) {
								case 0:
									_this7.s0 = v6;
									break;
								case 1:
									_this7.s1 = v6;
									break;
								case 2:
									_this7.s2 = v6;
									break;
								case 3:
									_this7.s3 = v6;
									break;
								case 4:
									_this7.s4 = v6;
									break;
								case 5:
									_this7.s5 = v6;
									break;
								default:
								}
								_this7.l++;
							} else {
								var _this8 = this.store;
								var v7 = parseFloat(temp) * this.sy + this.dy;
								switch(_this8.l) {
								case 0:
									_this8.s0 = v7;
									break;
								case 1:
									_this8.s1 = v7;
									break;
								case 2:
									_this8.s2 = v7;
									break;
								case 3:
									_this8.s3 = v7;
									break;
								case 4:
									_this8.s4 = v7;
									break;
								case 5:
									_this8.s5 = v7;
									break;
								default:
								}
								_this8.l++;
							}
						} else {
							var _this9 = this.store;
							var v8 = parseFloat(temp);
							switch(_this9.l) {
							case 0:
								_this9.s0 = v8;
								break;
							case 1:
								_this9.s1 = v8;
								break;
							case 2:
								_this9.s2 = v8;
								break;
							case 3:
								_this9.s3 = v8;
								break;
							case 4:
								_this9.s4 = v8;
								break;
							case 5:
								_this9.s5 = v8;
								break;
							default:
							}
							_this9.l++;
						}
						temp = "";
					}
					this.pos--;
					throw "__break__";
				}
				this.c = this.str.charCodeAt(this.pos++);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
	}
	,nextChar: function() {
		return this.str.charCodeAt(this.pos++);
	}
	,__class__: justPath_SvgPath
};
var khaMath_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["khaMath.Matrix4"] = khaMath_Matrix4;
khaMath_Matrix4.__name__ = ["khaMath","Matrix4"];
khaMath_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	return new khaMath_Matrix4(2 / (right - left),0,0,-(right + left) / (right - left),0,2 / (top - bottom),0,-(top + bottom) / (top - bottom),0,0,-2 / (zf - zn),-(zf + zn) / (zf - zn),0,0,0,1);
};
khaMath_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2 * (Math.PI / 180));
	return new khaMath_Matrix4(uh / aspect,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
khaMath_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new khaMath_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var xaxis = new khaMath_Vector3(zaxis.y * up.z - zaxis.z * up.y,zaxis.z * up.x - zaxis.x * up.z,zaxis.x * up.y - zaxis.y * up.x);
	xaxis.set_length(1);
	var _x = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	return new khaMath_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),_x,_y,_z,-(_x * eye.x + _y * eye.y + _z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
khaMath_Matrix4.prototype = {
	__class__: khaMath_Matrix4
};
var khaMath_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["khaMath.Vector3"] = khaMath_Vector3;
khaMath_Vector3.__name__ = ["khaMath","Vector3"];
khaMath_Vector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,__class__: khaMath_Vector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var khaMath_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["khaMath.Vector4"] = khaMath_Vector4;
khaMath_Vector4.__name__ = ["khaMath","Vector4"];
khaMath_Vector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,__class__: khaMath_Vector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var luxe_Audio = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Audio"] = luxe_Audio;
luxe_Audio.__name__ = ["luxe","Audio"];
luxe_Audio.prototype = {
	on: function(_event,_handler) {
		this.core.app.audio.on_Int(_event,_handler);
	}
	,off: function(_event,_handler) {
		return this.core.app.audio.off_Int(_event,_handler);
	}
	,emit: function(_event,_handle) {
		this.core.app.audio.emit_Int(_event,_handle);
	}
	,play: function(_source,_volume,_paused) {
		if(_paused == null) {
			_paused = false;
		}
		if(_volume == null) {
			_volume = 1.0;
		}
		return this.core.app.audio.play(_source,_volume,_paused);
	}
	,loop: function(_source,_volume,_paused) {
		if(_paused == null) {
			_paused = false;
		}
		if(_volume == null) {
			_volume = 1.0;
		}
		return this.core.app.audio.loop(_source,_volume,_paused);
	}
	,pause: function(_handle) {
		this.core.app.audio.pause(_handle);
	}
	,unpause: function(_handle) {
		this.core.app.audio.unpause(_handle);
	}
	,stop: function(_handle) {
		this.core.app.audio.stop(_handle);
	}
	,volume: function(_handle,_volume) {
		this.core.app.audio.volume(_handle,_volume);
	}
	,pan: function(_handle,_pan) {
		this.core.app.audio.pan(_handle,_pan);
	}
	,pitch: function(_handle,_pitch) {
		this.core.app.audio.pitch(_handle,_pitch);
	}
	,position: function(_handle,_position) {
		this.core.app.audio.position(_handle,_position);
	}
	,state_of: function(_handle) {
		return this.core.app.audio.state_of(_handle);
	}
	,loop_of: function(_handle) {
		return this.core.app.audio.loop_of(_handle);
	}
	,instance_of: function(_handle) {
		return this.core.app.audio.instance_of(_handle);
	}
	,volume_of: function(_handle) {
		return this.core.app.audio.volume_of(_handle);
	}
	,pan_of: function(_handle) {
		return this.core.app.audio.pan_of(_handle);
	}
	,pitch_of: function(_handle) {
		return this.core.app.audio.pitch_of(_handle);
	}
	,position_of: function(_handle) {
		return this.core.app.audio.position_of(_handle);
	}
	,suspend: function() {
		this.core.app.audio.suspend();
	}
	,resume: function() {
		this.core.app.audio.resume();
	}
	,get_active: function() {
		return this.core.app.audio.active;
	}
	,set_active: function(_val) {
		return this.core.app.audio.active = _val;
	}
	,init: function() {
	}
	,destroy: function() {
	}
	,process: function() {
	}
	,__class__: luxe_Audio
	,__properties__: {set_active:"set_active",get_active:"get_active"}
};
var luxe_SizeMode = $hxClasses["luxe.SizeMode"] = { __ename__ : ["luxe","SizeMode"], __constructs__ : ["fit","cover","contain"] };
luxe_SizeMode.fit = ["fit",0];
luxe_SizeMode.fit.toString = $estr;
luxe_SizeMode.fit.__enum__ = luxe_SizeMode;
luxe_SizeMode.cover = ["cover",1];
luxe_SizeMode.cover.toString = $estr;
luxe_SizeMode.cover.__enum__ = luxe_SizeMode;
luxe_SizeMode.contain = ["contain",2];
luxe_SizeMode.contain.toString = $estr;
luxe_SizeMode.contain.__enum__ = luxe_SizeMode;
var luxe_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["luxe.Emitter"] = luxe_Emitter;
luxe_Emitter.__name__ = ["luxe","Emitter"];
luxe_Emitter.prototype = {
	_emitter_destroy: function() {
		while(this._to_remove.length > 0) {
			var _node = this._to_remove.pop();
			_node.event = null;
			_node.handler = null;
			_node = null;
		}
		while(this.connected.length > 0) {
			var _node1 = this.connected.pop();
			_node1.event = null;
			_node1.handler = null;
			_node1 = null;
		}
		this._to_remove = null;
		this.connected = null;
		this.bindings = null;
	}
	,emit: function(event,data) {
		if(this.bindings == null) {
			return;
		}
		this._check();
		this._checking = true;
		var _list = this.bindings.h[event];
		if(_list != null && _list.length > 0) {
			var _g = 0;
			while(_g < _list.length) {
				var handler = _list[_g];
				++_g;
				handler(data);
			}
		}
		this._checking = false;
		this._check();
	}
	,on: function(event,handler) {
		if(this.bindings == null) {
			return;
		}
		this._check();
		if(!this.bindings.h.hasOwnProperty(event)) {
			this.bindings.h[event] = [handler];
			this.connected.push({ handler : handler, event : event});
		} else {
			var _list = this.bindings.h[event];
			if(_list.indexOf(handler) == -1) {
				_list.push(handler);
				this.connected.push({ handler : handler, event : event});
			}
		}
	}
	,off: function(event,handler) {
		if(this.bindings == null) {
			return false;
		}
		this._check();
		var _success = false;
		if(this.bindings.h.hasOwnProperty(event)) {
			this._to_remove.push({ event : event, handler : handler});
			var _g_head = this.connected.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				if(val.event == event && val.handler == handler) {
					this.connected.remove(val);
				}
			}
			_success = true;
		}
		return _success;
	}
	,connections: function(handler) {
		if(this.connected == null) {
			return null;
		}
		var _list = [];
		var _g_head = this.connected.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			if(val.handler == handler) {
				_list.push(val);
			}
		}
		return _list;
	}
	,_check: function() {
		if(this._checking || this._to_remove == null) {
			return;
		}
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var _list = this.bindings.h[val.event];
				if(_list != null) {
					HxOverrides.remove(_list,val.handler);
					if(_list.length == 0) {
						this.bindings.remove(val.event);
					}
				}
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: luxe_Emitter
};
var luxe_Objects = function(_name,_id) {
	if(_id == null) {
		_id = "";
	}
	if(_name == null) {
		_name = "";
	}
	this.name = "";
	this.id = "";
	luxe_Emitter.call(this);
	this.set_name(_name);
	this.set_id(_id == "" ? Luxe.utils.uniqueid() : _id);
};
$hxClasses["luxe.Objects"] = luxe_Objects;
luxe_Objects.__name__ = ["luxe","Objects"];
luxe_Objects.__super__ = luxe_Emitter;
luxe_Objects.prototype = $extend(luxe_Emitter.prototype,{
	set_name: function(_name) {
		return this.name = _name;
	}
	,set_id: function(_id) {
		return this.id = _id;
	}
	,get_name: function() {
		return this.name;
	}
	,get_id: function() {
		return this.id;
	}
	,__class__: luxe_Objects
	,__properties__: {set_name:"set_name",get_name:"get_name",set_id:"set_id",get_id:"get_id"}
});
var luxe_Entity = function(_options) {
	this.component_count = 0;
	this.active = true;
	this.fixed_rate = 0;
	this.started = false;
	this.inited = false;
	this.destroyed = false;
	luxe_Objects.call(this,"entity");
	var _g = this;
	_g.set_name(_g.get_name() + ("." + this.get_id()));
	this.options = _options;
	this._components = new luxe_components_Components(this);
	this.children = [];
	this.events = new luxe_Events();
	if(this.options != null && this.options.transform != null) {
		this.set_transform(this.options.transform);
	} else {
		this.set_transform(new phoenix_Transform());
	}
	var _this = this.get_transform();
	if(_this._pos_handlers == null) {
		_this._pos_handlers = [];
	}
	_this._pos_handlers.push($bind(this,this.set_pos_from_transform));
	var _this1 = this.get_transform();
	if(_this1._scale_handlers == null) {
		_this1._scale_handlers = [];
	}
	_this1._scale_handlers.push($bind(this,this.set_scale_from_transform));
	var _this2 = this.get_transform();
	if(_this2._origin_handlers == null) {
		_this2._origin_handlers = [];
	}
	_this2._origin_handlers.push($bind(this,this.set_origin_from_transform));
	var _this3 = this.get_transform();
	if(_this3._parent_handlers == null) {
		_this3._parent_handlers = [];
	}
	_this3._parent_handlers.push($bind(this,this.set_parent_from_transform));
	var _this4 = this.get_transform();
	if(_this4._rotation_handlers == null) {
		_this4._rotation_handlers = [];
	}
	_this4._rotation_handlers.push($bind(this,this.set_rotation_from_transform));
	if(this.options != null) {
		if(this.options.name_unique == null) {
			this.options.name_unique = false;
		}
		if(this.options.name != null) {
			this.set_name(this.options.name);
			if(this.options.name_unique) {
				var _g1 = this;
				_g1.set_name(_g1.get_name() + ("." + this.get_id()));
			}
		}
		if(this.options.pos != null) {
			var _op = this.options.pos;
			this.set_pos(new phoenix_Vector(_op.x,_op.y,_op.z,_op.w));
		}
		if(this.options.scale != null) {
			var _os = this.options.scale;
			this.set_scale(new phoenix_Vector(_os.x,_os.y,_os.z,_os.w));
		}
		var _should_add = true;
		if(this.options.no_scene != null) {
			if(this.options.no_scene == true) {
				_should_add = false;
			}
		}
		if(this.options.parent != null) {
			_should_add = false;
			this.set_parent(this.options.parent);
		}
		if(_should_add) {
			if(this.options.scene != null) {
				this.set_scene(this.options.scene);
			} else {
				this.set_scene(Luxe.scene);
			}
		}
	} else {
		this.set_scene(Luxe.scene);
	}
	if(this.get_scene() != null) {
		this.get_scene().add(this);
	}
};
$hxClasses["luxe.Entity"] = luxe_Entity;
luxe_Entity.__name__ = ["luxe","Entity"];
luxe_Entity.__super__ = luxe_Objects;
luxe_Entity.prototype = $extend(luxe_Objects.prototype,{
	init: function() {
	}
	,update: function(dt) {
	}
	,onfixedupdate: function(rate) {
	}
	,onreset: function() {
	}
	,ondestroy: function() {
	}
	,onkeyup: function(event) {
	}
	,onkeydown: function(event) {
	}
	,ontextinput: function(event) {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,add: function(_component) {
		this.component_count++;
		return this._components.add(_component);
	}
	,remove: function(_name) {
		this.component_count--;
		return this._components.remove(_name);
	}
	,get: function(_name,_in_children) {
		if(_in_children == null) {
			_in_children = false;
		}
		return this._components.get(_name,_in_children);
	}
	,get_any: function(_name,_in_children,_first_only) {
		if(_first_only == null) {
			_first_only = true;
		}
		if(_in_children == null) {
			_in_children = false;
		}
		return this._components.get_any(_name,_in_children,_first_only);
	}
	,has: function(_name) {
		return this._components.has(_name);
	}
	,_init: function() {
		var _g_index;
		this.init();
		this.emit(2);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._init();
			}
		}
		this.inited = true;
	}
	,_reset: function(_) {
		var _g_index;
		this.emit(3);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._reset(_);
			}
		}
		var _rate = this.fixed_rate;
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
			this.fixed_rate_timer = new snow_api_Timer(_rate);
			this.fixed_rate_timer.run = $bind(this,this._fixed_update);
		}
		this.started = true;
	}
	,destroy: function(_from_parent) {
		if(_from_parent == null) {
			_from_parent = false;
		}
		var _g_index;
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("entity / destroying repeatedly " + this.get_name()) + " )")));
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child.destroy(true);
				_child = null;
			}
		}
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) {
				var _component = _this.map.get(_this._keys[_g_index++]);
				_component = null;
			}
		}
		this.children = null;
		this._components.destroy();
		this._components = null;
		this.emit(8);
		this.ondestroy();
		if(this.get_parent() != null && !_from_parent) {
			this.get_parent()._remove_child(this);
		}
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		this.destroyed = true;
		this.inited = false;
		this.started = false;
		if(this.get_scene() != null) {
			this.get_scene().remove(this);
		}
		if(this.events != null) {
			this.events.destroy();
			this.events = null;
		}
		if(this.get_transform() != null) {
			this.get_transform().destroy();
			this.set_transform(null);
		}
		this._emitter_destroy();
		this.set_id(null);
	}
	,_update: function(dt) {
		var _g_index;
		if(this.destroyed) {
			return;
		}
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		var _this = this.get_transform();
		if(_this.parent != null && _this.parent.dirty) {
			_this.parent.clean_check();
		}
		if(_this.dirty && !_this._cleaning && !_this.manual_update) {
			_this.clean();
		}
		this.update(dt);
		if(this.events != null) {
			this.events.process();
		}
		if(this.component_count > 0) {
			var _this1 = this._components.components;
			_g_index = 0;
			while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
		}
		if(this.children != null && this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._update(dt);
			}
		}
	}
	,_fixed_update: function() {
		var _g_index;
		if(this.destroyed) {
			return;
		}
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(7);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._fixed_update();
			}
		}
	}
	,_find_emit_source: function(_from_unlisten) {
		if(_from_unlisten == null) {
			_from_unlisten = false;
		}
		var _source = null;
		if(this.get_scene() != null) {
			_source = this.get_scene();
		} else if(this.get_parent() != null) {
			var _parent = this.get_parent();
			while(true) if(_parent.get_scene() == null) {
				if(_parent.get_parent() == null) {
					if(!_from_unlisten) {
						haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 517, className : "luxe.Entity", methodName : "_find_emit_source"});
					}
					break;
				} else {
					_parent = _parent.get_parent();
				}
			} else {
				_source = _parent.get_scene();
				break;
			}
		} else if(!_from_unlisten) {
			haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 539, className : "luxe.Entity", methodName : "_find_emit_source"});
		}
		return _source;
	}
	,_listen: function(_event,_handler,_self) {
		if(_self == null) {
			_self = false;
		}
		if(!_self) {
			this.on(_event,_handler);
		}
		var _source = null;
		if(this.get_scene() != null) {
			_source = this.get_scene();
		} else if(this.get_parent() != null) {
			var _parent = this.get_parent();
			while(true) if(_parent.get_scene() == null) {
				if(_parent.get_parent() == null) {
					haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 517, className : "luxe.Entity", methodName : "_find_emit_source"});
					break;
				} else {
					_parent = _parent.get_parent();
				}
			} else {
				_source = _parent.get_scene();
				break;
			}
		} else {
			haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 539, className : "luxe.Entity", methodName : "_find_emit_source"});
		}
		var _source1 = _source;
		if(_source1 != null) {
			switch(_event) {
			case 12:
				_source1.on(_event,$bind(this,this._keydown));
				break;
			case 13:
				_source1.on(_event,$bind(this,this._keyup));
				break;
			case 14:
				_source1.on(_event,$bind(this,this._textinput));
				break;
			case 15:
				_source1.on(_event,$bind(this,this._inputdown));
				break;
			case 16:
				_source1.on(_event,$bind(this,this._inputup));
				break;
			case 17:
				_source1.on(_event,$bind(this,this._mousedown));
				break;
			case 18:
				_source1.on(_event,$bind(this,this._mouseup));
				break;
			case 19:
				_source1.on(_event,$bind(this,this._mousemove));
				break;
			case 20:
				_source1.on(_event,$bind(this,this._mousewheel));
				break;
			case 21:
				_source1.on(_event,$bind(this,this._touchdown));
				break;
			case 22:
				_source1.on(_event,$bind(this,this._touchup));
				break;
			case 23:
				_source1.on(_event,$bind(this,this._touchmove));
				break;
			case 24:
				_source1.on(_event,$bind(this,this._gamepadaxis));
				break;
			case 25:
				_source1.on(_event,$bind(this,this._gamepaddown));
				break;
			case 26:
				_source1.on(_event,$bind(this,this._gamepadup));
				break;
			case 27:
				_source1.on(_event,$bind(this,this._gamepaddevice));
				break;
			case 29:
				_source1.on(_event,$bind(this,this._windowmoved));
				break;
			case 30:
				_source1.on(_event,$bind(this,this._windowresized));
				break;
			case 31:
				_source1.on(_event,$bind(this,this._windowsized));
				break;
			case 32:
				_source1.on(_event,$bind(this,this._windowminimized));
				break;
			case 33:
				_source1.on(_event,$bind(this,this._windowrestored));
				break;
			}
		}
	}
	,_unlisten: function(_event,_handler,_self) {
		if(_self == null) {
			_self = false;
		}
		var _source = null;
		if(this.get_scene() != null) {
			_source = this.get_scene();
		} else if(this.get_parent() != null) {
			var _parent = this.get_parent();
			while(true) if(_parent.get_scene() == null) {
				if(_parent.get_parent() == null) {
					break;
				} else {
					_parent = _parent.get_parent();
				}
			} else {
				_source = _parent.get_scene();
				break;
			}
		}
		var _source1 = _source;
		if(!_self) {
			this.off(_event,_handler);
		}
		if(_source1 != null) {
			switch(_event) {
			case 12:
				_source1.off(_event,$bind(this,this._keydown));
				break;
			case 13:
				_source1.off(_event,$bind(this,this._keyup));
				break;
			case 14:
				_source1.off(_event,$bind(this,this._textinput));
				break;
			case 15:
				_source1.off(_event,$bind(this,this._inputdown));
				break;
			case 16:
				_source1.off(_event,$bind(this,this._inputup));
				break;
			case 17:
				_source1.off(_event,$bind(this,this._mousedown));
				break;
			case 18:
				_source1.off(_event,$bind(this,this._mouseup));
				break;
			case 19:
				_source1.off(_event,$bind(this,this._mousemove));
				break;
			case 20:
				_source1.off(_event,$bind(this,this._mousewheel));
				break;
			case 21:
				_source1.off(_event,$bind(this,this._touchdown));
				break;
			case 22:
				_source1.off(_event,$bind(this,this._touchup));
				break;
			case 23:
				_source1.off(_event,$bind(this,this._touchmove));
				break;
			case 24:
				_source1.off(_event,$bind(this,this._gamepadaxis));
				break;
			case 25:
				_source1.off(_event,$bind(this,this._gamepaddown));
				break;
			case 26:
				_source1.off(_event,$bind(this,this._gamepadup));
				break;
			case 27:
				_source1.off(_event,$bind(this,this._gamepaddevice));
				break;
			case 29:
				_source1.off(_event,$bind(this,this._windowmoved));
				break;
			case 30:
				_source1.off(_event,$bind(this,this._windowresized));
				break;
			case 31:
				_source1.off(_event,$bind(this,this._windowsized));
				break;
			case 32:
				_source1.off(_event,$bind(this,this._windowminimized));
				break;
			case 33:
				_source1.off(_event,$bind(this,this._windowrestored));
				break;
			}
		}
	}
	,_detach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().off(3,$bind(this,this._reset));
			this.get_scene().off(8,$bind(this,this.destroy));
			this.get_scene().off(13,$bind(this,this._keyup));
			this.get_scene().off(12,$bind(this,this._keydown));
			this.get_scene().off(14,$bind(this,this._textinput));
			this.get_scene().off(17,$bind(this,this._mousedown));
			this.get_scene().off(18,$bind(this,this._mouseup));
			this.get_scene().off(19,$bind(this,this._mousemove));
			this.get_scene().off(20,$bind(this,this._mousewheel));
			this.get_scene().off(21,$bind(this,this._touchdown));
			this.get_scene().off(22,$bind(this,this._touchup));
			this.get_scene().off(23,$bind(this,this._touchmove));
			this.get_scene().off(16,$bind(this,this._inputup));
			this.get_scene().off(15,$bind(this,this._inputdown));
			this.get_scene().off(25,$bind(this,this._gamepaddown));
			this.get_scene().off(26,$bind(this,this._gamepadup));
			this.get_scene().off(24,$bind(this,this._gamepadaxis));
			this.get_scene().off(27,$bind(this,this._gamepaddevice));
			this.get_scene().off(29,$bind(this,this._windowmoved));
			this.get_scene().off(30,$bind(this,this._windowresized));
			this.get_scene().off(31,$bind(this,this._windowsized));
			this.get_scene().off(32,$bind(this,this._windowminimized));
			this.get_scene().off(33,$bind(this,this._windowrestored));
		}
	}
	,_attach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().on(3,$bind(this,this._reset));
			this.get_scene().on(8,$bind(this,this.destroy));
		}
	}
	,_keyup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(13,_event);
	}
	,_keydown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(12,_event);
	}
	,_textinput: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(14,_event);
	}
	,_mousedown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(17,_event);
	}
	,_mouseup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(18,_event);
	}
	,_mousewheel: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(20,_event);
	}
	,_mousemove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(19,_event);
	}
	,_touchdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(21,_event);
	}
	,_touchup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(22,_event);
	}
	,_touchmove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(23,_event);
	}
	,_gamepadaxis: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(24,_event);
	}
	,_gamepaddown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(25,_event);
	}
	,_gamepadup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(26,_event);
	}
	,_gamepaddevice: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(27,_event);
	}
	,_windowmoved: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(29,_event);
	}
	,_windowresized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(30,_event);
	}
	,_windowsized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(31,_event);
	}
	,_windowminimized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(32,_event);
	}
	,_windowrestored: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(33,_event);
	}
	,_inputdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(15,_event);
	}
	,_inputup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(16,_event);
	}
	,get_fixed_rate: function() {
		return this.fixed_rate;
	}
	,set_fixed_rate: function(_rate) {
		this.fixed_rate = _rate;
		if(this.started) {
			if(this.fixed_rate_timer != null) {
				this.fixed_rate_timer.stop();
				this.fixed_rate_timer = null;
			}
			if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
				this.fixed_rate_timer = new snow_api_Timer(_rate);
				this.fixed_rate_timer.run = $bind(this,this._fixed_update);
			}
		}
		return this.fixed_rate;
	}
	,_stop_fixed_rate_timer: function() {
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
	}
	,_set_fixed_rate_timer: function(_rate) {
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
			this.fixed_rate_timer = new snow_api_Timer(_rate);
			this.fixed_rate_timer.run = $bind(this,this._fixed_update);
		}
	}
	,get_components: function() {
		return this._components.components;
	}
	,_add_child: function(child) {
		this.children.push(child);
		child.set_scene_root(this.scene_root);
		if(child.get_scene() != null) {
			child.get_scene().remove(child);
		} else {
			if(this.inited && !child.inited) {
				this.scene_root._delayed_init_entities.push(child);
			}
			if(this.started && !child.started) {
				this.scene_root._delayed_reset_entities.push(child);
			}
		}
	}
	,_remove_child: function(child) {
		HxOverrides.remove(this.children,child);
	}
	,set_pos_from_transform: function(_pos) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_rotation_from_transform: function(_rotation) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_scale_from_transform: function(_scale) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_origin_from_transform: function(_origin) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_parent_from_transform: function(_parent) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_pos: function(_p) {
		var _this = this.get_transform().local;
		_this.pos = _p;
		if(_p != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		return _this.pos;
	}
	,get_pos: function() {
		return this.get_transform().local.pos;
	}
	,set_rotation: function(_r) {
		var _this = this.get_transform().local;
		_this.rotation = _r;
		if(_r != null) {
			var _q = _this.rotation;
			var listener = $bind(_this,_this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(_this.rotation_changed != null && !_this.ignore_listeners) {
				_this.rotation_changed(_this.rotation);
			}
		}
		return _this.rotation;
	}
	,get_rotation: function() {
		return this.get_transform().local.rotation;
	}
	,set_scale: function(_s) {
		var _this = this.get_transform().local;
		_this.scale = _s;
		if(_s != null) {
			var _v = _this.scale;
			var listener = $bind(_this,_this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.scale_changed != null && !_this.ignore_listeners) {
				_this.scale_changed(_this.scale);
			}
		}
		return _this.scale;
	}
	,get_scale: function() {
		return this.get_transform().local.scale;
	}
	,set_origin: function(_origin) {
		var _this = this.get_transform();
		_this.dirty = true;
		if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = _this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(_this);
				}
			}
		}
		_this.origin = _origin;
		if(_this._origin_handlers != null && _this._origin_handlers.length > 0) {
			var _origin1 = _this.origin;
			var _g2 = 0;
			var _g11 = _this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin1);
				}
			}
		}
		return _this.origin;
	}
	,get_origin: function() {
		return this.get_transform().origin;
	}
	,set_transform: function(_transform) {
		return this.transform = _transform;
	}
	,get_transform: function() {
		return this.transform;
	}
	,set_parent: function(other) {
		if(other == this) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("other != this" + (" ( " + "Entity setting itself as parent makes no sense" + " )")));
		}
		if(this.get_parent() != null) {
			this.get_parent()._remove_child(this);
		}
		this.parent = other;
		if(this.get_parent() != null) {
			this.get_parent()._add_child(this);
			var _this = this.get_transform();
			var _p = this.get_parent().get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent = _this.parent;
				var _g2 = 0;
				var _g11 = _this._parent_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
		} else {
			var _this3 = this.get_transform();
			_this3.dirty = true;
			if(_this3.dirty && !_this3._setup && _this3._dirty_handlers != null && _this3._dirty_handlers.length > 0) {
				var _g3 = 0;
				var _g12 = _this3._dirty_handlers;
				while(_g3 < _g12.length) {
					var _handler2 = _g12[_g3];
					++_g3;
					if(_handler2 != null) {
						_handler2(_this3);
					}
				}
			}
			if(_this3.parent != null) {
				var _this4 = _this3.parent;
				if(_this4._clean_handlers != null) {
					HxOverrides.remove(_this4._clean_handlers,$bind(_this3,_this3.on_parent_cleaned));
				}
			}
			_this3.parent = null;
			if(_this3._parent_handlers != null && _this3._parent_handlers.length > 0) {
				var _parent1 = _this3.parent;
				var _g4 = 0;
				var _g13 = _this3._parent_handlers;
				while(_g4 < _g13.length) {
					var _handler3 = _g13[_g4];
					++_g4;
					if(_handler3 != null) {
						_handler3(_parent1);
					}
				}
			}
			if(_this3.parent != null) {
				var _this5 = _this3.parent;
				if(_this5._clean_handlers == null) {
					_this5._clean_handlers = [];
				}
				_this5._clean_handlers.push($bind(_this3,_this3.on_parent_cleaned));
			}
			this.scene_root.add(this);
		}
		return this.get_parent();
	}
	,get_parent: function() {
		return this.parent;
	}
	,set_scene: function(_scene) {
		this._detach_scene();
		this.scene = _scene;
		this._attach_scene();
		return this.get_scene();
	}
	,get_scene: function() {
		return this.scene;
	}
	,set_scene_root: function(_scene) {
		this.scene_root = _scene;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var _child = _g1[_g];
			++_g;
			_child.set_scene_root(_scene);
		}
		return this.scene_root;
	}
	,set_name: function(_name) {
		var _scene = this.get_scene();
		if(_scene != null && this.get_name() != null) {
			_scene.entities.remove(this.get_name());
			if(_scene.entities.exists(_name)) {
				haxe_Log.trace("    i / scene / " + ("" + _scene.get_name() + " / adding a second entity named " + _name + "!\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
			}
			var _this = _scene.entities;
			if(__map_reserved[_name] != null) {
				_this.setReserved(_name,this);
			} else {
				_this.h[_name] = this;
			}
			_scene._has_changed = true;
		}
		return this.name = _name;
	}
	,set_active: function(_active) {
		return this.active = _active;
	}
	,get_active: function() {
		return this.active;
	}
	,toString: function() {
		var _list = [];
		var _c = HxOverrides.iter(this._components.components._keys);
		while(_c.hasNext()) _list.push(_c.next());
		return "luxe Entity: " + this.get_name() + " / " + Lambda.count(this._components.components) + " components:[" + _list.join(", ") + "] / id: " + this.get_id();
	}
	,__class__: luxe_Entity
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{set_scene_root:"set_scene_root",set_origin:"set_origin",get_origin:"get_origin",set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_transform:"set_transform",get_transform:"get_transform",set_active:"set_active",get_active:"get_active",set_scene:"set_scene",get_scene:"get_scene",set_parent:"set_parent",get_parent:"get_parent",set_fixed_rate:"set_fixed_rate",get_fixed_rate:"get_fixed_rate",get_components:"get_components"})
});
var luxe_Camera = function(_options) {
	this._connected = false;
	this.minimum_shake = 0.1;
	this.shaking = false;
	this._size_factor = new phoenix_Vector();
	this._rotation_radian = new phoenix_Vector();
	this._rotation_cache = new phoenix_Quaternion();
	this.set_size_mode(luxe_SizeMode.fit);
	var _name = "untitled camera";
	if(_options != null) {
		if(_options.name != null) {
			_name = _options.name;
			_options.camera_name = "" + _name + ".view";
		}
	} else {
		_options = { no_scene : false};
	}
	if(_options.view == null) {
		_options.view = new phoenix_Camera(_options);
	}
	this.view = _options.view;
	luxe_Entity.call(this,{ name : _name, no_scene : _options.no_scene});
};
$hxClasses["luxe.Camera"] = luxe_Camera;
luxe_Camera.__name__ = ["luxe","Camera"];
luxe_Camera.__super__ = luxe_Entity;
luxe_Camera.prototype = $extend(luxe_Entity.prototype,{
	get_viewport: function() {
		return this.view.viewport;
	}
	,set_viewport: function(_v) {
		return this.view.set_viewport(_v);
	}
	,get_center: function() {
		return this.view.center;
	}
	,set_center: function(_c) {
		this.set_pos(new phoenix_Vector(_c.x - this.get_viewport().w / 2,_c.y - this.get_viewport().h / 2));
		return this.view.set_center(_c);
	}
	,get_minimum_zoom: function() {
		return this.view.minimum_zoom;
	}
	,set_minimum_zoom: function(_m) {
		return this.view.minimum_zoom = _m;
	}
	,get_zoom: function() {
		return this.view.zoom;
	}
	,set_zoom: function(_z) {
		this.view.set_zoom(_z);
		if(this.get_size() != null) {
			var _g = this.view.transform.local.scale;
			var _x = _g.x * (1 / this._size_factor.x);
			_g.x = _x;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x);
				}
			}
			var _g1 = this.view.transform.local.scale;
			var _y = _g1.y * (1 / this._size_factor.y);
			_g1.y = _y;
			if(!_g1._construct) {
				if(_g1.listen_y != null && !_g1.ignore_listeners) {
					_g1.listen_y(_y);
				}
			}
		}
		return this.view.zoom;
	}
	,get_size: function() {
		return this.size;
	}
	,get_size_mode: function() {
		return this.size_mode;
	}
	,set_size_mode: function(_m) {
		if(this.get_size_mode() != null) {
			this.size_mode = _m;
			if(this.get_size() != null) {
				this.set_size(this.get_size());
			}
		}
		return this.size_mode = _m;
	}
	,_onwindowsized: function(_event) {
		if(this.get_size() != null) {
			this.set_viewport(new phoenix_Rectangle(this.get_viewport().x,this.get_viewport().y,_event.x,_event.y));
			this.set_size(this.get_size());
		}
	}
	,set_size: function(_size) {
		if(_size == null) {
			this.set_center(new phoenix_Vector(this.get_viewport().w / 2,this.get_viewport().h / 2));
			this.size = null;
			var _this = this._size_factor;
			var _this1 = this._size_factor;
			_this1.y = 1;
			var _x;
			if(_this1._construct) {
				_x = _this1.y;
			} else {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(1);
				}
				_x = _this1.y;
			}
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			this.set_zoom(this.get_zoom());
			this._connected = false;
			Luxe.off(31,$bind(this,this._onwindowsized));
			return this.get_size();
		}
		if(!this._connected) {
			Luxe.on(31,$bind(this,this._onwindowsized));
			this._connected = true;
		}
		var _ratio_x = this.get_viewport().w / _size.x;
		var _ratio_y = this.get_viewport().h / _size.y;
		var _shortest = Math.max(_ratio_x,_ratio_y);
		var _longest = Math.min(_ratio_x,_ratio_y);
		switch(this.get_size_mode()[1]) {
		case 0:
			_ratio_y = _longest;
			_ratio_x = _longest;
			break;
		case 1:
			_ratio_y = _shortest;
			_ratio_x = _shortest;
			break;
		case 2:
			break;
		}
		var _this2 = this._size_factor;
		_this2.x = _ratio_x;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_ratio_x);
			}
		}
		var _this3 = this._size_factor;
		_this3.y = _ratio_y;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_ratio_y);
			}
		}
		var _this4 = this.view.transform.local.scale;
		var _x1 = 1 / (this._size_factor.x * this.get_zoom());
		_this4.x = _x1;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_x1);
			}
		}
		var _this5 = this.view.transform.local.scale;
		var _y = 1 / (this._size_factor.y * this.get_zoom());
		_this5.y = _y;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_y);
			}
		}
		this.set_center(new phoenix_Vector(_size.x / 2,_size.y / 2));
		return this.size = new phoenix_Vector(_size.x,_size.y,_size.z,_size.w);
	}
	,focus: function(_p,_t,_oncomplete) {
		if(_t == null) {
			_t = 0.6;
		}
		var _gthis = this;
		luxe_tween_Actuate.tween(this.view.center,_t,{ x : _p.x, y : _p.y},true).onComplete(_oncomplete).ease(luxe_tween_easing_Quad.get_easeInOut()).onUpdate(function() {
			var _this = _gthis.get_transform().local.pos;
			var _x = _gthis.view.pos.x;
			var _y = _gthis.view.pos.y;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
		});
	}
	,screen_point_to_world: function(_vector) {
		return this.view.screen_point_to_world(_vector);
	}
	,world_point_to_screen: function(_vector,_viewport) {
		return this.view.world_point_to_screen(_vector,_viewport);
	}
	,set_pos_from_transform: function(_pos) {
		var _vw = this.view.viewport.w;
		var _vh = this.view.viewport.h;
		var _hvw = _vw / 2;
		var _hvh = _vh / 2;
		var _px = _pos.x;
		var _py = _pos.y;
		if(this.bounds != null) {
			if(_px < this.bounds.x) {
				_px = this.bounds.x;
			}
			if(_py < this.bounds.y) {
				_py = this.bounds.y;
			}
			if(_px + _hvw > this.bounds.w - _vw) {
				_px = this.bounds.w - _vw - _hvw;
			}
			if(_py + _hvh > this.bounds.h - _vh) {
				_py = this.bounds.h - _vh - _hvh;
			}
		}
		var _prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		var prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		_pos.x = _px;
		if(!_pos._construct) {
			if(_pos.listen_x != null && !_pos.ignore_listeners) {
				_pos.listen_x(_px);
			}
		}
		_pos.y = _py;
		if(!_pos._construct) {
			if(_pos.listen_y != null && !_pos.ignore_listeners) {
				_pos.listen_y(_py);
			}
		}
		_pos.ignore_listeners = prev;
		if(_pos.listen_x != null && !_pos.ignore_listeners) {
			_pos.listen_x(_pos.x);
		}
		if(_pos.listen_y != null && !_pos.ignore_listeners) {
			_pos.listen_y(_pos.y);
		}
		_pos.ignore_listeners = _prev;
		luxe_Entity.prototype.set_pos_from_transform.call(this,_pos);
		var tmp = this.view;
		var _this = this.view.pos;
		var _x = _pos.x;
		var _y = _pos.y;
		var _z = _pos.z;
		var prev1 = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev1;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		tmp.set_pos(_this);
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		if(this.view != null) {
			var _this = this.view.transform.local;
			_this.rotation = _rotation;
			if(_rotation != null) {
				var _q = _this.rotation;
				var listener = $bind(_this,_this._rotation_change);
				_q.listen_x = listener;
				_q.listen_y = listener;
				_q.listen_z = listener;
				_q.listen_w = listener;
				if(_this.rotation_changed != null && !_this.ignore_listeners) {
					_this.rotation_changed(_this.rotation);
				}
			}
		}
	}
	,set_scale_from_transform: function(_scale) {
		luxe_Entity.prototype.set_scale_from_transform.call(this,_scale);
		if(this.view != null) {
			var _this = this.view.transform.local;
			_this.scale = _scale;
			if(_scale != null) {
				var _v = _this.scale;
				var listener = $bind(_this,_this._scale_change);
				_v.listen_x = listener;
				_v.listen_y = listener;
				_v.listen_z = listener;
				if(_this.scale_changed != null && !_this.ignore_listeners) {
					_this.scale_changed(_this.scale);
				}
			}
		}
	}
	,shake: function(_amount) {
		this.shake_amount = _amount;
		this.shaking = true;
	}
	,update: function(dt) {
		if(this.shaking) {
			this.shake_vector = Luxe.utils.geometry.random_point_in_unit_circle();
			var _g = this.shake_vector;
			var _x = _g.x * this.shake_amount;
			_g.x = _x;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x);
				}
			}
			var _g1 = this.shake_vector;
			var _y = _g1.y * this.shake_amount;
			_g1.y = _y;
			if(!_g1._construct) {
				if(_g1.listen_y != null && !_g1.ignore_listeners) {
					_g1.listen_y(_y);
				}
			}
			var _g2 = this.shake_vector;
			var _z = _g2.z * this.shake_amount;
			_g2.z = _z;
			if(!_g2._construct) {
				if(_g2.listen_z != null && !_g2.ignore_listeners) {
					_g2.listen_z(_z);
				}
			}
			this.shake_amount *= 0.9;
			if(this.shake_amount <= this.minimum_shake) {
				this.shake_amount = 0;
				this.shaking = false;
			}
			var tmp = this.view;
			var _this = this.view.pos;
			var _x1 = this.get_transform().local.pos.x + this.shake_vector.x;
			var _y1 = this.get_transform().local.pos.y + this.shake_vector.y;
			var _z1 = this.get_transform().local.pos.z + this.shake_vector.z;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
			tmp.set_pos(_this);
		}
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Entity.prototype.ondestroy.call(this);
	}
	,__class__: luxe_Camera
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_size_mode:"set_size_mode",get_size_mode:"get_size_mode",set_size:"set_size",get_size:"get_size",set_minimum_zoom:"set_minimum_zoom",get_minimum_zoom:"get_minimum_zoom",set_zoom:"set_zoom",get_zoom:"get_zoom",set_center:"set_center",get_center:"get_center",set_viewport:"set_viewport",get_viewport:"get_viewport"})
});
var luxe_ID = function(_name,_id) {
	if(_id == null) {
		_id = "";
	}
	if(_name == null) {
		_name = "";
	}
	this.name = "";
	this.name = _name;
	this.id = _id == "" ? Luxe.utils.uniqueid() : _id;
};
$hxClasses["luxe.ID"] = luxe_ID;
luxe_ID.__name__ = ["luxe","ID"];
luxe_ID.prototype = {
	__class__: luxe_ID
};
var luxe_Component = function(_options) {
	var _name = "";
	if(_options != null) {
		if(_options.name != null) {
			_name = _options.name;
		}
	}
	luxe_ID.call(this,_name == "" ? Luxe.utils.uniqueid() : _name);
};
$hxClasses["luxe.Component"] = luxe_Component;
luxe_Component.__name__ = ["luxe","Component"];
luxe_Component.__super__ = luxe_ID;
luxe_Component.prototype = $extend(luxe_ID.prototype,{
	init: function() {
	}
	,update: function(dt) {
	}
	,onadded: function() {
	}
	,onremoved: function() {
	}
	,onfixedupdate: function(rate) {
	}
	,onreset: function() {
	}
	,ondestroy: function() {
	}
	,onkeyup: function(event) {
	}
	,onkeydown: function(event) {
	}
	,ontextinput: function(event) {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,add: function(component) {
		var _this = this.get_entity();
		_this.component_count++;
		return _this._components.add(component);
	}
	,remove: function(_name) {
		var _this = this.get_entity();
		_this.component_count--;
		return _this._components.remove(_name);
	}
	,get: function(_name,in_children) {
		if(in_children == null) {
			in_children = false;
		}
		return this.get_entity()._components.get(_name,in_children);
	}
	,get_any: function(_name,in_children,first_only) {
		if(first_only == null) {
			first_only = true;
		}
		if(in_children == null) {
			in_children = false;
		}
		return this.get_entity()._components.get_any(_name,in_children,first_only);
	}
	,has: function(_name) {
		return this.get_entity()._components.has(_name);
	}
	,_detach_entity: function() {
	}
	,_attach_entity: function() {
	}
	,set_entity: function(_entity) {
		this._detach_entity();
		this.entity = _entity;
		this._attach_entity();
		return this.get_entity();
	}
	,get_entity: function() {
		return this.entity;
	}
	,set_pos: function(_p) {
		var _this = this.get_entity().get_transform().local;
		_this.pos = _p;
		if(_p != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		return _this.pos;
	}
	,get_pos: function() {
		return this.get_entity().get_transform().local.pos;
	}
	,set_rotation: function(_r) {
		var _this = this.get_entity().get_transform().local;
		_this.rotation = _r;
		if(_r != null) {
			var _q = _this.rotation;
			var listener = $bind(_this,_this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(_this.rotation_changed != null && !_this.ignore_listeners) {
				_this.rotation_changed(_this.rotation);
			}
		}
		return _this.rotation;
	}
	,get_rotation: function() {
		return this.get_entity().get_transform().local.rotation;
	}
	,set_scale: function(_s) {
		var _this = this.get_entity().get_transform().local;
		_this.scale = _s;
		if(_s != null) {
			var _v = _this.scale;
			var listener = $bind(_this,_this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.scale_changed != null && !_this.ignore_listeners) {
				_this.scale_changed(_this.scale);
			}
		}
		return _this.scale;
	}
	,get_scale: function() {
		return this.get_entity().get_transform().local.scale;
	}
	,set_origin: function(_o) {
		var _this = this.get_entity().get_transform();
		_this.dirty = true;
		if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = _this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(_this);
				}
			}
		}
		_this.origin = _o;
		if(_this._origin_handlers != null && _this._origin_handlers.length > 0) {
			var _origin = _this.origin;
			var _g2 = 0;
			var _g11 = _this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin);
				}
			}
		}
		return _this.origin;
	}
	,get_origin: function() {
		return this.get_entity().get_transform().origin;
	}
	,set_transform: function(_o) {
		return this.get_entity().set_transform(_o);
	}
	,get_transform: function() {
		return this.get_entity().get_transform();
	}
	,entity_pos_change: function(_pos) {
	}
	,entity_scale_change: function(_scale) {
	}
	,entity_rotation_change: function(_rotation) {
	}
	,entity_origin_change: function(_origin) {
	}
	,entity_parent_change: function(_parent) {
	}
	,toString: function() {
		return "luxe Component: " + this.name + " on " + this.get_entity().get_name() + " / id: " + this.id;
	}
	,__class__: luxe_Component
	,__properties__: {set_origin:"set_origin",get_origin:"get_origin",set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_entity:"set_entity",get_entity:"get_entity"}
});
var luxe_Debug = function(_app) {
	this.last_cursor_grab = false;
	this.profiling = false;
	this.profile_path = "profile.txt";
	this.last_view_index = 0;
	this.current_view_index = 0;
	this.dt_average_count = 0;
	this.dt_average_span = 60;
	this.dt_average_accum = 0;
	this.dt_average = 0;
	this.visible = false;
	this.app = _app;
};
$hxClasses["luxe.Debug"] = luxe_Debug;
luxe_Debug.__name__ = ["luxe","Debug"];
luxe_Debug.internal_trace = function(_value,_info) {
	if(luxe_Debug.tracing != false) {
		throw new js__$Boot_HaxeError(luxe_DebugError.assertion("tracing == false" + (" ( " + "luxe.Debug: calling trace from a trace callback is an infinite loop!" + " )")));
	}
	luxe_Debug.tracing = true;
	var _out = "" + Std.string(_value);
	if(_info != null && _info.customParams != null) {
		_out += " " + _info.customParams.join(" ");
	}
	console.log("" + _info.fileName + "::" + StringTools.rpad(_info.lineNumber == null ? "null" : "" + _info.lineNumber," ",4) + " " + _out);
	if(!luxe_Debug.shut_down) {
		var _g = 0;
		var _g1 = luxe_Debug.trace_callbacks;
		while(_g < _g1.length) {
			var _callback = _g1[_g];
			++_g;
			_callback(_value,_info);
		}
	}
	luxe_Debug.tracing = false;
};
luxe_Debug.prototype = {
	get_view: function(_name) {
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			if(view.get_name() == _name) {
				return view;
			}
		}
		return null;
	}
	,start: function(_name,_max) {
		if(!this.app.headless) {
			luxe_debug_ProfilerDebugView.start(_name,_max);
		}
	}
	,end: function(_name) {
		if(!this.app.headless) {
			luxe_debug_ProfilerDebugView.end(_name);
		}
	}
	,init: function() {
		luxe_Debug.views = [];
		luxe_Debug.views.push(new luxe_debug_TraceDebugView(this));
		luxe_Debug.views.push(new luxe_debug_StatsDebugView(this));
		luxe_Debug.views.push(new luxe_debug_ProfilerDebugView(this));
		luxe_Debug.views.push(new luxe_debug_SceneDebugView(this));
		this.current_view = luxe_Debug.views[0];
		haxe_Log.trace = luxe_Debug.internal_trace;
	}
	,create_debug_console: function() {
		var _gthis = this;
		this.app.emitter.on(13,$bind(this,this.keyup));
		this.app.emitter.on(12,$bind(this,this.keydown));
		this.app.emitter.on(18,$bind(this,this.mouseup));
		this.app.emitter.on(17,$bind(this,this.mousedown));
		this.app.emitter.on(19,$bind(this,this.mousemove));
		this.app.emitter.on(20,$bind(this,this.mousewheel));
		this.app.emitter.on(22,$bind(this,this.touchup));
		this.app.emitter.on(21,$bind(this,this.touchdown));
		this.app.emitter.on(23,$bind(this,this.touchmove));
		this.batcher = new phoenix_Batcher(this.app.renderer,"debug_batcher",Math.floor(Math.pow(2,20)));
		this.batcher.set_show_stats(0);
		this.view = new phoenix_Camera({ camera_name : "debug_batcher_camera"});
		this.batcher.view = this.view;
		var _this = this.batcher;
		_this.layer = 999;
		_this.renderer.batchers.sort(($_=_this.renderer,$bind($_,$_.sort_batchers)));
		this.overlay = new phoenix_geometry_QuadGeometry({ id : "debug.overlay", x : 0, y : 0, w : this.app.screen.get_w(), h : this.app.screen.get_h(), color : new phoenix_Color(0,0,0,0.8), depth : 999, visible : false, batcher : this.batcher});
		this.overlay.set_locked(true);
		this.padding = new phoenix_Vector(this.app.screen.get_w() * 0.05,this.app.screen.get_h() * 0.05);
		this.inspector = new luxe_debug_Inspector({ pos : new phoenix_Vector(this.padding.x,this.padding.y), size : new phoenix_Vector(this.app.screen.get_w() - this.padding.x * 2,this.app.screen.get_h() - this.padding.y * 2), batcher : this.batcher});
		this.inspector.onrefresh = $bind(this,this.refresh);
		this.app.emitter.on(31,function(_event) {
			var _w = _event.x;
			var _h = _event.y;
			var _this1 = _gthis.padding;
			var _x = _w * 0.05;
			var _y = _h * 0.05;
			var prev = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x);
				}
			}
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			_this1.ignore_listeners = prev;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			_gthis.overlay.resize_xy(_w,_h);
			_gthis.view.set_viewport(new phoenix_Rectangle(0,0,_w,_h));
			_gthis.inspector.set_size(new phoenix_Vector(_w - _gthis.padding.x * 2,_h - _gthis.padding.y * 2));
			_gthis.inspector.set_pos(new phoenix_Vector(_gthis.padding.x,_gthis.padding.y));
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onwindowsized(_event);
			}
		});
		var _g2 = 0;
		var _g11 = luxe_Debug.views;
		while(_g2 < _g11.length) {
			var view1 = _g11[_g2];
			++_g2;
			view1.create();
		}
	}
	,render: function() {
		if(this.visible) {
			this.start(luxe_Debug.debug_batch_tag);
			var _this = this.batcher;
			if(_this.name != "") {
				Luxe.debug.start(_this.name);
			}
			_this.draw_calls = 0;
			_this.vert_count = 0;
			_this.emitter.emit(1,_this);
			_this.view.process();
			_this.renderer.state.viewport(_this.view.viewport.x,_this.view.viewport.y,_this.view.viewport.w,_this.view.viewport.h);
			_this.batch(false);
			_this.emitter.emit(2,_this);
			var _stats = _this.renderer.stats;
			var _node = _this.geometry.root;
			_stats.geometry_count += (_node == null ? 0 : _node.nodecount) * _this.show_stats;
			_stats.dynamic_batched_count += _this.dynamic_batched_count * _this.show_stats;
			_stats.static_batched_count += _this.static_batched_count * _this.show_stats;
			_stats.visible_count += _this.visible_count * _this.show_stats;
			_stats.draw_calls += _this.draw_calls * _this.show_stats;
			_stats.vert_count += _this.vert_count * _this.show_stats;
			if(_this.name != "") {
				Luxe.debug.end(_this.name);
			}
			this.end(luxe_Debug.debug_batch_tag);
		}
	}
	,mouseup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousedown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousemove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousewheel: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmousewheel(e);
			}
		}
	}
	,touchup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,touchdown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,touchmove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,keyup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,keydown: function(e) {
		if(e.scancode == 53) {
			this.set_visible(!this.visible);
		}
		if(this.visible) {
			if(e.keycode == 49 && this.visible) {
				this.switch_view();
			}
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onkeydown(e);
			}
		}
	}
	,refresh: function() {
		if(this.current_view != null) {
			this.current_view.refresh();
		}
	}
	,switch_view: function() {
		this.last_view_index = this.current_view_index;
		this.current_view_index++;
		if(this.current_view_index > luxe_Debug.views.length - 1) {
			this.current_view_index = 0;
		}
		luxe_Debug.views[this.last_view_index].hide();
		this.current_view = luxe_Debug.views[this.current_view_index];
		this.current_view.show();
	}
	,set_visible: function(_value) {
		this.visible = _value;
		this.overlay.set_visible(this.visible);
		if(this.visible) {
			this.last_cursor_grab = this.app.screen.cursor.get_grab();
			this.app.screen.cursor.set_grab(false);
			this.current_view.show();
			this.inspector.show();
		} else {
			if(this.last_cursor_grab != false) {
				this.app.screen.cursor.set_grab(this.last_cursor_grab);
			}
			this.current_view.hide();
			this.inspector.hide();
		}
		return this.visible;
	}
	,destroy: function() {
		this.app.emitter.off(13,$bind(this,this.keyup));
		this.app.emitter.off(12,$bind(this,this.keydown));
		this.app.emitter.off(18,$bind(this,this.mouseup));
		this.app.emitter.off(17,$bind(this,this.mousedown));
		this.app.emitter.off(19,$bind(this,this.mousemove));
		this.app.emitter.off(20,$bind(this,this.mousewheel));
		luxe_Debug.shut_down = true;
	}
	,process: function() {
		this.dt_average_accum += this.app.frame_delta;
		this.dt_average_count++;
		if(this.dt_average_count == this.dt_average_span - 1) {
			this.dt_average = this.dt_average_accum / this.dt_average_span;
			this.dt_average_accum = this.dt_average;
			this.dt_average_count = 0;
		}
		if(!this.visible) {
			return;
		}
		var n = Math.pow(10,5);
		var n1 = Math.pow(10,5);
		this.inspector.title.set_text("[" + this.current_view.get_name() + "] / " + Math.round(1 / this.dt_average) + " / " + (this.app.frame_delta * n | 0) / n + " / " + (this.dt_average * n1 | 0) / n1);
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			view.process();
		}
	}
	,__class__: luxe_Debug
	,__properties__: {set_visible:"set_visible"}
};
var luxe_Draw = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Draw"] = luxe_Draw;
luxe_Draw.__name__ = ["luxe","Draw"];
luxe_Draw.prototype = {
	line: function(options) {
		if(options.p0 == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.p0 was null" + (" ( " + "draw.line requires p0:Vector, and p1:Vector" + " )")));
		}
		if(options.p1 == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.p1 was null" + (" ( " + "draw.line requires p0:Vector, and p1:Vector" + " )")));
		}
		if(options.id == null) {
			options.id = "line.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_LineGeometry(options);
	}
	,rectangle: function(options) {
		if(options.id == null) {
			options.id = "rectangle.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_RectangleGeometry(options);
	}
	,box: function(options) {
		if(options.id == null) {
			options.id = "quad.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_QuadGeometry(options);
	}
	,ring: function(options) {
		if(options.id == null) {
			options.id = "ring.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_RingGeometry(options);
	}
	,circle: function(options) {
		if(options.id == null) {
			options.id = "circle.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_CircleGeometry(options);
	}
	,arc: function(options) {
		if(options.id == null) {
			options.id = "arc.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_ArcGeometry(options);
	}
	,ngon: function(options) {
		if(options.id == null) {
			options.id = "ngon.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		var _sides = 3;
		var _radius = 64;
		var _solid = false;
		var _x = 0;
		var _y = 0;
		var _angle = 0;
		if(options.sides != null) {
			_sides = options.sides;
		}
		if(options.r != null) {
			_radius = options.r;
		}
		if(options.x != null) {
			_x = options.x;
		}
		if(options.y != null) {
			_y = options.y;
		}
		if(options.angle != null) {
			_angle = options.angle;
		}
		if(options.solid != null) {
			_solid = options.solid;
		}
		if(!_solid) {
			options.primitive_type = 1;
		} else {
			options.primitive_type = 6;
		}
		var _geometry = new phoenix_geometry_Geometry(options);
		var _sides_over_pi = Math.PI / _sides;
		var _sides_over_twopi = 2 * Math.PI / _sides;
		var _angle_rad = _angle * 0.0174532925199432781;
		var _color = options.color;
		if(_solid) {
			_geometry.add(new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color));
		}
		var _points = [];
		var _g1 = 0;
		var _g = _solid == false ? _sides : _sides + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var __pos = new phoenix_Vector(_x + _radius * Math.sin(_angle_rad + _sides_over_pi + i * _sides_over_twopi),_y + _radius * Math.cos(_angle_rad + _sides_over_pi + i * _sides_over_twopi),0);
			_geometry.add(new phoenix_geometry_Vertex(__pos,_color));
			if(!_solid) {
				if(i > 0) {
					_geometry.add(new phoenix_geometry_Vertex(__pos,_color));
				}
			}
			_points.push(__pos);
		}
		if(!_solid) {
			_geometry.add(new phoenix_geometry_Vertex(_points[0],_color));
		}
		return _geometry;
	}
	,poly: function(options) {
		if(options.id == null) {
			options.id = "poly.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		if(options.solid == null) {
			options.solid = true;
		}
		if(options.close == null) {
			options.close = false;
		}
		var _default_col = null;
		var _has_colors = options.colors != null;
		if(!_has_colors) {
			if(options.color == null) {
				options.color = new phoenix_Color();
			}
			_default_col = options.color;
		}
		if(options.solid) {
			if(options.primitive_type == null) {
				options.primitive_type = 6;
			}
			var _geometry = new phoenix_geometry_Geometry(options);
			var _idx = 0;
			var _g = 0;
			var _g1 = options.points;
			while(_g < _g1.length) {
				var _point = _g1[_g];
				++_g;
				_geometry.add(new phoenix_geometry_Vertex(_point,_has_colors ? options.colors[_idx] : _default_col));
				++_idx;
			}
			return _geometry;
		} else {
			if(options.primitive_type == null) {
				options.primitive_type = 1;
			}
			var _geometry1 = new phoenix_geometry_Geometry(options);
			var _idx1 = 0;
			var _l = options.points.length;
			var _g2 = 0;
			var _g11 = options.points;
			while(_g2 < _g11.length) {
				var _point1 = _g11[_g2];
				++_g2;
				_geometry1.add(new phoenix_geometry_Vertex(_point1,_has_colors ? options.colors[_idx1] : _default_col));
				if(_idx1 < _l - 2) {
					_geometry1.add(new phoenix_geometry_Vertex(options.points[_idx1 + 1],_has_colors ? options.colors[_idx1 + 1] : _default_col));
				}
				++_idx1;
			}
			if(options.close) {
				var _last = options.points.length - 1;
				var _color2 = _has_colors ? options.colors[_last] : _default_col;
				_geometry1.add(new phoenix_geometry_Vertex(options.points[_last],_has_colors ? options.colors[0] : _default_col));
				_geometry1.add(new phoenix_geometry_Vertex(options.points[0],_color2));
			}
			return _geometry1;
		}
	}
	,texture: function(options) {
		if(options.id == null) {
			options.id = "texture.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		var _x = 0;
		var _y = 0;
		var _w = 0;
		var _h = 0;
		var _tw = 64;
		var _th = 64;
		if(options.texture != null) {
			_tw = options.texture.width;
			_th = options.texture.height;
			if(options.size == null) {
				_w = _tw;
				_h = _th;
			}
		}
		if(options.pos != null) {
			_x = options.pos.x;
			_y = options.pos.y;
		}
		if(options.size != null) {
			_w = options.size.x;
			_h = options.size.y;
		}
		if(options.x == null) {
			options.x = _x;
		}
		if(options.y == null) {
			options.y = _y;
		}
		if(options.w == null) {
			options.w = _w;
		}
		if(options.h == null) {
			options.h = _h;
		}
		var _quad = new phoenix_geometry_QuadGeometry(options);
		var _ux = 0;
		var _uy = 0;
		var _uw = _tw;
		var _uh = _th;
		if(options.uv != null) {
			_ux = options.uv.x;
			_uy = options.uv.y;
			_uw = options.uv.w;
			_uh = options.uv.h;
		}
		var _rect = new phoenix_Rectangle(_ux,_uy,_uw,_uh);
		if(_quad.state.texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
		}
		var tlx = _rect.x / _quad.state.texture.width_actual;
		var tly = _rect.y / _quad.state.texture.height_actual;
		var szx = _rect.w / _quad.state.texture.width_actual;
		var szy = _rect.h / _quad.state.texture.height_actual;
		if(_quad.vertices.length != 0) {
			var tl_x = tlx;
			var tl_y = tly;
			_quad._uv_x = tlx;
			_quad._uv_y = tly;
			_quad._uv_w = szx;
			_quad._uv_h = szy;
			var tr_x = tlx + szx;
			var tr_y = tly;
			var br_x = tlx + szx;
			var br_y = tly + szy;
			var bl_x = tlx;
			var bl_y = tly + szy;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = _quad.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(_quad.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(_quad.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = _quad.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = _quad.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = _quad.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = _quad.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = _quad.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = _quad.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			_quad.set_dirty(true);
		}
		return _quad;
	}
	,text: function(options) {
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_TextGeometry(options);
	}
	,__class__: luxe_Draw
};
var snow_App = function() {
	this.next_tick = 0;
	this.fixed_overflow = 0.0;
	this.fixed_frame_time = 0.0167;
	this.fixed_timestep = false;
	this.fixed_alpha = 1.0;
	this.sim_time = 0;
	this.sim_delta = 0.0166666666666666664;
	this.frame_max_delta = 0.25;
	this.frame_delta = 0.0166666666666666664;
	this.frame_start_prev = 0.0;
	this.frame_start = 0.0166666666666666664;
	this.tick_delta = 0.0166666666666666664;
	this.tick_start_prev = 0.0;
	this.tick_start = 0.0166666666666666664;
	this.update_rate = 0;
	this.fixed_delta = 0;
	this.timescale = 1;
};
$hxClasses["snow.App"] = snow_App;
snow_App.__name__ = ["snow","App"];
snow_App.prototype = {
	config: function(_config) {
		return _config;
	}
	,ready: function() {
	}
	,update: function(dt) {
	}
	,tick: function(dt) {
	}
	,ondestroy: function() {
	}
	,onevent: function(event) {
	}
	,ontickstart: function() {
	}
	,ontickend: function() {
	}
	,onkeydown: function(keycode,scancode,repeat,mod,timestamp,window_id) {
	}
	,onkeyup: function(keycode,scancode,repeat,mod,timestamp,window_id) {
	}
	,ontextinput: function(text,start,length,type,timestamp,window_id) {
	}
	,onmousedown: function(x,y,button,timestamp,window_id) {
	}
	,onmouseup: function(x,y,button,timestamp,window_id) {
	}
	,onmousewheel: function(x,y,timestamp,window_id) {
	}
	,onmousemove: function(x,y,xrel,yrel,timestamp,window_id) {
	}
	,ontouchdown: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ontouchup: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ontouchmove: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ongamepadaxis: function(gamepad,axis,value,timestamp) {
	}
	,ongamepaddown: function(gamepad,button,value,timestamp) {
	}
	,ongamepadup: function(gamepad,button,value,timestamp) {
	}
	,ongamepaddevice: function(gamepad,id,type,timestamp) {
	}
	,internal_init: function() {
		this.sim_time = 0;
		this.fixed_frame_time = 0.0166666666666666664;
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_start_prev = this.tick_start - this.fixed_frame_time;
		this.tick_delta = this.fixed_frame_time;
		this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.frame_start_prev = this.frame_start - this.fixed_frame_time;
		this.frame_delta = this.sim_delta = this.fixed_frame_time;
	}
	,internal_tick: function() {
		this.ontickstart();
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_delta = this.tick_start - this.tick_start_prev;
		this.tick_start_prev = this.tick_start;
		if(this.fixed_timestep) {
			this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
			this.frame_delta = this.frame_start - this.frame_start_prev;
			this.frame_start_prev = this.frame_start;
			this.sim_delta = this.frame_delta * this.timescale;
			if(this.sim_delta > this.frame_max_delta) {
				this.sim_delta = this.frame_max_delta;
			}
			this.fixed_overflow += this.sim_delta;
			var _slice = this.fixed_frame_time * this.timescale;
			while(this.fixed_overflow >= this.fixed_frame_time) {
				this.update(_slice);
				this.sim_time += _slice;
				this.fixed_overflow -= _slice;
			}
			this.fixed_alpha = this.fixed_overflow / this.fixed_frame_time;
		} else {
			this.internal_tick_default();
		}
		this.tick(this.tick_delta);
		this.ontickend();
	}
	,internal_tick_default: function() {
		if(this.update_rate != 0) {
			if(window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start < this.next_tick) {
				return;
			}
			this.next_tick = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.update_rate;
		}
		this.frame_start = this.tick_start;
		this.frame_delta = this.frame_start - this.frame_start_prev;
		this.frame_start_prev = this.frame_start;
		if(this.frame_delta > this.frame_max_delta) {
			this.frame_delta = this.frame_max_delta;
		}
		var _used_delta = this.fixed_delta == 0 ? this.frame_delta : this.fixed_delta;
		_used_delta *= this.timescale;
		this.sim_delta = _used_delta;
		this.sim_time += _used_delta;
		this.update(_used_delta);
	}
	,internal_tick_fixed_timestep: function() {
		this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.frame_delta = this.frame_start - this.frame_start_prev;
		this.frame_start_prev = this.frame_start;
		this.sim_delta = this.frame_delta * this.timescale;
		if(this.sim_delta > this.frame_max_delta) {
			this.sim_delta = this.frame_max_delta;
		}
		this.fixed_overflow += this.sim_delta;
		var _slice = this.fixed_frame_time * this.timescale;
		while(this.fixed_overflow >= this.fixed_frame_time) {
			this.update(_slice);
			this.sim_time += _slice;
			this.fixed_overflow -= _slice;
		}
		this.fixed_alpha = this.fixed_overflow / this.fixed_frame_time;
	}
	,__class__: snow_App
};
var luxe_Engine = function(_game) {
	this.pixel_scale = 1;
	this.running = false;
	this.auto_render = true;
	this.headless = false;
	this.inited = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.build = "+a0e9d83648";
	this.version = "dev";
	snow_App.call(this);
	this.game = _game;
	this.emitter = new luxe_Emitter();
	Luxe.core = this;
	Luxe.utils = new luxe_utils_Utils(this);
};
$hxClasses["luxe.Engine"] = luxe_Engine;
luxe_Engine.__name__ = ["luxe","Engine"];
luxe_Engine.__super__ = snow_App;
luxe_Engine.prototype = $extend(snow_App.prototype,{
	run: function() {
		if(this.running != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("running == false"));
		}
		this.running = true;
		new snow_Snow(this);
	}
	,shutdown: function() {
		this.shutting_down = true;
		var func = ($_=this.app,$bind($_,$_.shutdown));
		if(func != null) {
			snow_Snow.next_queue.push(func);
		}
	}
	,runtime_info: function() {
		return "" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform;
	}
	,on: function(event,handler) {
		this.emitter.on(event,handler);
	}
	,off: function(event,handler) {
		return this.emitter.off(event,handler);
	}
	,emit: function(event,data) {
		this.emitter.emit(event,data);
		return;
	}
	,ready: function() {
		var _gthis = this;
		this.version = haxe_Resource.getString("version");
		this.build = this.version + haxe_Resource.getString("build");
		haxe_Log.trace("   i / luxe / " + ("" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform),{ fileName : "Engine.hx", lineNumber : 149, className : "luxe.Engine", methodName : "ready"});
		this.headless = this.game_config.headless;
		if(!this.headless) {
			var _font_image = new Uint8Array(haxe_Resource.getBytes("default.png").b.bufferValue);
			snow_systems_assets_AssetImage.load_from_bytes(this.app.assets,"default.png",_font_image).then(function(asset) {
				_gthis.init(asset);
			}).error(function(error) {
				haxe_Log.trace("   i / luxe / " + "failed to load default font, things will probably not look right... $error",{ fileName : "Engine.hx", lineNumber : 168, className : "luxe.Engine", methodName : "ready"});
				_gthis.init(null);
			});
		} else {
			this.auto_render = false;
			this.init(null);
		}
	}
	,ondestroy: function() {
		this.shutting_down = true;
		haxe_Log.trace("   i / luxe / " + "shutting down...",{ fileName : "Engine.hx", lineNumber : 187, className : "luxe.Engine", methodName : "ondestroy"});
		this.emitter.emit(8);
		if(this.renderer != null) {
			this.renderer.destroy();
		}
		this.physics.destroy();
		this.timer.destroy();
		this.events.destroy();
		this.debug.destroy();
		this.emitter = null;
		this.input = null;
		this.audio = null;
		this.events = null;
		this.timer = null;
		this.debug = null;
		Luxe.utils = null;
		this.has_shutdown = true;
		haxe_Log.trace("   i / luxe / " + "goodbye.",{ fileName : "Engine.hx", lineNumber : 217, className : "luxe.Engine", methodName : "ondestroy"});
	}
	,init: function(asset) {
		Luxe.debug = this.debug = new luxe_Debug(this);
		Luxe.io = this.io = new luxe_IO(this);
		this.draw = new luxe_Draw(this);
		this.timer = new luxe_Timer(this);
		this.events = new luxe_Events();
		this.audio = new luxe_Audio(this);
		this.input = new luxe_Input(this);
		this.physics = new luxe_Physics(this);
		this.resources = new luxe_Resources();
		Luxe.resources = this.resources;
		if(!this.headless) {
			this.renderer = new phoenix_Renderer(this,asset);
			Luxe.renderer = this.renderer;
		}
		this.pixel_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		this.screen = new luxe_Screen(this,Math.floor(this.app.runtime.window.width / this.pixel_scale),Math.floor(this.app.runtime.window.height / this.pixel_scale));
		this.debug.init();
		this.input.init();
		if(!this.headless) {
			this.renderer.init();
		}
		this.physics.init();
		Luxe.audio = this.audio;
		Luxe.draw = this.draw;
		Luxe.events = this.events;
		Luxe.timer = this.timer;
		Luxe.input = this.input;
		if(!this.headless) {
			Luxe.camera = new luxe_Camera({ name : "default camera", view : this.renderer.camera});
		}
		Luxe.physics = this.physics;
		this.scene = new luxe_Scene("default scene");
		Luxe.scene = this.scene;
		if(!this.headless) {
			this.scene.add(Luxe.camera);
			this.debug.create_debug_console();
		}
		this.internal_pre_ready();
	}
	,internal_pre_ready: function() {
		if(!this.headless) {
			new luxe_Parcel({ id : "default_parcel", system : this.resources, bytes : this.game_config.preload.bytes, texts : this.game_config.preload.texts, jsons : this.game_config.preload.jsons, textures : this.game_config.preload.textures, fonts : this.game_config.preload.fonts, shaders : this.game_config.preload.shaders, sounds : this.game_config.preload.sounds, oncomplete : $bind(this,this.internal_ready), onfailed : function(_error) {
				haxe_Log.trace("   i / luxe / " + "config / preload / failed to load",{ fileName : "Engine.hx", lineNumber : 312, className : "luxe.Engine", methodName : "internal_pre_ready"});
				throw new js__$Boot_HaxeError(snow_types_Error.error(_error));
			}}).load();
		} else {
			this.internal_ready(null);
		}
	}
	,internal_ready: function(_) {
		if(!this.headless) {
			this.debug.start(luxe_Tag.update,50);
			this.debug.start(luxe_Tag.tick,50);
		}
		this.game.ready();
		if(!this.shutting_down) {
			this.emitter.emit(2);
			this.inited = true;
			this.physics.reset();
		}
	}
	,onevent: function(_event) {
		if(_event.window != null) {
			this.window_event(_event.window);
		}
	}
	,update: function(_delta) {
		if(this.has_shutdown) {
			return;
		}
		if(!this.inited) {
			return;
		}
		this.debug.end(luxe_Tag.update);
		this.debug.start(luxe_Tag.update);
		this.input.process();
		this.events.process();
		this.physics.process();
		this.debug.start(luxe_Tag.updates);
		this.emitter.emit(6,_delta);
		this.debug.end(luxe_Tag.updates);
		this.debug.start(luxe_Tag.game_update);
		this.game.update(_delta);
		this.debug.end(luxe_Tag.game_update);
		this.debug.process();
	}
	,tick: function(_delta) {
		if(this.shutting_down) {
			return;
		}
		if(!this.inited) {
			return;
		}
		this.debug.end(luxe_Tag.tick);
		this.debug.start(luxe_Tag.tick);
		if(this.auto_render) {
			this.render();
		}
	}
	,render: function() {
		this.debug.start(luxe_Tag.render);
		this.renderer.prerender();
		this.emitter.emit(9);
		this.emitter.emit(10);
		this.renderer.process();
		this.emitter.emit(11);
		this.debug.end(luxe_Tag.render);
		this.debug.render();
	}
	,ontickstart: function() {
		if(!this.has_shutdown) {
			this.emitter.emit(4);
		}
	}
	,ontickend: function() {
		if(!this.has_shutdown) {
			this.emitter.emit(5);
		}
	}
	,window_event: function(_event) {
		if(this.shutting_down) {
			return;
		}
		if(!this.inited) {
			return;
		}
		var _render_w = _event.x;
		var _render_h = _event.y;
		this.pixel_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		_event.x = Math.floor(_render_w / this.pixel_scale);
		_event.y = Math.floor(_render_h / this.pixel_scale);
		this.emitter.emit(28,_event);
		switch(_event.type) {
		case 4:
			this.emitter.emit(29,_event);
			break;
		case 5:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(30,_event);
			break;
		case 6:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(31,_event);
			break;
		case 7:
			this.emitter.emit(32,_event);
			break;
		case 9:
			this.emitter.emit(33,_event);
			break;
		default:
		}
		_event = null;
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmousedown(_x,_y,_button,_timestamp,_window_id);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmouseup(_x,_y,_button,_timestamp,_window_id);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmousemove(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onmousewheel(_x,_y,_timestamp,_window_id);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onkeydown(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onkeyup(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.ontextinput(_text,_start,_length,_etype,_timestamp,_window_id);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchdown(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchup(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchmove(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) {
			return;
		}
		this.input.oninputdown(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) {
			return;
		}
		this.input.oninputup(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepadaxis(_gamepad,_axis,_value,_timestamp);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepaddown(_gamepad,_button,_value,_timestamp);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepadup(_gamepad,_button,_value,_timestamp);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepaddevice(_gamepad,_id,_etype,_timestamp);
	}
	,config: function(_config) {
		if(_config.user == null) {
			_config.user = { };
		}
		this.game_config = _config;
		this.game_config.window.title = "luxe game";
		this.game_config.window.width = 960;
		this.game_config.window.height = 640;
		this.game_config.window.resizable = true;
		this.game_config.window.fullscreen = false;
		this.game_config.window.borderless = false;
		this.game_config.preload = { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
		this.game_config = this.game.config(this.game_config);
		return this.game_config;
	}
	,__class__: luxe_Engine
});
var luxe_Tag = function() { };
$hxClasses["luxe.Tag"] = luxe_Tag;
luxe_Tag.__name__ = ["luxe","Tag"];
var luxe_Events = function() {
	this.event_queue_count = 0;
	this.event_connections = new haxe_ds_StringMap();
	this.event_slots = new haxe_ds_StringMap();
	this.event_filters = new haxe_ds_StringMap();
	this.event_queue = [];
	this.event_schedules = new haxe_ds_StringMap();
};
$hxClasses["luxe.Events"] = luxe_Events;
luxe_Events.__name__ = ["luxe","Events"];
luxe_Events.prototype = {
	destroy: function() {
		this.clear();
	}
	,clear: function() {
		var _this = this.event_schedules;
		var schedule = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(schedule.hasNext()) {
			var schedule1 = schedule.next();
			schedule1.stop();
			schedule1 = null;
		}
		var connection = this.event_connections.keys();
		while(connection.hasNext()) {
			var connection1 = connection.next();
			this.event_connections.remove(connection1);
		}
		var filter = this.event_filters.keys();
		while(filter.hasNext()) {
			var filter1 = filter.next();
			this.event_filters.remove(filter1);
		}
		var slot = this.event_slots.keys();
		while(slot.hasNext()) {
			var slot1 = slot.next();
			this.event_slots.remove(slot1);
		}
		var _count = this.event_queue.length;
		while(_count > 0) {
			this.event_queue.pop();
			--_count;
		}
	}
	,does_filter_event: function(_filter,_event) {
		var _replace_stars_r = new RegExp("\\*","gi".split("u").join(""));
		return new EReg(_filter.replace(_replace_stars_r,".*?"),"gi").match(_event);
	}
	,listen: function(_event_name,_listener) {
		var _id = Luxe.utils.uniqueid();
		var _connection = new luxe__$Events_EventConnection(_id,_event_name,_listener);
		var _this = this.event_connections;
		if(__map_reserved[_id] != null) {
			_this.setReserved(_id,_connection);
		} else {
			_this.h[_id] = _connection;
		}
		if(new EReg("\\*","gi").match(_event_name)) {
			var _this1 = this.event_filters;
			if(!(__map_reserved[_event_name] != null ? _this1.existsReserved(_event_name) : _this1.h.hasOwnProperty(_event_name))) {
				var _this2 = this.event_filters;
				var value = [];
				if(__map_reserved[_event_name] != null) {
					_this2.setReserved(_event_name,value);
				} else {
					_this2.h[_event_name] = value;
				}
			}
			var _this3 = this.event_filters;
			(__map_reserved[_event_name] != null ? _this3.getReserved(_event_name) : _this3.h[_event_name]).push(_connection);
		} else {
			var _this4 = this.event_slots;
			if(!(__map_reserved[_event_name] != null ? _this4.existsReserved(_event_name) : _this4.h.hasOwnProperty(_event_name))) {
				var _this5 = this.event_slots;
				var value1 = [];
				if(__map_reserved[_event_name] != null) {
					_this5.setReserved(_event_name,value1);
				} else {
					_this5.h[_event_name] = value1;
				}
			}
			var _this6 = this.event_slots;
			(__map_reserved[_event_name] != null ? _this6.getReserved(_event_name) : _this6.h[_event_name]).push(_connection);
		}
		return _id;
	}
	,unlisten: function(event_id) {
		var _this = this.event_connections;
		if(__map_reserved[event_id] != null ? _this.existsReserved(event_id) : _this.h.hasOwnProperty(event_id)) {
			var _this1 = this.event_connections;
			var _connection = __map_reserved[event_id] != null ? _this1.getReserved(event_id) : _this1.h[event_id];
			var key = _connection.event_name;
			var _this2 = this.event_slots;
			var _event_slot = __map_reserved[key] != null ? _this2.getReserved(key) : _this2.h[key];
			if(_event_slot != null) {
				HxOverrides.remove(_event_slot,_connection);
				return true;
			} else {
				var key1 = _connection.event_name;
				var _this3 = this.event_filters;
				var _event_filter = __map_reserved[key1] != null ? _this3.getReserved(key1) : _this3.h[key1];
				if(_event_filter != null) {
					HxOverrides.remove(_event_filter,_connection);
					return true;
				} else {
					return false;
				}
			}
		} else {
			return false;
		}
	}
	,queue: function(event_name,properties) {
		var _id = Luxe.utils.uniqueid();
		this.event_queue.push(new luxe__$Events_EventObject(_id,event_name,properties));
		return _id;
	}
	,dequeue: function(event_id) {
		var _idx = 0;
		var _count = this.event_queue.length;
		while(true) {
			if(this.event_queue[_idx].id == event_id) {
				this.event_queue.splice(_idx,1);
				return true;
			}
			++_idx;
			if(!(_idx < _count)) {
				break;
			}
		}
		return false;
	}
	,process: function() {
		var _count = this.event_queue.length;
		while(_count > 0) {
			var _event = this.event_queue.shift();
			this.fire(_event.name,_event.properties);
			--_count;
		}
	}
	,fire: function(_event_name,_properties,_tag) {
		if(_tag == null) {
			_tag = false;
		}
		var _fired = false;
		var _this = this.event_filters;
		var _filter = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_filter.hasNext()) {
			var _filter1 = _filter.next();
			if(_filter1.length > 0) {
				if(this.does_filter_event(_filter1[0].event_name,_event_name)) {
					if(_tag) {
						_properties = this.tag_properties(_properties,_event_name,_filter1.length);
					}
					var _g = 0;
					while(_g < _filter1.length) {
						var _connection = _filter1[_g];
						++_g;
						_connection.listener(_properties);
					}
					_fired = true;
				}
			}
		}
		var _this1 = this.event_slots;
		if(__map_reserved[_event_name] != null ? _this1.existsReserved(_event_name) : _this1.h.hasOwnProperty(_event_name)) {
			var _this2 = this.event_slots;
			var _connections = __map_reserved[_event_name] != null ? _this2.getReserved(_event_name) : _this2.h[_event_name];
			if(_tag) {
				_properties = this.tag_properties(_properties,_event_name,_connections.length);
			}
			var _g1 = 0;
			while(_g1 < _connections.length) {
				var connection = _connections[_g1];
				++_g1;
				connection.listener(_properties);
			}
			_fired = true;
		}
		return _fired;
	}
	,schedule: function(time,event_name,properties) {
		var _id = Luxe.utils.uniqueid();
		var f = $bind(this,this.fire);
		var a1 = event_name;
		var a2 = properties;
		var _timer = function() {
			return f(a1,a2);
		};
		var _timer1 = Luxe.timer.schedule(time,_timer);
		var _this = this.event_schedules;
		if(__map_reserved[_id] != null) {
			_this.setReserved(_id,_timer1);
		} else {
			_this.h[_id] = _timer1;
		}
		return _id;
	}
	,unschedule: function(schedule_id) {
		var _this = this.event_schedules;
		if(__map_reserved[schedule_id] != null ? _this.existsReserved(schedule_id) : _this.h.hasOwnProperty(schedule_id)) {
			var _this1 = this.event_schedules;
			(__map_reserved[schedule_id] != null ? _this1.getReserved(schedule_id) : _this1.h[schedule_id]).stop();
			this.event_schedules.remove(schedule_id);
			return true;
		}
		return false;
	}
	,tag_properties: function(_properties,_name,_count) {
		if(_properties == null) {
			_properties = { };
		}
		_properties["_event_name_"] = _name;
		_properties["_event_connection_count_"] = _count;
		return _properties;
	}
	,__class__: luxe_Events
};
var luxe__$Events_EventConnection = function(_id,_event_name,_listener) {
	this.id = _id;
	this.listener = _listener;
	this.event_name = _event_name;
};
$hxClasses["luxe._Events.EventConnection"] = luxe__$Events_EventConnection;
luxe__$Events_EventConnection.__name__ = ["luxe","_Events","EventConnection"];
luxe__$Events_EventConnection.prototype = {
	__class__: luxe__$Events_EventConnection
};
var luxe__$Events_EventObject = function(_id,_event_name,_event_properties) {
	this.id = _id;
	this.name = _event_name;
	this.properties = _event_properties;
};
$hxClasses["luxe._Events.EventObject"] = luxe__$Events_EventObject;
luxe__$Events_EventObject.__name__ = ["luxe","_Events","EventObject"];
luxe__$Events_EventObject.prototype = {
	__class__: luxe__$Events_EventObject
};
var luxe_Game = function() {
	this.app = new luxe_Engine(this);
	this.app.run();
};
$hxClasses["luxe.Game"] = luxe_Game;
luxe_Game.__name__ = ["luxe","Game"];
luxe_Game.main = function() {
	new testTrilateral_TestLuxe();
};
luxe_Game.prototype = {
	config: function(_config) {
		return _config;
	}
	,ready: function() {
	}
	,update: function(dt) {
	}
	,ondestroy: function() {
	}
	,onprerender: function() {
	}
	,onrender: function() {
	}
	,onpostrender: function() {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onkeydown: function(event) {
	}
	,onkeyup: function(event) {
	}
	,ontextinput: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,onevent: function(event) {
	}
	,__class__: luxe_Game
};
var luxe_IO = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.IO"] = luxe_IO;
luxe_IO.__name__ = ["luxe","IO"];
luxe_IO.prototype = {
	url_open: function(_url) {
		this.core.app.io.module.url_open(_url);
	}
	,string_save: function(_key,_value,_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		return this.core.app.io.string_save(_key,_value,_slot);
	}
	,string_load: function(_key,_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		return this.core.app.io.string_load(_key,_slot);
	}
	,string_destroy: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		return this.core.app.io.string_destroy(_slot);
	}
	,init: function() {
	}
	,__class__: luxe_IO
};
var luxe_Input = function(_core) {
	this.core = _core;
	this.key_event = new luxe_KeyEvent();
	this.text_event = new luxe_TextEvent();
	this.mouse_event = new luxe_MouseEvent();
	this.touch_event = new luxe_TouchEvent();
	this.gamepad_event = new luxe_GamepadEvent();
	this.input_event = new luxe_InputEvent();
};
$hxClasses["luxe.Input"] = luxe_Input;
luxe_Input.__name__ = ["luxe","Input"];
luxe_Input.prototype = {
	inputpressed: function(_event) {
		var _this = this._named_input_pressed;
		if(__map_reserved[_event] != null) {
			return _this.existsReserved(_event);
		} else {
			return _this.h.hasOwnProperty(_event);
		}
	}
	,inputreleased: function(_event) {
		var _this = this._named_input_released;
		if(__map_reserved[_event] != null) {
			return _this.existsReserved(_event);
		} else {
			return _this.h.hasOwnProperty(_event);
		}
	}
	,inputdown: function(_event) {
		var _this = this._named_input_down;
		if(__map_reserved[_event] != null) {
			return _this.existsReserved(_event);
		} else {
			return _this.h.hasOwnProperty(_event);
		}
	}
	,keypressed: function(_code) {
		return this.core.app.input.keypressed(_code);
	}
	,keyreleased: function(_code) {
		return this.core.app.input.keyreleased(_code);
	}
	,keydown: function(_code) {
		return this.core.app.input.keydown(_code);
	}
	,scanpressed: function(_code) {
		return this.core.app.input.scanpressed(_code);
	}
	,scanreleased: function(_code) {
		return this.core.app.input.scanreleased(_code);
	}
	,scandown: function(_code) {
		return this.core.app.input.scandown(_code);
	}
	,mousepressed: function(_button) {
		return this.core.app.input.mousepressed(_button);
	}
	,mousereleased: function(_button) {
		return this.core.app.input.mousereleased(_button);
	}
	,mousedown: function(_button) {
		return this.core.app.input.mousedown(_button);
	}
	,gamepadpressed: function(_gamepad,_button) {
		return this.core.app.input.gamepadpressed(_gamepad,_button);
	}
	,gamepadreleased: function(_gamepad,_button) {
		return this.core.app.input.gamepadreleased(_gamepad,_button);
	}
	,gamepaddown: function(_gamepad,_button) {
		return this.core.app.input.gamepaddown(_gamepad,_button);
	}
	,gamepadaxis: function(_gamepad,_axis) {
		return this.core.app.input.gamepadaxis(_gamepad,_axis);
	}
	,bind_key: function(_name,_key) {
		var _this = this.key_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			var value = new haxe_ds_IntMap();
			var _this1 = this.key_bindings;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,value);
			} else {
				_this1.h[_name] = value;
			}
		}
		var _this2 = this.key_bindings;
		(__map_reserved[_name] != null ? _this2.getReserved(_name) : _this2.h[_name]).h[_key] = true;
	}
	,unbind_key: function(_name,_key) {
		var _this = this.key_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			return;
		}
		var _this1 = this.key_bindings;
		(__map_reserved[_name] != null ? _this1.getReserved(_name) : _this1.h[_name]).remove(_key);
	}
	,bind_mouse: function(_name,_button) {
		var _this = this.mouse_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			var value = new haxe_ds_IntMap();
			var _this1 = this.mouse_bindings;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,value);
			} else {
				_this1.h[_name] = value;
			}
		}
		var _this2 = this.mouse_bindings;
		(__map_reserved[_name] != null ? _this2.getReserved(_name) : _this2.h[_name]).h[_button] = true;
	}
	,unbind_mouse: function(_name,_button) {
		var _this = this.mouse_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			return;
		}
		var _this1 = this.mouse_bindings;
		(__map_reserved[_name] != null ? _this1.getReserved(_name) : _this1.h[_name]).remove(_button);
	}
	,bind_gamepad: function(_name,_gamepad_button,_gamepad_id) {
		var _this = this.gamepad_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			var value = new haxe_ds_IntMap();
			var _this1 = this.gamepad_bindings;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,value);
			} else {
				_this1.h[_name] = value;
			}
		}
		var _this2 = this.gamepad_bindings;
		(__map_reserved[_name] != null ? _this2.getReserved(_name) : _this2.h[_name]).h[_gamepad_button] = _gamepad_id;
	}
	,unbind_gamepad: function(_name,_button) {
		var _this = this.gamepad_bindings;
		if(!(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name))) {
			return;
		}
		var _this1 = this.gamepad_bindings;
		(__map_reserved[_name] != null ? _this1.getReserved(_name) : _this1.h[_name]).remove(_button);
	}
	,init: function() {
		this.key_bindings = new haxe_ds_StringMap();
		this.mouse_bindings = new haxe_ds_StringMap();
		this.gamepad_bindings = new haxe_ds_StringMap();
		this._named_input_down = new haxe_ds_StringMap();
		this._named_input_pressed = new haxe_ds_StringMap();
		this._named_input_released = new haxe_ds_StringMap();
	}
	,destroy: function() {
	}
	,process: function() {
		var _event = this._named_input_pressed.keys();
		while(_event.hasNext()) {
			var _event1 = _event.next();
			var _this = this._named_input_pressed;
			if(__map_reserved[_event1] != null ? _this.getReserved(_event1) : _this.h[_event1]) {
				this._named_input_pressed.remove(_event1);
			} else {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_event1] != null) {
					_this1.setReserved(_event1,true);
				} else {
					_this1.h[_event1] = true;
				}
			}
		}
		var _event2 = this._named_input_released.keys();
		while(_event2.hasNext()) {
			var _event3 = _event2.next();
			var _this2 = this._named_input_released;
			if(__map_reserved[_event3] != null ? _this2.getReserved(_event3) : _this2.h[_event3]) {
				this._named_input_released.remove(_event3);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_event3] != null) {
					_this3.setReserved(_event3,true);
				} else {
					_this3.h[_event3] = true;
				}
			}
		}
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,true);
		this.core.emitter.emit(17,this.mouse_event);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event);
		this.core.emitter.emit(18,this.mouse_event);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_move(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
		this.core.emitter.emit(19,this.mouse_event);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_wheel(_x,_y,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,false);
		this.core.emitter.emit(20,this.mouse_event);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_keys(this.key_event,true);
		this.core.emitter.emit(12,this.key_event);
		this.core.game.onkeydown(this.key_event);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_keys(this.key_event);
		this.core.emitter.emit(13,this.key_event);
		this.core.game.onkeyup(this.key_event);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_TextEventType.edit;
			break;
		case 2:
			_type = luxe_TextEventType.input;
			break;
		default:
			return;
		}
		this.text_event.set(_text,_start,_length,_type,_timestamp,_window_id);
		this.core.emitter.emit(14,this.text_event);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.down,_timestamp);
		this.core.emitter.emit(21,this.touch_event);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.up,_timestamp);
		this.core.emitter.emit(22,this.touch_event);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.move,_timestamp);
		this.core.emitter.emit(23,this.touch_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_axis(_gamepad,_axis,_value,_timestamp);
		this.core.emitter.emit(24,this.gamepad_event);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.down,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,true);
		this.core.emitter.emit(25,this.gamepad_event);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.up,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,false);
		this.core.emitter.emit(26,this.gamepad_event);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_GamepadEventType.device_added;
			break;
		case 2:
			_type = luxe_GamepadEventType.device_removed;
			break;
		case 3:
			_type = luxe_GamepadEventType.device_remapped;
			break;
		default:
			_type = luxe_GamepadEventType.unknown;
		}
		this.gamepad_event.set_device(_gamepad,_id,_type,_timestamp);
		this.core.emitter.emit(27,this.gamepad_event);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) {
			return;
		}
		if(_key_event != null) {
			this.input_event.set_key(_name,luxe_InteractState.down,_key_event);
		} else if(_mouse_event != null) {
			this.input_event.set_mouse(_name,luxe_InteractState.down,_mouse_event);
		} else if(_touch_event != null) {
			this.input_event.set_touch(_name,luxe_InteractState.down,_touch_event);
		} else if(_gamepad_event != null) {
			this.input_event.set_gamepad(_name,luxe_InteractState.down,_gamepad_event);
		} else {
			this.input_event.set_unknown(_name,luxe_InteractState.down);
		}
		this.core.emitter.emit(15,this.input_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) {
			return;
		}
		if(_key_event != null) {
			this.input_event.set_key(_name,luxe_InteractState.up,_key_event);
		} else if(_mouse_event != null) {
			this.input_event.set_mouse(_name,luxe_InteractState.up,_mouse_event);
		} else if(_touch_event != null) {
			this.input_event.set_touch(_name,luxe_InteractState.up,_touch_event);
		} else if(_gamepad_event != null) {
			this.input_event.set_gamepad(_name,luxe_InteractState.up,_gamepad_event);
		} else {
			this.input_event.set_unknown(_name,luxe_InteractState.up);
		}
		this.core.emitter.emit(16,this.input_event);
	}
	,check_named_keys: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.key_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.key_bindings;
			var _is_down_repeat = _down && e.repeat;
			if((__map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1]).h.hasOwnProperty(e.keycode) && !_is_down_repeat) {
				if(!Lambda.has(_fired,_name1)) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,e);
			}
		}
	}
	,check_named_mouse: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.mouse_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.mouse_bindings;
			if((__map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1]).h.hasOwnProperty(e.button)) {
				if(!Lambda.has(_fired,_name1)) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,null,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,e);
			}
		}
	}
	,check_named_gamepad_buttons: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.gamepad_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.gamepad_bindings;
			var _b = __map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1];
			if(_b.h.hasOwnProperty(e.button)) {
				var _kb = _b.h[e.button];
				var _accepted_gamepad = _kb == null || _kb == e.gamepad;
				if(!Lambda.has(_fired,_name1) && _accepted_gamepad) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,null,null,null,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,null,null,e);
			}
		}
	}
	,__class__: luxe_Input
};
var luxe_InteractState = $hxClasses["luxe.InteractState"] = { __ename__ : ["luxe","InteractState"], __constructs__ : ["unknown","none","down","up","move","wheel","axis"] };
luxe_InteractState.unknown = ["unknown",0];
luxe_InteractState.unknown.toString = $estr;
luxe_InteractState.unknown.__enum__ = luxe_InteractState;
luxe_InteractState.none = ["none",1];
luxe_InteractState.none.toString = $estr;
luxe_InteractState.none.__enum__ = luxe_InteractState;
luxe_InteractState.down = ["down",2];
luxe_InteractState.down.toString = $estr;
luxe_InteractState.down.__enum__ = luxe_InteractState;
luxe_InteractState.up = ["up",3];
luxe_InteractState.up.toString = $estr;
luxe_InteractState.up.__enum__ = luxe_InteractState;
luxe_InteractState.move = ["move",4];
luxe_InteractState.move.toString = $estr;
luxe_InteractState.move.__enum__ = luxe_InteractState;
luxe_InteractState.wheel = ["wheel",5];
luxe_InteractState.wheel.toString = $estr;
luxe_InteractState.wheel.__enum__ = luxe_InteractState;
luxe_InteractState.axis = ["axis",6];
luxe_InteractState.axis.toString = $estr;
luxe_InteractState.axis.__enum__ = luxe_InteractState;
var luxe_TextEventType = $hxClasses["luxe.TextEventType"] = { __ename__ : ["luxe","TextEventType"], __constructs__ : ["unknown","edit","input"] };
luxe_TextEventType.unknown = ["unknown",0];
luxe_TextEventType.unknown.toString = $estr;
luxe_TextEventType.unknown.__enum__ = luxe_TextEventType;
luxe_TextEventType.edit = ["edit",1];
luxe_TextEventType.edit.toString = $estr;
luxe_TextEventType.edit.__enum__ = luxe_TextEventType;
luxe_TextEventType.input = ["input",2];
luxe_TextEventType.input.toString = $estr;
luxe_TextEventType.input.__enum__ = luxe_TextEventType;
var luxe_KeyEvent = function() {
};
$hxClasses["luxe.KeyEvent"] = luxe_KeyEvent;
luxe_KeyEvent.__name__ = ["luxe","KeyEvent"];
luxe_KeyEvent.prototype = {
	set: function(_keycode,_scancode,_repeat,_mod,_state,_timestamp,_window_id) {
		this.mod = _mod;
		this.state = _state;
		this.repeat = _repeat;
		this.keycode = _keycode;
		this.scancode = _scancode;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_KeyEvent
};
var luxe_TouchEvent = function() {
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.TouchEvent"] = luxe_TouchEvent;
luxe_TouchEvent.__name__ = ["luxe","TouchEvent"];
luxe_TouchEvent.prototype = {
	set: function(_x,_y,_dx,_dy,_touch_id,_state,_timestamp) {
		this.x = _x;
		this.y = _y;
		this.dx = _dx;
		this.dy = _dy;
		this.touch_id = _touch_id;
		this.timestamp = _timestamp;
		this.state = _state;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,__class__: luxe_TouchEvent
};
var luxe_TextEvent = function() {
};
$hxClasses["luxe.TextEvent"] = luxe_TextEvent;
luxe_TextEvent.__name__ = ["luxe","TextEvent"];
luxe_TextEvent.prototype = {
	set: function(_text,_start,_length,_type,_timestamp,_window_id) {
		this.text = _text;
		this.start = _start;
		this.length = _length;
		this.type = _type;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_TextEvent
};
var luxe_GamepadEventType = $hxClasses["luxe.GamepadEventType"] = { __ename__ : ["luxe","GamepadEventType"], __constructs__ : ["unknown","axis","button","device_added","device_removed","device_remapped"] };
luxe_GamepadEventType.unknown = ["unknown",0];
luxe_GamepadEventType.unknown.toString = $estr;
luxe_GamepadEventType.unknown.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.axis = ["axis",1];
luxe_GamepadEventType.axis.toString = $estr;
luxe_GamepadEventType.axis.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.button = ["button",2];
luxe_GamepadEventType.button.toString = $estr;
luxe_GamepadEventType.button.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_added = ["device_added",3];
luxe_GamepadEventType.device_added.toString = $estr;
luxe_GamepadEventType.device_added.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_removed = ["device_removed",4];
luxe_GamepadEventType.device_removed.toString = $estr;
luxe_GamepadEventType.device_removed.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_remapped = ["device_remapped",5];
luxe_GamepadEventType.device_remapped.toString = $estr;
luxe_GamepadEventType.device_remapped.__enum__ = luxe_GamepadEventType;
var luxe_GamepadEvent = function() {
};
$hxClasses["luxe.GamepadEvent"] = luxe_GamepadEvent;
luxe_GamepadEvent.__name__ = ["luxe","GamepadEvent"];
luxe_GamepadEvent.prototype = {
	set_axis: function(_gamepad,_axis,_value,_timestamp) {
		this.id = null;
		this.button = -1;
		this.axis = _axis;
		this.value = _value;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.axis;
		this.type = luxe_GamepadEventType.axis;
	}
	,set_button: function(_gamepad,_button,_value,_state,_timestamp) {
		this.id = null;
		this.axis = -1;
		this.state = _state;
		this.value = _value;
		this.button = _button;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.type = luxe_GamepadEventType.button;
	}
	,set_device: function(_gamepad,_id,_type,_timestamp) {
		this.id = _id;
		this.axis = -1;
		this.value = 0;
		this.button = -1;
		this.type = _type;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.none;
	}
	,__class__: luxe_GamepadEvent
};
var luxe_MouseEvent = function() {
	this.y_rel = 0;
	this.x_rel = 0;
	this.y = 0;
	this.x = 0;
	this.window_id = 1;
	this.timestamp = 0.0;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.MouseEvent"] = luxe_MouseEvent;
luxe_MouseEvent.__name__ = ["luxe","MouseEvent"];
luxe_MouseEvent.prototype = {
	set_press: function(_x,_y,_button,_state,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = _state;
		this.button = _button;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,set_move: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = _x_rel;
		this.y_rel = _y_rel;
		this.state = luxe_InteractState.move;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,set_wheel: function(_x,_y,_timestamp,_window_id) {
		this.x = Math.floor(_x);
		this.y = Math.floor(_y);
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = luxe_InteractState.wheel;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
	}
	,__class__: luxe_MouseEvent
};
var luxe_InputEventType = $hxClasses["luxe.InputEventType"] = { __ename__ : ["luxe","InputEventType"], __constructs__ : ["unknown","mouse","touch","key","gamepad"] };
luxe_InputEventType.unknown = ["unknown",0];
luxe_InputEventType.unknown.toString = $estr;
luxe_InputEventType.unknown.__enum__ = luxe_InputEventType;
luxe_InputEventType.mouse = ["mouse",1];
luxe_InputEventType.mouse.toString = $estr;
luxe_InputEventType.mouse.__enum__ = luxe_InputEventType;
luxe_InputEventType.touch = ["touch",2];
luxe_InputEventType.touch.toString = $estr;
luxe_InputEventType.touch.__enum__ = luxe_InputEventType;
luxe_InputEventType.key = ["key",3];
luxe_InputEventType.key.toString = $estr;
luxe_InputEventType.key.__enum__ = luxe_InputEventType;
luxe_InputEventType.gamepad = ["gamepad",4];
luxe_InputEventType.gamepad.toString = $estr;
luxe_InputEventType.gamepad.__enum__ = luxe_InputEventType;
var luxe_InputEvent = function() {
};
$hxClasses["luxe.InputEvent"] = luxe_InputEvent;
luxe_InputEvent.__name__ = ["luxe","InputEvent"];
luxe_InputEvent.prototype = {
	set_key: function(_name,_state,_key_event) {
		this.set_common(_name,luxe_InputEventType.key,_state);
		this.set_events(_key_event,null,null,null);
	}
	,set_mouse: function(_name,_state,_mouse_event) {
		this.set_common(_name,luxe_InputEventType.mouse,_state);
		this.set_events(null,_mouse_event,null,null);
	}
	,set_touch: function(_name,_state,_touch_event) {
		this.set_common(_name,luxe_InputEventType.touch,_state);
		this.set_events(null,null,_touch_event,null);
	}
	,set_gamepad: function(_name,_state,_gamepad_event) {
		this.set_common(_name,luxe_InputEventType.gamepad,_state);
		this.set_events(null,null,null,_gamepad_event);
	}
	,set_unknown: function(_name,_state) {
		this.set_common(_name,luxe_InputEventType.unknown,_state);
		this.set_events(null,null,null,null);
	}
	,set_common: function(_name,_type,_state) {
		this.name = _name;
		this.type = _type;
		this.state = _state;
	}
	,set_events: function(_key_event,_mouse_event,_touch_event,_gamepad_event) {
		this.key_event = _key_event;
		this.mouse_event = _mouse_event;
		this.touch_event = _touch_event;
		this.gamepad_event = _gamepad_event;
	}
	,__class__: luxe_InputEvent
};
var luxe__$Log_LogError = $hxClasses["luxe._Log.LogError"] = { __ename__ : ["luxe","_Log","LogError"], __constructs__ : ["RequireString"] };
luxe__$Log_LogError.RequireString = function(detail) { var $x = ["RequireString",0,detail]; $x.__enum__ = luxe__$Log_LogError; $x.toString = $estr; return $x; };
var luxe_Log = function() { };
$hxClasses["luxe.Log"] = luxe_Log;
luxe_Log.__name__ = ["luxe","Log"];
luxe_Log._get_spacing = function(_file) {
	var _spaces = "";
	var _diff = luxe_Log._log_width - (_file.length + 4);
	if(_diff > 0) {
		var _g1 = 0;
		while(_g1 < _diff) {
			++_g1;
			_spaces += " ";
		}
	}
	return _spaces;
};
var luxe_DebugError = $hxClasses["luxe.DebugError"] = { __ename__ : ["luxe","DebugError"], __constructs__ : ["assertion","null_assertion"] };
luxe_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
luxe_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
var luxe_Visual = function(_options) {
	this.ignore_texture_on_geometry_change = false;
	this._creating_geometry = false;
	this._has_custom_origin = false;
	this.radians = 0.0;
	this.depth = 0.0;
	this.visible = true;
	this.locked = false;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Visual requires non-null options" + " )")));
	}
	this._rotation_euler = new phoenix_Vector();
	this._rotation_quat = new phoenix_Quaternion();
	luxe_Entity.call(this,_options);
	this.set_color(new phoenix_Color());
	this.set_size(new phoenix_Vector());
	if(this.options.texture != null) {
		this.set_texture(this.options.texture);
	}
	if(this.options.shader != null) {
		this.set_shader(this.options.shader);
	}
	if(this.options.color != null) {
		this.set_color(this.options.color);
	}
	if(this.options.depth != null) {
		this.set_depth(this.options.depth);
	}
	if(this.options.visible != null) {
		this.set_visible(this.options.visible);
	}
	if(this.options.size != null) {
		this.set_size(this.options.size);
		this._create_geometry();
	} else if(this.texture != null) {
		this.set_size(new phoenix_Vector(this.texture.width,this.texture.height));
		this._create_geometry();
	} else {
		this.set_size(new phoenix_Vector(64,64));
		this._create_geometry();
	}
};
$hxClasses["luxe.Visual"] = luxe_Visual;
luxe_Visual.__name__ = ["luxe","Visual"];
luxe_Visual.__super__ = luxe_Entity;
luxe_Visual.prototype = $extend(luxe_Entity.prototype,{
	_create_geometry: function() {
		if(this.options.geometry == null) {
			if(this.options.no_geometry == null || this.options.no_geometry == false) {
				this._creating_geometry = true;
				var _batcher = null;
				if(this.options.no_batcher_add == null || this.options.no_batcher_add == false) {
					if(this.options.batcher != null) {
						_batcher = this.options.batcher;
					} else {
						_batcher = Luxe.renderer.batcher;
					}
				}
				var tmp = this.options.depth == null ? 0 : this.options.depth;
				var tmp1 = this.options.visible == null ? this.visible : this.options.visible;
				this.set_geometry(new phoenix_geometry_QuadGeometry({ id : this.get_name() + ".visual", x : 0, y : 0, w : this.size.x, h : this.size.y, scale : new phoenix_Vector(1,1,1), texture : this.texture, color : this.color, shader : this.shader, batcher : _batcher, depth : tmp, visible : tmp1}));
				this._creating_geometry = false;
				this.on_geometry_created();
			}
		} else {
			this.set_geometry(this.options.geometry);
		}
		if(this.geometry != null) {
			this.geometry.id = this.get_name() + ".visual";
			this.geometry.transform.id = this.get_name() + ".visual.transform";
		}
		if(this.options.origin != null) {
			this._has_custom_origin = true;
			this.set_origin(this.options.origin);
		}
		if(this.options.rotation_z != null) {
			this.set_rotation_z(this.options.rotation_z);
		}
	}
	,ondestroy: function() {
		if(this.geometry != null && this.geometry.added) {
			this.geometry.drop(true);
		}
		this.set_transform(null);
		this.options = null;
		this.set_geometry(null);
		this.set_texture(null);
		this.set_shader(null);
		this.set_color(null);
		this.set_size(null);
		this.set_clip_rect(null);
		this._rotation_euler = null;
		this._rotation_quat = null;
	}
	,on_geometry_created: function() {
	}
	,set_visible: function(_v) {
		this.visible = _v;
		if(this.geometry != null) {
			this.geometry.set_visible(this.visible);
		}
		return this.visible;
	}
	,set_depth: function(_v) {
		if(this.geometry != null) {
			this.geometry.set_depth(_v);
		}
		return this.depth = _v;
	}
	,set_color: function(_c) {
		if(this.color != null && this.geometry != null) {
			this.geometry.set_color(_c);
		}
		return this.color = _c;
	}
	,set_texture: function(_t) {
		if(this.geometry != null && this.geometry.state.texture != _t) {
			this.geometry.set_texture(_t);
		}
		return this.texture = _t;
	}
	,set_shader: function(_s) {
		if(this.geometry != null && this.geometry.state.shader != _s) {
			this.geometry.set_shader(_s);
		}
		return this.shader = _s;
	}
	,set_geometry: function(_g) {
		if(this.geometry == _g) {
			return this.geometry;
		}
		if(this.geometry != null) {
			this.geometry.drop();
		}
		this.geometry = _g;
		if(this.geometry != null) {
			var _this = this.geometry.transform;
			var _p = this.get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g1 = 0;
				var _g11 = _this._dirty_handlers;
				while(_g1 < _g11.length) {
					var _handler = _g11[_g1];
					++_g1;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent = _this.parent;
				var _g2 = 0;
				var _g12 = _this._parent_handlers;
				while(_g2 < _g12.length) {
					var _handler1 = _g12[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
			if(this._creating_geometry == false) {
				this.geometry.set_color(this.color);
				this.geometry.set_depth(this.depth);
				this.geometry.set_visible(this.visible);
			}
		}
		return this.geometry;
	}
	,set_parent_from_transform: function(_parent) {
		luxe_Entity.prototype.set_parent_from_transform.call(this,_parent);
		if(this.geometry != null) {
			var _this = this.geometry.transform;
			var _p = this.get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent1 = _this.parent;
				var _g2 = 0;
				var _g11 = _this._parent_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent1);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
		}
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		var _this = this._rotation_euler;
		var sqx = _rotation.x * _rotation.x;
		var sqy = _rotation.y * _rotation.y;
		var sqz = _rotation.z * _rotation.z;
		var sqw = _rotation.w * _rotation.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		_x = Math.atan2(2 * (_rotation.x * _rotation.w - _rotation.y * _rotation.z),sqw - sqx - sqy + sqz);
		var value = 2 * (_rotation.x * _rotation.z + _rotation.y * _rotation.w);
		_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
		_z = Math.atan2(2 * (_rotation.z * _rotation.w - _rotation.x * _rotation.y),sqw + sqx - sqy - sqz);
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		this._rotation_quat.copy(_rotation);
	}
	,set_size: function(_v) {
		this.size = _v;
		if(this.size != null) {
			var _v1 = this.size;
			var listener = $bind(this,this._size_change);
			_v1.listen_x = listener;
			_v1.listen_y = listener;
			_v1.listen_z = listener;
		}
		return this.size;
	}
	,get_blend_src: function() {
		return this.geometry.state.blend_src_alpha;
	}
	,get_blend_dest: function() {
		return this.geometry.state.blend_dest_alpha;
	}
	,get_blend_src_alpha: function() {
		return this.geometry.state.blend_src_alpha;
	}
	,get_blend_src_rgb: function() {
		return this.geometry.state.blend_src_rgb;
	}
	,get_blend_dest_alpha: function() {
		return this.geometry.state.blend_dest_alpha;
	}
	,get_blend_dest_rgb: function() {
		return this.geometry.state.blend_dest_rgb;
	}
	,set_blend_src: function(val) {
		this.geometry.set_blend_src_alpha(val);
		this.geometry.set_blend_src_rgb(val);
		return val;
	}
	,set_blend_dest: function(val) {
		this.geometry.set_blend_dest_alpha(val);
		this.geometry.set_blend_dest_rgb(val);
		return val;
	}
	,set_blend_src_alpha: function(val) {
		this.geometry.set_blend_src_alpha(val);
		return val;
	}
	,set_blend_src_rgb: function(val) {
		this.geometry.set_blend_src_rgb(val);
		return val;
	}
	,set_blend_dest_alpha: function(val) {
		this.geometry.set_blend_dest_alpha(val);
		return val;
	}
	,set_blend_dest_rgb: function(val) {
		this.geometry.set_blend_dest_rgb(val);
		return val;
	}
	,get_rotation_z: function() {
		return this.get_radians() * 57.2957795130823797;
	}
	,set_rotation_z: function(_degrees) {
		this.set_radians(_degrees * 0.0174532925199432781);
		return _degrees;
	}
	,set_radians: function(_r) {
		var _this = this._rotation_euler;
		_this.z = _r;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_r);
			}
		}
		this._rotation_quat.setFromEuler(this._rotation_euler);
		this.set_rotation(this._rotation_quat.clone());
		return this.radians = _r;
	}
	,get_radians: function() {
		return this.radians;
	}
	,set_locked: function(_l) {
		if(this.geometry != null) {
			this.geometry.set_locked(_l);
		}
		return this.locked = _l;
	}
	,set_clip_rect: function(_val) {
		if(this.geometry != null) {
			this.geometry.set_clip_rect(_val);
		}
		return this.clip_rect = _val;
	}
	,_size_change: function(_v) {
		this.set_size(this.size);
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,__class__: luxe_Visual
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_blend_dest_rgb:"set_blend_dest_rgb",get_blend_dest_rgb:"get_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",get_blend_dest_alpha:"get_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",get_blend_src_rgb:"get_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",get_blend_src_alpha:"get_blend_src_alpha",set_blend_dest:"set_blend_dest",get_blend_dest:"get_blend_dest",set_blend_src:"set_blend_src",get_blend_src:"get_blend_src",set_rotation_z:"set_rotation_z",get_rotation_z:"get_rotation_z",set_radians:"set_radians",get_radians:"get_radians",set_clip_rect:"set_clip_rect",set_depth:"set_depth",set_visible:"set_visible",set_color:"set_color",set_shader:"set_shader",set_texture:"set_texture",set_locked:"set_locked",set_geometry:"set_geometry",set_size:"set_size"})
});
var luxe_NineSlice = function(_options) {
	this.added = false;
	this.midheight = 0.0;
	this.midwidth = 0.0;
	this.is_set = false;
	this.source_h = 0.0;
	this.source_w = 0.0;
	this.source_y = 0.0;
	this.source_x = 0.0;
	this.height = 0.0;
	this.bottom = 32;
	this.width = 0.0;
	this.right = 32;
	this.left = 32;
	this.top = 32;
	this.slices = [];
	if(_options == null) {
		_options = { no_geometry : true};
	} else {
		_options.no_geometry = true;
	}
	this.nineslice_options = _options;
	if(_options.batcher != null) {
		this._batcher = _options.batcher;
	} else {
		this._batcher = Luxe.renderer.batcher;
	}
	luxe_Visual.call(this,_options);
	if(_options.top != null) {
		this.top = _options.top;
	}
	if(_options.left != null) {
		this.left = _options.left;
	}
	if(_options.right != null) {
		this.right = _options.right;
	}
	if(_options.bottom != null) {
		this.bottom = _options.bottom;
	}
	if(_options.source_x != null) {
		this.source_x = _options.source_x;
	}
	if(_options.source_y != null) {
		this.source_y = _options.source_y;
	}
	if(_options.source_w != null) {
		this.source_w = _options.source_w;
	} else {
		this.source_w = this.texture.width;
	}
	if(_options.source_h != null) {
		this.source_h = _options.source_h;
	} else {
		this.source_h = this.texture.height;
	}
	this.set_geometry(null);
};
$hxClasses["luxe.NineSlice"] = luxe_NineSlice;
luxe_NineSlice.__name__ = ["luxe","NineSlice"];
luxe_NineSlice.__super__ = luxe_Visual;
luxe_NineSlice.prototype = $extend(luxe_Visual.prototype,{
	lock: function() {
		if(this.is_set && this._geometry != null) {
			this._geometry.set_locked(true);
		}
	}
	,dirty: function() {
		if(this.is_set && this._geometry != null) {
			this._geometry.set_dirty(true);
		}
	}
	,update_size: function(_width,_height) {
		this.width = _width;
		this.height = _height;
		this.midwidth = Math.abs(this.width - this.left - this.right);
		this.midheight = Math.abs(this.height - this.top - this.bottom);
		this.slices[0].source_width = this.left;
		this.slices[0].source_height = this.top;
		this.slices[0].source_x = this.source_x;
		this.slices[0].source_y = this.source_y;
		var _this = this.slices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		this.slices[0].width = this.left;
		this.slices[0].height = this.top;
		this.slices[1].source_width = this.source_w - this.left - this.right;
		this.slices[1].source_height = this.top;
		this.slices[1].source_x = this.source_x + this.left;
		this.slices[1].source_y = this.source_y;
		var _this1 = this.slices[1].pos;
		var _x = this.left;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = 0;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(0);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		this.slices[1].width = this.width - this.left - this.right;
		this.slices[1].height = this.top;
		this.slices[2].source_width = this.right;
		this.slices[2].source_height = this.top;
		this.slices[2].source_x = this.source_x + (this.source_w - this.right);
		this.slices[2].source_y = this.source_y;
		var _this2 = this.slices[2].pos;
		var _x1 = this.left + this.midwidth;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x1;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_x1);
			}
		}
		_this2.y = 0;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(0);
			}
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		this.slices[2].width = this.right;
		this.slices[2].height = this.top;
		this.slices[3].source_width = this.left;
		this.slices[3].source_height = this.source_h - this.top - this.bottom;
		this.slices[3].source_x = this.source_x;
		this.slices[3].source_y = this.source_y + this.top;
		var _this3 = this.slices[3].pos;
		var _y = this.top;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(0);
			}
		}
		_this3.y = _y;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_y);
			}
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		this.slices[3].width = this.left;
		this.slices[3].height = this.height - this.top - this.bottom;
		this.slices[4].source_width = this.source_w - this.left - this.right;
		this.slices[4].source_height = this.source_h - this.top - this.bottom;
		this.slices[4].source_x = this.source_x + this.left;
		this.slices[4].source_y = this.source_y + this.top;
		var _this4 = this.slices[4].pos;
		var _x2 = this.left;
		var _y1 = this.top;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = _x2;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_x2);
			}
		}
		_this4.y = _y1;
		if(!_this4._construct) {
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_y1);
			}
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) {
			_this4.listen_x(_this4.x);
		}
		if(_this4.listen_y != null && !_this4.ignore_listeners) {
			_this4.listen_y(_this4.y);
		}
		this.slices[4].width = this.width - this.left - this.right;
		this.slices[4].height = this.height - this.top - this.bottom;
		this.slices[5].source_width = this.right;
		this.slices[5].source_height = this.source_h - this.top - this.bottom;
		this.slices[5].source_x = this.source_x + (this.source_w - this.right);
		this.slices[5].source_y = this.source_y + this.top;
		var _this5 = this.slices[5].pos;
		var _x3 = this.left + this.midwidth;
		var _y2 = this.top;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _x3;
		if(!_this5._construct) {
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_x3);
			}
		}
		_this5.y = _y2;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_y2);
			}
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) {
			_this5.listen_x(_this5.x);
		}
		if(_this5.listen_y != null && !_this5.ignore_listeners) {
			_this5.listen_y(_this5.y);
		}
		this.slices[5].width = this.right;
		this.slices[5].height = this.height - this.top - this.bottom;
		this.slices[6].source_width = this.left;
		this.slices[6].source_height = this.bottom;
		this.slices[6].source_x = this.source_x;
		this.slices[6].source_y = this.source_y + (this.source_h - this.bottom);
		var _this6 = this.slices[6].pos;
		var _y3 = this.top + this.midheight;
		var prev6 = _this6.ignore_listeners;
		_this6.ignore_listeners = true;
		_this6.x = 0;
		if(!_this6._construct) {
			if(_this6.listen_x != null && !_this6.ignore_listeners) {
				_this6.listen_x(0);
			}
		}
		_this6.y = _y3;
		if(!_this6._construct) {
			if(_this6.listen_y != null && !_this6.ignore_listeners) {
				_this6.listen_y(_y3);
			}
		}
		_this6.ignore_listeners = prev6;
		if(_this6.listen_x != null && !_this6.ignore_listeners) {
			_this6.listen_x(_this6.x);
		}
		if(_this6.listen_y != null && !_this6.ignore_listeners) {
			_this6.listen_y(_this6.y);
		}
		this.slices[6].width = this.left;
		this.slices[6].height = this.bottom;
		this.slices[7].source_width = this.source_w - this.left - this.right;
		this.slices[7].source_height = this.bottom;
		this.slices[7].source_x = this.source_x + this.left;
		this.slices[7].source_y = this.source_y + (this.source_h - this.bottom);
		var _this7 = this.slices[7].pos;
		var _x4 = this.left;
		var _y4 = this.top + this.midheight;
		var prev7 = _this7.ignore_listeners;
		_this7.ignore_listeners = true;
		_this7.x = _x4;
		if(!_this7._construct) {
			if(_this7.listen_x != null && !_this7.ignore_listeners) {
				_this7.listen_x(_x4);
			}
		}
		_this7.y = _y4;
		if(!_this7._construct) {
			if(_this7.listen_y != null && !_this7.ignore_listeners) {
				_this7.listen_y(_y4);
			}
		}
		_this7.ignore_listeners = prev7;
		if(_this7.listen_x != null && !_this7.ignore_listeners) {
			_this7.listen_x(_this7.x);
		}
		if(_this7.listen_y != null && !_this7.ignore_listeners) {
			_this7.listen_y(_this7.y);
		}
		this.slices[7].width = this.width - this.left - this.right;
		this.slices[7].height = this.bottom;
		this.slices[8].source_width = this.right;
		this.slices[8].source_height = this.bottom;
		this.slices[8].source_x = this.source_x + (this.source_w - this.right);
		this.slices[8].source_y = this.source_y + (this.source_h - this.bottom);
		var _this8 = this.slices[8].pos;
		var _x5 = this.left + this.midwidth;
		var _y5 = this.top + this.midheight;
		var prev8 = _this8.ignore_listeners;
		_this8.ignore_listeners = true;
		_this8.x = _x5;
		if(!_this8._construct) {
			if(_this8.listen_x != null && !_this8.ignore_listeners) {
				_this8.listen_x(_x5);
			}
		}
		_this8.y = _y5;
		if(!_this8._construct) {
			if(_this8.listen_y != null && !_this8.ignore_listeners) {
				_this8.listen_y(_y5);
			}
		}
		_this8.ignore_listeners = prev8;
		if(_this8.listen_x != null && !_this8.ignore_listeners) {
			_this8.listen_x(_this8.x);
		}
		if(_this8.listen_y != null && !_this8.ignore_listeners) {
			_this8.listen_y(_this8.y);
		}
		this.slices[8].width = this.right;
		this.slices[8].height = this.bottom;
	}
	,set: function(_width,_height) {
		if(this.added) {
			this._geometry.drop();
			this.added = false;
		}
		this.slices.splice(0,this.slices.length);
		this.width = _width;
		this.height = _height;
		this.midwidth = Math.abs(this.width - this.left - this.right);
		this.midheight = Math.abs(this.height - this.top - this.bottom);
		this.slices.push({ source_width : this.left, source_height : this.top, source_x : this.source_x, source_y : this.source_y, pos : new phoenix_Vector(0,0), width : this.left, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.top, source_x : this.source_x + this.left, source_y : this.source_y, pos : new phoenix_Vector(this.left,0), width : this.width - this.left - this.right, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.top, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y, pos : new phoenix_Vector(this.left + this.midwidth,0), width : this.right, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.left, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x, source_y : this.source_y + this.top, pos : new phoenix_Vector(0,this.top), width : this.left, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x + this.left, source_y : this.source_y + this.top, pos : new phoenix_Vector(this.left,this.top), width : this.width - this.left - this.right, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y + this.top, pos : new phoenix_Vector(this.left + this.midwidth,this.top), width : this.right, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.left, source_height : this.bottom, source_x : this.source_x, source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(0,this.top + this.midheight), width : this.left, height : this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.bottom, source_x : this.source_x + this.left, source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(this.left,this.top + this.midheight), width : this.width - this.left - this.right, height : this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.bottom, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(this.left + this.midwidth,this.top + this.midheight), width : this.right, height : this.bottom, geometry_id : 0});
		this.is_set = true;
	}
	,set_size: function(_v) {
		if(_v == null) {
			return luxe_Visual.prototype.set_size.call(this,_v);
		}
		if(!this.is_set) {
			return luxe_Visual.prototype.set_size.call(this,_v);
		}
		this.update_size(_v.x,_v.y);
		var _g = 0;
		var _g1 = this.slices;
		while(_g < _g1.length) {
			var slice = _g1[_g];
			++_g;
			if(this._geometry != null) {
				this._geometry.quad_resize(slice.geometry_id,new phoenix_Rectangle(slice.pos.x,slice.pos.y,slice.width,slice.height));
			}
		}
		return luxe_Visual.prototype.set_size.call(this,_v);
	}
	,_create: function(_pos,_w,_h,_reset) {
		if(_reset == null) {
			_reset = false;
		}
		if(!this.is_set || _reset) {
			this.set(_w,_h);
		}
		var _color = new phoenix_Color();
		this._geometry = new phoenix_geometry_QuadPackGeometry({ texture : this.texture, color : _color, depth : this.nineslice_options.depth, visible : this.nineslice_options.visible, batcher : this._batcher});
		var _g = 0;
		var _g1 = this.slices;
		while(_g < _g1.length) {
			var slice = _g1[_g];
			++_g;
			slice.geometry_id = this._geometry.quad_add({ x : slice.pos.x, y : slice.pos.y, w : slice.width, h : slice.height, color : this.nineslice_options.color, uv : new phoenix_Rectangle(slice.source_x,slice.source_y,slice.source_width,slice.source_height)});
		}
		this._geometry.id = this.get_name() + ".NineSlice." + this._geometry.id;
		this.set_geometry(this._geometry);
		this.set_pos(_pos);
		this.added = true;
		this.is_set = true;
	}
	,create: function(_pos,_w,_h,_reset) {
		if(_reset == null) {
			_reset = false;
		}
		if(this.texture != null) {
			this._create(_pos,_w,_h,_reset);
		}
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,__class__: luxe_NineSlice
});
var luxe_Parcel = function(_options) {
	this.load_start_delay = 0.2;
	this.load_time_spacing = 0.05;
	this.start_load = 0.0;
	this.time_to_load = 0.0;
	if(_options == null) {
		_options = { };
	}
	if(_options.system == null) {
		_options.system = Luxe.resources;
	}
	if(_options.id == null) {
		_options.id = Luxe.utils.uniqueid();
	}
	if(_options.oncomplete != null) {
		this.oncomplete = _options.oncomplete;
	}
	if(_options.onprogress != null) {
		this.onprogress = _options.onprogress;
	}
	if(_options.onfailed != null) {
		this.onfailed = _options.onfailed;
	}
	if(_options.load_time_spacing != null) {
		this.load_time_spacing = _options.load_time_spacing;
	}
	if(_options.load_start_delay != null) {
		this.load_start_delay = _options.load_start_delay;
	}
	this.state = 0;
	this.loaded = [];
	this.emitter = new luxe_Emitter();
	this.system = _options.system;
	this.id = _options.id;
	this.list = this.empty_list();
	if(_options.bytes != null) {
		this.list.bytes = _options.bytes;
	}
	if(_options.texts != null) {
		this.list.texts = _options.texts;
	}
	if(_options.jsons != null) {
		this.list.jsons = _options.jsons;
	}
	if(_options.textures != null) {
		this.list.textures = _options.textures;
	}
	if(_options.fonts != null) {
		this.list.fonts = _options.fonts;
	}
	if(_options.shaders != null) {
		this.list.shaders = _options.shaders;
	}
	if(_options.sounds != null) {
		this.list.sounds = _options.sounds;
	}
	this.system.track(this);
};
$hxClasses["luxe.Parcel"] = luxe_Parcel;
luxe_Parcel.__name__ = ["luxe","Parcel"];
luxe_Parcel.prototype = {
	on: function(ev,handler) {
		this.emitter.on(ev,handler);
	}
	,off: function(ev,handler) {
		this.emitter.off(ev,handler);
	}
	,emit: function(ev,data) {
		this.emitter.emit(ev,data);
	}
	,is_loaded: function(_id) {
		return this.loaded.indexOf(_id) != -1;
	}
	,load: function(_load_id) {
		var _gthis = this;
		this.emitter.emit(1,this);
		this.state = 1;
		Luxe.timer.schedule(this.load_start_delay,function() {
			var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
			_gthis.start_load = tmp;
			if(_load_id == null) {
				_load_id = _gthis.id;
			}
			if(_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length == 0) {
				_gthis.state = 2;
				var tmp1 = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
				_gthis.time_to_load = tmp1 - _gthis.start_load;
				_gthis.emitter.emit(4,_gthis);
				if(_gthis.oncomplete != null) {
					_gthis.oncomplete(_gthis);
				}
				return;
			}
			var _index = 0;
			var _load_index = 0;
			var _g = 0;
			var _g1 = _gthis.list.bytes;
			while(_g < _g1.length) {
				var _bytes = [_g1[_g]];
				++_g;
				++_load_index;
				if(_gthis.loaded.indexOf(_bytes[0].id) == -1) {
					_gthis.loaded.push(_bytes[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_bytes1) {
						return function() {
							var _item_id = _bytes1[0].id;
							_gthis.system.load_bytes(_bytes1[0].id).then((function() {
								return function(_res) {
									_gthis.one_loaded(_item_id,_load_id,_res,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err) {
									_gthis.one_failed(_item_id,_load_id,_err,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_bytes));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _bytes[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 202, className : "luxe.Parcel", methodName : "load"});
					var _bytes2 = _bytes[0].id;
					var tmp2 = _gthis.system.cache.get(_bytes[0].id);
					_gthis.one_loaded(_bytes2,_load_id,tmp2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g2 = 0;
			var _g11 = _gthis.list.texts;
			while(_g2 < _g11.length) {
				var _text = [_g11[_g2]];
				++_g2;
				++_load_index;
				if(_gthis.loaded.indexOf(_text[0].id) == -1) {
					_gthis.loaded.push(_text[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_text1) {
						return function() {
							var _item_id1 = _text1[0].id;
							_gthis.system.load_text(_text1[0].id).then((function() {
								return function(_res1) {
									_gthis.one_loaded(_item_id1,_load_id,_res1,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err1) {
									_gthis.one_failed(_item_id1,_load_id,_err1,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_text));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _text[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 224, className : "luxe.Parcel", methodName : "load"});
					var _text2 = _text[0].id;
					var tmp3 = _gthis.system.cache.get(_text[0].id);
					_gthis.one_loaded(_text2,_load_id,tmp3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g3 = 0;
			var _g12 = _gthis.list.jsons;
			while(_g3 < _g12.length) {
				var _json = [_g12[_g3]];
				++_g3;
				++_load_index;
				if(_gthis.loaded.indexOf(_json[0].id) == -1) {
					_gthis.loaded.push(_json[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_json1) {
						return function() {
							var _item_id2 = _json1[0].id;
							_gthis.system.load_json(_json1[0].id).then((function() {
								return function(_res2) {
									_gthis.one_loaded(_item_id2,_load_id,_res2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err2) {
									_gthis.one_failed(_item_id2,_load_id,_err2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_json));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _json[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 246, className : "luxe.Parcel", methodName : "load"});
					var _json2 = _json[0].id;
					var tmp4 = _gthis.system.cache.get(_json[0].id);
					_gthis.one_loaded(_json2,_load_id,tmp4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g4 = 0;
			var _g13 = _gthis.list.textures;
			while(_g4 < _g13.length) {
				var _texture = [_g13[_g4]];
				++_g4;
				++_load_index;
				if(_gthis.loaded.indexOf(_texture[0].id) == -1) {
					_gthis.loaded.push(_texture[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_texture1) {
						return function() {
							var _load = _gthis.system.load_texture(_texture1[0].id,{ load_premultiply_alpha : _texture1[0].load_premultiply_alpha, filter_min : _texture1[0].filter_min, filter_mag : _texture1[0].filter_mag, clamp_s : _texture1[0].clamp_s, clamp_t : _texture1[0].clamp_t});
							var _item_id3 = _texture1[0].id;
							_load.then((function() {
								return function(_res3) {
									_gthis.one_loaded(_item_id3,_load_id,_res3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err3) {
									_gthis.one_failed(_item_id3,_load_id,_err3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_texture));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _texture[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 276, className : "luxe.Parcel", methodName : "load"});
					var _texture2 = _texture[0].id;
					var tmp5 = _gthis.system.cache.get(_texture[0].id);
					_gthis.one_loaded(_texture2,_load_id,tmp5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g5 = 0;
			var _g14 = _gthis.list.fonts;
			while(_g5 < _g14.length) {
				var _font = [_g14[_g5]];
				++_g5;
				++_load_index;
				if(_gthis.loaded.indexOf(_font[0].id) == -1) {
					_gthis.loaded.push(_font[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_font1) {
						return function() {
							var _load1 = _gthis.system.load_font(_font1[0].id,{ texture_path : _font1[0].texture_path});
							var _item_id4 = _font1[0].id;
							_load1.then((function() {
								return function(_res4) {
									_gthis.one_loaded(_item_id4,_load_id,_res4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err4) {
									_gthis.one_failed(_item_id4,_load_id,_err4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_font));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _font[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 302, className : "luxe.Parcel", methodName : "load"});
					var _font2 = _font[0].id;
					var tmp6 = _gthis.system.cache.get(_font[0].id);
					_gthis.one_loaded(_font2,_load_id,tmp6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g6 = 0;
			var _g15 = _gthis.list.shaders;
			while(_g6 < _g15.length) {
				var _shader = [_g15[_g6]];
				++_g6;
				++_load_index;
				if(_gthis.loaded.indexOf(_shader[0].id) == -1) {
					_gthis.loaded.push(_shader[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_shader1) {
						return function() {
							var _load2 = _gthis.system.load_shader(_shader1[0].id,{ frag_id : _shader1[0].frag_id, vert_id : _shader1[0].vert_id});
							var _item_id5 = _shader1[0].id;
							_load2.then((function() {
								return function(_res5) {
									_gthis.one_loaded(_item_id5,_load_id,_res5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err5) {
									_gthis.one_failed(_item_id5,_load_id,_err5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_shader));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _shader[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 329, className : "luxe.Parcel", methodName : "load"});
					var _shader2 = _shader[0].id;
					var tmp7 = _gthis.system.cache.get(_shader[0].id);
					_gthis.one_loaded(_shader2,_load_id,tmp7,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g7 = 0;
			var _g16 = _gthis.list.sounds;
			while(_g7 < _g16.length) {
				var _sound = [_g16[_g7]];
				++_g7;
				++_load_index;
				if(_gthis.loaded.indexOf(_sound[0].id) == -1) {
					_gthis.loaded.push(_sound[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_sound1) {
						return function() {
							var _load3 = _gthis.system.load_audio(_sound1[0].id,{ is_stream : _sound1[0].is_stream});
							var _item_id6 = _sound1[0].id;
							_load3.then((function() {
								return function(_res6) {
									_gthis.one_loaded(_item_id6,_load_id,_res6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err6) {
									_gthis.one_failed(_item_id6,_load_id,_err6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_sound));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _sound[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 355, className : "luxe.Parcel", methodName : "load"});
					var _sound2 = _sound[0].id;
					var tmp8 = _gthis.system.cache.get(_sound[0].id);
					_gthis.one_loaded(_sound2,_load_id,tmp8,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
		});
	}
	,unload: function(_empty_list) {
		if(_empty_list == null) {
			_empty_list = false;
		}
		var _gthis = this;
		this.emitter.emit(2,this);
		var _g = 0;
		var _g1 = this.list.bytes;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			var _id = item.id;
			_gthis.system.destroy(_id);
			HxOverrides.remove(_gthis.loaded,_id);
		}
		var _g2 = 0;
		var _g11 = this.list.texts;
		while(_g2 < _g11.length) {
			var item1 = _g11[_g2];
			++_g2;
			var _id1 = item1.id;
			_gthis.system.destroy(_id1);
			HxOverrides.remove(_gthis.loaded,_id1);
		}
		var _g3 = 0;
		var _g12 = this.list.jsons;
		while(_g3 < _g12.length) {
			var item2 = _g12[_g3];
			++_g3;
			var _id2 = item2.id;
			_gthis.system.destroy(_id2);
			HxOverrides.remove(_gthis.loaded,_id2);
		}
		var _g4 = 0;
		var _g13 = this.list.textures;
		while(_g4 < _g13.length) {
			var item3 = _g13[_g4];
			++_g4;
			var _id3 = item3.id;
			_gthis.system.destroy(_id3);
			HxOverrides.remove(_gthis.loaded,_id3);
		}
		var _g5 = 0;
		var _g14 = this.list.fonts;
		while(_g5 < _g14.length) {
			var item4 = _g14[_g5];
			++_g5;
			var _id4 = item4.id;
			_gthis.system.destroy(_id4);
			HxOverrides.remove(_gthis.loaded,_id4);
		}
		var _g6 = 0;
		var _g15 = this.list.shaders;
		while(_g6 < _g15.length) {
			var item5 = _g15[_g6];
			++_g6;
			var _id5 = item5.id;
			_gthis.system.destroy(_id5);
			HxOverrides.remove(_gthis.loaded,_id5);
		}
		var _g7 = 0;
		var _g16 = this.list.sounds;
		while(_g7 < _g16.length) {
			var item6 = _g16[_g7];
			++_g7;
			var _id6 = item6.id;
			_gthis.system.destroy(_id6);
			HxOverrides.remove(_gthis.loaded,_id6);
		}
		if(_empty_list) {
			this.list = null;
			this.list = this.empty_list();
		}
		this.state = 0;
	}
	,from_json: function(_json_object) {
		if(_json_object == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_json_object was null"));
		}
		if(_json_object.bytes != null) {
			var _bytes = _json_object.bytes;
			var _g = 0;
			while(_g < _bytes.length) {
				var item = _bytes[_g];
				++_g;
				if(item != null) {
					if(item == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					this.list.bytes.push(item);
				}
			}
		}
		if(_json_object.text != null) {
			var _texts = _json_object.text;
			var _g1 = 0;
			while(_g1 < _texts.length) {
				var item1 = _texts[_g1];
				++_g1;
				if(item1 != null) {
					if(item1 == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item1.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					this.list.texts.push(item1);
				}
			}
		}
		if(_json_object.json != null) {
			var _jsons = _json_object.json;
			var _g2 = 0;
			while(_g2 < _jsons.length) {
				var item2 = _jsons[_g2];
				++_g2;
				if(item2 != null) {
					if(item2 == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item2.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					this.list.jsons.push(item2);
				}
			}
		}
		if(_json_object.textures != null) {
			var _textures = _json_object.textures;
			var _g3 = 0;
			while(_g3 < _textures.length) {
				var item3 = _textures[_g3];
				++_g3;
				if(item3 == null) {
					throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
				}
				if(item3.id == null) {
					throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
				}
				var tmp = this.list.textures;
				var item4 = item3.id;
				var _filter_type = item3.filter_min;
				var tmp1;
				if(_filter_type == null) {
					tmp1 = null;
				} else {
					if(!(_filter_type == "nearest" || _filter_type == "linear")) {
						throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_filter_type == 'nearest' || _filter_type == 'linear'"));
					}
					switch(_filter_type) {
					case "linear":
						tmp1 = 9729;
						break;
					case "nearest":
						tmp1 = 9728;
						break;
					default:
						tmp1 = null;
					}
				}
				var _filter_type1 = item3.filter_mag;
				var tmp2;
				if(_filter_type1 == null) {
					tmp2 = null;
				} else {
					if(!(_filter_type1 == "nearest" || _filter_type1 == "linear")) {
						throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_filter_type == 'nearest' || _filter_type == 'linear'"));
					}
					switch(_filter_type1) {
					case "linear":
						tmp2 = 9729;
						break;
					case "nearest":
						tmp2 = 9728;
						break;
					default:
						tmp2 = null;
					}
				}
				var _clamp_type = item3.clamp_s;
				var tmp3;
				if(_clamp_type == null) {
					tmp3 = null;
				} else {
					if(!(_clamp_type == "edge" || _clamp_type == "repeat" || _clamp_type == "mirror")) {
						throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_clamp_type == 'edge' || _clamp_type == 'repeat' || _clamp_type == 'mirror'"));
					}
					switch(_clamp_type) {
					case "edge":
						tmp3 = 33071;
						break;
					case "mirror":
						tmp3 = 33648;
						break;
					case "repeat":
						tmp3 = 10497;
						break;
					default:
						tmp3 = null;
					}
				}
				var _clamp_type1 = item3.clamp_t;
				var tmp4;
				if(_clamp_type1 == null) {
					tmp4 = null;
				} else {
					if(!(_clamp_type1 == "edge" || _clamp_type1 == "repeat" || _clamp_type1 == "mirror")) {
						throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_clamp_type == 'edge' || _clamp_type == 'repeat' || _clamp_type == 'mirror'"));
					}
					switch(_clamp_type1) {
					case "edge":
						tmp4 = 33071;
						break;
					case "mirror":
						tmp4 = 33648;
						break;
					case "repeat":
						tmp4 = 10497;
						break;
					default:
						tmp4 = null;
					}
				}
				tmp.push({ id : item4, filter_min : tmp1, filter_mag : tmp2, clamp_s : tmp3, clamp_t : tmp4, load_premultiply_alpha : item3.load_premultiply_alpha});
			}
		}
		if(_json_object.fonts != null) {
			var _fonts = _json_object.fonts;
			var _g4 = 0;
			while(_g4 < _fonts.length) {
				var item5 = _fonts[_g4];
				++_g4;
				if(item5 != null) {
					if(item5 == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item5.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					this.list.fonts.push(item5);
				}
			}
		}
		if(_json_object.shaders != null) {
			var _shaders = _json_object.shaders;
			var _g5 = 0;
			while(_g5 < _shaders.length) {
				var item6 = _shaders[_g5];
				++_g5;
				if(item6 != null) {
					if(item6 == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item6.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					if(item6.frag_id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.frag_id was null"));
					}
					if(item6.vert_id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.vert_id was null"));
					}
					this.list.shaders.push(item6);
				}
			}
		}
		if(_json_object.sounds != null) {
			var _sounds = _json_object.sounds;
			var _g6 = 0;
			while(_g6 < _sounds.length) {
				var item7 = _sounds[_g6];
				++_g6;
				if(item7 != null) {
					if(item7 == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null"));
					}
					if(item7.id == null) {
						throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null"));
					}
					this.list.sounds.push(item7);
				}
			}
		}
	}
	,one_loaded: function(_item_id,_load_id,_resource,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, resource : _resource, index : _index, total : _total};
		this.emitter.emit(3,_state);
		if(this.onprogress != null) {
			this.onprogress(_state);
		}
		if(_index == _total) {
			this.state = 2;
			this.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start_load;
			this.emitter.emit(4,this);
			if(this.oncomplete != null) {
				this.oncomplete(this);
			}
		}
	}
	,one_failed: function(_item_id,_load_id,_error,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, error : _error, index : _index, total : _total};
		this.emitter.emit(5,_state);
		if(this.onfailed != null) {
			this.onfailed(_state);
		}
	}
	,get_listed: function() {
		var _result = [];
		var _g = 0;
		var _g1 = this.list.bytes;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			_result.push(item.id);
		}
		var _g2 = 0;
		var _g11 = this.list.texts;
		while(_g2 < _g11.length) {
			var item1 = _g11[_g2];
			++_g2;
			_result.push(item1.id);
		}
		var _g3 = 0;
		var _g12 = this.list.jsons;
		while(_g3 < _g12.length) {
			var item2 = _g12[_g3];
			++_g3;
			_result.push(item2.id);
		}
		var _g4 = 0;
		var _g13 = this.list.textures;
		while(_g4 < _g13.length) {
			var item3 = _g13[_g4];
			++_g4;
			_result.push(item3.id);
		}
		var _g5 = 0;
		var _g14 = this.list.fonts;
		while(_g5 < _g14.length) {
			var item4 = _g14[_g5];
			++_g5;
			_result.push(item4.id);
		}
		var _g6 = 0;
		var _g15 = this.list.shaders;
		while(_g6 < _g15.length) {
			var item5 = _g15[_g6];
			++_g6;
			_result.push(item5.id);
		}
		var _g7 = 0;
		var _g16 = this.list.sounds;
		while(_g7 < _g16.length) {
			var item6 = _g16[_g7];
			++_g7;
			_result.push(item6.id);
		}
		return _result;
	}
	,get_length: function() {
		return this.list.bytes.length + this.list.texts.length + this.list.jsons.length + this.list.textures.length + this.list.shaders.length + this.list.fonts.length + this.list.sounds.length;
	}
	,do_complete: function(_load_id) {
		this.state = 2;
		this.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start_load;
		this.emitter.emit(4,this);
		if(this.oncomplete != null) {
			this.oncomplete(this);
		}
	}
	,empty_list: function() {
		return { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
	}
	,__class__: luxe_Parcel
	,__properties__: {get_length:"get_length",get_listed:"get_listed"}
};
var luxe_Physics = function(_core) {
	this.step_delta = 0.0166666666666666664;
	this.step_rate = 0.0166666666666666664;
	this.core = _core;
	this.emitter = new luxe_Emitter();
};
$hxClasses["luxe.Physics"] = luxe_Physics;
luxe_Physics.__name__ = ["luxe","Physics"];
luxe_Physics.prototype = {
	init: function() {
		this.engines = [];
	}
	,reset: function() {
		if(this.timer != null) {
			this.timer.stop();
			this.timer = null;
		}
		if(this.step_rate != 0) {
			this.timer = Luxe.timer.schedule(this.step_rate,$bind(this,this.fixed_update),true);
		}
	}
	,fixed_update: function() {
		Luxe.debug.start(luxe_Physics.tag_physics);
		this.emitter.emit(1,this.step_delta * Luxe.core.timescale);
		this.update();
		this.emitter.emit(2,this.step_delta * Luxe.core.timescale);
		Luxe.debug.end(luxe_Physics.tag_physics);
	}
	,add_engine: function(type,_data) {
		var _engine_instance = Type.createInstance(type,[_data]);
		this.engines.push(_engine_instance);
		return _engine_instance;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,process: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,destroy: function() {
		if(this.timer != null) {
			this.timer.stop();
		}
		this.timer = null;
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,on: function(_event,_handler) {
		this.emitter.on(_event,_handler);
	}
	,off: function(_event,_handler) {
		return this.emitter.off(_event,_handler);
	}
	,emit: function(_event,_float) {
		this.emitter.emit(_event,_float);
	}
	,set_step_rate: function(_rate) {
		this.step_rate = _rate;
		this.step_delta = this.step_rate;
		this.reset();
		return this.step_rate;
	}
	,__class__: luxe_Physics
	,__properties__: {set_step_rate:"set_step_rate"}
};
var luxe_PhysicsEngine = function() {
	this.draw = true;
	this.paused = false;
	this.name = "engine";
	this.set_gravity(new phoenix_Vector(0,-9.8,0));
	Luxe.on(10,$bind(this,this._render));
};
$hxClasses["luxe.PhysicsEngine"] = luxe_PhysicsEngine;
luxe_PhysicsEngine.__name__ = ["luxe","PhysicsEngine"];
luxe_PhysicsEngine.prototype = {
	init: function() {
	}
	,_render: function(_) {
	}
	,process: function() {
	}
	,update: function() {
	}
	,render: function() {
	}
	,destroy: function() {
	}
	,get_paused: function() {
		return this.paused;
	}
	,set_paused: function(_pause) {
		return this.paused = _pause;
	}
	,get_draw: function() {
		return this.draw;
	}
	,set_draw: function(_draw) {
		return this.draw = _draw;
	}
	,get_gravity: function() {
		return this.gravity;
	}
	,set_gravity: function(_gravity) {
		return this.gravity = _gravity;
	}
	,__class__: luxe_PhysicsEngine
	,__properties__: {set_draw:"set_draw",get_draw:"get_draw",set_gravity:"set_gravity",get_gravity:"get_gravity",set_paused:"set_paused",get_paused:"get_paused"}
};
var luxe_Resources = function() {
	this.parcels = [];
	this.emitter = new luxe_Emitter();
	this.cache = new haxe_ds_StringMap();
	this.stats = new luxe_ResourceStats();
};
$hxClasses["luxe.Resources"] = luxe_Resources;
luxe_Resources.__name__ = ["luxe","Resources"];
luxe_Resources.prototype = {
	track: function(_cache) {
		if(_cache == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_cache was null"));
		}
		if(this.parcels.indexOf(_cache) != -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("parcels.indexOf(_cache) == -1"));
		}
		this.parcels.push(_cache);
		this.emit(11,_cache);
	}
	,untrack: function(_cache) {
		if(_cache == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_cache was null"));
		}
		if(HxOverrides.remove(this.parcels,_cache)) {
			this.emit(12,_cache);
		}
	}
	,add: function(resource) {
		var key = resource.id;
		var _this = this.cache;
		if(!(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)))) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("!cache.exists(resource.id)"));
		}
		var key1 = resource.id;
		var _this1 = this.cache;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,resource);
		} else {
			_this1.h[key1] = resource;
		}
		this.emit(2,resource);
		switch(resource.resource_type) {
		case 0:
			this.stats.unknown += 1;
			break;
		case 1:
			this.stats.texts += 1;
			break;
		case 2:
			this.stats.jsons += 1;
			break;
		case 3:
			this.stats.bytes += 1;
			break;
		case 4:
			this.stats.textures += 1;
			break;
		case 5:
			this.stats.rtt += 1;
			break;
		case 6:
			this.stats.fonts += 1;
			break;
		case 7:
			this.stats.shaders += 1;
			break;
		case 8:
			this.stats.audios += 1;
			break;
		}
		this.stats.total += 1;
	}
	,remove: function(resource) {
		var key = resource.id;
		var _this = this.cache;
		if(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key))) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("cache.exists(resource.id)"));
		}
		this.emit(7,resource);
		switch(resource.resource_type) {
		case 0:
			this.stats.unknown += -1;
			break;
		case 1:
			this.stats.texts += -1;
			break;
		case 2:
			this.stats.jsons += -1;
			break;
		case 3:
			this.stats.bytes += -1;
			break;
		case 4:
			this.stats.textures += -1;
			break;
		case 5:
			this.stats.rtt += -1;
			break;
		case 6:
			this.stats.fonts += -1;
			break;
		case 7:
			this.stats.shaders += -1;
			break;
		case 8:
			this.stats.audios += -1;
			break;
		}
		this.stats.total += -1;
		return this.cache.remove(resource.id);
	}
	,destroy: function(_id,_force) {
		if(_force == null) {
			_force = false;
		}
		var _resource = this.cache.get(_id);
		if(_resource == null) {
			return false;
		}
		_resource.destroy(_force);
		return true;
	}
	,invalidate: function(_id) {
		var _resource = this.cache.get(_id);
		if(_resource == null) {
			return false;
		}
		_resource.invalidate();
		return true;
	}
	,on: function(ev,handler) {
		this.emitter.on(ev,handler);
	}
	,off: function(ev,handler) {
		this.emitter.off(ev,handler);
	}
	,emit: function(ev,data) {
		this.emitter.emit(1,data);
		this.emitter.emit(ev,data);
	}
	,load_bytes: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_BytesResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_text: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_TextResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_json: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_JSONResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_texture: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _filter_min = null;
		var _filter_mag = null;
		var _clamp_s = null;
		var _clamp_t = null;
		var _premultiply = null;
		if(_options != null) {
			_filter_min = _options.filter_min;
			_filter_mag = _options.filter_mag;
			_clamp_s = _options.clamp_s;
			_clamp_t = _options.clamp_t;
			_premultiply = _options.load_premultiply_alpha;
		}
		_resource = new phoenix_Texture({ id : _id, system : this, filter_min : _filter_min, filter_mag : _filter_mag, clamp_s : _clamp_s, clamp_t : _clamp_t, load_premultiply_alpha : _premultiply});
		this.add(_resource);
		return _resource.reload();
	}
	,load_font: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _texture_path = null;
		if(_options != null) {
			_texture_path = _options.texture_path;
		}
		_resource = new phoenix_BitmapFont({ id : _id, system : this, texture_path : _texture_path});
		this.add(_resource);
		return _resource.reload();
	}
	,load_shader: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new phoenix_Shader({ id : _id, system : this, frag_id : _options.frag_id, vert_id : _options.vert_id});
		this.add(_resource);
		return _resource.reload();
	}
	,load_audio: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _is_stream = false;
		if(_options != null) {
			_is_stream = _options.is_stream;
		}
		_resource = new luxe_resource_AudioResource({ id : _id, system : this, asset : null, is_stream : _is_stream});
		this.add(_resource);
		return _resource.reload();
	}
	,has: function(_id) {
		var _this = this.cache;
		if(__map_reserved[_id] != null) {
			return _this.existsReserved(_id);
		} else {
			return _this.h.hasOwnProperty(_id);
		}
	}
	,get: function(_id) {
		return this.cache.get(_id);
	}
	,bytes: function(_id) {
		return this.cache.get(_id);
	}
	,text: function(_id) {
		return this.cache.get(_id);
	}
	,json: function(_id) {
		return this.cache.get(_id);
	}
	,texture: function(_id) {
		return this.cache.get(_id);
	}
	,font: function(_id) {
		return this.cache.get(_id);
	}
	,shader: function(_id) {
		return this.cache.get(_id);
	}
	,audio: function(_id) {
		return this.cache.get(_id);
	}
	,fetch: function(_id) {
		var _this = this.cache;
		return __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	}
	,update_stats: function(_res,_offset) {
		switch(_res.resource_type) {
		case 0:
			this.stats.unknown += _offset;
			break;
		case 1:
			this.stats.texts += _offset;
			break;
		case 2:
			this.stats.jsons += _offset;
			break;
		case 3:
			this.stats.bytes += _offset;
			break;
		case 4:
			this.stats.textures += _offset;
			break;
		case 5:
			this.stats.rtt += _offset;
			break;
		case 6:
			this.stats.fonts += _offset;
			break;
		case 7:
			this.stats.shaders += _offset;
			break;
		case 8:
			this.stats.audios += _offset;
			break;
		}
		this.stats.total += _offset;
	}
	,__class__: luxe_Resources
};
var luxe_ResourceStats = function() {
	this.unknown = 0;
	this.audios = 0;
	this.bytes = 0;
	this.jsons = 0;
	this.texts = 0;
	this.shaders = 0;
	this.rtt = 0;
	this.textures = 0;
	this.fonts = 0;
	this.total = 0;
};
$hxClasses["luxe.ResourceStats"] = luxe_ResourceStats;
luxe_ResourceStats.__name__ = ["luxe","ResourceStats"];
luxe_ResourceStats.prototype = {
	toString: function() {
		return "Resource Statistics\n" + "\ttotal : " + this.total + "\n" + "\ttexture : " + this.textures + " \n" + "" + "\trender texture : " + this.rtt + " \n" + "\tfont : " + this.fonts + "\n" + "\tshader : " + this.shaders + "\n" + "\ttext : " + this.texts + "\n" + "\tjson : " + this.jsons + "\n" + "\tbytes : " + this.bytes + "\n" + "\taudios : " + this.audios + "\n" + "\tunknown : " + this.unknown;
	}
	,reset: function() {
		this.total = 0;
		this.fonts = 0;
		this.textures = 0;
		this.rtt = 0;
		this.shaders = 0;
		this.texts = 0;
		this.jsons = 0;
		this.bytes = 0;
		this.audios = 0;
		this.unknown = 0;
	}
	,__class__: luxe_ResourceStats
};
var luxe_Scene = function(_name) {
	if(_name == null) {
		_name = "untitled scene";
	}
	this.entity_count = 0;
	this._has_changed = false;
	this.destroyed = false;
	this.length = 0;
	this.started = false;
	this.inited = false;
	luxe_Objects.call(this,_name);
	this.entities = new haxe_ds_StringMap();
	this._delayed_init_entities = [];
	this._delayed_reset_entities = [];
	Luxe.core.emitter.on(2,$bind(this,this.init));
	Luxe.core.emitter.on(8,$bind(this,this._destroy));
	Luxe.core.emitter.on(6,$bind(this,this.update));
	Luxe.core.emitter.on(9,$bind(this,this.prerender));
	Luxe.core.emitter.on(11,$bind(this,this.postrender));
	Luxe.core.emitter.on(10,$bind(this,this.render));
	Luxe.core.emitter.on(12,$bind(this,this.keydown));
	Luxe.core.emitter.on(13,$bind(this,this.keyup));
	Luxe.core.emitter.on(14,$bind(this,this.textinput));
	Luxe.core.emitter.on(16,$bind(this,this.inputup));
	Luxe.core.emitter.on(15,$bind(this,this.inputdown));
	Luxe.core.emitter.on(18,$bind(this,this.mouseup));
	Luxe.core.emitter.on(17,$bind(this,this.mousedown));
	Luxe.core.emitter.on(19,$bind(this,this.mousemove));
	Luxe.core.emitter.on(20,$bind(this,this.mousewheel));
	Luxe.core.emitter.on(22,$bind(this,this.touchup));
	Luxe.core.emitter.on(21,$bind(this,this.touchdown));
	Luxe.core.emitter.on(23,$bind(this,this.touchmove));
	Luxe.core.emitter.on(26,$bind(this,this.gamepadup));
	Luxe.core.emitter.on(25,$bind(this,this.gamepaddown));
	Luxe.core.emitter.on(24,$bind(this,this.gamepadaxis));
	Luxe.core.emitter.on(27,$bind(this,this.gamepaddevice));
	Luxe.core.emitter.on(29,$bind(this,this.windowmoved));
	Luxe.core.emitter.on(30,$bind(this,this.windowresized));
	Luxe.core.emitter.on(31,$bind(this,this.windowsized));
	Luxe.core.emitter.on(32,$bind(this,this.windowminimized));
	Luxe.core.emitter.on(33,$bind(this,this.windowrestored));
	if(Luxe.core.inited) {
		this.init(null);
	}
	var _view = Luxe.core.debug.get_view("Scenes");
	if(_view != null) {
		_view.add_scene(this);
	}
};
$hxClasses["luxe.Scene"] = luxe_Scene;
luxe_Scene.__name__ = ["luxe","Scene"];
luxe_Scene.__super__ = luxe_Objects;
luxe_Scene.prototype = $extend(luxe_Objects.prototype,{
	handle_duplicate_warning: function(_name) {
		var _this = this.entities;
		if(__map_reserved[_name] != null ? _this.existsReserved(_name) : _this.h.hasOwnProperty(_name)) {
			haxe_Log.trace("    i / scene / " + ("" + this.get_name() + " / adding a second entity named " + _name + "!\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
		}
	}
	,add: function(entity) {
		if(entity == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't put entity in a scene if the entity is null." + " )")));
		}
		var _name = entity.get_name();
		if(this.entities.exists(_name)) {
			haxe_Log.trace("    i / scene / " + ("" + this.get_name() + " / adding a second entity named " + _name + "!\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
		}
		entity.set_scene(this);
		entity.set_scene_root(this);
		var key = entity.get_name();
		var _this = this.entities;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,entity);
		} else {
			_this.h[key] = entity;
		}
		this.entity_count++;
		if(this.inited) {
			this._delayed_init_entities.push(entity);
		}
		if(this.started) {
			this._delayed_reset_entities.push(entity);
		}
		this._has_changed = true;
	}
	,remove: function(entity) {
		if(entity == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't remove entity from a scene if the entity is null." + " )")));
		}
		this._has_changed = true;
		if(entity.get_scene() == this) {
			entity.set_scene(null);
			this.entity_count--;
			return this.entities.remove(entity.get_name());
		} else {
			haxe_Log.trace("    i / scene / " + ("can't remove the entity(`" + entity.get_name() + "`) from this scene(`" + this.get_name() + "`), it is not mine (entity.scene != this)"),{ fileName : "Scene.hx", lineNumber : 147, className : "luxe.Scene", methodName : "remove"});
			return false;
		}
	}
	,get: function(_name) {
		var _this = this.entities;
		return __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
	}
	,empty: function() {
		if(this.entity_count > 0) {
			var _this = this.entities;
			var entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(entity.hasNext()) {
				var entity1 = entity.next();
				if(entity1 != null && entity1 != Luxe.camera) {
					entity1.destroy();
					entity1 = null;
				}
			}
		}
	}
	,get_named_like: function(_name,into) {
		if(this.entity_count > 0) {
			var _filter = new EReg("^((?:" + _name + ")[.]{1})","g");
			var _this = this.entities;
			var _entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				if(_filter.match(_entity1.get_name())) {
					into.push(_entity1);
				}
			}
		}
		return into;
	}
	,render: function(_) {
		this.emit(10);
	}
	,prerender: function(_) {
		this.emit(9);
	}
	,postrender: function(_) {
		this.emit(11);
	}
	,keydown: function(e) {
		this.emit(12,e);
	}
	,keyup: function(e) {
		this.emit(13,e);
	}
	,textinput: function(e) {
		this.emit(14,e);
	}
	,mousedown: function(e) {
		this.emit(17,e);
	}
	,mousewheel: function(e) {
		this.emit(20,e);
	}
	,mouseup: function(e) {
		this.emit(18,e);
	}
	,mousemove: function(e) {
		this.emit(19,e);
	}
	,touchdown: function(event) {
		this.emit(21,event);
	}
	,touchup: function(event) {
		this.emit(22,event);
	}
	,touchmove: function(event) {
		this.emit(23,event);
	}
	,gamepadaxis: function(event) {
		this.emit(24,event);
	}
	,gamepadup: function(event) {
		this.emit(26,event);
	}
	,gamepaddown: function(event) {
		this.emit(25,event);
	}
	,gamepaddevice: function(event) {
		this.emit(27,event);
	}
	,windowmoved: function(event) {
		this.emit(29,event);
	}
	,windowresized: function(event) {
		this.emit(30,event);
	}
	,windowsized: function(event) {
		this.emit(31,event);
	}
	,windowminimized: function(event) {
		this.emit(32,event);
	}
	,windowrestored: function(event) {
		this.emit(33,event);
	}
	,inputdown: function(_event) {
		this.emit(15,_event);
	}
	,inputup: function(_event) {
		this.emit(16,_event);
	}
	,_destroy: function(_) {
		this.destroy();
	}
	,destroy: function() {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("scene / destroying repeatedly `" + this.get_name() + "`") + " )")));
		}
		this.destroyed = true;
		Luxe.core.emitter.off(2,$bind(this,this.init));
		Luxe.core.emitter.off(8,$bind(this,this._destroy));
		Luxe.core.emitter.off(6,$bind(this,this.update));
		Luxe.core.emitter.off(9,$bind(this,this.prerender));
		Luxe.core.emitter.off(11,$bind(this,this.postrender));
		Luxe.core.emitter.off(10,$bind(this,this.render));
		Luxe.core.emitter.off(12,$bind(this,this.keydown));
		Luxe.core.emitter.off(13,$bind(this,this.keyup));
		Luxe.core.emitter.off(14,$bind(this,this.textinput));
		Luxe.core.emitter.off(16,$bind(this,this.inputup));
		Luxe.core.emitter.off(15,$bind(this,this.inputdown));
		Luxe.core.emitter.off(18,$bind(this,this.mouseup));
		Luxe.core.emitter.off(17,$bind(this,this.mousedown));
		Luxe.core.emitter.off(19,$bind(this,this.mousemove));
		Luxe.core.emitter.off(20,$bind(this,this.mousewheel));
		Luxe.core.emitter.off(22,$bind(this,this.touchup));
		Luxe.core.emitter.off(21,$bind(this,this.touchdown));
		Luxe.core.emitter.off(23,$bind(this,this.touchmove));
		Luxe.core.emitter.off(26,$bind(this,this.gamepadup));
		Luxe.core.emitter.off(25,$bind(this,this.gamepaddown));
		Luxe.core.emitter.off(24,$bind(this,this.gamepadaxis));
		Luxe.core.emitter.off(27,$bind(this,this.gamepaddevice));
		Luxe.core.emitter.off(29,$bind(this,this.windowmoved));
		Luxe.core.emitter.off(30,$bind(this,this.windowresized));
		Luxe.core.emitter.off(31,$bind(this,this.windowsized));
		Luxe.core.emitter.off(32,$bind(this,this.windowminimized));
		Luxe.core.emitter.off(33,$bind(this,this.windowrestored));
		this.emit(8);
		var _view = Luxe.core.debug.get_view("Scenes");
		if(_view != null) {
			_view.remove_scene(this);
		}
	}
	,_do_init: function() {
		var _g_index;
		var _before_count = this.get_length();
		if(this.entity_count > 0) {
			var _this = this.entities;
			var entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(entity.hasNext()) {
				var entity1 = entity.next();
				if(entity1 != null) {
					if(!entity1.inited) {
						entity1.init();
						entity1.emit(2);
						if(entity1.component_count > 0) {
							var _this1 = entity1._components.components;
							_g_index = 0;
							while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
						}
						if(entity1.children.length > 0) {
							var _g = 0;
							var _g1 = entity1.children;
							while(_g < _g1.length) {
								var _child = _g1[_g];
								++_g;
								_child._init();
							}
						}
						entity1.inited = true;
					}
				}
			}
		}
		return _before_count != this.get_length();
	}
	,init: function(_) {
		var _keep_going = true;
		while(_keep_going) _keep_going = this._do_init();
		this.inited = true;
		this.emit(2);
		this.reset();
	}
	,reset: function() {
		this.started = false;
		this.emit(3);
		this.started = true;
	}
	,update: function(dt) {
		var _g_index;
		Luxe.core.debug.start("scene." + this.get_name());
		this.handle_delayed_additions();
		this.emit(6,dt);
		if(this.entity_count > 0) {
			var _this = this.entities;
			var entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(entity.hasNext()) {
				var entity1 = entity.next();
				if(entity1 != null) {
					if(!entity1.destroyed) {
						if(!(!entity1.get_active() || !entity1.inited || !entity1.started)) {
							var _this1 = entity1.get_transform();
							if(_this1.parent != null && _this1.parent.dirty) {
								_this1.parent.clean_check();
							}
							if(_this1.dirty && !_this1._cleaning && !_this1.manual_update) {
								_this1.clean();
							}
							entity1.update(dt);
							if(entity1.events != null) {
								entity1.events.process();
							}
							if(entity1.component_count > 0) {
								var _this2 = entity1._components.components;
								_g_index = 0;
								while(_g_index < _this2._keys.length) _this2.map.get(_this2._keys[_g_index++]);
							}
							if(entity1.children != null && entity1.children.length > 0) {
								var _g = 0;
								var _g1 = entity1.children;
								while(_g < _g1.length) {
									var _child = _g1[_g];
									++_g;
									_child._update(dt);
								}
							}
						}
					}
				}
			}
		}
		Luxe.core.debug.end("scene." + this.get_name());
	}
	,handle_delayed_additions: function() {
		var _g_index;
		var _g_index1;
		this._delayed_init_entities.length != 0 || this._delayed_reset_entities.length != 0;
		if(this._delayed_init_entities.length > 0) {
			var _g = 0;
			var _g1 = this._delayed_init_entities;
			while(_g < _g1.length) {
				var entity = _g1[_g];
				++_g;
				if(entity.destroyed) {
					continue;
				}
				if(!entity.inited) {
					entity.init();
					entity.emit(2);
					if(entity.component_count > 0) {
						var _this = entity._components.components;
						_g_index1 = 0;
						while(_g_index1 < _this._keys.length) _this.map.get(_this._keys[_g_index1++]);
					}
					if(entity.children.length > 0) {
						var _g2 = 0;
						var _g11 = entity.children;
						while(_g2 < _g11.length) {
							var _child = _g11[_g2];
							++_g2;
							_child._init();
						}
					}
					entity.inited = true;
				}
			}
			this._delayed_init_entities = null;
			this._delayed_init_entities = [];
		}
		if(this._delayed_reset_entities.length > 0) {
			var _g3 = 0;
			var _g12 = this._delayed_reset_entities;
			while(_g3 < _g12.length) {
				var entity1 = _g12[_g3];
				++_g3;
				if(entity1.destroyed) {
					continue;
				}
				entity1.emit(3);
				if(entity1.component_count > 0) {
					var _this1 = entity1._components.components;
					_g_index = 0;
					while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
				}
				if(entity1.children.length > 0) {
					var _g4 = 0;
					var _g13 = entity1.children;
					while(_g4 < _g13.length) {
						var _child1 = _g13[_g4];
						++_g4;
						_child1._reset(null);
					}
				}
				var _rate = entity1.fixed_rate;
				if(entity1.fixed_rate_timer != null) {
					entity1.fixed_rate_timer.stop();
					entity1.fixed_rate_timer = null;
				}
				if(_rate != 0 && entity1.get_parent() == null && !entity1.destroyed) {
					entity1.fixed_rate_timer = new snow_api_Timer(_rate);
					entity1.fixed_rate_timer.run = $bind(entity1,entity1._fixed_update);
				}
				entity1.started = true;
			}
			this._delayed_reset_entities = null;
			this._delayed_reset_entities = [];
		}
	}
	,get_length: function() {
		return Lambda.count(this.entities);
	}
	,toString: function() {
		return "luxe Scene: " + this.get_name() + " / " + this.get_length() + " entities / id: " + this.get_id();
	}
	,__class__: luxe_Scene
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{get_length:"get_length"})
});
var luxe_Screen = function(_core,_w,_h) {
	this.core = _core;
	this.cursor = new luxe_Cursor(this);
	this.width = _w;
	this.height = _h;
};
$hxClasses["luxe.Screen"] = luxe_Screen;
luxe_Screen.__name__ = ["luxe","Screen"];
luxe_Screen.prototype = {
	toString: function() {
		return "luxe.Screen({ w:" + this.get_w() + ", h:" + this.get_h() + " })";
	}
	,point_inside: function(_p) {
		if(_p.x < 0) {
			return false;
		}
		if(_p.y < 0) {
			return false;
		}
		if(_p.x > this.width) {
			return false;
		}
		if(_p.y > this.height) {
			return false;
		}
		return true;
	}
	,point_inside_xy: function(_x,_y) {
		if(_x < 0) {
			return false;
		}
		if(_y < 0) {
			return false;
		}
		if(_x > this.width) {
			return false;
		}
		if(_y > this.height) {
			return false;
		}
		return true;
	}
	,internal_resized: function(_w,_h) {
		this.width = _w;
		this.height = _h;
	}
	,get_mid: function() {
		return new phoenix_Vector(Math.round(this.get_w() / 2),Math.round(this.get_h() / 2));
	}
	,get_size: function() {
		return new phoenix_Vector(this.get_w(),this.get_h());
	}
	,get_bounds: function() {
		return new phoenix_Rectangle(0,0,this.get_w(),this.get_h());
	}
	,get_w: function() {
		return this.width | 0;
	}
	,get_h: function() {
		return this.height | 0;
	}
	,get_device_pixel_ratio: function() {
		if(window.devicePixelRatio == null) {
			return 1.0;
		} else {
			return window.devicePixelRatio;
		}
	}
	,__class__: luxe_Screen
	,__properties__: {get_device_pixel_ratio:"get_device_pixel_ratio",get_h:"get_h",get_w:"get_w",get_bounds:"get_bounds",get_size:"get_size",get_mid:"get_mid"}
};
var luxe_Cursor = function(_screen) {
	this.ignore = false;
	this.grab = false;
	this.screen = _screen;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.Cursor"] = luxe_Cursor;
luxe_Cursor.__name__ = ["luxe","Cursor"];
luxe_Cursor.prototype = {
	set_internal: function(_x,_y) {
		this.ignore = true;
		this.pos = new phoenix_Vector(_x,_y);
		this.ignore = false;
	}
	,get_grab: function() {
		return this.grab;
	}
	,set_grab: function(_grab) {
		this.screen.core.app.runtime.window_grab(_grab);
		return this.grab = _grab;
	}
	,get_pos: function() {
		return this.pos;
	}
	,__class__: luxe_Cursor
	,__properties__: {get_pos:"get_pos",set_grab:"set_grab",get_grab:"get_grab"}
};
var luxe_Sprite = function(options) {
	this.flipy = false;
	this.flipx = false;
	this.centered = true;
	this.set_uv(new phoenix_Rectangle());
	if(options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "Sprite requires non-null options" + " )")));
	}
	if(options.centered != null) {
		this.set_centered(options.centered);
	}
	if(options.flipx != null) {
		this.set_flipx(options.flipx);
	}
	if(options.flipy != null) {
		this.set_flipy(options.flipy);
	}
	luxe_Visual.call(this,options);
};
$hxClasses["luxe.Sprite"] = luxe_Sprite;
luxe_Sprite.__name__ = ["luxe","Sprite"];
luxe_Sprite.__super__ = luxe_Visual;
luxe_Sprite.prototype = $extend(luxe_Visual.prototype,{
	on_geometry_created: function() {
		luxe_Visual.prototype.on_geometry_created.call(this);
		if(this.texture != null) {
			if(this.options.uv == null) {
				this.options.uv = new phoenix_Rectangle(0,0,this.texture.width,this.texture.height);
			}
			this.set_uv(this.options.uv);
			if(this.texture.resource_type == 5) {
				this.set_flipy(true);
			}
		}
		this.set_centered(!(!this.centered));
		this.set_flipx(!(!this.flipx));
		this.set_flipy(!(!this.flipy));
	}
	,set_geometry: function(_g) {
		this.geometry_quad = _g;
		return luxe_Visual.prototype.set_geometry.call(this,_g);
	}
	,ondestroy: function() {
		this.set_uv(null);
		this.geometry_quad = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,point_inside: function(_p) {
		if(this.geometry == null) {
			return false;
		}
		return Luxe.utils.geometry.point_in_geometry(_p,this.geometry);
	}
	,point_inside_AABB: function(_p) {
		if(this.get_pos() == null) {
			return false;
		}
		if(this.size == null) {
			return false;
		}
		var _s_x = this.size.x * this.get_scale().x;
		var _s_y = this.size.y * this.get_scale().y;
		if(this.centered) {
			var _hx = _s_x / 2;
			var _hy = _s_y / 2;
			if(_p.x < this.get_pos().x - _hx) {
				return false;
			}
			if(_p.y < this.get_pos().y - _hy) {
				return false;
			}
			if(_p.x > this.get_pos().x + _s_x - _hx) {
				return false;
			}
			if(_p.y > this.get_pos().y + _s_y - _hy) {
				return false;
			}
		} else {
			if(_p.x < this.get_pos().x) {
				return false;
			}
			if(_p.y < this.get_pos().y) {
				return false;
			}
			if(_p.x > this.get_pos().x + _s_x) {
				return false;
			}
			if(_p.y > this.get_pos().y + _s_y) {
				return false;
			}
		}
		return true;
	}
	,set_uv: function(_uv) {
		if(_uv == null) {
			return this.uv = _uv;
		}
		if(this.geometry_quad != null) {
			var _this = this.geometry_quad;
			if(_this.state.texture == null) {
				throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
			}
			var tlx = _uv.x / _this.state.texture.width_actual;
			var tly = _uv.y / _this.state.texture.height_actual;
			var szx = _uv.w / _this.state.texture.width_actual;
			var szy = _uv.h / _this.state.texture.height_actual;
			if(_this.vertices.length != 0) {
				var tl_x = tlx;
				var tl_y = tly;
				_this._uv_x = tlx;
				_this._uv_y = tly;
				_this._uv_w = szx;
				_this._uv_h = szy;
				var tr_x = tlx + szx;
				var tr_y = tly;
				var br_x = tlx + szx;
				var br_y = tly + szy;
				var bl_x = tlx;
				var bl_y = tly + szy;
				var tmp_x = 0.0;
				var tmp_y = 0.0;
				var rotations = _this.uv_angle / 90 | 0;
				rotations -= 4 * Math.floor(rotations / 4);
				var _g1 = 0;
				var _g = rotations;
				while(_g1 < _g) {
					++_g1;
					tmp_x = tl_x;
					tl_x = bl_x;
					bl_x = br_x;
					br_x = tr_x;
					tr_x = tmp_x;
					tmp_y = tl_y;
					tl_y = bl_y;
					bl_y = br_y;
					br_y = tr_y;
					tr_y = tmp_y;
				}
				if(_this.flipy) {
					tmp_y = bl_y;
					bl_y = tl_y;
					tl_y = tmp_y;
					tmp_x = bl_x;
					bl_x = tl_x;
					tl_x = tmp_x;
					tmp_y = br_y;
					br_y = tr_y;
					tr_y = tmp_y;
					tmp_x = br_x;
					br_x = tr_x;
					tr_x = tmp_x;
				}
				if(_this.flipx) {
					tmp_x = tr_x;
					tr_x = tl_x;
					tl_x = tmp_x;
					tmp_y = tr_y;
					tr_y = tl_y;
					tl_y = tmp_y;
					tmp_x = br_x;
					br_x = bl_x;
					bl_x = tmp_x;
					tmp_y = br_y;
					br_y = bl_y;
					bl_y = tmp_y;
				}
				var _this1 = _this.vertices[0].uv.uv0;
				_this1.u = tl_x;
				_this1.v = tl_y;
				var _this2 = _this.vertices[1].uv.uv0;
				_this2.u = tr_x;
				_this2.v = tr_y;
				var _this3 = _this.vertices[2].uv.uv0;
				_this3.u = br_x;
				_this3.v = br_y;
				var _this4 = _this.vertices[3].uv.uv0;
				_this4.u = bl_x;
				_this4.v = bl_y;
				var _this5 = _this.vertices[4].uv.uv0;
				_this5.u = tl_x;
				_this5.v = tl_y;
				var _this6 = _this.vertices[5].uv.uv0;
				_this6.u = br_x;
				_this6.v = br_y;
				_this.set_dirty(true);
			}
		}
		this.uv = _uv;
		phoenix_Rectangle.listen(this.uv,$bind(this,this._uv_change));
		return this.uv;
	}
	,set_flipy: function(_v) {
		if(_v == this.flipy) {
			return this.flipy;
		}
		if(this.geometry_quad != null) {
			this.geometry_quad.set_flipy(_v);
		}
		return this.flipy = _v;
	}
	,set_flipx: function(_v) {
		if(_v == this.flipx) {
			return this.flipx;
		}
		if(this.geometry_quad != null) {
			this.geometry_quad.set_flipx(_v);
		}
		return this.flipx = _v;
	}
	,set_size: function(_v) {
		if(this.geometry_quad != null) {
			this.geometry_quad.resize_xy(_v.x,_v.y);
			if(!this._has_custom_origin) {
				if(this.centered) {
					var _this = new phoenix_Vector(_v.x,_v.y,_v.z,_v.w);
					var _x = _this.x / 2;
					var _y = _this.y / 2;
					var _z = _this.z / 2;
					var prev = _this.ignore_listeners;
					_this.ignore_listeners = true;
					_this.x = _x;
					if(!_this._construct) {
						if(_this.listen_x != null && !_this.ignore_listeners) {
							_this.listen_x(_x);
						}
					}
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
					_this.z = _z;
					if(!_this._construct) {
						if(_this.listen_z != null && !_this.ignore_listeners) {
							_this.listen_z(_z);
						}
					}
					_this.ignore_listeners = prev;
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_this.x);
					}
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_this.y);
					}
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_this.z);
					}
					this.set_origin(_this);
				}
			}
		}
		return luxe_Visual.prototype.set_size.call(this,_v);
	}
	,set_centered: function(_c) {
		if(this.size != null) {
			if(_c) {
				this.set_origin(new phoenix_Vector(this.size.x / 2,this.size.y / 2));
			} else {
				this.set_origin(new phoenix_Vector());
			}
		}
		return this.centered = _c;
	}
	,_uv_change: function(_v) {
		this.set_uv(this.uv);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Sprite
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{set_uv:"set_uv",set_flipy:"set_flipy",set_flipx:"set_flipx",set_centered:"set_centered"})
});
var luxe_Text = function(_options) {
	this.text_options = _options;
	this.text_bounds = new phoenix_Rectangle();
	var _batcher = null;
	if(_options.no_batcher_add == null || _options.no_batcher_add == false) {
		if(_options.batcher != null) {
			_batcher = _options.batcher;
		} else {
			_batcher = Luxe.renderer.batcher;
		}
	}
	this.geom = new phoenix_geometry_TextGeometry({ batcher : _batcher, depth : _options.depth, visible : _options.visible, immediate : _options.immediate, color : _options.color, shader : _options.shader, texture : _options.texture, text : _options.text, font : _options.font, point_size : _options.point_size, line_spacing : _options.line_spacing, letter_spacing : _options.letter_spacing, bounds : _options.bounds, bounds_wrap : _options.bounds_wrap, align : _options.align, align_vertical : _options.align_vertical, sdf : _options.sdf, smoothness : _options.smoothness, thickness : _options.thickness, outline : _options.outline, outline_color : _options.outline_color, glow_threshold : _options.glow_threshold, glow_amount : _options.glow_amount, glow_color : _options.glow_color});
	this.geom.emitter.on(1,$bind(this,this.on_geom_text_update));
	_options.geometry = this.geom;
	_options.shader = this.geom.state.shader;
	luxe_Visual.call(this,_options);
	var _x = this.get_pos().x;
	var _y = this.get_pos().y;
	var _tw = this.geom.text_width;
	var _th = this.geom.text_height;
	var _bh = this.geom.text_height;
	if(this.get_bounds() != null) {
		_bh = this.get_bounds().h;
		_x = this.get_bounds().x;
		_y = this.get_bounds().y;
		var _x1;
		switch(this.get_align()) {
		case 1:
			_x1 = _tw;
			break;
		case 2:
			_x1 = _tw / 2;
			break;
		default:
			_x1 = 0.0;
		}
		_x += _x1;
		var _y1;
		switch(this.get_align_vertical()) {
		case 2:
			_y1 = _bh / 2 - _th / 2;
			break;
		case 4:
			_y1 = _bh - _th;
			break;
		default:
			_y1 = 0.0;
		}
		_y += _y1;
	} else {
		var _x2;
		switch(this.get_align()) {
		case 1:
			_x2 = _tw;
			break;
		case 2:
			_x2 = _tw / 2;
			break;
		default:
			_x2 = 0.0;
		}
		_x -= _x2;
		var _y2;
		switch(this.get_align_vertical()) {
		case 2:
			_y2 = _th / 2;
			break;
		case 4:
			_y2 = _th;
			break;
		default:
			_y2 = 0.0;
		}
		_y -= _y2;
	}
	this.text_bounds.set(_x,_y,_tw,_th);
};
$hxClasses["luxe.Text"] = luxe_Text;
luxe_Text.__name__ = ["luxe","Text"];
luxe_Text.__super__ = luxe_Visual;
luxe_Text.prototype = $extend(luxe_Visual.prototype,{
	get_text: function() {
		return this.geom.text;
	}
	,set_text: function(_s) {
		return this.geom.set_text(_s);
	}
	,get_font: function() {
		return this.geom.font;
	}
	,set_font: function(_f) {
		return this.geom.set_font(_f);
	}
	,get_point_size: function() {
		return this.geom.point_size;
	}
	,set_point_size: function(_s) {
		return this.geom.set_point_size(_s);
	}
	,get_letter_spacing: function() {
		return this.geom.letter_spacing;
	}
	,set_letter_spacing: function(_s) {
		return this.geom.set_letter_spacing(_s);
	}
	,get_line_spacing: function() {
		return this.geom.line_spacing;
	}
	,set_line_spacing: function(_s) {
		return this.geom.set_line_spacing(_s);
	}
	,get_bounds: function() {
		return this.geom.bounds;
	}
	,set_bounds: function(_b) {
		return this.geom.set_bounds(_b);
	}
	,get_bounds_wrap: function() {
		return this.geom.bounds_wrap;
	}
	,set_bounds_wrap: function(_b) {
		return this.geom.set_bounds_wrap(_b);
	}
	,get_align: function() {
		return this.geom.align;
	}
	,set_align: function(_a) {
		return this.geom.set_align(_a);
	}
	,get_align_vertical: function() {
		return this.geom.align_vertical;
	}
	,set_align_vertical: function(_a) {
		return this.geom.set_align_vertical(_a);
	}
	,get_sdf: function() {
		return this.geom.sdf;
	}
	,set_sdf: function(_s) {
		return this.geom.sdf = _s;
	}
	,get_smoothness: function() {
		return this.geom.smoothness;
	}
	,set_smoothness: function(_s) {
		return this.geom.set_smoothness(_s);
	}
	,get_thickness: function() {
		return this.geom.thickness;
	}
	,set_thickness: function(_t) {
		return this.geom.set_thickness(_t);
	}
	,get_outline: function() {
		return this.geom.outline;
	}
	,set_outline: function(_o) {
		return this.geom.set_outline(_o);
	}
	,get_outline_color: function() {
		return this.geom.outline_color;
	}
	,set_outline_color: function(_c) {
		return this.geom.set_outline_color(_c);
	}
	,get_glow_threshold: function() {
		return this.geom.glow_threshold;
	}
	,set_glow_threshold: function(_s) {
		return this.geom.set_glow_threshold(_s);
	}
	,get_glow_amount: function() {
		return this.geom.glow_amount;
	}
	,set_glow_amount: function(_e) {
		return this.geom.set_glow_amount(_e);
	}
	,get_glow_color: function() {
		return this.geom.glow_color;
	}
	,set_glow_color: function(_c) {
		return this.geom.set_glow_color(_c);
	}
	,point_inside: function(p) {
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
		return this.text_bounds.point_inside(p);
	}
	,set_pos_from_transform: function(_p) {
		luxe_Visual.prototype.set_pos_from_transform.call(this,_p);
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
		this.text_options.pos = this.get_pos();
	}
	,on_geom_text_update: function(_) {
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
	}
	,_update_bounds: function() {
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
	}
	,ondestroy: function() {
		this.geom = null;
		this.text_options = null;
		this.text_bounds = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Text
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{set_glow_color:"set_glow_color",get_glow_color:"get_glow_color",set_glow_amount:"set_glow_amount",get_glow_amount:"get_glow_amount",set_glow_threshold:"set_glow_threshold",get_glow_threshold:"get_glow_threshold",set_outline_color:"set_outline_color",get_outline_color:"get_outline_color",set_outline:"set_outline",get_outline:"get_outline",set_thickness:"set_thickness",get_thickness:"get_thickness",set_smoothness:"set_smoothness",get_smoothness:"get_smoothness",set_sdf:"set_sdf",get_sdf:"get_sdf",set_align_vertical:"set_align_vertical",get_align_vertical:"get_align_vertical",set_align:"set_align",get_align:"get_align",set_bounds_wrap:"set_bounds_wrap",get_bounds_wrap:"get_bounds_wrap",set_bounds:"set_bounds",get_bounds:"get_bounds",set_line_spacing:"set_line_spacing",get_line_spacing:"get_line_spacing",set_letter_spacing:"set_letter_spacing",get_letter_spacing:"get_letter_spacing",set_point_size:"set_point_size",get_point_size:"get_point_size",set_font:"set_font",get_font:"get_font",set_text:"set_text",get_text:"get_text"})
});
var luxe_Timer = function(_core) {
	this.core = _core;
	this.timers = [];
};
$hxClasses["luxe.Timer"] = luxe_Timer;
luxe_Timer.__name__ = ["luxe","Timer"];
luxe_Timer.prototype = {
	init: function() {
	}
	,destroy: function() {
		this.reset();
	}
	,process: function() {
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.timers;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.stop();
			t = null;
		}
		this.timers = null;
		this.timers = [];
	}
	,schedule: function(_time_in_seconds,_on_time,repeat) {
		if(repeat == null) {
			repeat = false;
		}
		var _gthis = this;
		var t = new snow_api_Timer(_time_in_seconds);
		t.run = function() {
			if(!repeat) {
				t.stop();
				HxOverrides.remove(_gthis.timers,t);
			}
			_on_time();
		};
		this.timers.push(t);
		return t;
	}
	,__class__: luxe_Timer
};
var luxe_components_Components = function(_entity) {
	this.components = new luxe_structural_OrderedMap_$String_$luxe_$Component(new haxe_ds_StringMap());
	this.entity = _entity;
};
$hxClasses["luxe.components.Components"] = luxe_components_Components;
luxe_components_Components.__name__ = ["luxe","components","Components"];
luxe_components_Components.prototype = {
	destroy: function() {
		this.components.map = null;
		this.components = null;
		this.entity = null;
	}
	,add: function(_component) {
		if(_component == null) {
			haxe_Log.trace("attempt to add null component to " + this.entity.get_name(),{ fileName : "Components.hx", lineNumber : 36, className : "luxe.components.Components", methodName : "add"});
			return _component;
		}
		_component.set_entity(this.entity);
		var _this = this.components;
		var key = _component.name;
		if(!_this.map.exists(key)) {
			_this._keys.push(key);
		}
		_this.map.set(key,_component);
		return _component;
	}
	,remove: function(_name) {
		if(!this.components.map.exists(_name)) {
			haxe_Log.trace("attempt to remove " + _name + " from " + this.entity.get_name() + " failed because that component was not attached to this entity",{ fileName : "Components.hx", lineNumber : 69, className : "luxe.components.Components", methodName : "remove"});
			return false;
		}
		this.components.map.get(_name).set_entity(null);
		var _this = this.components;
		if(_this.map.remove(_name)) {
			return HxOverrides.remove(_this._keys,_name);
		} else {
			return false;
		}
	}
	,get: function(_name,in_children) {
		if(in_children == null) {
			in_children = false;
		}
		if(!in_children) {
			return this.components.map.get(_name);
		} else {
			var in_this_entity = this.components.map.get(_name);
			if(in_this_entity != null) {
				return in_this_entity;
			}
			var _g = 0;
			var _g1 = this.entity.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				var found = _child._components.get(_name,true);
				if(found != null) {
					return found;
				}
			}
			return null;
		}
	}
	,get_any: function(_name,in_children,first_only) {
		if(first_only == null) {
			first_only = true;
		}
		if(in_children == null) {
			in_children = false;
		}
		var results = [];
		if(!in_children) {
			return [this.components.map.get(_name)];
		} else {
			var in_this_entity = this.components.map.get(_name);
			if(in_this_entity != null) {
				if(first_only) {
					return [in_this_entity];
				} else {
					results.push(in_this_entity);
				}
			}
			var _g = 0;
			var _g1 = this.entity.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				var found = _child._components.get_any(_name,true,first_only);
				if(found != null) {
					if(first_only && found.length > 0) {
						return [found[0]];
					} else {
						results.concat(found);
					}
				}
			}
		}
		return results;
	}
	,has: function(_name) {
		return this.components.map.exists(_name);
	}
	,__class__: luxe_components_Components
};
var luxe_debug_DebugView = function(_debug) {
	this.visible = false;
	luxe_Objects.call(this);
	this.debug = _debug;
};
$hxClasses["luxe.debug.DebugView"] = luxe_debug_DebugView;
luxe_debug_DebugView.__name__ = ["luxe","debug","DebugView"];
luxe_debug_DebugView.__super__ = luxe_Objects;
luxe_debug_DebugView.prototype = $extend(luxe_Objects.prototype,{
	refresh: function() {
	}
	,process: function() {
	}
	,ontouchdown: function(e) {
	}
	,ontouchup: function(e) {
	}
	,ontouchmove: function(e) {
	}
	,onmousedown: function(e) {
	}
	,onmouseup: function(e) {
	}
	,onmousemove: function(e) {
	}
	,onmousewheel: function(e) {
	}
	,onkeydown: function(e) {
	}
	,onkeyup: function(e) {
	}
	,onwindowsized: function(e) {
	}
	,create: function() {
	}
	,show: function() {
		this.visible = true;
	}
	,hide: function() {
		this.visible = false;
	}
	,__class__: luxe_debug_DebugView
});
var luxe_debug_Inspector = function(_options) {
	this.set_size(new phoenix_Vector(Luxe.core.screen.get_w() * 0.2 | 0,Luxe.core.screen.get_h() * 0.6 | 0));
	this.set_pos(new phoenix_Vector(Luxe.core.screen.get_w() / 2 - this.size.x / 2,Luxe.core.screen.get_h() / 2 - this.size.y / 2));
	this.batcher = Luxe.renderer.batcher;
	if(_options != null) {
		if(_options.batcher != null) {
			this.batcher = _options.batcher;
		}
		if(_options.size != null) {
			this.set_size(_options.size);
		}
		if(_options.pos != null) {
			this.set_pos(_options.pos);
		}
	}
};
$hxClasses["luxe.debug.Inspector"] = luxe_debug_Inspector;
luxe_debug_Inspector.__name__ = ["luxe","debug","Inspector"];
luxe_debug_Inspector.prototype = {
	refresh: function() {
		if(this.window == null) {
			this.create_window();
		}
		if(this.onrefresh != null) {
			this.onrefresh();
		}
	}
	,show: function() {
		this.refresh();
		this.window.set_visible(true);
		this.title.set_visible(true);
		this.version.set_visible(true);
	}
	,hide: function() {
		this.window.set_visible(false);
		this.title.set_visible(false);
		this.version.set_visible(false);
	}
	,set_size: function(_size) {
		if(_size != null && this.window != null) {
			this.window.set_size(_size);
			this.window.geometry.set_dirty(true);
		}
		if(this.version != null) {
			this.version.set_pos(new phoenix_Vector(this.pos.x + (_size.x - 14),this.pos.y + 6));
		}
		return this.size = _size;
	}
	,set_pos: function(_pos) {
		if(_pos != null && this.window != null) {
			this.window.set_pos(_pos);
			this.window.geometry.set_dirty(true);
		}
		if(this.title != null) {
			this.title.set_pos(new phoenix_Vector(_pos.x + 14,_pos.y + 6));
		}
		if(this.version != null) {
			this.version.set_pos(new phoenix_Vector(_pos.x + (this.size.x - 14),_pos.y + 6));
		}
		return this.pos = _pos;
	}
	,create_window: function() {
		this.window = new luxe_Sprite({ name : "debug.window", batcher : this.batcher, no_scene : true, depth : 999.1, visible : false, color : new phoenix_Color().rgb(1447449), centered : false, size : this.size, pos : this.pos});
		this.title = new luxe_Text({ name : "debug.title", batcher : this.batcher, no_scene : true, depth : 999.2, visible : false, color : new phoenix_Color().rgb(16121979), pos : new phoenix_Vector(this.pos.x + 14,this.pos.y + 6), text : "Inspector", point_size : 15, align : 0});
		var tmp = this.batcher;
		var tmp1 = new phoenix_Color().rgb(5526617);
		var tmp2 = new phoenix_Vector(this.pos.x + (this.size.x - 14),this.pos.y + 6);
		var _this = Luxe.core;
		this.version = new luxe_Text({ name : "debug.version", batcher : tmp, no_scene : true, depth : 999.2, visible : false, color : tmp1, pos : tmp2, text : "" + ("" + _this.build + " / debug:" + Std.string(_this.app.debug) + " / os:" + _this.app.os + " / platform:" + _this.app.platform), point_size : 13, align : 1});
		this.window.set_locked(true);
		this.window.geometry.id = "debug.Inspector";
		this.title.geometry.id = "debug.title.text";
		this.version.geometry.id = "debug.version.text";
	}
	,__class__: luxe_debug_Inspector
	,__properties__: {set_size:"set_size",set_pos:"set_pos"}
};
var phoenix_Color = function(_r,_g,_b,_a) {
	if(_a == null) {
		_a = 1.0;
	}
	if(_b == null) {
		_b = 1.0;
	}
	if(_g == null) {
		_g = 1.0;
	}
	if(_r == null) {
		_r = 1.0;
	}
	this.refreshing = false;
	this.is_hsv = false;
	this.is_hsl = false;
	this.a = 1.0;
	this.b = 1.0;
	this.g = 1.0;
	this.r = 1.0;
	this.set_r(_r);
	this.set_g(_g);
	this.set_b(_b);
	this.a = _a;
};
$hxClasses["phoenix.Color"] = phoenix_Color;
phoenix_Color.__name__ = ["phoenix","Color"];
phoenix_Color.random = function(_include_alpha) {
	if(_include_alpha == null) {
		_include_alpha = false;
	}
	return new phoenix_Color(Math.random(),Math.random(),Math.random(),_include_alpha ? Math.random() : 1.0);
};
phoenix_Color.prototype = {
	set_r: function(_r) {
		this.r = _r;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.r;
	}
	,set_g: function(_g) {
		this.g = _g;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.g;
	}
	,set_b: function(_b) {
		this.b = _b;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.b;
	}
	,set: function(_r,_g,_b,_a) {
		var _setr = this.r;
		var _setg = this.g;
		var _setb = this.b;
		var _seta = this.a;
		if(_r != null) {
			_setr = _r;
		}
		if(_g != null) {
			_setg = _g;
		}
		if(_b != null) {
			_setb = _b;
		}
		if(_a != null) {
			_seta = _a;
		}
		this.set_r(_setr);
		this.set_g(_setg);
		this.set_b(_setb);
		this.a = _seta;
		return this;
	}
	,maxRGB: function() {
		return Math.max(this.r,Math.max(this.g,this.b));
	}
	,minRGB: function() {
		return Math.min(this.r,Math.min(this.g,this.b));
	}
	,tween: function(_time_in_seconds,_properties_to_tween,_override) {
		if(_override == null) {
			_override = true;
		}
		if(_time_in_seconds == null) {
			_time_in_seconds = 0.5;
		}
		if(_properties_to_tween != null) {
			var _dest_r = this.r;
			var _dest_g = this.g;
			var _dest_b = this.b;
			var _dest_a = this.a;
			var _change_r = false;
			var _change_g = false;
			var _change_b = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_properties_to_tween,phoenix_Color)) {
				_dest_r = _properties_to_tween.r;
				_dest_g = _properties_to_tween.g;
				_dest_b = _properties_to_tween.b;
				_dest_a = _properties_to_tween.a;
				_change_r = true;
				_change_g = true;
				_change_b = true;
				_change_a = true;
			} else {
				if(_properties_to_tween.r != null) {
					_dest_r = _properties_to_tween.r;
					_change_r = true;
				}
				if(_properties_to_tween.g != null) {
					_dest_g = _properties_to_tween.g;
					_change_g = true;
				}
				if(_properties_to_tween.b != null) {
					_dest_b = _properties_to_tween.b;
					_change_b = true;
				}
				if(_properties_to_tween.a != null) {
					_dest_a = _properties_to_tween.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_r) {
				_properties.r = _dest_r;
			}
			if(_change_g) {
				_properties.g = _dest_g;
			}
			if(_change_b) {
				_properties.b = _dest_b;
			}
			if(_change_a) {
				_properties.a = _dest_a;
			}
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else {
			throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
		}
	}
	,clone: function() {
		return new phoenix_Color(this.r,this.g,this.b,this.a);
	}
	,rgb: function(_rgb) {
		if(_rgb == null) {
			_rgb = 16777215;
		}
		this.from_int(_rgb);
		return this;
	}
	,toColorHSL: function() {
		return new phoenix_ColorHSL().fromColor(this);
	}
	,toColorHSV: function() {
		return new phoenix_ColorHSV().fromColor(this);
	}
	,fromColorHSV: function(_color_hsv) {
		var d = _color_hsv.h % 360 / 60;
		if(d < 0) {
			d += 6;
		}
		var hf = Math.floor(d);
		var f = d - hf;
		var v = _color_hsv.v;
		var p = _color_hsv.v * (1 - _color_hsv.s);
		var q = _color_hsv.v * (1 - f * _color_hsv.s);
		var t = _color_hsv.v * (1 - (1 - f) * _color_hsv.s);
		switch(hf % 6) {
		case 0:
			this.set_r(v);
			this.set_g(t);
			this.set_b(p);
			break;
		case 1:
			this.set_r(q);
			this.set_g(v);
			this.set_b(p);
			break;
		case 2:
			this.set_r(p);
			this.set_g(v);
			this.set_b(t);
			break;
		case 3:
			this.set_r(p);
			this.set_g(q);
			this.set_b(v);
			break;
		case 4:
			this.set_r(t);
			this.set_g(p);
			this.set_b(v);
			break;
		case 5:
			this.set_r(v);
			this.set_g(p);
			this.set_b(q);
			break;
		}
		this.a = _color_hsv.a;
	}
	,fromColorHSL: function(_color_hsl) {
		var q = 1;
		if(_color_hsl.l < 0.5) {
			q = _color_hsl.l * (1 + _color_hsl.s);
		} else {
			q = _color_hsl.l + _color_hsl.s - _color_hsl.l * _color_hsl.s;
		}
		var p = 2 * _color_hsl.l - q;
		var hk = _color_hsl.h % 360 / 360;
		var tc = [hk + 0.333333333333333315,hk,hk - 0.333333333333333315];
		var _g1 = 0;
		var _g = tc.length;
		while(_g1 < _g) {
			var n = _g1++;
			var t = tc[n];
			if(t < 0) {
				++t;
			}
			if(t > 1) {
				--t;
			}
			tc[n] = t < 0.166666666666666657 ? p + (q - p) * 6 * t : t < 0.5 ? q : t < 0.66666666666666663 ? p + (q - p) * 6 * (0.66666666666666663 - t) : p;
		}
		this.set_r(tc[0]);
		this.set_g(tc[1]);
		this.set_b(tc[2]);
		this.a = _color_hsl.a;
		return this;
	}
	,toString: function() {
		return "{ r:" + this.r + " , g:" + this.g + " , b:" + this.b + " , a:" + this.a + " }";
	}
	,from_int: function(_i) {
		this.set_r((_i >> 16) / 255);
		this.set_g((_i >> 8 & 255) / 255);
		this.set_b((_i & 255) / 255);
	}
	,__class__: phoenix_Color
	,__properties__: {set_b:"set_b",set_g:"set_g",set_r:"set_r"}
};
var luxe_debug_ProfilerDebugView = function(_debug) {
	this._setup = false;
	this._byte_levels = ["bytes","Kb","MB","GB","TB"];
	this.minpeak = 1.0;
	this.peak = 1.0;
	this.nexttick = 0.0;
	this.tickamount = 0.017;
	this.margin = 32;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Profiler");
	luxe_debug_ProfilerDebugView.lists = new haxe_ds_StringMap();
};
$hxClasses["luxe.debug.ProfilerDebugView"] = luxe_debug_ProfilerDebugView;
luxe_debug_ProfilerDebugView.__name__ = ["luxe","debug","ProfilerDebugView"];
luxe_debug_ProfilerDebugView.add_offset = function(_id,_offset) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	var _this1 = luxe_debug_ProfilerDebugView.lists;
	var _offsetitem = __map_reserved[_offset] != null ? _this1.getReserved(_offset) : _this1.h[_offset];
	if(_item != null && _offsetitem != null) {
		_item.offsets.push(_offsetitem);
	} else {
		haxe_Log.trace("not found for " + _id + " or " + _offset,{ fileName : "ProfilerDebugView.hx", lineNumber : 158, className : "luxe.debug.ProfilerDebugView", methodName : "add_offset"});
		haxe_Log.trace(Std.string(_item) + " / " + Std.string(_offsetitem),{ fileName : "ProfilerDebugView.hx", lineNumber : 159, className : "luxe.debug.ProfilerDebugView", methodName : "add_offset"});
	}
};
luxe_debug_ProfilerDebugView.hide_item = function(_id) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item != null) {
		_item.hidden = true;
		_item.bar.hide();
	}
};
luxe_debug_ProfilerDebugView.show_item = function(_id) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item != null) {
		_item.hidden = false;
		_item.bar.show();
	}
};
luxe_debug_ProfilerDebugView.start = function(_id,_max) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item == null) {
		_item = new luxe_debug__$ProfilerDebugView_ProfilerValue(_id,new luxe_debug__$ProfilerDebugView_ProfilerBar(_id,_max,new phoenix_Color().rgb(16121979)));
		_item.bar.set_pos(new phoenix_Vector(Luxe.debug.padding.x * 2,Luxe.debug.padding.y * 3 + Lambda.count(luxe_debug_ProfilerDebugView.lists) * 20));
		var _this1 = luxe_debug_ProfilerDebugView.lists;
		if(__map_reserved[_id] != null) {
			_this1.setReserved(_id,_item);
		} else {
			_this1.h[_id] = _item;
		}
	}
	_item.start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
luxe_debug_ProfilerDebugView.end = function(_id) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item != null) {
		_item.set();
	} else {
		throw new js__$Boot_HaxeError("Debug / profile end called for " + _id + " but no start called");
	}
};
luxe_debug_ProfilerDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_ProfilerDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
	}
	,update_graph: function(graph,val) {
		var _byte_value = val / Math.pow(1024,Math.floor(Math.log(val) / Math.log(1024)));
		if(_byte_value > this.peak) {
			this.peak = Math.ceil(_byte_value + _byte_value * 0.1);
		}
		if(_byte_value < this.minpeak) {
			this.minpeak = Math.floor(_byte_value - _byte_value * 0.1);
		}
		if(graph.max != this.peak) {
			graph.set_max(this.peak);
		}
		var n = Math.pow(10,4);
		graph.set_ping((_byte_value * n | 0) / n);
	}
	,process: function() {
	}
	,show: function() {
		var _this = luxe_debug_ProfilerDebugView.lists;
		var _item = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_item.hasNext()) {
			var _item1 = _item.next();
			if(!_item1.hidden) {
				_item1.bar.show();
			}
		}
		if(!this._setup) {
			this._setup = true;
		}
	}
	,hide: function() {
		var _this = luxe_debug_ProfilerDebugView.lists;
		var _item = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_item.hasNext()) _item.next().bar.hide();
	}
	,__class__: luxe_debug_ProfilerDebugView
});
var luxe_debug__$ProfilerDebugView_ProfilerValue = function(_name,_bar) {
	this.accum = 0;
	this.count = 0;
	this.hidden = false;
	this.avg = 10;
	this.start = 0.0;
	this.name = _name;
	this.bar = _bar;
	this.history = [];
	this.offsets = [];
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerValue"] = luxe_debug__$ProfilerDebugView_ProfilerValue;
luxe_debug__$ProfilerDebugView_ProfilerValue.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerValue"];
luxe_debug__$ProfilerDebugView_ProfilerValue.prototype = {
	set: function() {
		var _t = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start;
		var _g = 0;
		var _g1 = this.offsets;
		while(_g < _g1.length) {
			var _offset = _g1[_g];
			++_g;
			_t -= _offset.history[_offset.history.length - 1];
		}
		this.history.push(_t);
		if(this.history.length > this.avg) {
			this.history.shift();
		}
		this.count++;
		if(this.count == this.avg) {
			this.bar.set_value(this.accum / this.avg);
			this.accum = 0;
			this.count = 0;
		}
		this.accum += _t;
		if(this.bar.visible) {
			var n = Math.pow(10,4);
			this.bar.set_text(Std.string((_t * 1000 * n | 0) / n));
		}
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerValue
};
var luxe_debug__$ProfilerDebugView_ProfilerGraph = function(_name,_bg) {
	if(_bg == null) {
		_bg = true;
	}
	this.visible = false;
	this.history = 33;
	this.height2 = 8;
	this.height = 8;
	this.width = 128;
	this.bg = true;
	this.bg = _bg;
	this.name = _name;
	this.color = new phoenix_Color();
	var n = Math.pow(10,2);
	this.set_max((16.6666666666666679 * n | 0) / n);
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerGraph"] = luxe_debug__$ProfilerDebugView_ProfilerGraph;
luxe_debug__$ProfilerDebugView_ProfilerGraph.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerGraph"];
luxe_debug__$ProfilerDebugView_ProfilerGraph.prototype = {
	create: function() {
		this.segment = this.width / this.history;
		this.height2 = this.height * 2;
		if(this.bg) {
			this.graphbg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(1052688), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.width - this.segment, h : this.height2});
		}
		this.graph_geometry = new phoenix_geometry_Geometry({ color : this.color, depth : 999.33, batcher : Luxe.debug.batcher});
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var _b = new phoenix_geometry_Vertex(new phoenix_Vector(this.segment * _g1++,this.height2),this.color);
			this.graph_geometry.add(_b);
		}
		this.graph_geometry.set_primitive_type(3);
		this.hide();
	}
	,set_max: function(_v) {
		var oldmax = this.max;
		this.max = _v;
		if(this.graph_geometry != null) {
			var _g = 0;
			var _g1 = this.graph_geometry.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v != null) {
					var vp = 1.0 - v.pos.y / this.height2;
					vp = vp * oldmax / this.max;
					var _this = v.pos;
					var _y = this.height2 * (1.0 - vp);
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
				}
			}
		}
		return this.max;
	}
	,set_ping: function(_v) {
		var n = Math.pow(10,4);
		var _p = (_v * n | 0) / n / this.max;
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this.graph_geometry.vertices[i];
			if(i < this.history - 1) {
				var v1 = this.graph_geometry.vertices[i + 1];
				if(v1 != null) {
					var _this = v.pos;
					var _y = Math.floor(v1.pos.y);
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
					v.color = v1.color;
				}
			}
		}
		if(_p < 0.001) {
			_p = 0.001;
		} else if(_p > 1) {
			_p = 1;
		} else {
			_p = _p;
		}
		if(_p > 1) {
			this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_red;
		} else if(_p < 0.2) {
			this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_green;
		} else {
			this.graph_geometry.vertices[this.history - 1].color = this.color;
		}
		var _this1 = this.graph_geometry.vertices[this.history - 1].pos;
		var _y1 = Math.floor(this.height2 * (1.0 - _p));
		_this1.y = _y1;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y1);
			}
		}
		return this.ping = _v;
	}
	,hide: function() {
		this.visible = false;
		this.graph_geometry.set_visible(false);
		if(this.graphbg_geometry != null) {
			this.graphbg_geometry.set_visible(false);
		}
	}
	,show: function() {
		this.visible = true;
		this.graph_geometry.set_visible(true);
		if(this.graphbg_geometry != null) {
			this.graphbg_geometry.set_visible(true);
		}
	}
	,set_pos: function(_p) {
		if(this.graphbg_geometry != null) {
			var _this = this.graphbg_geometry.transform.local.pos;
			var _x = _p.x;
			var _y = _p.y;
			var _z = _p.z;
			var _w = _p.w;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.w = _w;
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		var _this1 = this.graph_geometry.transform.local.pos;
		var _x1 = _p.x;
		var _y1 = _p.y;
		var _z1 = _p.z;
		var _w1 = _p.w;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x1;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x1);
			}
		}
		_this1.y = _y1;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y1);
			}
		}
		_this1.z = _z1;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z1);
			}
		}
		_this1.w = _w1;
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return this.pos = _p;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerGraph
	,__properties__: {set_pos:"set_pos",set_ping:"set_ping",set_max:"set_max"}
};
var luxe_debug__$ProfilerDebugView_ProfilerBar = function(_name,_max,_color) {
	this.max = 16.7;
	this.height = 8;
	this.visible = false;
	this.name = _name;
	this.graph = new luxe_debug__$ProfilerDebugView_ProfilerGraph(_name);
	this.graph.create();
	if(_max != null) {
		this.graph.set_max(_max);
	}
	this.text_item = new luxe_Text({ no_scene : true, name : "profiler.text." + _name, pos : new phoenix_Vector(0,0), color : _color, point_size : this.height * 1.8, depth : 999.3, text : "", batcher : Luxe.debug.batcher});
	this.bg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(592137), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.graph.width, h : this.graph.height});
	this.bar_geometry = Luxe.draw.box({ color : _color, depth : 999.33, batcher : Luxe.debug.batcher, x : 1, y : 1, w : this.graph.width - 2, h : this.graph.height - 2});
	this.hide();
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerBar"] = luxe_debug__$ProfilerDebugView_ProfilerBar;
luxe_debug__$ProfilerDebugView_ProfilerBar.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerBar"];
luxe_debug__$ProfilerDebugView_ProfilerBar.prototype = {
	hide: function() {
		this.visible = false;
		this.bar_geometry.set_visible(false);
		this.bg_geometry.set_visible(false);
		this.text_item.set_visible(false);
		this.graph.hide();
	}
	,show: function() {
		this.visible = true;
		this.bar_geometry.set_visible(true);
		this.bg_geometry.set_visible(true);
		this.text_item.set_visible(true);
		this.graph.show();
	}
	,set_value: function(_v) {
		this.graph.set_ping(_v * 1000);
		if(!this.visible) {
			return this.value = _v;
		}
		var n = Math.pow(10,4);
		var _p = (_v * 1000 * n | 0) / n / this.max;
		if(_p < 0.005) {
			_p = 0.005;
		} else if(_p > 1) {
			_p = 1;
		} else {
			_p = _p;
		}
		if(_p > 1) {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_red);
		} else if(_p < 0.15) {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_green);
		} else {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_normal);
		}
		this.bar_geometry.resize_xy((this.graph.width - 2) * _p,this.graph.height - 2);
		return this.value = _v;
	}
	,set_pos: function(_p) {
		var _this = this.bg_geometry.transform.local;
		_this.pos = _p;
		if(_p != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		var _this1 = this.bar_geometry.transform.local.pos;
		var _x = _p.x + 1;
		var _y = _p.y + 1;
		var prev = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = _y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y);
			}
		}
		_this1.ignore_listeners = prev;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.text_item.get_pos();
		var _x1 = _p.x + this.graph.width * 2 + 10;
		var _y1 = _p.y - 6;
		var prev1 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x1;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_x1);
			}
		}
		_this2.y = _y1;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_y1);
			}
		}
		_this2.ignore_listeners = prev1;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var tmp = this.graph;
		var _this3 = new phoenix_Vector(_p.x,_p.y,_p.z,_p.w);
		var _x2 = _this3.x + (this.graph.width + 2);
		var _y2 = _this3.y + (-this.graph.height + 4);
		var _z = _this3.z;
		var prev2 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = _x2;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_x2);
			}
		}
		_this3.y = _y2;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_y2);
			}
		}
		_this3.z = _z;
		if(!_this3._construct) {
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_z);
			}
		}
		_this3.ignore_listeners = prev2;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		if(_this3.listen_z != null && !_this3.ignore_listeners) {
			_this3.listen_z(_this3.z);
		}
		tmp.set_pos(_this3);
		return this.pos = _p;
	}
	,set_text: function(_t) {
		this.text_item.set_text("" + this.name + " (" + this.graph.max + "ms) | " + _t + "ms");
		return this.text = _t;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerBar
	,__properties__: {set_value:"set_value",set_pos:"set_pos",set_text:"set_text"}
};
var luxe_debug_SceneDebugView = function(_debug) {
	this.hide_ids = true;
	this.font_size = 15.0;
	this.margin = 32;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Scenes");
	this.scenes = [];
};
$hxClasses["luxe.debug.SceneDebugView"] = luxe_debug_SceneDebugView;
luxe_debug_SceneDebugView.__name__ = ["luxe","debug","SceneDebugView"];
luxe_debug_SceneDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_SceneDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
		var debug = Luxe.debug;
		var tmp = new phoenix_Color(0,0,0,1).rgb(16121979);
		var tmp1 = new phoenix_Vector(0,0);
		var tmp2 = Luxe.renderer.font;
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			_result += this.hide_ids ? "" : "" + _scene.get_id() + " ";
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var _entity = _scene.entities.iterator();
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				var _list = _result;
				var _active = _entity1.get_active() ? "" : "/ inactive";
				var res = "";
				var _g11 = 0;
				while(_g11 < 1) {
					++_g11;
					res += "    ";
				}
				var _id = this.hide_ids ? "" : _entity1.get_id();
				var _comp = "• " + Lambda.count(_entity1._components.components);
				_list += "" + res + _id + " " + _entity1.get_name() + " " + ("> " + _entity1.children.length) + " " + _comp + " " + _active + "\n";
				var _name = HxOverrides.iter(_entity1._components.components._keys);
				while(_name.hasNext()) {
					var _name1 = _name.next();
					var comp = _entity1._components.components.map.get(_name1);
					var _comp_id = this.hide_ids ? "" : " " + comp.id;
					var res1 = "";
					var _g12 = 0;
					while(_g12 < 2) {
						++_g12;
						res1 += "    ";
					}
					_list += res1 + ("•" + _comp_id + " " + comp.name + "\n");
				}
				var _g2 = 0;
				var _g13 = _entity1.children;
				while(_g2 < _g13.length) {
					var _child = _g13[_g2];
					++_g2;
					_list = this.list_entity(_list,_child,3);
				}
				_result = _list;
			}
		}
		this.items_list = new luxe_Text({ name : "debug.scene.list", depth : 999.3, no_scene : true, color : tmp, pos : tmp1, font : tmp2, text : _result, point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.items_list.geometry.id = "debug.scene.list.geometry";
		this.resize();
	}
	,add_scene: function(_scene) {
		if(this.scenes.indexOf(_scene) != -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) == -1"));
		}
		this.scenes.push(_scene);
	}
	,remove_scene: function(_scene) {
		if(this.scenes.indexOf(_scene) == -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) != -1"));
		}
		var _result = HxOverrides.remove(this.scenes,_scene);
		this.refresh();
		return _result;
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) {
			this.toggle_ids();
		}
	}
	,toggle_ids: function() {
		this.hide_ids = !this.hide_ids;
		this.refresh();
	}
	,tabs: function(_d) {
		var res = "";
		var _g1 = 0;
		while(_g1 < _d) {
			++_g1;
			res += "    ";
		}
		return res;
	}
	,list_entity: function(_list,e,_depth) {
		if(_depth == null) {
			_depth = 1;
		}
		var _active = e.get_active() ? "" : "/ inactive";
		var _pre;
		if(_depth == 1) {
			var res = "";
			var _g1 = 0;
			while(_g1 < _depth) {
				++_g1;
				res += "    ";
			}
			_pre = res;
		} else {
			var res1 = "";
			var _g11 = 0;
			while(_g11 < _depth) {
				++_g11;
				res1 += "    ";
			}
			_pre = res1 + "> ";
		}
		var _id = this.hide_ids ? "" : e.get_id();
		var _comp = "• " + Lambda.count(e._components.components);
		_list += "" + _pre + _id + " " + e.get_name() + " " + ("> " + e.children.length) + " " + _comp + " " + _active + "\n";
		var _name = HxOverrides.iter(e._components.components._keys);
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var comp = e._components.components.map.get(_name1);
			var _comp_id = this.hide_ids ? "" : " " + comp.id;
			var res2 = "";
			var _g12 = 0;
			var _g = _depth + 1;
			while(_g12 < _g) {
				++_g12;
				res2 += "    ";
			}
			_list += res2 + ("•" + _comp_id + " " + comp.name + "\n");
		}
		var _g2 = 0;
		var _g13 = e.children;
		while(_g2 < _g13.length) {
			var _child = _g13[_g2];
			++_g2;
			_list = this.list_entity(_list,_child,_depth + 2);
		}
		return _list;
	}
	,get_list: function() {
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			_result += this.hide_ids ? "" : "" + _scene.get_id() + " ";
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var _this = _scene.entities;
			var _entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				var _list = _result;
				var _active = _entity1.get_active() ? "" : "/ inactive";
				var res = "";
				var _g11 = 0;
				while(_g11 < 1) {
					++_g11;
					res += "    ";
				}
				var _id = this.hide_ids ? "" : _entity1.get_id();
				var _comp = "• " + Lambda.count(_entity1._components.components);
				_list += "" + res + _id + " " + _entity1.get_name() + " " + ("> " + _entity1.children.length) + " " + _comp + " " + _active + "\n";
				var _name = HxOverrides.iter(_entity1._components.components._keys);
				while(_name.hasNext()) {
					var _name1 = _name.next();
					var comp = _entity1._components.components.map.get(_name1);
					var _comp_id = this.hide_ids ? "" : " " + comp.id;
					var res1 = "";
					var _g12 = 0;
					while(_g12 < 2) {
						++_g12;
						res1 += "    ";
					}
					_list += res1 + ("•" + _comp_id + " " + comp.name + "\n");
				}
				var _g2 = 0;
				var _g13 = _entity1.children;
				while(_g2 < _g13.length) {
					var _child = _g13[_g2];
					++_g2;
					_list = this.list_entity(_list,_child,3);
				}
				_result = _list;
			}
		}
		return _result;
	}
	,refresh: function() {
		var tmp = this.items_list;
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			_result += this.hide_ids ? "" : "" + _scene.get_id() + " ";
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var _entity = _scene.entities.iterator();
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				var _list = _result;
				var _active = _entity1.get_active() ? "" : "/ inactive";
				var res = "";
				var _g11 = 0;
				while(_g11 < 1) {
					++_g11;
					res += "    ";
				}
				var _id = this.hide_ids ? "" : _entity1.get_id();
				var _comp = "• " + Lambda.count(_entity1._components.components);
				_list += "" + res + _id + " " + _entity1.get_name() + " " + ("> " + _entity1.children.length) + " " + _comp + " " + _active + "\n";
				var _name = HxOverrides.iter(_entity1._components.components._keys);
				while(_name.hasNext()) {
					var _name1 = _name.next();
					var comp = _entity1._components.components.map.get(_name1);
					var _comp_id = this.hide_ids ? "" : " " + comp.id;
					var res1 = "";
					var _g12 = 0;
					while(_g12 < 2) {
						++_g12;
						res1 += "    ";
					}
					_list += res1 + ("•" + _comp_id + " " + comp.name + "\n");
				}
				var _g2 = 0;
				var _g13 = _entity1.children;
				while(_g2 < _g13.length) {
					var _child = _g13[_g2];
					++_g2;
					_list = this.list_entity(_list,_child,3);
				}
				_result = _list;
			}
		}
		tmp.set_text(_result);
	}
	,process: function() {
		if(!this.visible) {
			return;
		}
		var _has_changed = false;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			if(_scene._has_changed) {
				_has_changed = true;
				_scene._has_changed = false;
			}
		}
		if(_has_changed) {
			this.refresh();
		}
	}
	,onmousewheel: function(e) {
		var diff = this.items_list.text_bounds.h - (Luxe.debug.inspector.size.y - this.margin);
		var new_y = this.items_list.get_pos().y;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		if(diff > 0) {
			min_y = max_y - (diff + this.margin * 2);
		}
		new_y -= this.margin / 2 * e.y;
		if(new_y < min_y) {
			new_y = min_y;
		} else if(new_y > max_y) {
			new_y = max_y;
		} else {
			new_y = new_y;
		}
		var _this = this.items_list.get_pos();
		_this.y = new_y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(new_y);
			}
		}
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.items_list.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.items_list.set_visible(false);
	}
	,resize: function() {
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		if(this.items_list != null) {
			this.items_list.set_pos(new phoenix_Vector(debug.padding.x + this.margin,debug.padding.y + this.margin * 1.5));
			this.items_list.set_clip_rect(viewrect);
		}
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,__class__: luxe_debug_SceneDebugView
});
var luxe_debug_StatsDebugView = function(_debug) {
	this.margin = 32;
	this.font_size = 15;
	this.debug_geometry_count = 13;
	this.debug_draw_call_count = 3;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Statistics");
	this._last_render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
	this._render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
};
$hxClasses["luxe.debug.StatsDebugView"] = luxe_debug_StatsDebugView;
luxe_debug_StatsDebugView.__name__ = ["luxe","debug","StatsDebugView"];
luxe_debug_StatsDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_StatsDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	get_resource_stats_string: function() {
		return Std.string(Luxe.resources.stats);
	}
	,get_batcher_info: function(b) {
		var _s = "  " + b.name + " (enabled " + (b.enabled == null ? "null" : "" + b.enabled) + ", layer " + b.layer + ")\n";
		_s += "    shader: " + (b.shader == null ? "none" : b.shader.id) + "\n";
		_s += "    max verts/batch: " + b.max_verts + "\n";
		_s += "    visible geom: " + b.visible_count + "\n";
		_s += "    verts: " + b.vert_count + "\n";
		_s += "    draw calls: " + b.draw_calls + "\n";
		_s += "    batched: " + b.dynamic_batched_count + "\n";
		_s += "    static: " + b.static_batched_count + "\n";
		return _s;
	}
	,get_render_stats_string: function() {
		var _bs = "";
		var _g = 0;
		var _g1 = phoenix_Batcher.all;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.show_stats != 0) {
				var _s = "  " + b.name + " (enabled " + (b.enabled == null ? "null" : "" + b.enabled) + ", layer " + b.layer + ")\n";
				_s += "    shader: " + (b.shader == null ? "none" : b.shader.id) + "\n";
				_s += "    max verts/batch: " + b.max_verts + "\n";
				_s += "    visible geom: " + b.visible_count + "\n";
				_s += "    verts: " + b.vert_count + "\n";
				_s += "    draw calls: " + b.draw_calls + "\n";
				_s += "    batched: " + b.dynamic_batched_count + "\n";
				_bs += _s += "    static: " + b.static_batched_count + "\n";
			}
		}
		return "Renderer Statistics\n\n" + "total geometry : " + this._render_stats.geometry_count + "\n" + "visible geometry : " + this._render_stats.visible_count + "\n" + "dynamic batch count : " + this._render_stats.dynamic_batched_count + "\n" + "static batch count : " + this._render_stats.static_batched_count + "\n" + "total draw calls : " + this._render_stats.draw_calls + "\n" + "total vert count : " + this._render_stats.vert_count + "\n" + "batchers : " + this._render_stats.batchers + "\n" + _bs;
	}
	,create: function() {
		var _gthis = this;
		var debug = Luxe.debug;
		this.render_stats_text = new luxe_Text({ name : "debug.render.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : this.get_render_stats_string(), point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.resource_list_text = new luxe_Text({ name : "debug.resource.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : "", align : 1, point_size : this.font_size * 0.9, batcher : debug.batcher, visible : false});
		this.render_stats_text.geometry.id = "debug.render.stats.geometry";
		this.render_stats_text.geometry.id = "debug.resource.stats.geometry";
		this.resize();
		Luxe.resources.on(1,function(_) {
			if(_gthis.visible) {
				_gthis.refresh();
			}
		});
	}
	,resize: function() {
		if(this.resource_list_text == null || this.render_stats_text == null) {
			return;
		}
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		var left = debug.padding.x + this.margin;
		var top = debug.padding.y + this.margin * 1.5;
		if(this.resource_list_text != null) {
			this.resource_list_text.set_pos(new phoenix_Vector(debug.padding.x + debug.inspector.size.x - this.margin,top));
			this.resource_list_text.set_clip_rect(viewrect);
		}
		if(this.render_stats_text != null) {
			this.render_stats_text.set_pos(new phoenix_Vector(left,top));
			this.render_stats_text.set_clip_rect(viewrect);
		}
		this.reset_tween();
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,refresh: function() {
		var bytes_lists = "";
		var text_lists = "";
		var json_lists = "";
		var texture_lists = "";
		var rtt_lists = "";
		var font_lists = "";
		var shader_lists = "";
		var audio_lists = "";
		var _total_txt = 0;
		var _total_tex = 0;
		var _total_rtt = 0;
		var _total_snd = 0;
		var _total_all = 0;
		var _snd = function(res) {
			var _s = "";
			if(res.source != null) {
				_s = "" + (res.source.data.is_stream ? "STREAM •" : "");
				_s += " " + res.id + " • " + res.ref + "\t\n";
				if(res.source.data != null && !res.source.data.is_stream) {
					_s += "~" + Luxe.utils.bytes_to_string(res.source.data.length);
					_total_snd += res.source.data.length;
				}
				if(res.source.data != null) {
					_s += " " + res.source.data.channels + "ch";
					var n = Math.pow(10,1);
					_s += " " + (res.source.data.rate / 1000 * n | 0) / n + "khz";
					var this1 = res.source.data.format;
					var _s1;
					if(this1 == null) {
						_s1 = "" + this1;
					} else {
						switch(this1) {
						case 0:
							_s1 = "af_unknown";
							break;
						case 1:
							_s1 = "af_custom";
							break;
						case 2:
							_s1 = "af_ogg";
							break;
						case 3:
							_s1 = "af_wav";
							break;
						case 4:
							_s1 = "af_pcm";
							break;
						default:
							_s1 = "" + this1;
						}
					}
					_s += " " + _s1;
					var value = res.source.duration();
					var n1 = Math.pow(10,4);
					_s += " " + (value * n1 | 0) / n1 + "s";
				}
				_s += "\t\t\n\n";
			} else {
				_s = "" + ("" + res.id + " • " + res.ref + "\t\n");
			}
			return _s;
		};
		var _this = Luxe.resources.cache;
		var res1 = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(res1.hasNext()) {
			var res2 = res1.next();
			switch(res2.resource_type) {
			case 1:
				var res3 = res2;
				var _l = res3.asset != null && res3.asset.text != null ? res3.asset.text.length : 0;
				_total_txt += _l;
				text_lists += "(~" + Luxe.utils.bytes_to_string(_l) + ") " + res3.id + " • " + res3.ref + "\t\n";
				break;
			case 2:
				json_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 3:
				bytes_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 4:
				var tex = res2;
				if(tex.resource_type == 5) {
					_total_rtt += tex.memory_use();
				} else {
					_total_tex += tex.memory_use();
				}
				texture_lists += "(" + tex.width_actual + "x" + tex.height_actual + " ~" + Luxe.utils.bytes_to_string(tex.memory_use()) + ")    " + tex.id + " • " + tex.ref + "\t\n";
				break;
			case 5:
				var tex1 = res2;
				if(tex1.resource_type == 5) {
					_total_rtt += tex1.memory_use();
				} else {
					_total_tex += tex1.memory_use();
				}
				rtt_lists += "(" + tex1.width_actual + "x" + tex1.height_actual + " ~" + Luxe.utils.bytes_to_string(tex1.memory_use()) + ")    " + tex1.id + " • " + tex1.ref + "\t\n";
				break;
			case 6:
				font_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 7:
				var res4 = res2;
				shader_lists += "(" + res4.vert_id + ", " + res4.frag_id + ")    " + res4.id + " • " + res4.ref + "\t\n";
				break;
			case 8:
				audio_lists += _snd(res2);
				break;
			default:
			}
		}
		_total_all = _total_txt;
		_total_all += _total_tex;
		_total_all += _total_rtt;
		_total_all += _total_snd;
		var lists = "Resource list (" + Luxe.resources.stats.total + " • ~" + Luxe.utils.bytes_to_string(_total_all) + ")\n\n";
		lists += "Bytes (" + Luxe.resources.stats.bytes + ")\n";
		lists += bytes_lists == "" ? "-\t\n" : bytes_lists;
		lists += "\nText (" + Luxe.resources.stats.texts + " • ~" + Luxe.utils.bytes_to_string(_total_txt) + ")\n";
		lists += text_lists == "" ? "-\t\n" : text_lists;
		lists += "\nJSON (" + Luxe.resources.stats.jsons + ")\n";
		lists += json_lists == "" ? "-\t\n" : json_lists;
		lists += "\nTexture (" + Luxe.resources.stats.textures + " • ~" + Luxe.utils.bytes_to_string(_total_tex) + ")\n";
		lists += texture_lists == "" ? "-\t\n" : texture_lists;
		lists += "\nRenderTexture (" + Luxe.resources.stats.rtt + " • ~" + Luxe.utils.bytes_to_string(_total_rtt) + ")\n";
		lists += rtt_lists == "" ? "-\t\n" : rtt_lists;
		lists += "\nFont (" + Luxe.resources.stats.fonts + ")\n";
		lists += font_lists == "" ? "-\t\n" : font_lists;
		lists += "\nShader (" + Luxe.resources.stats.shaders + ")\n";
		lists += shader_lists == "" ? "-\t\n" : shader_lists;
		lists += "\nAudio (" + Luxe.resources.stats.audios + " • ~" + Luxe.utils.bytes_to_string(_total_snd) + ")\n";
		lists += audio_lists == "" ? "-\t\n" : audio_lists;
		this.resource_list_text.set_text(lists);
		if(this.resource_list_text.geometry != null) {
			this.resource_list_text.geometry.set_dirty(true);
		}
		this.reset_tween();
	}
	,process: function() {
		if(!this.visible) {
			return;
		}
		var dirty = false;
		this.update_render_stats();
		if(this._last_render_stats.batchers != this._render_stats.batchers) {
			dirty = true;
			this._last_render_stats.batchers = this._render_stats.batchers;
		}
		if(this._last_render_stats.geometry_count != this._render_stats.geometry_count) {
			dirty = true;
			this._last_render_stats.geometry_count = this._render_stats.geometry_count;
		}
		if(this._last_render_stats.dynamic_batched_count != this._render_stats.dynamic_batched_count) {
			dirty = true;
			this._last_render_stats.dynamic_batched_count = this._render_stats.dynamic_batched_count;
		}
		if(this._last_render_stats.static_batched_count != this._render_stats.static_batched_count) {
			dirty = true;
			this._last_render_stats.static_batched_count = this._render_stats.static_batched_count;
		}
		if(this._last_render_stats.visible_count != this._render_stats.visible_count) {
			dirty = true;
			this._last_render_stats.visible_count = this._render_stats.visible_count;
		}
		if(this._last_render_stats.draw_calls != this._render_stats.draw_calls) {
			dirty = true;
			this._last_render_stats.draw_calls = this._render_stats.draw_calls;
		}
		if(this._last_render_stats.vert_count != this._render_stats.vert_count) {
			dirty = true;
			this._last_render_stats.vert_count = this._render_stats.vert_count;
		}
		if(dirty) {
			this.refresh_render_stats();
		}
	}
	,onmousewheel: function(e) {
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		if(e.pos.x / Luxe.core.screen.get_w() > 0.5) {
			var diff = this.resource_list_text.text_bounds.h - vh;
			var new_y = this.resource_list_text.get_pos().y;
			if(diff > 0) {
				min_y = max_y - (diff + this.margin * 2);
			}
			new_y -= this.margin / 2 * e.y;
			if(new_y < min_y) {
				new_y = min_y;
			} else if(new_y > max_y) {
				new_y = max_y;
			} else {
				new_y = new_y;
			}
			var _this = this.resource_list_text.get_pos();
			_this.y = new_y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(new_y);
				}
			}
			this.resource_list_text.geometry.set_dirty(true);
		} else {
			var diff1 = this.render_stats_text.text_bounds.h - vh;
			var new_y1 = this.render_stats_text.get_pos().y;
			if(diff1 > 0) {
				min_y = max_y - (diff1 + this.margin * 2);
			}
			new_y1 -= this.margin / 2 * e.y;
			if(new_y1 < min_y) {
				new_y1 = min_y;
			} else if(new_y1 > max_y) {
				new_y1 = max_y;
			} else {
				new_y1 = new_y1;
			}
			var _this1 = this.render_stats_text.get_pos();
			_this1.y = new_y1;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(new_y1);
				}
			}
			this.render_stats_text.geometry.set_dirty(true);
		}
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) {
			if(this.debug.batcher.show_stats == 0) {
				this.debug.batcher.set_show_stats(1);
			} else {
				this.debug.batcher.set_show_stats(0);
			}
		}
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.render_stats_text.set_visible(true);
		this.resource_list_text.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.render_stats_text.set_visible(false);
		this.resource_list_text.set_visible(false);
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
	}
	,reset_tween: function() {
		var _gthis = this;
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var start_y = Luxe.debug.padding.y + this.margin * 1.5;
		var h = this.resource_list_text.text_bounds.h;
		var diff = h - vh;
		var _this = this.resource_list_text.get_pos();
		_this.y = start_y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(start_y);
			}
		}
		if(diff > 0) {
			var end_y = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.resource_list_text.get_pos(),8,{ y : end_y}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_gthis.resource_list_text.geometry.set_dirty(true);
			});
		}
		h = this.render_stats_text.text_bounds.h;
		diff = h - vh;
		var _this1 = this.render_stats_text.get_pos();
		_this1.y = start_y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(start_y);
			}
		}
		if(diff > 0) {
			var end_y1 = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.render_stats_text.get_pos(),8,{ y : end_y1}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_gthis.render_stats_text.geometry.set_dirty(true);
			});
		}
	}
	,refresh_render_stats: function() {
		if(!this.visible) {
			return;
		}
		this.render_stats_text.set_text(this.get_render_stats_string());
		this.render_stats_text.set_locked(true);
		if(this.render_stats_text.geometry != null) {
			this.render_stats_text.geometry.set_dirty(true);
		}
	}
	,update_render_stats: function() {
		this._render_stats.batchers = Luxe.renderer.stats.batchers;
		this._render_stats.geometry_count = Luxe.renderer.stats.geometry_count;
		this._render_stats.visible_count = Luxe.renderer.stats.visible_count;
		this._render_stats.dynamic_batched_count = Luxe.renderer.stats.dynamic_batched_count;
		this._render_stats.static_batched_count = Luxe.renderer.stats.static_batched_count;
		this._render_stats.draw_calls = Luxe.renderer.stats.draw_calls;
		this._render_stats.vert_count = Luxe.renderer.stats.vert_count;
	}
	,__class__: luxe_debug_StatsDebugView
});
var luxe_debug_TraceDebugView = function(_debug) {
	this._last_logged_length = 0;
	this.max_lines = 35;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Log");
	luxe_Debug.trace_callbacks.push($bind(this,this.on_trace));
	this.logged = [];
	var _this = this.debug.app;
	this.add_line("luxe version " + ("" + _this.build + " / debug:" + Std.string(_this.app.debug) + " / os:" + _this.app.os + " / platform:" + _this.app.platform));
};
$hxClasses["luxe.debug.TraceDebugView"] = luxe_debug_TraceDebugView;
luxe_debug_TraceDebugView.__name__ = ["luxe","debug","TraceDebugView"];
luxe_debug_TraceDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_TraceDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	on_trace: function(v,inf) {
		this.add_line(inf.fileName + ":" + inf.lineNumber + " " + Std.string(v));
	}
	,create: function() {
		var text_bounds = new phoenix_Rectangle(this.debug.padding.x + 20,this.debug.padding.y + 40,Luxe.core.screen.get_w() - this.debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - this.debug.padding.y * 2 - 40);
		this.lines = new luxe_Text({ name : "debug.log.text", no_scene : true, depth : 999.3, color : new phoenix_Color().rgb(8947848), bounds : text_bounds, bounds_wrap : true, font : Luxe.renderer.font, text : "", align_vertical : 4, point_size : 12, batcher : this.debug.batcher, visible : false});
		if(this.lines.geometry != null) {
			this.lines.geometry.set_clip_rect(text_bounds);
			this.lines.geometry.set_locked(true);
			this.lines.geometry.id = "debug.log.text.geometry";
		}
	}
	,onwindowsized: function(e) {
		var debug = Luxe.debug;
		var text_bounds = new phoenix_Rectangle(debug.padding.x + 20,debug.padding.y + 40,Luxe.core.screen.get_w() - debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - debug.padding.y * 2 - 40);
		this.lines.set_bounds(text_bounds);
		this.lines.set_clip_rect(text_bounds);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
	}
	,add_line: function(_t) {
		if(this.logged == null) {
			return;
		}
		this.logged.push(_t);
		if(!this.visible) {
			return;
		}
		this.refresh_lines();
	}
	,refresh_lines: function() {
		if(this._last_logged_length == this.logged.length) {
			return;
		}
		var _final = "";
		if(this.logged.length <= this.max_lines) {
			var _g = 0;
			var _g1 = this.logged;
			while(_g < _g1.length) {
				var _line = _g1[_g];
				++_g;
				_final += _line + "\n";
			}
		} else {
			var _g11 = this.logged.length - this.max_lines;
			var _g2 = this.logged.length;
			while(_g11 < _g2) _final += this.logged[_g11++] + "\n";
		}
		this.lines.set_text(_final);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
		this._last_logged_length = this.logged.length;
	}
	,refresh: function() {
	}
	,process: function() {
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh_lines();
		this.lines.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.lines.set_visible(false);
	}
	,__class__: luxe_debug_TraceDebugView
});
var luxe_importers_bitmapfont_BitmapFontParser = function() { };
$hxClasses["luxe.importers.bitmapfont.BitmapFontParser"] = luxe_importers_bitmapfont_BitmapFontParser;
luxe_importers_bitmapfont_BitmapFontParser.__name__ = ["luxe","importers","bitmapfont","BitmapFontParser"];
luxe_importers_bitmapfont_BitmapFontParser.parse = function(_font_data) {
	if(_font_data.length == 0) {
		throw new js__$Boot_HaxeError("BitmapFont:Parser: _font_data is 0 length");
	}
	var _info = { face : null, chars : new haxe_ds_IntMap(), point_size : 0, base_size : 0, char_count : 0, line_height : 0, pages : [], kernings : new haxe_ds_IntMap()};
	var _lines = _font_data.split("\n");
	if(_lines.length == 0) {
		throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser.");
	}
	if(HxOverrides.substr(StringTools.ltrim(_lines[0]),0,4) != "info") {
		throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser. Format should be plain ascii text .fnt file only currently.");
	}
	var _g = 0;
	while(_g < _lines.length) {
		var _line = _lines[_g];
		++_g;
		var _tokens = _line.split(" ");
		var _g1 = 0;
		while(_g1 < _tokens.length) {
			var _current = _tokens[_g1];
			++_g1;
			luxe_importers_bitmapfont_BitmapFontParser.parse_token(_current,_tokens,_info);
		}
		_tokens = null;
	}
	return _info;
};
luxe_importers_bitmapfont_BitmapFontParser.parse_token = function(_token,_tokens,_info) {
	_tokens.shift();
	var _items = luxe_importers_bitmapfont_BitmapFontParser.tokenize_line(_tokens);
	switch(_token) {
	case "char":
		var _char = { id : Std.parseInt(__map_reserved["id"] != null ? _items.getReserved("id") : _items.h["id"]), x : parseFloat(__map_reserved["x"] != null ? _items.getReserved("x") : _items.h["x"]), y : parseFloat(__map_reserved["y"] != null ? _items.getReserved("y") : _items.h["y"]), width : parseFloat(__map_reserved["width"] != null ? _items.getReserved("width") : _items.h["width"]), height : parseFloat(__map_reserved["height"] != null ? _items.getReserved("height") : _items.h["height"]), xoffset : parseFloat(__map_reserved["xoffset"] != null ? _items.getReserved("xoffset") : _items.h["xoffset"]), yoffset : parseFloat(__map_reserved["yoffset"] != null ? _items.getReserved("yoffset") : _items.h["yoffset"]), xadvance : parseFloat(__map_reserved["xadvance"] != null ? _items.getReserved("xadvance") : _items.h["xadvance"]), page : Std.parseInt(__map_reserved["page"] != null ? _items.getReserved("page") : _items.h["page"])};
		_info.chars.set(_char.id,_char);
		break;
	case "chars":
		_info.char_count = Std.parseInt(__map_reserved["count"] != null ? _items.getReserved("count") : _items.h["count"]);
		break;
	case "common":
		_info.line_height = parseFloat(__map_reserved["lineHeight"] != null ? _items.getReserved("lineHeight") : _items.h["lineHeight"]);
		_info.base_size = parseFloat(__map_reserved["base"] != null ? _items.getReserved("base") : _items.h["base"]);
		break;
	case "info":
		var _s = __map_reserved["face"] != null ? _items.getReserved("face") : _items.h["face"];
		if(_s.indexOf("\"") != -1) {
			_s = StringTools.replace(_s,"\"","");
		}
		_info.face = _s;
		_info.point_size = parseFloat(__map_reserved["size"] != null ? _items.getReserved("size") : _items.h["size"]);
		break;
	case "kerning":
		var _first = Std.parseInt(__map_reserved["first"] != null ? _items.getReserved("first") : _items.h["first"]);
		var _second = Std.parseInt(__map_reserved["second"] != null ? _items.getReserved("second") : _items.h["second"]);
		var _amount = parseFloat(__map_reserved["amount"] != null ? _items.getReserved("amount") : _items.h["amount"]);
		var _map = _info.kernings.get(_first);
		if(_map == null) {
			_map = new haxe_ds_IntMap();
			_info.kernings.set(_first,_map);
		}
		_map.h[_second] = _amount;
		break;
	case "page":
		var _info1 = _info.pages;
		var tmp = Std.parseInt(__map_reserved["id"] != null ? _items.getReserved("id") : _items.h["id"]);
		var _s1 = __map_reserved["file"] != null ? _items.getReserved("file") : _items.h["file"];
		if(_s1.indexOf("\"") != -1) {
			_s1 = StringTools.replace(_s1,"\"","");
		}
		_info1.push({ id : tmp, file : StringTools.trim(_s1)});
		break;
	default:
	}
	_items = null;
};
luxe_importers_bitmapfont_BitmapFontParser.tokenize_line = function(_tokens) {
	var _item_map = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < _tokens.length) {
		var _token = _tokens[_g];
		++_g;
		var _items = _token.split("=");
		var key = _items[0];
		var value = _items[1];
		if(__map_reserved[key] != null) {
			_item_map.setReserved(key,value);
		} else {
			_item_map.h[key] = value;
		}
		_items = null;
	}
	return _item_map;
};
luxe_importers_bitmapfont_BitmapFontParser.trim = function(_s) {
	return StringTools.trim(_s);
};
luxe_importers_bitmapfont_BitmapFontParser.unquote = function(_s) {
	if(_s.indexOf("\"") != -1) {
		_s = StringTools.replace(_s,"\"","");
	}
	return _s;
};
var luxe_macros_BuildVersion = function() { };
$hxClasses["luxe.macros.BuildVersion"] = luxe_macros_BuildVersion;
luxe_macros_BuildVersion.__name__ = ["luxe","macros","BuildVersion"];
luxe_macros_BuildVersion.try_git = function(root) {
	return "";
};
var luxe_options__$DrawOptions_DrawOptions = function() { };
$hxClasses["luxe.options._DrawOptions.DrawOptions"] = luxe_options__$DrawOptions_DrawOptions;
luxe_options__$DrawOptions_DrawOptions.__name__ = ["luxe","options","_DrawOptions","DrawOptions"];
var luxe_resource_Resource = function(_options) {
	this.ref = 0;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	if(_options.id == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.id was null"));
	}
	if(_options.system == null) {
		_options.system = Luxe.resources;
	}
	if(_options.resource_type == null) {
		_options.resource_type = 0;
	}
	this.id = _options.id;
	this.system = _options.system;
	this.resource_type = _options.resource_type;
	this.set_state(0);
	this.set_ref(1);
};
$hxClasses["luxe.resource.Resource"] = luxe_resource_Resource;
luxe_resource_Resource.__name__ = ["luxe","resource","Resource"];
luxe_resource_Resource.prototype = {
	destroy: function(_force) {
		if(_force == null) {
			_force = false;
		}
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		if(!_force) {
			if(this.ref <= 0) {
				throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref > 0"));
			}
			var _g = this;
			_g.set_ref(_g.ref - 1);
			if(this.ref < 0) {
				throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref >= 0"));
			}
		}
		if(this.ref == 0 || _force) {
			this.clear();
			this.set_state(6);
			this.system.remove(this);
			this.system.emit(8,this);
		}
	}
	,invalidate: function() {
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		this.set_state(5);
		this.system.emit(6,this);
	}
	,reload: function() {
		return null;
	}
	,memory_use: function() {
		return 0;
	}
	,set_ref: function(_ref) {
		var pre = this.ref;
		this.ref = _ref;
		if(this.ref > pre) {
			this.system.emit(9,this);
		} else if(this.ref < pre) {
			this.system.emit(10,this);
		}
		return this.ref;
	}
	,set_state: function(_state) {
		this.state = _state;
		switch(this.state) {
		case 2:
			this.system.emit(3,this);
			break;
		case 3:
			this.system.emit(4,this);
			break;
		case 4:
			this.system.emit(5,this);
			break;
		default:
		}
		return this.state;
	}
	,clear: function() {
	}
	,state_string: function() {
		switch(this.state) {
		case 1:
			return "listed";
		case 2:
			return "loading";
		case 3:
			return "loaded";
		case 4:
			return "failed";
		case 5:
			return "invalidated";
		case 6:
			return "destroyed";
		default:
			return "unknown";
		}
	}
	,type_string: function() {
		switch(this.resource_type) {
		case 1:
			return "text";
		case 2:
			return "json";
		case 3:
			return "bytes";
		case 4:
			return "texture";
		case 6:
			return "font";
		case 7:
			return "shader";
		default:
			return "" + this.resource_type;
		}
	}
	,toString: function() {
		return "Resource(`" + this.id + "`, " + this.type_string() + ", " + this.state_string() + ")";
	}
	,__class__: luxe_resource_Resource
	,__properties__: {set_ref:"set_ref",set_state:"set_state"}
};
var luxe_resource_BytesResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 3;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.BytesResource"] = luxe_resource_BytesResource;
luxe_resource_BytesResource.__name__ = ["luxe","resource","BytesResource"];
luxe_resource_BytesResource.__super__ = luxe_resource_Resource;
luxe_resource_BytesResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetBytes.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,memory_use: function() {
		if(this.asset == null) {
			return 0;
		}
		return this.asset.bytes.byteLength;
	}
	,__class__: luxe_resource_BytesResource
});
var luxe_resource_TextResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 1;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.TextResource"] = luxe_resource_TextResource;
luxe_resource_TextResource.__name__ = ["luxe","resource","TextResource"];
luxe_resource_TextResource.__super__ = luxe_resource_Resource;
luxe_resource_TextResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,memory_use: function() {
		if(this.asset == null) {
			return 0;
		}
		return this.asset.text.length;
	}
	,__class__: luxe_resource_TextResource
});
var luxe_resource_JSONResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 2;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.JSONResource"] = luxe_resource_JSONResource;
luxe_resource_JSONResource.__name__ = ["luxe","resource","JSONResource"];
luxe_resource_JSONResource.__super__ = luxe_resource_Resource;
luxe_resource_JSONResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetJSON.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,__class__: luxe_resource_JSONResource
});
var luxe_resource_AudioResource = function(_options) {
	this.is_stream = false;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 8;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
	if(_options.is_stream == null) {
		_options.is_stream = false;
	}
	this.is_stream = _options.is_stream;
	if(this.asset != null) {
		this.source = new snow_systems_audio_AudioSource(Luxe.core.app,this.asset.audio);
	}
};
$hxClasses["luxe.resource.AudioResource"] = luxe_resource_AudioResource;
luxe_resource_AudioResource.__name__ = ["luxe","resource","AudioResource"];
luxe_resource_AudioResource.__super__ = luxe_resource_Resource;
luxe_resource_AudioResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetAudio.load(Luxe.core.app.assets,_gthis.id,_gthis.is_stream);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.source = new snow_systems_audio_AudioSource(Luxe.core.app,_gthis.asset.audio);
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
		if(this.source != null) {
			this.source.destroy();
			this.source = null;
		}
	}
	,__class__: luxe_resource_AudioResource
});
var luxe_structural_BalancedBST = function(compare_function) {
	this.compare = compare_function;
};
$hxClasses["luxe.structural.BalancedBST"] = luxe_structural_BalancedBST;
luxe_structural_BalancedBST.__name__ = ["luxe","structural","BalancedBST"];
luxe_structural_BalancedBST.prototype = {
	size: function() {
		var _node = this.root;
		if(_node == null) {
			return 0;
		} else {
			return _node.nodecount;
		}
	}
	,depth: function() {
		return this.node_depth(this.root);
	}
	,insert: function(_key,_value) {
		this.root = this.node_insert(this.root,_key,_value);
		this.root.color = false;
	}
	,contains: function(_key) {
		return this.find(_key) != null;
	}
	,find: function(_key) {
		return this.node_find(this.root,_key);
	}
	,rank: function(_key) {
		return this.node_rank(_key,this.root);
	}
	,select: function(_rank) {
		var _node = this.node_select(this.root,_rank);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,smallest: function() {
		var _node = this.node_smallest(this.root);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,largest: function() {
		var _node = this.node_largest(this.root);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,remove: function(_key) {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		if(!this.contains(_key)) {
			return false;
		}
		this.root = this.node_remove(this.root,_key);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,remove_smallest: function() {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		this.root = this.node_remove_smallest(this.root);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,remove_largest: function() {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		this.root = this.node_remove_largest(this.root);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,floor: function(_key) {
		var _node = this.node_floor(this.root,_key);
		if(_node == null) {
			return null;
		}
		return _node.key;
	}
	,ceil: function(_key) {
		var _node = this.node_ceil(this.root,_key);
		if(_node == null) {
			return null;
		}
		return _node.key;
	}
	,toArray: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.value);
		});
		return a;
	}
	,keys: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.key);
		});
		return a;
	}
	,iterator: function() {
		return new luxe_structural_BalancedBSTIterator(this);
	}
	,traverse_node: function(_node,_method,_on_traverse) {
		if(_node != null) {
			switch(_method[1]) {
			case 0:
				_on_traverse(_node);
				this.traverse_node(_node.left,_method,_on_traverse);
				this.traverse_node(_node.right,_method,_on_traverse);
				break;
			case 1:
				this.traverse_node(_node.left,_method,_on_traverse);
				_on_traverse(_node);
				this.traverse_node(_node.right,_method,_on_traverse);
				break;
			case 2:
				this.traverse_node(_node.left,_method,_on_traverse);
				this.traverse_node(_node.right,_method,_on_traverse);
				_on_traverse(_node);
				break;
			}
		}
	}
	,get_empty: function() {
		return this.root == null;
	}
	,node_depth: function(_node) {
		if(_node == null) {
			return 0;
		}
		return 1 + (Math.max(this.node_depth(_node.left),this.node_depth(_node.right)) | 0);
	}
	,node_count: function(_node) {
		if(_node == null) {
			return 0;
		} else {
			return _node.nodecount;
		}
	}
	,node_insert: function(_node,_key,_value) {
		if(_node == null) {
			return new luxe_structural_BalancedBSTNode(_key,_value,1,true);
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			_node.left = this.node_insert(_node.left,_key,_value);
		} else if(comparison > 0) {
			_node.right = this.node_insert(_node.right,_key,_value);
		} else {
			_node.value = _value;
		}
		var tmp;
		var _node1 = _node.right;
		if(_node1 == null ? false : _node1.color == true) {
			var _node2 = _node.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			_node = this.rotate_left(_node);
		}
		var tmp1;
		var _node3 = _node.left;
		if(_node3 == null ? false : _node3.color == true) {
			var _node4 = _node.left.left;
			if(_node4 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node4.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node = this.rotate_right(_node);
		}
		var tmp2;
		var _node5 = _node.left;
		if(_node5 == null ? false : _node5.color == true) {
			var _node6 = _node.right;
			if(_node6 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node6.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node);
		}
		var _node7 = _node.left;
		var _node8 = _node.right;
		_node.nodecount = (_node7 == null ? 0 : _node7.nodecount) + (_node8 == null ? 0 : _node8.nodecount) + 1;
		return _node;
	}
	,node_update_count: function(_node) {
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _node;
	}
	,node_find: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			return this.node_find(_node.left,_key);
		} else if(comparison > 0) {
			return this.node_find(_node.right,_key);
		} else {
			return _node.value;
		}
	}
	,node_rank: function(_key,_node) {
		if(_node == null) {
			return 0;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			return this.node_rank(_key,_node.left);
		} else if(comparison > 0) {
			var _node1 = _node.left;
			return 1 + (_node1 == null ? 0 : _node1.nodecount) + this.node_rank(_key,_node.right);
		} else {
			var _node2 = _node.left;
			if(_node2 == null) {
				return 0;
			} else {
				return _node2.nodecount;
			}
		}
	}
	,node_select: function(_node,_rank) {
		if(_node == null) {
			return null;
		}
		var _node1 = _node.left;
		var _r = _node1 == null ? 0 : _node1.nodecount;
		if(_r > _rank) {
			return this.node_select(_node.left,_rank);
		} else if(_r < _rank) {
			return this.node_select(_node.right,_rank - _r - 1);
		} else {
			return _node;
		}
	}
	,node_smallest: function(_node) {
		if(_node.left == null) {
			return _node;
		}
		return this.node_smallest(_node.left);
	}
	,node_largest: function(_node) {
		if(_node.right == null) {
			return _node;
		} else {
			return this.node_largest(_node.right);
		}
	}
	,node_floor: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) {
			return _node;
		} else if(comparison < 0) {
			return this.node_floor(_node.left,_key);
		}
		var _n = this.node_floor(_node.right,_key);
		if(_n != null) {
			return _n;
		} else {
			return _node;
		}
	}
	,node_ceil: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) {
			return _node;
		} else if(comparison < 0) {
			var _n = this.node_ceil(_node.left,_key);
			if(_n != null) {
				return _n;
			} else {
				return _node;
			}
		}
		return this.node_ceil(_node.right,_key);
	}
	,node_remove_smallest: function(_node) {
		if(_node.left == null) {
			return null;
		}
		var tmp;
		var _node1 = _node.left;
		if(!(_node1 == null ? false : _node1.color == true)) {
			var _node2 = _node.left.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _node3 = _node;
			this.swap_color(_node3);
			var _node4 = _node3.right.left;
			if(_node4 == null ? false : _node4.color == true) {
				_node3.right = this.rotate_right(_node3.right);
				_node3 = this.rotate_left(_node3);
			}
			_node = _node3;
		}
		_node.left = this.node_remove_smallest(_node.left);
		var _node5 = _node.left;
		var _node6 = _node.right;
		_node.nodecount = (_node5 == null ? 0 : _node5.nodecount) + (_node6 == null ? 0 : _node6.nodecount) + 1;
		var _node7 = _node;
		var _node8 = _node7.right;
		if(_node8 == null ? false : _node8.color == true) {
			_node7 = this.rotate_left(_node7);
		}
		var tmp1;
		var _node9 = _node7.left;
		if(_node9 == null ? false : _node9.color == true) {
			var _node10 = _node7.left.left;
			if(_node10 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node10.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node7 = this.rotate_right(_node7);
		}
		var tmp2;
		var _node11 = _node7.left;
		if(_node11 == null ? false : _node11.color == true) {
			var _node12 = _node7.right;
			if(_node12 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node12.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node7);
		}
		var _node13 = _node7.left;
		var _node14 = _node7.right;
		_node7.nodecount = (_node13 == null ? 0 : _node13.nodecount) + (_node14 == null ? 0 : _node14.nodecount) + 1;
		return _node7;
	}
	,node_remove_largest: function(_node) {
		var _node1 = _node.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_right(_node);
		}
		if(_node.right == null) {
			return null;
		}
		var tmp;
		var _node2 = _node.right;
		if(!(_node2 == null ? false : _node2.color == true)) {
			var _node3 = _node.right.left;
			tmp = !(_node3 == null ? false : _node3.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _node4 = _node;
			this.swap_color(_node4);
			var _node5 = _node4.left.left;
			if(_node5 == null ? false : _node5.color == true) {
				_node4 = this.rotate_right(_node4);
			}
			_node = _node4;
		}
		_node.right = this.node_remove_largest(_node.right);
		var _node6 = _node.left;
		var _node7 = _node.right;
		_node.nodecount = (_node6 == null ? 0 : _node6.nodecount) + (_node7 == null ? 0 : _node7.nodecount) + 1;
		var _node8 = _node;
		var _node9 = _node8.right;
		if(_node9 == null ? false : _node9.color == true) {
			_node8 = this.rotate_left(_node8);
		}
		var tmp1;
		var _node10 = _node8.left;
		if(_node10 == null ? false : _node10.color == true) {
			var _node11 = _node8.left.left;
			if(_node11 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node11.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node8 = this.rotate_right(_node8);
		}
		var tmp2;
		var _node12 = _node8.left;
		if(_node12 == null ? false : _node12.color == true) {
			var _node13 = _node8.right;
			if(_node13 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node13.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node8);
		}
		var _node14 = _node8.left;
		var _node15 = _node8.right;
		_node8.nodecount = (_node14 == null ? 0 : _node14.nodecount) + (_node15 == null ? 0 : _node15.nodecount) + 1;
		return _node8;
	}
	,node_remove: function(_node,_key) {
		if(this.compare(_key,_node.key) < 0) {
			var tmp;
			var _node1 = _node.left;
			if(!(_node1 == null ? false : _node1.color == true)) {
				var _node2 = _node.left.left;
				tmp = !(_node2 == null ? false : _node2.color == true);
			} else {
				tmp = false;
			}
			if(tmp) {
				var _node3 = _node;
				this.swap_color(_node3);
				var _node4 = _node3.right.left;
				if(_node4 == null ? false : _node4.color == true) {
					_node3.right = this.rotate_right(_node3.right);
					_node3 = this.rotate_left(_node3);
				}
				_node = _node3;
			}
			_node.left = this.node_remove(_node.left,_key);
		} else {
			var _node5 = _node.left;
			if(_node5 == null ? false : _node5.color == true) {
				_node = this.rotate_right(_node);
			}
			if(this.compare(_key,_node.key) == 0 && _node.right == null) {
				return null;
			}
			var tmp1;
			var _node6 = _node.right;
			if(!(_node6 == null ? false : _node6.color == true)) {
				var _node7 = _node.right.left;
				tmp1 = !(_node7 == null ? false : _node7.color == true);
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var _node8 = _node;
				this.swap_color(_node8);
				var _node9 = _node8.left.left;
				if(_node9 == null ? false : _node9.color == true) {
					_node8 = this.rotate_right(_node8);
				}
				_node = _node8;
			}
			if(this.compare(_key,_node.key) == 0) {
				var _n = this.node_smallest(_node.right);
				_node.key = _n.key;
				_node.value = _n.value;
				_node.right = this.node_remove_smallest(_node.right);
			} else {
				_node.right = this.node_remove(_node.right,_key);
			}
		}
		var _node10 = _node;
		var _node11 = _node10.right;
		if(_node11 == null ? false : _node11.color == true) {
			_node10 = this.rotate_left(_node10);
		}
		var tmp2;
		var _node12 = _node10.left;
		if(_node12 == null ? false : _node12.color == true) {
			var _node13 = _node10.left.left;
			if(_node13 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node13.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			_node10 = this.rotate_right(_node10);
		}
		var tmp3;
		var _node14 = _node10.left;
		if(_node14 == null ? false : _node14.color == true) {
			var _node15 = _node10.right;
			if(_node15 == null) {
				tmp3 = false;
			} else {
				tmp3 = _node15.color == true;
			}
		} else {
			tmp3 = false;
		}
		if(tmp3) {
			this.swap_color(_node10);
		}
		var _node16 = _node10.left;
		var _node17 = _node10.right;
		_node10.nodecount = (_node16 == null ? 0 : _node16.nodecount) + (_node17 == null ? 0 : _node17.nodecount) + 1;
		return _node10;
	}
	,is_red: function(_node) {
		if(_node == null) {
			return false;
		}
		return _node.color == true;
	}
	,rotate_left: function(_node) {
		var _n = _node.right;
		_n.color = _node.color;
		_node.color = true;
		_node.right = _n.left;
		_n.left = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,rotate_right: function(_node) {
		var _n = _node.left;
		_n.color = _node.color;
		_node.color = true;
		_node.left = _n.right;
		_n.right = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,swap_color: function(_node) {
		_node.color = !_node.color;
		_node.left.color = !_node.left.color;
		_node.right.color = !_node.right.color;
	}
	,move_red_left: function(_node) {
		this.swap_color(_node);
		var _node1 = _node.right.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node.right = this.rotate_right(_node.right);
			_node = this.rotate_left(_node);
		}
		return _node;
	}
	,move_red_right: function(_node) {
		this.swap_color(_node);
		var _node1 = _node.left.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_right(_node);
		}
		return _node;
	}
	,balance: function(_node) {
		var _node1 = _node.right;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_left(_node);
		}
		var tmp;
		var _node2 = _node.left;
		if(_node2 == null ? false : _node2.color == true) {
			var _node3 = _node.left.left;
			if(_node3 == null) {
				tmp = false;
			} else {
				tmp = _node3.color == true;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			_node = this.rotate_right(_node);
		}
		var tmp1;
		var _node4 = _node.left;
		if(_node4 == null ? false : _node4.color == true) {
			var _node5 = _node.right;
			if(_node5 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node5.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			this.swap_color(_node);
		}
		var _node6 = _node.left;
		var _node7 = _node.right;
		_node.nodecount = (_node6 == null ? 0 : _node6.nodecount) + (_node7 == null ? 0 : _node7.nodecount) + 1;
		return _node;
	}
	,__class__: luxe_structural_BalancedBST
	,__properties__: {get_empty:"get_empty"}
};
var luxe_structural_BalancedBSTIterator = function(_tree) {
	if(_tree == null) {
		return;
	}
	if(_tree.root == null) {
		return;
	}
	this.tree = _tree;
	var _node = this.tree.root;
	while(_node.left != null) _node = _node.left;
	this.current = _node;
	var _node1 = this.tree.root;
	while(_node1.right != null) _node1 = _node1.right;
	this.rightest = _node1;
};
$hxClasses["luxe.structural.BalancedBSTIterator"] = luxe_structural_BalancedBSTIterator;
luxe_structural_BalancedBSTIterator.__name__ = ["luxe","structural","BalancedBSTIterator"];
luxe_structural_BalancedBSTIterator.prototype = {
	hasNext: function() {
		if(this.current == null || this.rightest == null) {
			return false;
		}
		return this.tree.compare(this.current.key,this.rightest.key) <= 0;
	}
	,next: function() {
		var _temp = this.current;
		var tmp;
		if(!(this.current == null || this.rightest == null ? false : this.tree.compare(this.current.key,this.rightest.key) <= 0)) {
			tmp = null;
		} else if(this.current.right != null) {
			var _node = this.current.right;
			while(_node.left != null) _node = _node.left;
			tmp = _node;
		} else {
			var _next = null;
			var _temp1 = this.tree.root;
			while(_temp1 != null) {
				var _comp = this.tree.compare(this.current.key,_temp1.key);
				if(_comp < 0) {
					_next = _temp1;
					_temp1 = _temp1.left;
				} else if(_comp > 0) {
					_temp1 = _temp1.right;
				} else {
					this.current = _next;
					break;
				}
			}
			tmp = _next;
		}
		this.current = tmp;
		return _temp.value;
	}
	,update_next: function() {
		if(!(this.current == null || this.rightest == null ? false : this.tree.compare(this.current.key,this.rightest.key) <= 0)) {
			return null;
		}
		if(this.current.right != null) {
			var _node = this.current.right;
			while(_node.left != null) _node = _node.left;
			return _node;
		}
		var _next = null;
		var _temp = this.tree.root;
		while(_temp != null) {
			var _comp = this.tree.compare(this.current.key,_temp.key);
			if(_comp < 0) {
				_next = _temp;
				_temp = _temp.left;
			} else if(_comp > 0) {
				_temp = _temp.right;
			} else {
				this.current = _next;
				break;
			}
		}
		return _next;
	}
	,_min: function(_node) {
		while(_node.left != null) _node = _node.left;
		return _node;
	}
	,_max: function(_node) {
		while(_node.right != null) _node = _node.right;
		return _node;
	}
	,__class__: luxe_structural_BalancedBSTIterator
};
var luxe_structural__$BalancedBST_NodeColor = function() { };
$hxClasses["luxe.structural._BalancedBST.NodeColor"] = luxe_structural__$BalancedBST_NodeColor;
luxe_structural__$BalancedBST_NodeColor.__name__ = ["luxe","structural","_BalancedBST","NodeColor"];
var luxe_structural_BalancedBSTNode = function(_key,_value,_node_count,_color) {
	this.left = null;
	this.right = null;
	this.key = _key;
	this.value = _value;
	this.nodecount = _node_count;
	this.color = _color;
};
$hxClasses["luxe.structural.BalancedBSTNode"] = luxe_structural_BalancedBSTNode;
luxe_structural_BalancedBSTNode.__name__ = ["luxe","structural","BalancedBSTNode"];
luxe_structural_BalancedBSTNode.prototype = {
	__class__: luxe_structural_BalancedBSTNode
};
var luxe_structural_BalancedBSTTraverseMethod = $hxClasses["luxe.structural.BalancedBSTTraverseMethod"] = { __ename__ : ["luxe","structural","BalancedBSTTraverseMethod"], __constructs__ : ["order_pre","order_retain","order_post"] };
luxe_structural_BalancedBSTTraverseMethod.order_pre = ["order_pre",0];
luxe_structural_BalancedBSTTraverseMethod.order_pre.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_pre.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
luxe_structural_BalancedBSTTraverseMethod.order_retain = ["order_retain",1];
luxe_structural_BalancedBSTTraverseMethod.order_retain.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_retain.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
luxe_structural_BalancedBSTTraverseMethod.order_post = ["order_post",2];
luxe_structural_BalancedBSTTraverseMethod.order_post.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_post.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
var luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_tree) {
	if(_tree == null) {
		return;
	}
	if(_tree.root == null) {
		return;
	}
	this.tree = _tree;
	var _node = this.tree.root;
	while(_node.left != null) _node = _node.left;
	this.current = _node;
	var _node1 = this.tree.root;
	while(_node1.right != null) _node1 = _node1.right;
	this.rightest = _node1;
};
$hxClasses["luxe.structural.BalancedBSTIterator_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBSTIterator_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	hasNext: function() {
		if(this.current == null || this.rightest == null) {
			return false;
		}
		return this.tree.compare(this.current.key,this.rightest.key) <= 0;
	}
	,next: function() {
		var _temp = this.current;
		var tmp;
		if(!(this.current == null || this.rightest == null ? false : this.tree.compare(this.current.key,this.rightest.key) <= 0)) {
			tmp = null;
		} else if(this.current.right != null) {
			var _node = this.current.right;
			while(_node.left != null) _node = _node.left;
			tmp = _node;
		} else {
			var _next = null;
			var _temp1 = this.tree.root;
			while(_temp1 != null) {
				var _comp = this.tree.compare(this.current.key,_temp1.key);
				if(_comp < 0) {
					_next = _temp1;
					_temp1 = _temp1.left;
				} else if(_comp > 0) {
					_temp1 = _temp1.right;
				} else {
					this.current = _next;
					break;
				}
			}
			tmp = _next;
		}
		this.current = tmp;
		return _temp.value;
	}
	,update_next: function() {
		if(!(this.current == null || this.rightest == null ? false : this.tree.compare(this.current.key,this.rightest.key) <= 0)) {
			return null;
		}
		if(this.current.right != null) {
			var _node = this.current.right;
			while(_node.left != null) _node = _node.left;
			return _node;
		}
		var _next = null;
		var _temp = this.tree.root;
		while(_temp != null) {
			var _comp = this.tree.compare(this.current.key,_temp.key);
			if(_comp < 0) {
				_next = _temp;
				_temp = _temp.left;
			} else if(_comp > 0) {
				_temp = _temp.right;
			} else {
				this.current = _next;
				break;
			}
		}
		return _next;
	}
	,_min: function(_node) {
		while(_node.left != null) _node = _node.left;
		return _node;
	}
	,_max: function(_node) {
		while(_node.right != null) _node = _node.right;
		return _node;
	}
	,__class__: luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_key,_value,_node_count,_color) {
	this.left = null;
	this.right = null;
	this.key = _key;
	this.value = _value;
	this.nodecount = _node_count;
	this.color = _color;
};
$hxClasses["luxe.structural.BalancedBSTNode_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBSTNode_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	__class__: luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(compare_function) {
	this.compare = compare_function;
};
$hxClasses["luxe.structural.BalancedBST_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBST_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	size: function() {
		var _node = this.root;
		if(_node == null) {
			return 0;
		} else {
			return _node.nodecount;
		}
	}
	,depth: function() {
		return this.node_depth(this.root);
	}
	,insert: function(_key,_value) {
		this.root = this.node_insert(this.root,_key,_value);
		this.root.color = false;
	}
	,contains: function(_key) {
		return this.find(_key) != null;
	}
	,find: function(_key) {
		return this.node_find(this.root,_key);
	}
	,rank: function(_key) {
		return this.node_rank(_key,this.root);
	}
	,select: function(_rank) {
		var _node = this.node_select(this.root,_rank);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,smallest: function() {
		var _node = this.node_smallest(this.root);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,largest: function() {
		var _node = this.node_largest(this.root);
		if(_node != null) {
			return _node.key;
		} else {
			return null;
		}
	}
	,remove: function(_key) {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		if(!this.contains(_key)) {
			return false;
		}
		this.root = this.node_remove(this.root,_key);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,remove_smallest: function() {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		this.root = this.node_remove_smallest(this.root);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,remove_largest: function() {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		this.root = this.node_remove_largest(this.root);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,floor: function(_key) {
		var _node = this.node_floor(this.root,_key);
		if(_node == null) {
			return null;
		}
		return _node.key;
	}
	,ceil: function(_key) {
		var _node = this.node_ceil(this.root,_key);
		if(_node == null) {
			return null;
		}
		return _node.key;
	}
	,toArray: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.value);
		});
		return a;
	}
	,keys: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.key);
		});
		return a;
	}
	,iterator: function() {
		return new luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(this);
	}
	,traverse_node: function(_node,_method,_on_traverse) {
		if(_node != null) {
			switch(_method[1]) {
			case 0:
				_on_traverse(_node);
				this.traverse_node(_node.left,_method,_on_traverse);
				this.traverse_node(_node.right,_method,_on_traverse);
				break;
			case 1:
				this.traverse_node(_node.left,_method,_on_traverse);
				_on_traverse(_node);
				this.traverse_node(_node.right,_method,_on_traverse);
				break;
			case 2:
				this.traverse_node(_node.left,_method,_on_traverse);
				this.traverse_node(_node.right,_method,_on_traverse);
				_on_traverse(_node);
				break;
			}
		}
	}
	,get_empty: function() {
		return this.root == null;
	}
	,node_depth: function(_node) {
		if(_node == null) {
			return 0;
		}
		return 1 + (Math.max(this.node_depth(_node.left),this.node_depth(_node.right)) | 0);
	}
	,node_count: function(_node) {
		if(_node == null) {
			return 0;
		} else {
			return _node.nodecount;
		}
	}
	,node_insert: function(_node,_key,_value) {
		if(_node == null) {
			return new luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(_key,_value,1,true);
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			_node.left = this.node_insert(_node.left,_key,_value);
		} else if(comparison > 0) {
			_node.right = this.node_insert(_node.right,_key,_value);
		} else {
			_node.value = _value;
		}
		var tmp;
		var _node1 = _node.right;
		if(_node1 == null ? false : _node1.color == true) {
			var _node2 = _node.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			_node = this.rotate_left(_node);
		}
		var tmp1;
		var _node3 = _node.left;
		if(_node3 == null ? false : _node3.color == true) {
			var _node4 = _node.left.left;
			if(_node4 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node4.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node = this.rotate_right(_node);
		}
		var tmp2;
		var _node5 = _node.left;
		if(_node5 == null ? false : _node5.color == true) {
			var _node6 = _node.right;
			if(_node6 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node6.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node);
		}
		var _node7 = _node.left;
		var _node8 = _node.right;
		_node.nodecount = (_node7 == null ? 0 : _node7.nodecount) + (_node8 == null ? 0 : _node8.nodecount) + 1;
		return _node;
	}
	,node_update_count: function(_node) {
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _node;
	}
	,node_find: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			return this.node_find(_node.left,_key);
		} else if(comparison > 0) {
			return this.node_find(_node.right,_key);
		} else {
			return _node.value;
		}
	}
	,node_rank: function(_key,_node) {
		if(_node == null) {
			return 0;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			return this.node_rank(_key,_node.left);
		} else if(comparison > 0) {
			var _node1 = _node.left;
			return 1 + (_node1 == null ? 0 : _node1.nodecount) + this.node_rank(_key,_node.right);
		} else {
			var _node2 = _node.left;
			if(_node2 == null) {
				return 0;
			} else {
				return _node2.nodecount;
			}
		}
	}
	,node_select: function(_node,_rank) {
		if(_node == null) {
			return null;
		}
		var _node1 = _node.left;
		var _r = _node1 == null ? 0 : _node1.nodecount;
		if(_r > _rank) {
			return this.node_select(_node.left,_rank);
		} else if(_r < _rank) {
			return this.node_select(_node.right,_rank - _r - 1);
		} else {
			return _node;
		}
	}
	,node_smallest: function(_node) {
		if(_node.left == null) {
			return _node;
		}
		return this.node_smallest(_node.left);
	}
	,node_largest: function(_node) {
		if(_node.right == null) {
			return _node;
		} else {
			return this.node_largest(_node.right);
		}
	}
	,node_floor: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) {
			return _node;
		} else if(comparison < 0) {
			return this.node_floor(_node.left,_key);
		}
		var _n = this.node_floor(_node.right,_key);
		if(_n != null) {
			return _n;
		} else {
			return _node;
		}
	}
	,node_ceil: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) {
			return _node;
		} else if(comparison < 0) {
			var _n = this.node_ceil(_node.left,_key);
			if(_n != null) {
				return _n;
			} else {
				return _node;
			}
		}
		return this.node_ceil(_node.right,_key);
	}
	,node_remove_smallest: function(_node) {
		if(_node.left == null) {
			return null;
		}
		var tmp;
		var _node1 = _node.left;
		if(!(_node1 == null ? false : _node1.color == true)) {
			var _node2 = _node.left.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _node3 = _node;
			this.swap_color(_node3);
			var _node4 = _node3.right.left;
			if(_node4 == null ? false : _node4.color == true) {
				_node3.right = this.rotate_right(_node3.right);
				_node3 = this.rotate_left(_node3);
			}
			_node = _node3;
		}
		_node.left = this.node_remove_smallest(_node.left);
		var _node5 = _node.left;
		var _node6 = _node.right;
		_node.nodecount = (_node5 == null ? 0 : _node5.nodecount) + (_node6 == null ? 0 : _node6.nodecount) + 1;
		var _node7 = _node;
		var _node8 = _node7.right;
		if(_node8 == null ? false : _node8.color == true) {
			_node7 = this.rotate_left(_node7);
		}
		var tmp1;
		var _node9 = _node7.left;
		if(_node9 == null ? false : _node9.color == true) {
			var _node10 = _node7.left.left;
			if(_node10 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node10.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node7 = this.rotate_right(_node7);
		}
		var tmp2;
		var _node11 = _node7.left;
		if(_node11 == null ? false : _node11.color == true) {
			var _node12 = _node7.right;
			if(_node12 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node12.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node7);
		}
		var _node13 = _node7.left;
		var _node14 = _node7.right;
		_node7.nodecount = (_node13 == null ? 0 : _node13.nodecount) + (_node14 == null ? 0 : _node14.nodecount) + 1;
		return _node7;
	}
	,node_remove_largest: function(_node) {
		var _node1 = _node.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_right(_node);
		}
		if(_node.right == null) {
			return null;
		}
		var tmp;
		var _node2 = _node.right;
		if(!(_node2 == null ? false : _node2.color == true)) {
			var _node3 = _node.right.left;
			tmp = !(_node3 == null ? false : _node3.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _node4 = _node;
			this.swap_color(_node4);
			var _node5 = _node4.left.left;
			if(_node5 == null ? false : _node5.color == true) {
				_node4 = this.rotate_right(_node4);
			}
			_node = _node4;
		}
		_node.right = this.node_remove_largest(_node.right);
		var _node6 = _node.left;
		var _node7 = _node.right;
		_node.nodecount = (_node6 == null ? 0 : _node6.nodecount) + (_node7 == null ? 0 : _node7.nodecount) + 1;
		var _node8 = _node;
		var _node9 = _node8.right;
		if(_node9 == null ? false : _node9.color == true) {
			_node8 = this.rotate_left(_node8);
		}
		var tmp1;
		var _node10 = _node8.left;
		if(_node10 == null ? false : _node10.color == true) {
			var _node11 = _node8.left.left;
			if(_node11 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node11.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node8 = this.rotate_right(_node8);
		}
		var tmp2;
		var _node12 = _node8.left;
		if(_node12 == null ? false : _node12.color == true) {
			var _node13 = _node8.right;
			if(_node13 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node13.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node8);
		}
		var _node14 = _node8.left;
		var _node15 = _node8.right;
		_node8.nodecount = (_node14 == null ? 0 : _node14.nodecount) + (_node15 == null ? 0 : _node15.nodecount) + 1;
		return _node8;
	}
	,node_remove: function(_node,_key) {
		if(this.compare(_key,_node.key) < 0) {
			var tmp;
			var _node1 = _node.left;
			if(!(_node1 == null ? false : _node1.color == true)) {
				var _node2 = _node.left.left;
				tmp = !(_node2 == null ? false : _node2.color == true);
			} else {
				tmp = false;
			}
			if(tmp) {
				var _node3 = _node;
				this.swap_color(_node3);
				var _node4 = _node3.right.left;
				if(_node4 == null ? false : _node4.color == true) {
					_node3.right = this.rotate_right(_node3.right);
					_node3 = this.rotate_left(_node3);
				}
				_node = _node3;
			}
			_node.left = this.node_remove(_node.left,_key);
		} else {
			var _node5 = _node.left;
			if(_node5 == null ? false : _node5.color == true) {
				_node = this.rotate_right(_node);
			}
			if(this.compare(_key,_node.key) == 0 && _node.right == null) {
				return null;
			}
			var tmp1;
			var _node6 = _node.right;
			if(!(_node6 == null ? false : _node6.color == true)) {
				var _node7 = _node.right.left;
				tmp1 = !(_node7 == null ? false : _node7.color == true);
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var _node8 = _node;
				this.swap_color(_node8);
				var _node9 = _node8.left.left;
				if(_node9 == null ? false : _node9.color == true) {
					_node8 = this.rotate_right(_node8);
				}
				_node = _node8;
			}
			if(this.compare(_key,_node.key) == 0) {
				var _n = this.node_smallest(_node.right);
				_node.key = _n.key;
				_node.value = _n.value;
				_node.right = this.node_remove_smallest(_node.right);
			} else {
				_node.right = this.node_remove(_node.right,_key);
			}
		}
		var _node10 = _node;
		var _node11 = _node10.right;
		if(_node11 == null ? false : _node11.color == true) {
			_node10 = this.rotate_left(_node10);
		}
		var tmp2;
		var _node12 = _node10.left;
		if(_node12 == null ? false : _node12.color == true) {
			var _node13 = _node10.left.left;
			if(_node13 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node13.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			_node10 = this.rotate_right(_node10);
		}
		var tmp3;
		var _node14 = _node10.left;
		if(_node14 == null ? false : _node14.color == true) {
			var _node15 = _node10.right;
			if(_node15 == null) {
				tmp3 = false;
			} else {
				tmp3 = _node15.color == true;
			}
		} else {
			tmp3 = false;
		}
		if(tmp3) {
			this.swap_color(_node10);
		}
		var _node16 = _node10.left;
		var _node17 = _node10.right;
		_node10.nodecount = (_node16 == null ? 0 : _node16.nodecount) + (_node17 == null ? 0 : _node17.nodecount) + 1;
		return _node10;
	}
	,is_red: function(_node) {
		if(_node == null) {
			return false;
		}
		return _node.color == true;
	}
	,rotate_left: function(_node) {
		var _n = _node.right;
		_n.color = _node.color;
		_node.color = true;
		_node.right = _n.left;
		_n.left = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,rotate_right: function(_node) {
		var _n = _node.left;
		_n.color = _node.color;
		_node.color = true;
		_node.left = _n.right;
		_n.right = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,swap_color: function(_node) {
		_node.color = !_node.color;
		_node.left.color = !_node.left.color;
		_node.right.color = !_node.right.color;
	}
	,move_red_left: function(_node) {
		this.swap_color(_node);
		var _node1 = _node.right.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node.right = this.rotate_right(_node.right);
			_node = this.rotate_left(_node);
		}
		return _node;
	}
	,move_red_right: function(_node) {
		this.swap_color(_node);
		var _node1 = _node.left.left;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_right(_node);
		}
		return _node;
	}
	,balance: function(_node) {
		var _node1 = _node.right;
		if(_node1 == null ? false : _node1.color == true) {
			_node = this.rotate_left(_node);
		}
		var tmp;
		var _node2 = _node.left;
		if(_node2 == null ? false : _node2.color == true) {
			var _node3 = _node.left.left;
			if(_node3 == null) {
				tmp = false;
			} else {
				tmp = _node3.color == true;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			_node = this.rotate_right(_node);
		}
		var tmp1;
		var _node4 = _node.left;
		if(_node4 == null ? false : _node4.color == true) {
			var _node5 = _node.right;
			if(_node5 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node5.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			this.swap_color(_node);
		}
		var _node6 = _node.left;
		var _node7 = _node.right;
		_node.nodecount = (_node6 == null ? 0 : _node6.nodecount) + (_node7 == null ? 0 : _node7.nodecount) + 1;
		return _node;
	}
	,__class__: luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
	,__properties__: {get_empty:"get_empty"}
};
var luxe_structural_OrderedMapIterator = function(omap) {
	this.index = 0;
	this.map = omap;
};
$hxClasses["luxe.structural.OrderedMapIterator"] = luxe_structural_OrderedMapIterator;
luxe_structural_OrderedMapIterator.__name__ = ["luxe","structural","OrderedMapIterator"];
luxe_structural_OrderedMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.map._keys.length;
	}
	,next: function() {
		return this.map.map.get(this.map._keys[this.index++]);
	}
	,__class__: luxe_structural_OrderedMapIterator
};
var luxe_structural_OrderedMap = function(_map) {
	this.idx = 0;
	this._keys = [];
	this.map = _map;
};
$hxClasses["luxe.structural.OrderedMap"] = luxe_structural_OrderedMap;
luxe_structural_OrderedMap.__name__ = ["luxe","structural","OrderedMap"];
luxe_structural_OrderedMap.__interfaces__ = [haxe_IMap];
luxe_structural_OrderedMap.prototype = {
	set: function(key,value) {
		if(!this.map.exists(key)) {
			this._keys.push(key);
		}
		this.map.set(key,value);
	}
	,toString: function() {
		var _ret = "";
		var _cnt = 0;
		var _len = this._keys.length;
		var _g = 0;
		var _g1 = this._keys;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			_ret += "" + Std.string(k) + " => " + Std.string(this.map.get(k)) + (_cnt++ < _len - 1 ? ", " : "");
		}
		return "{" + _ret + "}";
	}
	,iterator: function() {
		return new luxe_structural_OrderedMapIterator(this);
	}
	,remove: function(key) {
		if(this.map.remove(key)) {
			return HxOverrides.remove(this._keys,key);
		} else {
			return false;
		}
	}
	,exists: function(key) {
		return this.map.exists(key);
	}
	,get: function(key) {
		return this.map.get(key);
	}
	,keys: function() {
		return HxOverrides.iter(this._keys);
	}
	,__class__: luxe_structural_OrderedMap
};
var luxe_structural_OrderedMapIterator_$String_$luxe_$Component = function(omap) {
	this.index = 0;
	this.map = omap;
};
$hxClasses["luxe.structural.OrderedMapIterator_String_luxe_Component"] = luxe_structural_OrderedMapIterator_$String_$luxe_$Component;
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.__name__ = ["luxe","structural","OrderedMapIterator_String_luxe_Component"];
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.prototype = {
	hasNext: function() {
		return this.index < this.map._keys.length;
	}
	,next: function() {
		return this.map.map.get(this.map._keys[this.index++]);
	}
	,__class__: luxe_structural_OrderedMapIterator_$String_$luxe_$Component
};
var luxe_structural_OrderedMap_$String_$luxe_$Component = function(_map) {
	this.idx = 0;
	this._keys = [];
	this.map = _map;
};
$hxClasses["luxe.structural.OrderedMap_String_luxe_Component"] = luxe_structural_OrderedMap_$String_$luxe_$Component;
luxe_structural_OrderedMap_$String_$luxe_$Component.__name__ = ["luxe","structural","OrderedMap_String_luxe_Component"];
luxe_structural_OrderedMap_$String_$luxe_$Component.__interfaces__ = [haxe_IMap];
luxe_structural_OrderedMap_$String_$luxe_$Component.prototype = {
	set: function(key,value) {
		if(!this.map.exists(key)) {
			this._keys.push(key);
		}
		this.map.set(key,value);
	}
	,toString: function() {
		var _ret = "";
		var _cnt = 0;
		var _len = this._keys.length;
		var _g = 0;
		var _g1 = this._keys;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			_ret += "" + (k == null ? "null" : "" + k) + " => " + Std.string(this.map.get(k)) + (_cnt++ < _len - 1 ? ", " : "");
		}
		return "{" + _ret + "}";
	}
	,iterator: function() {
		return new luxe_structural_OrderedMapIterator_$String_$luxe_$Component(this);
	}
	,remove: function(key) {
		if(this.map.remove(key)) {
			return HxOverrides.remove(this._keys,key);
		} else {
			return false;
		}
	}
	,exists: function(key) {
		return this.map.exists(key);
	}
	,get: function(key) {
		return this.map.get(key);
	}
	,keys: function() {
		return HxOverrides.iter(this._keys);
	}
	,__class__: luxe_structural_OrderedMap_$String_$luxe_$Component
};
var luxe_tween_actuators_IGenericActuator = function() { };
$hxClasses["luxe.tween.actuators.IGenericActuator"] = luxe_tween_actuators_IGenericActuator;
luxe_tween_actuators_IGenericActuator.__name__ = ["luxe","tween","actuators","IGenericActuator"];
luxe_tween_actuators_IGenericActuator.prototype = {
	__class__: luxe_tween_actuators_IGenericActuator
};
var luxe_tween_actuators_GenericActuator = function(target,duration,properties) {
	this.timescaled = false;
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = luxe_tween_Actuate.defaultEase;
};
$hxClasses["luxe.tween.actuators.GenericActuator"] = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_GenericActuator.__name__ = ["luxe","tween","actuators","GenericActuator"];
luxe_tween_actuators_GenericActuator.__interfaces__ = [luxe_tween_actuators_IGenericActuator];
luxe_tween_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				this.target[i] = Reflect.field(this.properties,i);
			} else {
				var o = this.target;
				var value = Reflect.field(this.properties,i);
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + i];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[i] = value;
				}
			}
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) {
			params = [];
		}
		return method.apply(method,params);
	}
	,change: function() {
		if(this._onUpdate != null) {
			var method = this._onUpdate;
			var params = this._onUpdateParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) {
				var method = this._onComplete;
				var params = this._onCompleteParams;
				if(params == null) {
					params = [];
				}
				method.apply(method,params);
			}
		}
		luxe_tween_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,timescale: function(_value) {
		if(_value == null) {
			_value = true;
		}
		this.timescaled = _value;
		return this;
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) {
			this._onCompleteParams = [];
		} else {
			this._onCompleteParams = parameters;
		}
		if(this.duration == 0) {
			this.complete();
		}
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) {
			this._onRepeatParams = [];
		} else {
			this._onRepeatParams = parameters;
		}
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		return this;
	}
	,pause: function() {
	}
	,reflect: function(value) {
		if(value == null) {
			value = true;
		}
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) {
			times = -1;
		}
		this._repeat = times;
		return this;
	}
	,resume: function() {
	}
	,reverse: function(value) {
		if(value == null) {
			value = true;
		}
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) {
			value = true;
		}
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) {
			value = true;
		}
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: luxe_tween_actuators_GenericActuator
};
var luxe_tween_actuators_SimpleActuator = function(target,duration,properties) {
	this.has_timescaled_starttime = false;
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	luxe_tween_actuators_GenericActuator.call(this,target,duration,properties);
	if(!luxe_tween_actuators_SimpleActuator.addedEvent) {
		luxe_tween_actuators_SimpleActuator.addedEvent = true;
		Luxe.on(4,luxe_tween_actuators_SimpleActuator.on_internal_update);
	}
};
$hxClasses["luxe.tween.actuators.SimpleActuator"] = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_SimpleActuator.__name__ = ["luxe","tween","actuators","SimpleActuator"];
luxe_tween_actuators_SimpleActuator.on_internal_update = function(_) {
	luxe_tween_actuators_SimpleActuator.update_timer += Luxe.core.frame_delta;
	luxe_tween_actuators_SimpleActuator.current_time = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var currentTime = luxe_tween_actuators_SimpleActuator.current_time;
	var actuator;
	var j = 0;
	var _g1 = 0;
	var _g = luxe_tween_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		++_g1;
		actuator = luxe_tween_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(actuator.timescaled) {
				currentTime = luxe_tween_actuators_SimpleActuator.update_timer;
			} else {
				currentTime = luxe_tween_actuators_SimpleActuator.current_time;
			}
			if(actuator.timescaled && !actuator.has_timescaled_starttime) {
				actuator.has_timescaled_starttime = true;
				actuator.startTime = luxe_tween_actuators_SimpleActuator.update_timer;
				actuator.timeOffset = actuator.startTime;
			}
			if(currentTime > actuator.timeOffset) {
				actuator.update(currentTime);
			}
			++j;
		} else {
			luxe_tween_actuators_SimpleActuator.actuators.splice(j,1);
			--luxe_tween_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
luxe_tween_actuators_SimpleActuator.__super__ = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_SimpleActuator.prototype = $extend(luxe_tween_actuators_GenericActuator.prototype,{
	autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) {
				var target = this.target;
				var value1 = this.cacheVisible;
				if(Object.prototype.hasOwnProperty.call(target,"visible")) {
					target["visible"] = value1;
				} else {
					var tmp;
					var tmp1;
					if(target.__properties__) {
						tmp = target.__properties__["set_" + "visible"];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						target[tmp](value1);
					} else {
						target["visible"] = value1;
					}
				}
			}
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			value = Reflect.field(target,propertyName);
		} else {
			var tmp;
			var value1;
			if(target == null) {
				value1 = null;
			} else {
				var value2;
				if(target.__properties__) {
					tmp = target.__properties__["get_" + propertyName];
					value2 = tmp;
				} else {
					value2 = false;
				}
				if(value2) {
					value1 = target[tmp]();
				} else {
					value1 = target[propertyName];
				}
			}
			value = value1;
		}
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && (!this.target.__properties__ || !this.target.__properties__["set_" + i])) {
				start = Reflect.field(this.target,i);
			} else {
				isField = false;
				var o = this.target;
				var tmp;
				if(o == null) {
					start = null;
				} else {
					var start1;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + i];
						start1 = tmp;
					} else {
						start1 = false;
					}
					if(start1) {
						start = o[tmp]();
					} else {
						start = o[i];
					}
				}
			}
			if(typeof(start) == "number") {
				var details1 = this.target;
				var target = this.properties;
				var value = null;
				if(Object.prototype.hasOwnProperty.call(target,i)) {
					value = Reflect.field(target,i);
				} else {
					var tmp1;
					var value1;
					if(target == null) {
						value1 = null;
					} else {
						var value2;
						if(target.__properties__) {
							tmp1 = target.__properties__["get_" + i];
							value2 = tmp1;
						} else {
							value2 = false;
						}
						if(value2) {
							value1 = target[tmp1]();
						} else {
							value1 = target[i];
						}
					}
					value = value1;
				}
				details = new luxe_tween_actuators_PropertyDetails(details1,i,start,value - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && Object.prototype.hasOwnProperty.call(this.properties,"visible");
		var tmp;
		if(this.toggleVisible && this.properties.alpha != 0) {
			var target = this.target;
			var value = null;
			if(Object.prototype.hasOwnProperty.call(target,"visible")) {
				value = Reflect.field(target,"visible");
			} else {
				var tmp1;
				var value1;
				if(target == null) {
					value1 = null;
				} else {
					var value2;
					if(target.__properties__) {
						tmp1 = target.__properties__["get_" + "visible"];
						value2 = tmp1;
					} else {
						value2 = false;
					}
					if(value2) {
						value1 = target[tmp1]();
					} else {
						value1 = target["visible"];
					}
				}
				value = value1;
			}
			tmp = !value;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.setVisible = true;
			var target1 = this.target;
			var value3 = null;
			if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
				value3 = Reflect.field(target1,"visible");
			} else {
				var tmp2;
				var value4;
				if(target1 == null) {
					value4 = null;
				} else {
					var value5;
					if(target1.__properties__) {
						tmp2 = target1.__properties__["get_" + "visible"];
						value5 = tmp2;
					} else {
						value5 = false;
					}
					if(value5) {
						value4 = target1[tmp2]();
					} else {
						value4 = target1["visible"];
					}
				}
				value3 = value4;
			}
			this.cacheVisible = value3;
			var target2 = this.target;
			if(Object.prototype.hasOwnProperty.call(target2,"visible")) {
				target2["visible"] = true;
			} else {
				var tmp3;
				var tmp4;
				if(target2.__properties__) {
					tmp3 = target2.__properties__["set_" + "visible"];
					tmp4 = tmp3;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					target2[tmp3](true);
				} else {
					target2["visible"] = true;
				}
			}
		}
		this.timeOffset = this.startTime;
		luxe_tween_actuators_SimpleActuator.actuators.push(this);
		++luxe_tween_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		this.paused = true;
		this.pauseTime = this.timescaled ? luxe_tween_actuators_SimpleActuator.update_timer : luxe_tween_actuators_SimpleActuator.current_time;
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (this.timescaled ? luxe_tween_actuators_SimpleActuator.update_timer : luxe_tween_actuators_SimpleActuator.current_time) - this.pauseTime;
		}
	}
	,setField: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			var tmp;
			var tmp1;
			if(target.__properties__) {
				tmp = target.__properties__["set_" + propertyName];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				target[tmp](value);
			} else {
				target[propertyName] = value;
			}
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) {
			var o = details.target;
			var field = details.propertyName;
			var tmp;
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["set_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				o[tmp](value);
			} else {
				o[field] = value;
			}
		} else {
			var o1 = details.target;
			var field1 = details.propertyName;
			var tmp2;
			var tmp3;
			if(o1.__properties__) {
				tmp2 = o1.__properties__["set_" + field1];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o1[tmp2](value);
			} else {
				o1[field1] = value;
			}
		}
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) {
					this.apply();
				}
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) {
						this.apply();
					}
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					details = this.propertyDetails[_g1++];
					var value = details.start + details.change * easing;
					if(details.isField) {
						var o = details.target;
						var field = details.propertyName;
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					} else {
						var o1 = details.target;
						var field1 = details.propertyName;
						var tmp2;
						var tmp3;
						if(o1.__properties__) {
							tmp2 = o1.__properties__["set_" + field1];
							tmp3 = tmp2;
						} else {
							tmp3 = false;
						}
						if(tmp3) {
							o1[tmp2](value);
						} else {
							o1[field1] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					details = this.propertyDetails[_g11++];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) {
							rotation -= 360;
						} else if(rotation < -180) {
							rotation += 360;
						}
						endValue = details.start + rotation * easing;
					} else {
						endValue = details.start + details.change * easing;
					}
					if(!this._snapping) {
						if(details.isField) {
							var o2 = details.target;
							var field2 = details.propertyName;
							var tmp4;
							var tmp5;
							if(o2.__properties__) {
								tmp4 = o2.__properties__["set_" + field2];
								tmp5 = tmp4;
							} else {
								tmp5 = false;
							}
							if(tmp5) {
								o2[tmp4](endValue);
							} else {
								o2[field2] = endValue;
							}
						} else {
							var o3 = details.target;
							var field3 = details.propertyName;
							var tmp6;
							var tmp7;
							if(o3.__properties__) {
								tmp6 = o3.__properties__["set_" + field3];
								tmp7 = tmp6;
							} else {
								tmp7 = false;
							}
							if(tmp7) {
								o3[tmp6](endValue);
							} else {
								o3[field3] = endValue;
							}
						}
					} else {
						var value1 = Math.round(endValue);
						if(details.isField) {
							var o4 = details.target;
							var field4 = details.propertyName;
							var tmp8;
							var tmp9;
							if(o4.__properties__) {
								tmp8 = o4.__properties__["set_" + field4];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								o4[tmp8](value1);
							} else {
								o4[field4] = value1;
							}
						} else {
							var o5 = details.target;
							var field5 = details.propertyName;
							var tmp10;
							var tmp11;
							if(o5.__properties__) {
								tmp10 = o5.__properties__["set_" + field5];
								tmp11 = tmp10;
							} else {
								tmp11 = false;
							}
							if(tmp11) {
								o5[tmp10](value1);
							} else {
								o5[field5] = value1;
							}
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp12;
					if(this.toggleVisible) {
						var target = this.target;
						var value2 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value2 = Reflect.field(target,"alpha");
						} else {
							var tmp13;
							var value3;
							if(target == null) {
								value3 = null;
							} else {
								var value4;
								if(target.__properties__) {
									tmp13 = target.__properties__["get_" + "alpha"];
									value4 = tmp13;
								} else {
									value4 = false;
								}
								if(value4) {
									value3 = target[tmp13]();
								} else {
									value3 = target["alpha"];
								}
							}
							value2 = value3;
						}
						tmp12 = value2 == 0;
					} else {
						tmp12 = false;
					}
					if(tmp12) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp14;
							var tmp15;
							if(target1.__properties__) {
								tmp14 = target1.__properties__["set_" + "visible"];
								tmp15 = tmp14;
							} else {
								tmp15 = false;
							}
							if(tmp15) {
								target1[tmp14](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: luxe_tween_actuators_SimpleActuator
});
var luxe_tween_easing_Quad = function() { };
$hxClasses["luxe.tween.easing.Quad"] = luxe_tween_easing_Quad;
luxe_tween_easing_Quad.__name__ = ["luxe","tween","easing","Quad"];
luxe_tween_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
luxe_tween_easing_Quad.get_easeIn = function() {
	return new luxe_tween_easing_QuadEaseIn();
};
luxe_tween_easing_Quad.get_easeInOut = function() {
	return new luxe_tween_easing_QuadEaseInOut();
};
luxe_tween_easing_Quad.get_easeOut = function() {
	return new luxe_tween_easing_QuadEaseOut();
};
var luxe_tween_easing_IEasing = function() { };
$hxClasses["luxe.tween.easing.IEasing"] = luxe_tween_easing_IEasing;
luxe_tween_easing_IEasing.__name__ = ["luxe","tween","easing","IEasing"];
luxe_tween_easing_IEasing.prototype = {
	__class__: luxe_tween_easing_IEasing
};
var luxe_tween_easing_QuadEaseOut = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseOut"] = luxe_tween_easing_QuadEaseOut;
luxe_tween_easing_QuadEaseOut.__name__ = ["luxe","tween","easing","QuadEaseOut"];
luxe_tween_easing_QuadEaseOut.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: luxe_tween_easing_QuadEaseOut
};
var luxe_tween_Actuate = function() { };
$hxClasses["luxe.tween.Actuate"] = luxe_tween_Actuate;
luxe_tween_Actuate.__name__ = ["luxe","tween","Actuate"];
luxe_tween_Actuate.apply = function(target,properties,customActuator) {
	luxe_tween_Actuate.stop(target,properties);
	if(customActuator == null) {
		customActuator = luxe_tween_Actuate.defaultActuator;
	}
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
luxe_tween_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) {
		allowCreation = true;
	}
	if(luxe_tween_Actuate.targetLibraries.h.__keys__[target.__id__] == null && allowCreation) {
		luxe_tween_Actuate.targetLibraries.set(target,[]);
	}
	return luxe_tween_Actuate.targetLibraries.h[target.__id__];
};
luxe_tween_Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) {
		overwrite = true;
	}
	return luxe_tween_Actuate.tween(target,duration,properties,overwrite,luxe_tween_actuators_MotionPathActuator);
};
luxe_tween_Actuate.pause = function(target) {
	if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) {
		(js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).pause();
	} else {
		var library = luxe_tween_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.pause();
			}
		}
	}
};
luxe_tween_Actuate.pauseAll = function() {
	var library = luxe_tween_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var _g = 0;
		while(_g < library1.length) {
			var actuator = library1[_g];
			++_g;
			actuator.pause();
		}
	}
};
luxe_tween_Actuate.reset = function() {
	var library = luxe_tween_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var i = library1.length - 1;
		while(i >= 0) {
			library1[i].stop(null,false,false);
			--i;
		}
	}
	luxe_tween_Actuate.targetLibraries = new haxe_ds_ObjectMap();
};
luxe_tween_Actuate.resume = function(target) {
	if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) {
		(js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).resume();
	} else {
		var library = luxe_tween_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.resume();
			}
		}
	}
};
luxe_tween_Actuate.resumeAll = function() {
	var library = luxe_tween_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var _g = 0;
		while(_g < library1.length) {
			var actuator = library1[_g];
			++_g;
			actuator.resume();
		}
	}
};
luxe_tween_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) {
		sendEvent = true;
	}
	if(complete == null) {
		complete = false;
	}
	if(target != null) {
		if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) {
			(js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).stop(null,complete,sendEvent);
		} else {
			var library = luxe_tween_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					temp[properties] = null;
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						temp1[property] = null;
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					--i;
				}
			}
		}
	}
};
luxe_tween_Actuate.timer = function(duration,customActuator) {
	return luxe_tween_Actuate.tween(new luxe_tween__$Actuate_TweenTimer(0),duration,new luxe_tween__$Actuate_TweenTimer(1),false,customActuator);
};
luxe_tween_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) {
		overwrite = true;
	}
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) {
				customActuator = luxe_tween_Actuate.defaultActuator;
			}
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = luxe_tween_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					--i;
				}
				library = luxe_tween_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else {
			return luxe_tween_Actuate.apply(target,properties,customActuator);
		}
	}
	return null;
};
luxe_tween_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(luxe_tween_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(luxe_tween_Actuate.targetLibraries.h[target.__id__],actuator);
		if(luxe_tween_Actuate.targetLibraries.h[target.__id__].length == 0) {
			luxe_tween_Actuate.targetLibraries.remove(target);
		}
	}
};
luxe_tween_Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) {
		overwrite = true;
	}
	return luxe_tween_Actuate.tween(target,duration,{ start : start, end : end},overwrite,luxe_tween_actuators_MethodActuator);
};
var luxe_tween__$Actuate_TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["luxe.tween._Actuate.TweenTimer"] = luxe_tween__$Actuate_TweenTimer;
luxe_tween__$Actuate_TweenTimer.__name__ = ["luxe","tween","_Actuate","TweenTimer"];
luxe_tween__$Actuate_TweenTimer.prototype = {
	__class__: luxe_tween__$Actuate_TweenTimer
};
var luxe_tween_MotionPath = function() {
	this._x = new luxe_tween_ComponentPath();
	this._y = new luxe_tween_ComponentPath();
	this._rotation = null;
};
$hxClasses["luxe.tween.MotionPath"] = luxe_tween_MotionPath;
luxe_tween_MotionPath.__name__ = ["luxe","tween","MotionPath"];
luxe_tween_MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) {
			strength = 1;
		}
		this._x.addPath(new luxe_tween_BezierPath(x,controlX,strength));
		this._y.addPath(new luxe_tween_BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) {
			strength = 1;
		}
		this._x.addPath(new luxe_tween_LinearPath(x,strength));
		this._y.addPath(new luxe_tween_LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) {
			this._rotation = new luxe_tween_RotationPath(this._x,this._y);
		}
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: luxe_tween_MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
var luxe_tween_IComponentPath = function() { };
$hxClasses["luxe.tween.IComponentPath"] = luxe_tween_IComponentPath;
luxe_tween_IComponentPath.__name__ = ["luxe","tween","IComponentPath"];
luxe_tween_IComponentPath.prototype = {
	__class__: luxe_tween_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_ComponentPath = function() {
	this.paths = [];
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["luxe.tween.ComponentPath"] = luxe_tween_ComponentPath;
luxe_tween_ComponentPath.__name__ = ["luxe","tween","ComponentPath"];
luxe_tween_ComponentPath.__interfaces__ = [luxe_tween_IComponentPath];
luxe_tween_ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) {
			return this.paths[0].calculate(this.start,k);
		} else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else {
					return path.calculate(lastEnd,ratio / path.strength);
				}
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			return this.paths[this.paths.length - 1].end;
		} else {
			return this.start;
		}
	}
	,__class__: luxe_tween_ComponentPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["luxe.tween.BezierPath"] = luxe_tween_BezierPath;
luxe_tween_BezierPath.__name__ = ["luxe","tween","BezierPath"];
luxe_tween_BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: luxe_tween_BezierPath
};
var luxe_tween_LinearPath = function(end,strength) {
	luxe_tween_BezierPath.call(this,end,0,strength);
};
$hxClasses["luxe.tween.LinearPath"] = luxe_tween_LinearPath;
luxe_tween_LinearPath.__name__ = ["luxe","tween","LinearPath"];
luxe_tween_LinearPath.__super__ = luxe_tween_BezierPath;
luxe_tween_LinearPath.prototype = $extend(luxe_tween_BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: luxe_tween_LinearPath
});
var luxe_tween_RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["luxe.tween.RotationPath"] = luxe_tween_RotationPath;
luxe_tween_RotationPath.__name__ = ["luxe","tween","RotationPath"];
luxe_tween_RotationPath.__interfaces__ = [luxe_tween_IComponentPath];
luxe_tween_RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var angle = Math.atan2(this._y.calculate(k) - this._y.calculate(k + this.step),dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: luxe_tween_RotationPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) {
		this.properties.start = [];
	}
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) {
		this.properties.end = this.properties.start;
	}
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		++_g1;
		this.currentParameters.push(null);
	}
};
$hxClasses["luxe.tween.actuators.MethodActuator"] = luxe_tween_actuators_MethodActuator;
luxe_tween_actuators_MethodActuator.__name__ = ["luxe","tween","actuators","MethodActuator"];
luxe_tween_actuators_MethodActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MethodActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		var method = this.target;
		var params = this.properties.end;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		var method = this.target;
		var params = this.currentParameters;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
		luxe_tween_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || typeof(start) == "number" && ((start | 0) === start)) {
				details = new luxe_tween_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		luxe_tween_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			var method = this.target;
			var params = this.currentParameters;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,__class__: luxe_tween_actuators_MethodActuator
});
var luxe_tween_actuators_MotionPathActuator = function(target,duration,properties) {
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["luxe.tween.actuators.MotionPathActuator"] = luxe_tween_actuators_MotionPathActuator;
luxe_tween_actuators_MotionPathActuator.__name__ = ["luxe","tween","actuators","MotionPathActuator"];
luxe_tween_actuators_MotionPathActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MotionPathActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
				this.target[propertyName] = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end();
			} else {
				var o = this.target;
				var value = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end();
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + propertyName];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[propertyName] = value;
				}
			}
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
					path.start = Reflect.field(this.target,propertyName);
				} else {
					isField = false;
					var o = this.target;
					var tmp;
					var tmp1;
					if(o == null) {
						tmp1 = null;
					} else {
						var tmp2;
						if(o.__properties__) {
							tmp = o.__properties__["get_" + propertyName];
							tmp2 = tmp;
						} else {
							tmp2 = false;
						}
						if(tmp2) {
							tmp1 = o[tmp]();
						} else {
							tmp1 = o[propertyName];
						}
					}
					path.start = tmp1;
				}
				details = new luxe_tween_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) {
						details1.target[details1.propertyName] = (js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
					} else {
						var o = details1.target;
						var field = details1.propertyName;
						var value = (js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) {
							details2.target[details2.propertyName] = (js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
						} else {
							var o1 = details2.target;
							var field1 = details2.propertyName;
							var value1 = (js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
							var tmp2;
							var tmp3;
							if(o1.__properties__) {
								tmp2 = o1.__properties__["set_" + field1];
								tmp3 = tmp2;
							} else {
								tmp3 = false;
							}
							if(tmp3) {
								o1[tmp2](value1);
							} else {
								o1[field1] = value1;
							}
						}
					} else if(details2.isField) {
						details2.target[details2.propertyName] = Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
					} else {
						var o2 = details2.target;
						var field2 = details2.propertyName;
						var value2 = Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
						var tmp4;
						var tmp5;
						if(o2.__properties__) {
							tmp4 = o2.__properties__["set_" + field2];
							tmp5 = tmp4;
						} else {
							tmp5 = false;
						}
						if(tmp5) {
							o2[tmp4](value2);
						} else {
							o2[field2] = value2;
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp6;
					if(this.toggleVisible) {
						var target = this.target;
						var value3 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value3 = Reflect.field(target,"alpha");
						} else {
							var tmp7;
							var value4;
							if(target == null) {
								value4 = null;
							} else {
								var value5;
								if(target.__properties__) {
									tmp7 = target.__properties__["get_" + "alpha"];
									value5 = tmp7;
								} else {
									value5 = false;
								}
								if(value5) {
									value4 = target[tmp7]();
								} else {
									value4 = target["alpha"];
								}
							}
							value3 = value4;
						}
						tmp6 = value3 == 0;
					} else {
						tmp6 = false;
					}
					if(tmp6) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp8;
							var tmp9;
							if(target1.__properties__) {
								tmp8 = target1.__properties__["set_" + "visible"];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								target1[tmp8](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: luxe_tween_actuators_MotionPathActuator
});
var luxe_tween_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) {
		isField = true;
	}
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["luxe.tween.actuators.PropertyDetails"] = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyDetails.__name__ = ["luxe","tween","actuators","PropertyDetails"];
luxe_tween_actuators_PropertyDetails.prototype = {
	__class__: luxe_tween_actuators_PropertyDetails
};
var luxe_tween_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) {
		isField = true;
	}
	luxe_tween_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["luxe.tween.actuators.PropertyPathDetails"] = luxe_tween_actuators_PropertyPathDetails;
luxe_tween_actuators_PropertyPathDetails.__name__ = ["luxe","tween","actuators","PropertyPathDetails"];
luxe_tween_actuators_PropertyPathDetails.__super__ = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyPathDetails.prototype = $extend(luxe_tween_actuators_PropertyDetails.prototype,{
	__class__: luxe_tween_actuators_PropertyPathDetails
});
var luxe_tween_easing_Linear = function() { };
$hxClasses["luxe.tween.easing.Linear"] = luxe_tween_easing_Linear;
luxe_tween_easing_Linear.__name__ = ["luxe","tween","easing","Linear"];
luxe_tween_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
luxe_tween_easing_Linear.get_easeNone = function() {
	return new luxe_tween_easing_LinearEaseNone();
};
var luxe_tween_easing_LinearEaseNone = function() {
};
$hxClasses["luxe.tween.easing.LinearEaseNone"] = luxe_tween_easing_LinearEaseNone;
luxe_tween_easing_LinearEaseNone.__name__ = ["luxe","tween","easing","LinearEaseNone"];
luxe_tween_easing_LinearEaseNone.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: luxe_tween_easing_LinearEaseNone
};
var luxe_tween_easing_QuadEaseIn = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseIn"] = luxe_tween_easing_QuadEaseIn;
luxe_tween_easing_QuadEaseIn.__name__ = ["luxe","tween","easing","QuadEaseIn"];
luxe_tween_easing_QuadEaseIn.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: luxe_tween_easing_QuadEaseIn
};
var luxe_tween_easing_QuadEaseInOut = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseInOut"] = luxe_tween_easing_QuadEaseInOut;
luxe_tween_easing_QuadEaseInOut.__name__ = ["luxe","tween","easing","QuadEaseInOut"];
luxe_tween_easing_QuadEaseInOut.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: luxe_tween_easing_QuadEaseInOut
};
var luxe_utils_GeometryUtils = function() {
	this._v_cache = new phoenix_Vector();
};
$hxClasses["luxe.utils.GeometryUtils"] = luxe_utils_GeometryUtils;
luxe_utils_GeometryUtils.__name__ = ["luxe","utils","GeometryUtils"];
luxe_utils_GeometryUtils.prototype = {
	segments_for_smooth_circle: function(_radius,_smooth) {
		if(_smooth == null) {
			_smooth = 5;
		}
		return _smooth * Math.sqrt(_radius) | 0;
	}
	,random_point_in_unit_circle: function() {
		var _r = Math.sqrt(Math.random());
		var _t = (-1 + 2 * Math.random()) * 6.283185307179586;
		return new phoenix_Vector(_r * Math.cos(_t),_r * Math.sin(_t));
	}
	,point_in_polygon: function(_point,_offset,_verts) {
		if(_offset == null) {
			_offset = new phoenix_Vector();
		}
		var c = false;
		var nvert = _verts.length;
		var j = nvert - 1;
		var _g1 = 0;
		while(_g1 < nvert) {
			var i = _g1++;
			if(_verts[i].y + _offset.y > _point.y != _verts[j].y + _offset.y > _point.y && _point.x < (_verts[j].x + _offset.x - (_verts[i].x + _offset.x)) * (_point.y - (_verts[i].y + _offset.y)) / (_verts[j].y + _offset.y - (_verts[i].y + _offset.y)) + (_verts[i].x + _offset.x)) {
				c = !c;
			}
			j = i;
		}
		return c;
	}
	,point_in_geometry: function(_point,_geometry) {
		var c = false;
		var nvert = _geometry.vertices.length;
		var j = nvert - 1;
		var _g1 = 0;
		while(_g1 < nvert) {
			var i = _g1++;
			var _vert_i = _geometry.vertices[i].pos;
			var _vert_j = _geometry.vertices[j].pos;
			var _this = this._v_cache;
			var _x = _vert_i.x;
			var _y = _vert_i.y;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			var _this1 = this._v_cache;
			var _this2 = _geometry.transform;
			if(!_this2._destroying) {
				if(_this2.parent != null && _this2.parent.dirty) {
					_this2.parent.clean_check();
				}
				if(_this2.dirty && !_this2._cleaning && !_this2.manual_update) {
					_this2.clean();
				}
			}
			var _x1 = _this1.x;
			var _y1 = _this1.y;
			var _z = _this1.z;
			var e = _this2.world.matrix.elements;
			var _x2 = e[0] * _x1 + e[4] * _y1 + e[8] * _z + e[12];
			var _y2 = e[1] * _x1 + e[5] * _y1 + e[9] * _z + e[13];
			var _z1 = e[2] * _x1 + e[6] * _y1 + e[10] * _z + e[14];
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x2);
				}
			}
			_this1.y = _y2;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y2);
				}
			}
			_this1.z = _z1;
			if(!_this1._construct) {
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_z1);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_this1.z);
			}
			var _vert_i_x = this._v_cache.x;
			var _vert_i_y = this._v_cache.y;
			var _this3 = this._v_cache;
			var _x3 = _vert_j.x;
			var _y3 = _vert_j.y;
			var prev2 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x3;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x3);
				}
			}
			_this3.y = _y3;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y3);
				}
			}
			_this3.ignore_listeners = prev2;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			var _this4 = this._v_cache;
			var _this5 = _geometry.transform;
			if(!_this5._destroying) {
				if(_this5.parent != null && _this5.parent.dirty) {
					_this5.parent.clean_check();
				}
				if(_this5.dirty && !_this5._cleaning && !_this5.manual_update) {
					_this5.clean();
				}
			}
			var _x4 = _this4.x;
			var _y4 = _this4.y;
			var _z2 = _this4.z;
			var e1 = _this5.world.matrix.elements;
			var _x5 = e1[0] * _x4 + e1[4] * _y4 + e1[8] * _z2 + e1[12];
			var _y5 = e1[1] * _x4 + e1[5] * _y4 + e1[9] * _z2 + e1[13];
			var _z3 = e1[2] * _x4 + e1[6] * _y4 + e1[10] * _z2 + e1[14];
			var prev3 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z3;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z3);
				}
			}
			_this4.ignore_listeners = prev3;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
			var _vert_j_y = this._v_cache.y;
			if(_vert_i_y > _point.y != _vert_j_y > _point.y && _point.x < (this._v_cache.x - _vert_i_x) * (_point.y - _vert_i_y) / (_vert_j_y - _vert_i_y) + _vert_i_x) {
				c = !c;
			}
			j = i;
		}
		return c;
	}
	,intersect_ray_plane: function(_ray_start,_ray_dir,_plane_normal,_plane_point) {
		var T = (_plane_normal.x * (_plane_point.x - _ray_start.x) + _plane_normal.y * (_plane_point.y - _ray_start.y) + _plane_normal.z * (_plane_point.z - _ray_start.z)) / (_plane_normal.x * _ray_dir.x + _plane_normal.y * _ray_dir.y + _plane_normal.z * _ray_dir.z);
		return new phoenix_Vector(_ray_start.x + _ray_dir.x * T,_ray_start.y + _ray_dir.y * T,_ray_start.z + _ray_dir.z * T);
	}
	,__class__: luxe_utils_GeometryUtils
};
var luxe_utils_Maths = function() {
};
$hxClasses["luxe.utils.Maths"] = luxe_utils_Maths;
luxe_utils_Maths.__name__ = ["luxe","utils","Maths"];
luxe_utils_Maths.fixed = function(value,precision) {
	var n = Math.pow(10,precision);
	return (value * n | 0) / n;
};
luxe_utils_Maths.lerp = function(value,target,t) {
	if(t < 0) {
		t = 0;
	} else if(t > 1) {
		t = 1;
	} else {
		t = t;
	}
	return value + t * (target - value);
};
luxe_utils_Maths.weighted_avg = function(value,target,slowness) {
	if(slowness == 0) {
		slowness = 0.00000001;
	}
	return (value * (slowness - 1) + target) / slowness;
};
luxe_utils_Maths.clamp = function(value,a,b) {
	if(value < a) {
		return a;
	} else if(value > b) {
		return b;
	} else {
		return value;
	}
};
luxe_utils_Maths.clampi = function(value,a,b) {
	if(value < a) {
		return a;
	} else if(value > b) {
		return b;
	} else {
		return value;
	}
};
luxe_utils_Maths.clamp_bottom = function(value,a) {
	if(value < a) {
		return a;
	} else {
		return value;
	}
};
luxe_utils_Maths.within_range = function(value,start_range,end_range) {
	if(value >= start_range) {
		return value <= end_range;
	} else {
		return false;
	}
};
luxe_utils_Maths.wrap_angle = function(degrees,lower,upper) {
	var _distance = upper - lower;
	return degrees - Math.floor((degrees - lower) / _distance) * _distance;
};
luxe_utils_Maths.nearest_power_of_two = function(_value) {
	--_value;
	_value |= _value >> 1;
	_value |= _value >> 2;
	_value |= _value >> 4;
	_value |= _value >> 8;
	_value |= _value >> 16;
	return ++_value;
};
luxe_utils_Maths.map_linear = function(value,a1,a2,b1,b2) {
	return b1 + (value - a1) * (b2 - b1) / (a2 - a1);
};
luxe_utils_Maths.smoothstep = function(x,min,max) {
	if(x <= min) {
		return 0;
	}
	if(x >= max) {
		return 1;
	}
	x = (x - min) / (max - min);
	return x * x * (3 - 2 * x);
};
luxe_utils_Maths.smootherstep = function(x,min,max) {
	if(x <= min) {
		return 0;
	}
	if(x >= max) {
		return 1;
	}
	x = (x - min) / (max - min);
	return x * x * x * (x * (x * 6 - 15) + 10);
};
luxe_utils_Maths.sign = function(x) {
	if(x >= 0) {
		return 1;
	} else {
		return -1;
	}
};
luxe_utils_Maths.sign0 = function(x) {
	if(x < 0) {
		return -1;
	} else if(x > 0) {
		return 1;
	} else {
		return 0;
	}
};
luxe_utils_Maths.radians = function(degrees) {
	return degrees * 0.0174532925199432781;
};
luxe_utils_Maths.degrees = function(radians) {
	return radians * 57.2957795130823797;
};
luxe_utils_Maths.vec_lengthsq = function(x,y) {
	return x * x + y * y;
};
luxe_utils_Maths.vec_length = function(x,y) {
	return Math.sqrt(x * x + y * y);
};
luxe_utils_Maths.vec_normalize = function(length,component) {
	if(length == 0) {
		return 0;
	}
	component /= length;
	return component;
};
luxe_utils_Maths.vec_dot = function(x,y,otherx,othery) {
	return x * otherx + y * othery;
};
luxe_utils_Maths.prototype = {
	__class__: luxe_utils_Maths
};
var luxe_utils_Random = function(_initial_seed) {
	if(!(_initial_seed > 0)) {
		throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_initial_seed > 0" + (" ( " + "initial negative seed will return negative random results, if this was intentional, define luxe_random_allow_negative_seed" + " )")));
	}
	this.initial = this.seed = _initial_seed;
	this.seed = this.initial;
};
$hxClasses["luxe.utils.Random"] = luxe_utils_Random;
luxe_utils_Random.__name__ = ["luxe","utils","Random"];
luxe_utils_Random.prototype = {
	get: function() {
		return (this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233;
	}
	,'float': function(min,max) {
		if(max == null) {
			max = min;
			min = 0;
		}
		return ((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233) * (max - min) + min;
	}
	,'int': function(min,max) {
		if(max == null) {
			max = min;
			min = 0;
		}
		var min1 = min;
		var max1 = max;
		if(max1 == null) {
			max1 = min1;
			min1 = 0;
		}
		return Math.floor(((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233) * (max1 - min1) + min1);
	}
	,bool: function(chance) {
		if(chance == null) {
			chance = 0.5;
		}
		return (this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance;
	}
	,sign: function(chance) {
		if(chance == null) {
			chance = 0.5;
		}
		if((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance) {
			return 1;
		} else {
			return -1;
		}
	}
	,bit: function(chance) {
		if(chance == null) {
			chance = 0.5;
		}
		if((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance) {
			return 1;
		} else {
			return 0;
		}
	}
	,reset: function() {
		this.initial = this.seed = this.seed;
	}
	,set_initial: function(_initial) {
		this.initial = this.seed = _initial;
		return this.initial;
	}
	,__class__: luxe_utils_Random
	,__properties__: {set_initial:"set_initial"}
};
var luxe_utils_Utils = function(_luxe) {
	this.core = _luxe;
	this.geometry = new luxe_utils_GeometryUtils();
	this.random = new luxe_utils_Random(Math.random() * 2147483647);
	this._byte_levels = ["bytes","Kb","MB","GB","TB"];
};
$hxClasses["luxe.utils.Utils"] = luxe_utils_Utils;
luxe_utils_Utils.__name__ = ["luxe","utils","Utils"];
luxe_utils_Utils.prototype = {
	pos_info: function(pos) {
		return "" + pos.fileName + ":" + pos.lineNumber + ":(" + pos.className + ":" + pos.methodName + ")";
	}
	,uniqueid: function(val) {
		if(val == null) {
			val = Std.random(2147483647);
		}
		var to_char = function(value) {
			if(value > 9) {
				var ascii = 65 + (value - 10);
				if(ascii > 90) {
					ascii += 6;
				}
				return String.fromCharCode(ascii);
			} else {
				return (value == null ? "null" : "" + value).charAt(0);
			}
		};
		var r = val % 62 | 0;
		var q = val / 62 | 0;
		if(q > 0) {
			return this.uniqueid(q) + to_char(r);
		} else {
			return Std.string(to_char(r));
		}
	}
	,uniquehash: function() {
		return this.hash(this.uniqueid());
	}
	,hash: function(string) {
		return this.hashdjb2(string);
	}
	,hashdjb2: function(string) {
		var _hash = 5381;
		var _g1 = 0;
		var _g = string.length;
		while(_g1 < _g) _hash = (_hash << 5) + _hash + HxOverrides.cca(string,_g1++);
		return _hash;
	}
	,uniqueid2: function() {
		return haxe_crypto_Md5.encode(Std.string((window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start) * Math.random()));
	}
	,stacktrace: function(_depth) {
		if(_depth == null) {
			_depth = 100;
		}
		var result = "\n";
		var stack = haxe_CallStack.callStack();
		stack.shift();
		stack.reverse();
		var total = Math.min(stack.length,_depth) | 0;
		var _g1 = 0;
		while(_g1 < total) {
			var i = _g1++;
			var _g2 = stack[i];
			if(_g2[1] == 2) {
				var s = _g2[2];
				if(s != null) {
					if(s[1] == 3) {
						result += "   at " + _g2[3] + ":" + _g2[4] + ": " + s[2] + "." + s[3];
					}
				}
			}
			if(i != total - 1) {
				result += "\n";
			}
		}
		return result;
	}
	,path_is_relative: function(_path) {
		if(_path.charAt(0) != "#" && _path.charAt(0) != "/" && _path.indexOf(":\\") == -1 && _path.indexOf(":/") == -1) {
			if(!(_path.indexOf("//") == -1 || _path.indexOf("//") > _path.indexOf("#"))) {
				return _path.indexOf("//") > _path.indexOf("?");
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,find_assets_sequence: function(_name,_ext,_start) {
		if(_start == null) {
			_start = "1";
		}
		if(_ext == null) {
			_ext = ".png";
		}
		var _final = [];
		var _sequence_type = "";
		var _pattern_regex = null;
		var _type0 = _name + _start + _ext;
		var _type0_re = new EReg("(" + _name + ")(\\d+\\b)","gi");
		var _type1 = _name + "_" + _start + _ext;
		var _type1_re = new EReg("(" + _name + "_)(\\d+\\b)","gi");
		var _type2 = _name + "-" + _start + _ext;
		var _type2_re = new EReg("(" + _name + "-)(\\d+\\b)","gi");
		if(Luxe.resources.cache.exists(_type0)) {
			_sequence_type = _type0;
			_pattern_regex = _type0_re;
		} else if(Luxe.resources.cache.exists(_type1)) {
			_sequence_type = _type1;
			_pattern_regex = _type1_re;
		} else if(Luxe.resources.cache.exists(_type2)) {
			_sequence_type = _type2;
			_pattern_regex = _type2_re;
		} else {
			haxe_Log.trace("Sequence requested from " + _name + " but no assets found like `" + _type0 + "` or `" + _type1 + "` or `" + _type2 + "`",{ fileName : "Utils.hx", lineNumber : 168, className : "luxe.utils.Utils", methodName : "find_assets_sequence"});
		}
		if(_sequence_type != "") {
			var _this = this.core.resources.cache;
			var _asset = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(_asset.hasNext()) {
				var _asset1 = _asset.next();
				if(_pattern_regex.match(_asset1.id)) {
					_final.push(_asset1.id);
				}
			}
			_final.sort(function(a,b) {
				if(a == b) {
					return 0;
				}
				_pattern_regex.match(a);
				var _a_index = Std.parseInt(_pattern_regex.matched(2));
				_pattern_regex.match(b);
				if(_a_index < Std.parseInt(_pattern_regex.matched(2))) {
					return -1;
				}
				return 1;
			});
		}
		return _final;
	}
	,text_wrap_column_knuth_plass: function(_string,_column) {
		if(_column == null) {
			_column = 80;
		}
		var result = [];
		var words = [];
		var lengths = [];
		var _g = new haxe_ds_IntMap();
		_g.h[0] = 0;
		var extra = new haxe_ds_IntMap();
		var s = _string;
		var rgx = new EReg("(\\b[^\\s]+\\b)","gm");
		while(rgx.match(s)) {
			words.push(rgx.matched(1));
			s = rgx.matchedRight();
		}
		if(words.length == 0) {
			words.push(_string);
		}
		words.map(function(w) {
			lengths.push(w.length);
		});
		var n = words.length;
		var _g2 = 1;
		var _g1 = n + 1;
		while(_g2 < _g1) {
			var i = _g2++;
			var sums = new haxe_ds_IntMap();
			var k = i;
			while(true) {
				var tmp;
				var total = 0;
				var _g11 = k - 1;
				while(_g11 < i) total += lengths[_g11++];
				if(total + (i - k + 1) <= _column) {
					tmp = k > 0;
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				var total1 = 0;
				var _g12 = k - 1;
				while(_g12 < i) total1 += lengths[_g12++];
				sums.h[Math.pow(_column - (total1 + (i - k + 1)),3) + _g.h[k - 1] | 0] = k;
				--k;
			}
			var min = 1073741823;
			var item = sums.keys();
			while(item.hasNext()) {
				var item1 = item.next();
				if(item1 < min) {
					min = item1;
				}
			}
			var mn = min;
			_g.h[i] = mn;
			extra.h[i] = sums.h[mn];
		}
		while(n > 1) {
			result.unshift(words.slice(extra.h[n] - 1,n).join(" "));
			n = extra.h[n] - 1;
		}
		if(result.length == 0) {
			result.push(_string);
		}
		return result;
	}
	,text_wrap_column: function(_text,_brk,_column) {
		if(_column == null) {
			_column = 80;
		}
		if(_brk == null) {
			_brk = "\n";
		}
		var _this_r = new RegExp("(.{1," + _column + "})(?: +|$)\n?|(.{" + _column + "})","gimu".split("u").join(""));
		return StringTools.rtrim(_text.replace(_this_r,"$1$2" + _brk));
	}
	,bytes_to_string: function(bytes,precision) {
		if(precision == null) {
			precision = 3;
		}
		var index = bytes == 0 ? 0 : Math.floor(Math.log(bytes) / Math.log(1024));
		var _byte_value = bytes / Math.pow(1024,index);
		var n = Math.pow(10,precision);
		_byte_value = (_byte_value * n | 0) / n;
		return _byte_value + " " + this._byte_levels[index];
	}
	,array_to_bytes: function(array) {
		if(array == null) {
			return null;
		}
		var bytes = new haxe_io_Bytes(new ArrayBuffer(array.length));
		var _g1 = 0;
		var _g = bytes.length;
		while(_g1 < _g) {
			var n = _g1++;
			bytes.b[n] = array[n] & 255;
		}
		return bytes;
	}
	,premultiply_alpha: function(_pixels) {
		var count = _pixels.length;
		var index = 0;
		while(index < count) {
			var g = _pixels[index + 1];
			var b = _pixels[index + 2];
			var a = _pixels[index + 3] / 255.0;
			_pixels[index] = _pixels[index] * a | 0;
			_pixels[index + 1] = g * a | 0;
			_pixels[index + 2] = b * a | 0;
			index += 4;
		}
		return _pixels;
	}
	,premultiply_alpha_normalized: function(_pixels) {
		var count = _pixels.length;
		var index = 0;
		while(index < count) {
			var a = _pixels[index + 3];
			_pixels[index] *= a;
			_pixels[index + 1] *= a;
			_pixels[index + 2] *= a;
			index += 4;
		}
		return _pixels;
	}
	,__class__: luxe_utils_Utils
};
var luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._CodePoint.CodePoint_Impl_"] = luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$;
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.__name__ = ["luxe","utils","unifill","_CodePoint","CodePoint_Impl_"];
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.cons = function(a,b) {
	return (a <= 65535 ? String.fromCharCode(a) : String.fromCharCode((a >> 10) + 55232) + String.fromCharCode(a & 1023 | 56320)) + b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.snoc = function(a,b) {
	return a + (b <= 65535 ? String.fromCharCode(b) : String.fromCharCode((b >> 10) + 55232) + String.fromCharCode(b & 1023 | 56320));
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.addInt = function(a,b) {
	return a + b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.sub = function(a,b) {
	return a - b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.subInt = function(a,b) {
	return a - b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$._new = function(code) {
	if(!(0 <= code && code <= 1114111 && !(55296 <= code && code <= 56319) && !(56320 <= code && code <= 57343))) {
		throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodePoint(code));
	}
	return code;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.toString = function(this1) {
	return this1 <= 65535 ? String.fromCharCode(this1) : String.fromCharCode((this1 >> 10) + 55232) + String.fromCharCode(this1 & 1023 | 56320);
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.toInt = function(this1) {
	return this1;
};
var luxe_utils_unifill_CodePointIter = function(s) {
	this.i = 0;
	this.string = s;
	this.index = 0;
	this.endIndex = s.length;
};
$hxClasses["luxe.utils.unifill.CodePointIter"] = luxe_utils_unifill_CodePointIter;
luxe_utils_unifill_CodePointIter.__name__ = ["luxe","utils","unifill","CodePointIter"];
luxe_utils_unifill_CodePointIter.prototype = {
	hasNext: function() {
		return this.index < this.endIndex;
	}
	,next: function() {
		this.i = this.index;
		var tmp = this;
		var tmp1 = tmp.index;
		var c = this.string.charCodeAt(this.index);
		tmp.index = tmp1 + (!(55296 <= c && c <= 56319) ? 1 : 2);
		return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(this.string,this.i);
	}
	,__class__: luxe_utils_unifill_CodePointIter
};
var luxe_utils_unifill_Exception = $hxClasses["luxe.utils.unifill.Exception"] = { __ename__ : ["luxe","utils","unifill","Exception"], __constructs__ : ["InvalidCodePoint","InvalidCodeUnitSequence"] };
luxe_utils_unifill_Exception.InvalidCodePoint = function(code) { var $x = ["InvalidCodePoint",0,code]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
luxe_utils_unifill_Exception.InvalidCodeUnitSequence = function(index) { var $x = ["InvalidCodeUnitSequence",1,index]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
var luxe_utils_unifill_InternalEncoding = function() { };
$hxClasses["luxe.utils.unifill.InternalEncoding"] = luxe_utils_unifill_InternalEncoding;
luxe_utils_unifill_InternalEncoding.__name__ = ["luxe","utils","unifill","InternalEncoding"];
luxe_utils_unifill_InternalEncoding.__properties__ = {get_internalEncoding:"get_internalEncoding"}
luxe_utils_unifill_InternalEncoding.get_internalEncoding = function() {
	return "UTF-16";
};
luxe_utils_unifill_InternalEncoding.codeUnitAt = function(s,index) {
	return s.charCodeAt(index);
};
luxe_utils_unifill_InternalEncoding.codePointAt = function(s,index) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(s,index);
};
luxe_utils_unifill_InternalEncoding.charAt = function(s,index) {
	var s1 = s;
	var c = s1.charCodeAt(index);
	return HxOverrides.substr(s1,index,!(55296 <= c && c <= 56319) ? 1 : 2);
};
luxe_utils_unifill_InternalEncoding.codePointCount = function(s,beginIndex,endIndex) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,beginIndex,endIndex);
};
luxe_utils_unifill_InternalEncoding.codePointWidthAt = function(s,index) {
	var c = s.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill_InternalEncoding.codePointWidthBefore = function(s,index) {
	var c = s.charCodeAt(index - 1);
	if(!(56320 <= c && c <= 57343)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill_InternalEncoding.offsetByCodePoints = function(s,index,codePointOffset) {
	var s1 = s;
	if(codePointOffset >= 0) {
		var index1 = index;
		var len = s1.length;
		var i = 0;
		while(i < codePointOffset && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset && 0 < index2) {
			var c1 = s1.charCodeAt(index2 - 1);
			index2 -= !(56320 <= c1 && c1 <= 57343) ? 1 : 2;
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill_InternalEncoding.backwardOffsetByCodePoints = function(s,index,codePointOffset) {
	var s1 = s;
	var codePointOffset1 = -codePointOffset;
	if(codePointOffset1 >= 0) {
		var index1 = index;
		var len = s1.length;
		var i = 0;
		while(i < codePointOffset1 && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset1 && 0 < index2) {
			var c1 = s1.charCodeAt(index2 - 1);
			index2 -= !(56320 <= c1 && c1 <= 57343) ? 1 : 2;
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill_InternalEncoding.fromCodePoint = function(codePoint) {
	return codePoint <= 65535 ? String.fromCharCode(codePoint) : String.fromCharCode((codePoint >> 10) + 55232) + String.fromCharCode(codePoint & 1023 | 56320);
};
luxe_utils_unifill_InternalEncoding.fromCodePoints = function(codePoints) {
	var buf = new StringBuf();
	var c = $iterator(codePoints)();
	while(c.hasNext()) luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point(function(x) {
		buf.b += String.fromCharCode(x);
	},c.next());
	return buf.b;
};
luxe_utils_unifill_InternalEncoding.validate = function(s) {
	luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate(s);
};
luxe_utils_unifill_InternalEncoding.isValidString = function(s) {
	try {
		luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate(s);
		return true;
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if( js_Boot.__instanceof(e,luxe_utils_unifill_Exception) ) {
			if(e[1] == 1) {
				return false;
			} else {
				throw new js__$Boot_HaxeError(e);
			}
		} else throw(e);
	}
};
var luxe_utils_unifill_InternalEncodingIter = function(s,beginIndex,endIndex) {
	this.i = 0;
	this.string = s;
	this.index = beginIndex;
	this.endIndex = endIndex;
};
$hxClasses["luxe.utils.unifill.InternalEncodingIter"] = luxe_utils_unifill_InternalEncodingIter;
luxe_utils_unifill_InternalEncodingIter.__name__ = ["luxe","utils","unifill","InternalEncodingIter"];
luxe_utils_unifill_InternalEncodingIter.prototype = {
	hasNext: function() {
		return this.index < this.endIndex;
	}
	,next: function() {
		this.i = this.index;
		var tmp = this;
		var tmp1 = tmp.index;
		var c = this.string.charCodeAt(this.index);
		tmp.index = tmp1 + (!(55296 <= c && c <= 56319) ? 1 : 2);
		return this.i;
	}
	,__class__: luxe_utils_unifill_InternalEncodingIter
};
var luxe_utils_unifill_Unicode = function() { };
$hxClasses["luxe.utils.unifill.Unicode"] = luxe_utils_unifill_Unicode;
luxe_utils_unifill_Unicode.__name__ = ["luxe","utils","unifill","Unicode"];
luxe_utils_unifill_Unicode.decodeSurrogate = function(hi,lo) {
	return hi - 55232 << 10 | lo & 1023;
};
luxe_utils_unifill_Unicode.encodeHighSurrogate = function(c) {
	return (c >> 10) + 55232;
};
luxe_utils_unifill_Unicode.encodeLowSurrogate = function(c) {
	return c & 1023 | 56320;
};
luxe_utils_unifill_Unicode.isScalar = function(code) {
	if(0 <= code && code <= 1114111 && !(55296 <= code && code <= 56319)) {
		return !(56320 <= code && code <= 57343);
	} else {
		return false;
	}
};
luxe_utils_unifill_Unicode.isHighSurrogate = function(code) {
	if(55296 <= code) {
		return code <= 56319;
	} else {
		return false;
	}
};
luxe_utils_unifill_Unicode.isLowSurrogate = function(code) {
	if(56320 <= code) {
		return code <= 57343;
	} else {
		return false;
	}
};
var luxe_utils_unifill_Unifill = function() { };
$hxClasses["luxe.utils.unifill.Unifill"] = luxe_utils_unifill_Unifill;
luxe_utils_unifill_Unifill.__name__ = ["luxe","utils","unifill","Unifill"];
luxe_utils_unifill_Unifill.uLength = function(s) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,s.length);
};
luxe_utils_unifill_Unifill.uCharAt = function(s,index) {
	var s1 = s;
	var i;
	if(index >= 0) {
		var index1 = 0;
		var len = s1.length;
		var i1 = 0;
		while(i1 < index && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i1;
		}
		i = index1;
	} else {
		while(false) {
		}
		i = 0;
	}
	var s2 = s;
	var c1 = s2.charCodeAt(i);
	return HxOverrides.substr(s2,i,!(55296 <= c1 && c1 <= 56319) ? 1 : 2);
};
luxe_utils_unifill_Unifill.uCharCodeAt = function(s,index) {
	var s1 = s;
	var i;
	if(index >= 0) {
		var index1 = 0;
		var len = s1.length;
		var i1 = 0;
		while(i1 < index && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i1;
		}
		i = index1;
	} else {
		while(false) {
		}
		i = 0;
	}
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(s,i);
};
luxe_utils_unifill_Unifill.uCodePointAt = function(s,index) {
	var s1 = s;
	var i;
	if(index >= 0) {
		var index1 = 0;
		var len = s1.length;
		var i1 = 0;
		while(i1 < index && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i1;
		}
		i = index1;
	} else {
		while(false) {
		}
		i = 0;
	}
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(s,i);
};
luxe_utils_unifill_Unifill.uIndexOf = function(s,value,startIndex) {
	if(startIndex == null) {
		startIndex = 0;
	}
	var s1 = s;
	var index;
	if(startIndex >= 0) {
		var index1 = 0;
		var len = s1.length;
		var i = 0;
		while(i < startIndex && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		index = index1;
	} else {
		while(false) {
		}
		index = 0;
	}
	var index2 = s.indexOf(value,index);
	if(index2 >= 0) {
		return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,index2);
	} else {
		return -1;
	}
};
luxe_utils_unifill_Unifill.uLastIndexOf = function(s,value,startIndex) {
	if(startIndex == null) {
		startIndex = s.length - 1;
	}
	var s1 = s;
	var index;
	if(startIndex >= 0) {
		var index1 = 0;
		var len = s1.length;
		var i = 0;
		while(i < startIndex && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		index = index1;
	} else {
		while(false) {
		}
		index = 0;
	}
	var index2 = s.lastIndexOf(value,index);
	if(index2 >= 0) {
		return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,index2);
	} else {
		return -1;
	}
};
luxe_utils_unifill_Unifill.uSplit = function(s,delimiter) {
	var _g1_index;
	if(delimiter.length == 0) {
		var _g = [];
		var _g1_i = 0;
		var endIndex = s.length;
		_g1_index = 0;
		while(_g1_index < endIndex) {
			_g1_i = _g1_index;
			var c = s.charCodeAt(_g1_index);
			_g1_index += !(55296 <= c && c <= 56319) ? 1 : 2;
			var i = _g1_i;
			var s1 = s;
			var c1 = s1.charCodeAt(i);
			_g.push(HxOverrides.substr(s1,i,!(55296 <= c1 && c1 <= 56319) ? 1 : 2));
		}
		return _g;
	} else {
		return s.split(delimiter);
	}
};
luxe_utils_unifill_Unifill.uSubstr = function(s,startIndex,length) {
	var index = startIndex >= 0 ? 0 : s.length;
	var s1 = s;
	var si;
	if(startIndex >= 0) {
		var index1 = index;
		var len = s1.length;
		var i = 0;
		while(i < startIndex && index1 < len) {
			var c = s1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		si = index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -startIndex && 0 < index2) {
			var c1 = s1.charCodeAt(index2 - 1);
			index2 -= !(56320 <= c1 && c1 <= 57343) ? 1 : 2;
			++count;
		}
		si = index2;
	}
	var ei;
	if(length == null) {
		ei = s.length;
	} else if(length < 0) {
		ei = si;
	} else {
		var s2 = s;
		if(length >= 0) {
			var index3 = si;
			var len1 = s2.length;
			var i1 = 0;
			while(i1 < length && index3 < len1) {
				var c2 = s2.charCodeAt(index3);
				index3 += !(55296 <= c2 && c2 <= 56319) ? 1 : 2;
				++i1;
			}
			ei = index3;
		} else {
			var index4 = si;
			var count1 = 0;
			while(count1 < -length && 0 < index4) {
				var c3 = s2.charCodeAt(index4 - 1);
				index4 -= !(56320 <= c3 && c3 <= 57343) ? 1 : 2;
				++count1;
			}
			ei = index4;
		}
	}
	return s.substring(si,ei);
};
luxe_utils_unifill_Unifill.uSubstring = function(s,startIndex,endIndex) {
	var si;
	if(startIndex < 0) {
		si = 0;
	} else {
		var s1 = s;
		if(startIndex >= 0) {
			var index = 0;
			var len = s1.length;
			var i = 0;
			while(i < startIndex && index < len) {
				var c = s1.charCodeAt(index);
				index += !(55296 <= c && c <= 56319) ? 1 : 2;
				++i;
			}
			si = index;
		} else {
			while(false) {
			}
			si = 0;
		}
	}
	var ei;
	if(endIndex == null) {
		ei = s.length;
	} else if(endIndex < 0) {
		ei = 0;
	} else {
		var s2 = s;
		if(endIndex >= 0) {
			var index1 = 0;
			var len1 = s2.length;
			var i1 = 0;
			while(i1 < endIndex && index1 < len1) {
				var c1 = s2.charCodeAt(index1);
				index1 += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
				++i1;
			}
			ei = index1;
		} else {
			while(false) {
			}
			ei = 0;
		}
	}
	return s.substring(si,ei);
};
luxe_utils_unifill_Unifill.uIterator = function(s) {
	return new luxe_utils_unifill_CodePointIter(s);
};
luxe_utils_unifill_Unifill.uCompare = function(a,b) {
	var aiter_i = 0;
	var endIndex = a.length;
	var aiter_index = 0;
	var biter_i = 0;
	var endIndex1 = b.length;
	var biter_index = 0;
	while(aiter_index < endIndex && biter_index < endIndex1) {
		aiter_i = aiter_index;
		var c = a.charCodeAt(aiter_index);
		aiter_index += !(55296 <= c && c <= 56319) ? 1 : 2;
		var acode = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(a,aiter_i);
		biter_i = biter_index;
		var c1 = b.charCodeAt(biter_index);
		biter_index += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
		var bcode = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(b,biter_i);
		if(acode < bcode) {
			return -1;
		}
		if(acode > bcode) {
			return 1;
		}
	}
	if(biter_index < endIndex1) {
		return -1;
	}
	if(aiter_index < endIndex) {
		return 1;
	}
	return 0;
};
luxe_utils_unifill_Unifill.uToString = function(codePoints) {
	var buf = new StringBuf();
	var c = $iterator(codePoints)();
	while(c.hasNext()) luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point(function(x) {
		buf.b += String.fromCharCode(x);
	},c.next());
	return buf.b;
};
var luxe_utils_unifill__$Utf16_Utf16_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.Utf16_Impl_"] = luxe_utils_unifill__$Utf16_Utf16_$Impl_$;
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","Utf16_Impl_"];
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.__properties__ = {get_length:"get_length"}
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromCodePoint = function(codePoint) {
	if(codePoint <= 65535) {
		return String.fromCharCode(codePoint);
	} else {
		return String.fromCharCode((codePoint >> 10) + 55232) + String.fromCharCode(codePoint & 1023 | 56320);
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromCodePoints = function(codePoints) {
	var buf = new StringBuf();
	var c = $iterator(codePoints)();
	while(c.hasNext()) luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point(function(x) {
		buf.b += String.fromCharCode(x);
	},c.next());
	return buf.b;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromString = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromArray = function(a) {
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	return buf_b;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codeUnitAt = function(this1,index) {
	return this1.charCodeAt(index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt = function(this1,index) {
	return luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point(this1.length,function(i) {
		return this1.charCodeAt(i);
	},index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.charAt = function(this1,index) {
	var c = this1.charCodeAt(index);
	return HxOverrides.substr(this1,index,!(55296 <= c && c <= 56319) ? 1 : 2);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount = function(this1,beginIndex,endIndex) {
	var index = beginIndex;
	var i = 0;
	while(index < endIndex) {
		var c = this1.charCodeAt(index);
		index += !(55296 <= c && c <= 56319) ? 1 : 2;
		++i;
	}
	return i;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointWidthAt = function(this1,index) {
	var c = this1.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointWidthBefore = function(this1,index) {
	var c = this1.charCodeAt(index - 1);
	if(!(56320 <= c && c <= 57343)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.offsetByCodePoints = function(this1,index,codePointOffset) {
	if(codePointOffset >= 0) {
		var index1 = index;
		var len = this1.length;
		var i = 0;
		while(i < codePointOffset && index1 < len) {
			var c = this1.charCodeAt(index1);
			index1 += !(55296 <= c && c <= 56319) ? 1 : 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset && 0 < index2) {
			var c1 = this1.charCodeAt(index2 - 1);
			index2 -= !(56320 <= c1 && c1 <= 57343) ? 1 : 2;
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.substr = function(this1,index,len) {
	return HxOverrides.substr(this1,index,len);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate = function(this1) {
	var len = this1.length;
	var accessor = function(i) {
		return this1.charCodeAt(i);
	};
	var i1 = 0;
	while(i1 < len) {
		luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point(len,accessor,i1);
		var c = this1.charCodeAt(i1);
		i1 += !(55296 <= c && c <= 56319) ? 1 : 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.toString = function(this1) {
	return this1;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.toArray = function(this1) {
	var i = 0;
	var len = this1.length;
	var _g = [];
	while(i < len) _g.push(this1.charCodeAt(i++));
	return _g;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$._new = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.get_length = function(this1) {
	return this1.length;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.forward_offset_by_code_points = function(this1,index,codePointOffset) {
	var len = this1.length;
	var i = 0;
	while(i < codePointOffset && index < len) {
		var c = this1.charCodeAt(index);
		index += !(55296 <= c && c <= 56319) ? 1 : 2;
		++i;
	}
	return index;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.backward_offset_by_code_points = function(this1,index,codePointOffset) {
	var count = 0;
	while(count < codePointOffset && 0 < index) {
		var c = this1.charCodeAt(index - 1);
		index -= !(56320 <= c && c <= 57343) ? 1 : 2;
		++count;
	}
	return index;
};
var luxe_utils_unifill__$Utf16_Utf16Impl = function() { };
$hxClasses["luxe.utils.unifill._Utf16.Utf16Impl"] = luxe_utils_unifill__$Utf16_Utf16Impl;
luxe_utils_unifill__$Utf16_Utf16Impl.__name__ = ["luxe","utils","unifill","_Utf16","Utf16Impl"];
luxe_utils_unifill__$Utf16_Utf16Impl.code_point_width = function(c) {
	if(!(55296 <= c && c <= 56319)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point = function(accessor,index) {
	var c = accessor(index - 1);
	if(!(56320 <= c && c <= 57343)) {
		return 1;
	} else {
		return 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point = function(addUnit,codePoint) {
	if(codePoint <= 65535) {
		addUnit(codePoint);
	} else {
		addUnit((codePoint >> 10) + 55232);
		addUnit(codePoint & 1023 | 56320);
	}
};
luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point = function(len,accessor,index) {
	if(index < 0 || len <= index) {
		throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	}
	var hi = accessor(index);
	if(55296 <= hi && hi <= 56319) {
		if(index + 1 < 0 || len <= index + 1) {
			throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
		}
		var lo = accessor(index + 1);
		if(56320 <= lo && lo <= 57343) {
			return hi - 55232 << 10 | lo & 1023;
		} else {
			throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
		}
	} else if(56320 <= hi && hi <= 57343) {
		throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	} else {
		return hi;
	}
};
var luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.StringU16Buffer_Impl_"] = luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$;
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","StringU16Buffer_Impl_"];
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$._new = function() {
	return new StringBuf();
};
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.addUnit = function(this1,unit) {
	this1.b += String.fromCharCode(unit);
};
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.getStringU16 = function(this1) {
	return this1.b;
};
var luxe_utils_unifill__$Utf16_StringU16_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.StringU16_Impl_"] = luxe_utils_unifill__$Utf16_StringU16_$Impl_$;
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","StringU16_Impl_"];
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.__properties__ = {get_length:"get_length"}
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromString = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromCodeUnit = function(u) {
	return String.fromCharCode(u);
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromTwoCodeUnits = function(u0,u1) {
	return String.fromCharCode(u0) + String.fromCharCode(u1);
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.ofArray = function(a) {
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	return buf_b;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromArray = function(a) {
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	return buf_b;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.codeUnitAt = function(this1,index) {
	return this1.charCodeAt(index);
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.substr = function(this1,index,len) {
	return HxOverrides.substr(this1,index,len);
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.toString = function(this1) {
	return this1;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.toArray = function(this1) {
	var i = 0;
	var len = this1.length;
	var _g = [];
	while(i < len) _g.push(this1.charCodeAt(i++));
	return _g;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$._new = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var phoenix_BatchState = function(_r) {
	this.log = false;
	this.batcher = _r;
	this.geom_state = new phoenix_geometry_GeometryState();
	this.last_geom_state = new phoenix_geometry_GeometryState();
};
$hxClasses["phoenix.BatchState"] = phoenix_BatchState;
phoenix_BatchState.__name__ = ["phoenix","BatchState"];
phoenix_BatchState.prototype = {
	active_shader: function() {
		if(this.geom_state.shader != null) {
			return this.geom_state.shader;
		} else if(this.geom_state.texture != null) {
			return this.batcher.renderer.shaders.textured.shader;
		} else {
			return this.batcher.renderer.shaders.plain.shader;
		}
	}
	,activate: function(batcher) {
		if(this.geom_state.dirty) {
			if(this.geom_state.texture != null) {
				if(this.last_texture_id != this.geom_state.texture.id) {
					this.last_texture_id = this.geom_state.texture.id;
					if(this.geom_state.texture.texture != null) {
						this.geom_state.texture.bind();
					}
				}
			} else {
				Luxe.renderer.state.bindTexture2D(null);
				this.last_texture_id = null;
			}
			var _shader = batcher.shader == null ? this.geom_state.shader : batcher.shader;
			if(_shader == null) {
				if(this.geom_state.texture != null) {
					_shader = batcher.renderer.shaders.textured.shader;
				} else {
					_shader = batcher.renderer.shaders.plain.shader;
				}
			}
			if(this.last_shader_id != _shader.program) {
				if(!_shader.no_default_uniforms) {
					var _value = batcher.view.proj_arr;
					var _this = _shader.uniforms;
					var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix");
					var _matrix4 = _this.matrix4arrs.get("projectionMatrix");
					if(_matrix4 != null) {
						_matrix4.value = _value;
					} else {
						_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value,_location);
						_this.matrix4arrs.set("projectionMatrix",_matrix4);
					}
					_this.dirty_matrix4arrs.push(_matrix4);
					var _value1 = batcher.view.view_inverse_arr;
					var _this1 = _shader.uniforms;
					var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix");
					var _matrix41 = _this1.matrix4arrs.get("modelViewMatrix");
					if(_matrix41 != null) {
						_matrix41.value = _value1;
					} else {
						_matrix41 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value1,_location1);
						_this1.matrix4arrs.set("modelViewMatrix",_matrix41);
					}
					_this1.dirty_matrix4arrs.push(_matrix41);
				}
				_shader["use"]();
				_shader.uniforms.apply();
				Luxe.renderer.state.activeTexture(33984);
				this.last_shader_id = _shader.program;
			}
			var blend_dirty = this.last_blend_src_rgb != this.geom_state.blend_src_rgb;
			if(!blend_dirty) {
				blend_dirty = this.last_blend_src_alpha != this.geom_state.blend_src_alpha;
			} else {
				blend_dirty = true;
			}
			if(!blend_dirty) {
				blend_dirty = this.last_blend_dest_rgb != this.geom_state.blend_dest_rgb;
			} else {
				blend_dirty = true;
			}
			if(!blend_dirty) {
				blend_dirty = this.last_blend_dest_alpha != this.geom_state.blend_dest_alpha;
			} else {
				blend_dirty = true;
			}
			if(blend_dirty && !this.geom_state.ignore_blend) {
				this.last_blend_src_rgb = this.geom_state.blend_src_rgb;
				this.last_blend_src_alpha = this.geom_state.blend_src_alpha;
				this.last_blend_dest_rgb = this.geom_state.blend_dest_rgb;
				this.last_blend_dest_alpha = this.geom_state.blend_dest_alpha;
				snow_modules_opengl_web_GL.gl.blendFuncSeparate(this.last_blend_src_rgb,this.last_blend_dest_rgb,this.last_blend_src_alpha,this.last_blend_dest_alpha);
			}
		}
		if(this.geom_state.clip) {
			if(!this.is_clipping) {
				snow_modules_opengl_web_GL.gl.enable(3089);
				this.is_clipping = true;
			}
			if(this.clip_rect != null) {
				if(!this.clip_rect.equal(this.last_clip_rect)) {
					batcher.renderer.state.scissor(this.clip_rect.x,this.clip_rect.y,this.clip_rect.w,this.clip_rect.h);
				}
			}
		} else if(this.is_clipping) {
			snow_modules_opengl_web_GL.gl.disable(3089);
			this.is_clipping = false;
		}
		this.geom_state.dirty = false;
	}
	,deactivate: function(batcher) {
		if(this.last_texture_id != null) {
			Luxe.renderer.state.bindTexture2D(null);
		}
		Luxe.renderer.state.useProgram(null);
		if(this.is_clipping) {
			snow_modules_opengl_web_GL.gl.disable(3089);
		}
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.blendEquation(32774);
	}
	,update: function(geom) {
		var _this = this.geom_state;
		var _other = this.last_geom_state;
		_other.dirty = _this.dirty;
		_other.dirty = true;
		_other.texture = _this.texture;
		_other.dirty = true;
		_other.shader = _this.shader;
		_other.depth = _this.depth;
		_other.dirty = true;
		_other.primitive_type = _this.primitive_type;
		_other.dirty = true;
		_other.clip = _this.clip;
		_other.dirty = true;
		_other.clip_x = _this.clip_x;
		_other.dirty = true;
		_other.clip_y = _this.clip_y;
		_other.dirty = true;
		_other.clip_w = _this.clip_w;
		_other.dirty = true;
		_other.clip_h = _this.clip_h;
		_other.dirty = true;
		_other.blend_src_alpha = _this.blend_src_alpha;
		_other.dirty = true;
		_other.blend_src_rgb = _this.blend_src_rgb;
		_other.dirty = true;
		_other.blend_dest_alpha = _this.blend_dest_alpha;
		_other.dirty = true;
		_other.blend_dest_rgb = _this.blend_dest_rgb;
		_other.ignore_blend = _this.ignore_blend;
		var _this1 = this.geom_state;
		var other = geom.state;
		if(_this1.depth != other.depth) {
			_this1.depth = other.depth;
		}
		if(_this1.texture != other.texture) {
			_this1.dirty = true;
			_this1.texture = other.texture;
		}
		if(_this1.shader != other.shader) {
			_this1.dirty = true;
			_this1.shader = other.shader;
		}
		if(_this1.primitive_type != other.primitive_type) {
			_this1.dirty = true;
			_this1.primitive_type = other.primitive_type;
		}
		if(_this1.clip != other.clip) {
			_this1.dirty = true;
			_this1.clip = other.clip;
		}
		if(_this1.clip_x != other.clip_x) {
			_this1.dirty = true;
			_this1.clip_x = other.clip_x;
		}
		if(_this1.clip_y != other.clip_y) {
			_this1.dirty = true;
			_this1.clip_y = other.clip_y;
		}
		if(_this1.clip_w != other.clip_w) {
			_this1.dirty = true;
			_this1.clip_w = other.clip_w;
		}
		if(_this1.clip_h != other.clip_h) {
			_this1.dirty = true;
			_this1.clip_h = other.clip_h;
		}
		if(_this1.blend_src_alpha != other.blend_src_alpha) {
			_this1.dirty = true;
			_this1.blend_src_alpha = other.blend_src_alpha;
		}
		if(_this1.blend_src_rgb != other.blend_src_rgb) {
			_this1.dirty = true;
			_this1.blend_src_rgb = other.blend_src_rgb;
		}
		if(_this1.blend_dest_alpha != other.blend_dest_alpha) {
			_this1.dirty = true;
			_this1.blend_dest_alpha = other.blend_dest_alpha;
		}
		if(_this1.blend_dest_rgb != other.blend_dest_rgb) {
			_this1.dirty = true;
			_this1.blend_dest_rgb = other.blend_dest_rgb;
		}
		if(_this1.ignore_blend != other.ignore_blend) {
			_this1.ignore_blend = other.ignore_blend;
		}
		if(this.geom_state.clip) {
			this.last_clip_rect = this.clip_rect;
			this.clip_rect = geom.clip_rect;
		}
		if(!this.geom_state.dirty) {
			return this.last_clip_rect != this.clip_rect;
		} else {
			return true;
		}
	}
	,str: function() {
		if(!this.log) {
			return;
		}
		haxe_Log.trace("\t+ BATCHSTATE LAST ",{ fileName : "BatchState.hx", lineNumber : 185, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.last_geom_state.depth,{ fileName : "BatchState.hx", lineNumber : 186, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.last_geom_state.texture == null ? "null" : this.last_geom_state.texture.id),{ fileName : "BatchState.hx", lineNumber : 187, className : "phoenix.BatchState", methodName : "str"});
		if(this.last_geom_state.texture != null) {
			haxe_Log.trace("\t\t\t " + Std.string(this.last_geom_state.texture.texture),{ fileName : "BatchState.hx", lineNumber : 189, className : "phoenix.BatchState", methodName : "str"});
		}
		haxe_Log.trace("\t\tshader - " + (this.last_geom_state.shader == null ? "null" : this.last_geom_state.shader.id),{ fileName : "BatchState.hx", lineNumber : 191, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.last_geom_state.primitive_type,{ fileName : "BatchState.hx", lineNumber : 192, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.last_geom_state.clip),{ fileName : "BatchState.hx", lineNumber : 193, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t- BATCHSTATE LAST",{ fileName : "BatchState.hx", lineNumber : 194, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t+ BATCHSTATE STATE",{ fileName : "BatchState.hx", lineNumber : 196, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.geom_state.depth,{ fileName : "BatchState.hx", lineNumber : 197, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.geom_state.texture == null ? "null" : this.geom_state.texture.id),{ fileName : "BatchState.hx", lineNumber : 198, className : "phoenix.BatchState", methodName : "str"});
		if(this.geom_state.texture != null) {
			haxe_Log.trace("\t\t\t " + Std.string(this.geom_state.texture.texture),{ fileName : "BatchState.hx", lineNumber : 200, className : "phoenix.BatchState", methodName : "str"});
		}
		haxe_Log.trace("\t\tshader - " + (this.geom_state.shader == null ? "null" : this.geom_state.shader.id),{ fileName : "BatchState.hx", lineNumber : 202, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.geom_state.primitive_type,{ fileName : "BatchState.hx", lineNumber : 203, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.geom_state.clip),{ fileName : "BatchState.hx", lineNumber : 204, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t- BATCHSTATE STATE",{ fileName : "BatchState.hx", lineNumber : 205, className : "phoenix.BatchState", methodName : "str"});
	}
	,__class__: phoenix_BatchState
};
var phoenix_Batcher = function(_r,_name,_max_verts) {
	if(_max_verts == null) {
		_max_verts = 16384;
	}
	if(_name == null) {
		_name = "";
	}
	this.normal_floats = 0;
	this.color_floats = 0;
	this.tcoord_floats = 0;
	this.pos_floats = 0;
	this.sequence = -1;
	this.show_stats = 1;
	this.name = "";
	this.log = false;
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.draw_calls = 0;
	this.vert_count = 0;
	this.max_floats = 0;
	this.max_verts = 0;
	this.tree_changed = false;
	this.layer = 0;
	this.enabled = true;
	this.id = Luxe.utils.uniqueid();
	this.renderer = _r;
	this.sequence = ++phoenix_Batcher._sequence_key;
	this.geometry = new luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry($bind(this,this.geometry_compare));
	this.emitter = new luxe_Emitter();
	this.max_verts = _max_verts;
	this.max_floats = this.max_verts * 4;
	this.pos_list = new Float32Array(this.max_floats);
	this.tcoord_list = new Float32Array(this.max_floats);
	this.color_list = new Float32Array(this.max_floats);
	this.view = this.renderer.camera;
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(0);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(1);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(2);
	if(_name.length == 0) {
		this.name = Luxe.utils.uniqueid();
	} else {
		this.name = _name;
	}
	this._dropped = [];
	this.renderer.stats.batchers++;
	phoenix_Batcher.all.push(this);
};
$hxClasses["phoenix.Batcher"] = phoenix_Batcher;
phoenix_Batcher.__name__ = ["phoenix","Batcher"];
phoenix_Batcher.prototype = {
	on: function(event,handler) {
		this.emitter.on(event,handler);
	}
	,off: function(event,handler) {
		return this.emitter.off(event,handler);
	}
	,add: function(_geom,_force_add) {
		if(_force_add == null) {
			_force_add = false;
		}
		if(this.geometry.find(_geom.key) == null || _force_add) {
			if(!Lambda.has(_geom.batchers,this)) {
				_geom.batchers.push(this);
			}
			var _this = this.geometry;
			_this.root = _this.node_insert(_this.root,_geom.key,_geom);
			_this.root.color = false;
			_geom.added = true;
			this.tree_changed = true;
		}
	}
	,empty: function(_drop) {
		if(_drop == null) {
			_drop = true;
		}
		if(_drop) {
			var _g = this.geometry.iterator();
			while(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
				var _temp = _g.current;
				var tmp;
				if(!(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0)) {
					tmp = null;
				} else if(_g.current.right != null) {
					var _node = _g.current.right;
					while(_node.left != null) _node = _node.left;
					tmp = _node;
				} else {
					var _next = null;
					var _temp1 = _g.tree.root;
					while(_temp1 != null) {
						var _comp = _g.tree.compare(_g.current.key,_temp1.key);
						if(_comp < 0) {
							_next = _temp1;
							_temp1 = _temp1.left;
						} else if(_comp > 0) {
							_temp1 = _temp1.right;
						} else {
							_g.current = _next;
							break;
						}
					}
					tmp = _next;
				}
				_g.current = tmp;
				var geom = _temp.value;
				geom.drop(true);
				geom = null;
			}
		} else {
			var _g1 = this.geometry.iterator();
			while(_g1.current == null || _g1.rightest == null ? false : _g1.tree.compare(_g1.current.key,_g1.rightest.key) <= 0) {
				var _temp2 = _g1.current;
				var tmp1;
				if(!(_g1.current == null || _g1.rightest == null ? false : _g1.tree.compare(_g1.current.key,_g1.rightest.key) <= 0)) {
					tmp1 = null;
				} else if(_g1.current.right != null) {
					var _node1 = _g1.current.right;
					while(_node1.left != null) _node1 = _node1.left;
					tmp1 = _node1;
				} else {
					var _next1 = null;
					var _temp3 = _g1.tree.root;
					while(_temp3 != null) {
						var _comp1 = _g1.tree.compare(_g1.current.key,_temp3.key);
						if(_comp1 < 0) {
							_next1 = _temp3;
							_temp3 = _temp3.left;
						} else if(_comp1 > 0) {
							_temp3 = _temp3.right;
						} else {
							_g1.current = _next1;
							break;
						}
					}
					tmp1 = _next1;
				}
				_g1.current = tmp1;
				this.geometry.remove(_temp2.value.key);
			}
		}
	}
	,destroy: function(_drop) {
		if(_drop == null) {
			_drop = true;
		}
		this.empty(_drop);
		this.renderer.remove_batch(this);
		this.renderer.stats.batchers--;
		this.emitter = null;
		this.geometry = null;
		this.pos_list = null;
		this.tcoord_list = null;
		this.color_list = null;
		this.normal_list = null;
		this.max_verts = 0;
		this.max_floats = 0;
		this.vert_count = 0;
		this.renderer = null;
		this.view = null;
		HxOverrides.remove(phoenix_Batcher.all,this);
	}
	,remove: function(_geom,_remove_batcher_from_geometry) {
		if(_remove_batcher_from_geometry == null) {
			_remove_batcher_from_geometry = true;
		}
		if(_remove_batcher_from_geometry) {
			HxOverrides.remove(_geom.batchers,this);
			if(_geom.batchers.length == 0) {
				_geom.added = false;
			}
		}
		var _node = this.geometry.root;
		if(_node == null) {
			0;
		} else {
			_node.nodecount;
		}
		this.geometry.remove(_geom.key);
		var _node1 = this.geometry.root;
		if(_node1 == null) {
			0;
		} else {
			_node1.nodecount;
		}
		this.tree_changed = true;
	}
	,batch: function(persist_immediate) {
		if(persist_immediate == null) {
			persist_immediate = false;
		}
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.pos_floats = 0;
		this.tcoord_floats = 0;
		this.color_floats = 0;
		this.normal_floats = 0;
		this.state = new phoenix_BatchState(this);
		var geom = null;
		var _g = this.geometry.iterator();
		while(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
			var _temp = _g.current;
			var tmp;
			if(!(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0)) {
				tmp = null;
			} else if(_g.current.right != null) {
				var _node = _g.current.right;
				while(_node.left != null) _node = _node.left;
				tmp = _node;
			} else {
				var _next = null;
				var _temp1 = _g.tree.root;
				while(_temp1 != null) {
					var _comp = _g.tree.compare(_g.current.key,_temp1.key);
					if(_comp < 0) {
						_next = _temp1;
						_temp1 = _temp1.left;
					} else if(_comp > 0) {
						_temp1 = _temp1.right;
					} else {
						_g.current = _next;
						break;
					}
				}
				tmp = _next;
			}
			_g.current = tmp;
			var _geom = _temp.value;
			geom = _geom;
			if(_geom != null && !_geom.dropped) {
				if(this.state.update(_geom)) {
					var type = this.state.last_geom_state.primitive_type;
					if(this.pos_floats != 0) {
						if(this.pos_floats > this.max_floats) {
							throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
						}
						var _pos = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
						var _tcoords = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
						var _colors = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
						var _normals = null;
						this.submit_buffers(type,_pos,_tcoords,_colors,_normals);
						_pos = null;
						_tcoords = null;
						_colors = null;
						_normals = null;
						this.pos_floats = 0;
						this.tcoord_floats = 0;
						this.color_floats = 0;
						this.normal_floats = 0;
					}
				}
				var _this = this.state;
				if(_this.geom_state.dirty) {
					if(_this.geom_state.texture != null) {
						if(_this.last_texture_id != _this.geom_state.texture.id) {
							_this.last_texture_id = _this.geom_state.texture.id;
							if(_this.geom_state.texture.texture != null) {
								_this.geom_state.texture.bind();
							}
						}
					} else {
						Luxe.renderer.state.bindTexture2D(null);
						_this.last_texture_id = null;
					}
					var _shader = this.shader == null ? _this.geom_state.shader : this.shader;
					if(_shader == null) {
						if(_this.geom_state.texture != null) {
							_shader = this.renderer.shaders.textured.shader;
						} else {
							_shader = this.renderer.shaders.plain.shader;
						}
					}
					if(_this.last_shader_id != _shader.program) {
						if(!_shader.no_default_uniforms) {
							var _value = this.view.proj_arr;
							var _this1 = _shader.uniforms;
							var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix");
							var _matrix4 = _this1.matrix4arrs.get("projectionMatrix");
							if(_matrix4 != null) {
								_matrix4.value = _value;
							} else {
								_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value,_location);
								_this1.matrix4arrs.set("projectionMatrix",_matrix4);
							}
							_this1.dirty_matrix4arrs.push(_matrix4);
							var _value1 = this.view.view_inverse_arr;
							var _this2 = _shader.uniforms;
							var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix");
							var _matrix41 = _this2.matrix4arrs.get("modelViewMatrix");
							if(_matrix41 != null) {
								_matrix41.value = _value1;
							} else {
								_matrix41 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value1,_location1);
								_this2.matrix4arrs.set("modelViewMatrix",_matrix41);
							}
							_this2.dirty_matrix4arrs.push(_matrix41);
						}
						_shader["use"]();
						_shader.uniforms.apply();
						Luxe.renderer.state.activeTexture(33984);
						_this.last_shader_id = _shader.program;
					}
					var blend_dirty = _this.last_blend_src_rgb != _this.geom_state.blend_src_rgb;
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_src_alpha != _this.geom_state.blend_src_alpha;
					} else {
						blend_dirty = true;
					}
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_dest_rgb != _this.geom_state.blend_dest_rgb;
					} else {
						blend_dirty = true;
					}
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_dest_alpha != _this.geom_state.blend_dest_alpha;
					} else {
						blend_dirty = true;
					}
					if(blend_dirty && !_this.geom_state.ignore_blend) {
						_this.last_blend_src_rgb = _this.geom_state.blend_src_rgb;
						_this.last_blend_src_alpha = _this.geom_state.blend_src_alpha;
						_this.last_blend_dest_rgb = _this.geom_state.blend_dest_rgb;
						_this.last_blend_dest_alpha = _this.geom_state.blend_dest_alpha;
						snow_modules_opengl_web_GL.gl.blendFuncSeparate(_this.last_blend_src_rgb,_this.last_blend_dest_rgb,_this.last_blend_src_alpha,_this.last_blend_dest_alpha);
					}
				}
				if(_this.geom_state.clip) {
					if(!_this.is_clipping) {
						snow_modules_opengl_web_GL.gl.enable(3089);
						_this.is_clipping = true;
					}
					if(_this.clip_rect != null) {
						if(!_this.clip_rect.equal(_this.last_clip_rect)) {
							this.renderer.state.scissor(_this.clip_rect.x,_this.clip_rect.y,_this.clip_rect.w,_this.clip_rect.h);
						}
					}
				} else if(_this.is_clipping) {
					snow_modules_opengl_web_GL.gl.disable(3089);
					_this.is_clipping = false;
				}
				_this.geom_state.dirty = false;
				if(_geom.visible) {
					this.visible_count++;
					if(_geom.buffer_based) {
						this.visible_count--;
						continue;
					}
					if(_geom.locked) {
						var type1 = this.state.last_geom_state.primitive_type;
						if(this.pos_floats != 0) {
							if(this.pos_floats > this.max_floats) {
								throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
							}
							var _pos1 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
							var _tcoords1 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
							var _colors1 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
							var _normals1 = null;
							this.submit_buffers(type1,_pos1,_tcoords1,_colors1,_normals1);
							_pos1 = null;
							_tcoords1 = null;
							_colors1 = null;
							_normals1 = null;
							this.pos_floats = 0;
							this.tcoord_floats = 0;
							this.color_floats = 0;
							this.normal_floats = 0;
						}
						if(_geom.vertices.length != 0) {
							if(_geom.update_buffers()) {
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_pos,_geom.buffer_type);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_tcoords,_geom.buffer_type);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_colors,_geom.buffer_type);
							} else {
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
							}
							snow_modules_opengl_web_GL.gl.drawArrays(_geom.state.primitive_type,0,_geom.buffer_pos.length / 4 | 0);
							this.static_batched_count++;
							this.draw_calls++;
							_geom.set_dirty(false);
						}
						this.vert_count += _geom.vertices.length;
					} else if(_geom.state.primitive_type == 3 || _geom.state.primitive_type == 2 || _geom.state.primitive_type == 5 || _geom.state.primitive_type == 6) {
						if(_geom.vertices.length > this.max_verts) {
							_geom.set_locked(true);
							_geom.dirty_based = false;
							haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + _geom.id + "` that has more verts than the batcher has preallocated, (" + _geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
							haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
						} else {
							if(_geom.vertices.length + this.pos_floats / 4 > this.max_verts) {
								var type2 = _geom.state.primitive_type;
								if(this.pos_floats != 0) {
									if(this.pos_floats > this.max_floats) {
										throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
									}
									var _pos2 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
									var _tcoords2 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
									var _colors2 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
									var _normals2 = null;
									this.submit_buffers(type2,_pos2,_tcoords2,_colors2,_normals2);
									_pos2 = null;
									_tcoords2 = null;
									_colors2 = null;
									_normals2 = null;
									this.pos_floats = 0;
									this.tcoord_floats = 0;
									this.color_floats = 0;
									this.normal_floats = 0;
								}
							}
							var vert_index = this.pos_floats;
							var tcoord_index = this.tcoord_floats;
							var color_index = this.color_floats;
							var vertlist = this.pos_list;
							var tcoordlist = this.tcoord_list;
							var colorlist = this.color_list;
							var _this3 = _geom.transform;
							if(!_this3._destroying) {
								if(_this3.parent != null && _this3.parent.dirty) {
									_this3.parent.clean_check();
								}
								if(_this3.dirty && !_this3._cleaning && !_this3.manual_update) {
									_this3.clean();
								}
							}
							var _el = _this3.world.matrix.elements;
							var _count = _geom.vertices.length;
							var _idx = 0;
							while(_idx < _count) {
								var v = _geom.vertices[_idx];
								var _vx = v.pos.x;
								var _vy = v.pos.y;
								var _vz = v.pos.z;
								var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
								var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
								vertlist[vert_index] = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
								vertlist[vert_index + 1] = _tvy;
								vertlist[vert_index + 2] = _tvz;
								vertlist[vert_index + 3] = v.pos.w;
								vert_index += 4;
								var _vuv = v.uv.uv0;
								tcoordlist[tcoord_index] = _vuv.u;
								tcoordlist[tcoord_index + 1] = _vuv.v;
								tcoordlist[tcoord_index + 2] = _vuv.w;
								tcoordlist[tcoord_index + 3] = _vuv.t;
								tcoord_index += 4;
								colorlist[color_index] = v.color.r;
								colorlist[color_index + 1] = v.color.g;
								colorlist[color_index + 2] = v.color.b;
								colorlist[color_index + 3] = v.color.a;
								color_index += 4;
								++_idx;
							}
							var _length = _geom.vertices.length * 4;
							this.pos_floats += _length;
							this.tcoord_floats += _length;
							this.color_floats += _length;
							this.normal_floats += _length;
						}
						var type3 = _geom.state.primitive_type;
						if(this.pos_floats != 0) {
							if(this.pos_floats > this.max_floats) {
								throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
							}
							var _pos3 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
							var _tcoords3 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
							var _colors3 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
							var _normals3 = null;
							this.submit_buffers(type3,_pos3,_tcoords3,_colors3,_normals3);
							_pos3 = null;
							_tcoords3 = null;
							_colors3 = null;
							_normals3 = null;
							this.pos_floats = 0;
							this.tcoord_floats = 0;
							this.color_floats = 0;
							this.normal_floats = 0;
						}
						this.vert_count += _geom.vertices.length;
					} else {
						if(_geom.vertices.length > this.max_verts) {
							_geom.set_locked(true);
							_geom.dirty_based = false;
							haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + _geom.id + "` that has more verts than the batcher has preallocated, (" + _geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
							haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
						} else {
							if(_geom.vertices.length + this.pos_floats / 4 > this.max_verts) {
								var type4 = _geom.state.primitive_type;
								if(this.pos_floats != 0) {
									if(this.pos_floats > this.max_floats) {
										throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
									}
									var _pos4 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
									var _tcoords4 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
									var _colors4 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
									var _normals4 = null;
									this.submit_buffers(type4,_pos4,_tcoords4,_colors4,_normals4);
									_pos4 = null;
									_tcoords4 = null;
									_colors4 = null;
									_normals4 = null;
									this.pos_floats = 0;
									this.tcoord_floats = 0;
									this.color_floats = 0;
									this.normal_floats = 0;
								}
							}
							var vert_index1 = this.pos_floats;
							var tcoord_index1 = this.tcoord_floats;
							var color_index1 = this.color_floats;
							var vertlist1 = this.pos_list;
							var tcoordlist1 = this.tcoord_list;
							var colorlist1 = this.color_list;
							var _this4 = _geom.transform;
							if(!_this4._destroying) {
								if(_this4.parent != null && _this4.parent.dirty) {
									_this4.parent.clean_check();
								}
								if(_this4.dirty && !_this4._cleaning && !_this4.manual_update) {
									_this4.clean();
								}
							}
							var _el1 = _this4.world.matrix.elements;
							var _count1 = _geom.vertices.length;
							var _idx1 = 0;
							while(_idx1 < _count1) {
								var v1 = _geom.vertices[_idx1];
								var _vx1 = v1.pos.x;
								var _vy1 = v1.pos.y;
								var _vz1 = v1.pos.z;
								var _tvy1 = _el1[1] * _vx1 + _el1[5] * _vy1 + _el1[9] * _vz1 + _el1[13];
								var _tvz1 = _el1[2] * _vx1 + _el1[6] * _vy1 + _el1[10] * _vz1 + _el1[14];
								vertlist1[vert_index1] = _el1[0] * _vx1 + _el1[4] * _vy1 + _el1[8] * _vz1 + _el1[12];
								vertlist1[vert_index1 + 1] = _tvy1;
								vertlist1[vert_index1 + 2] = _tvz1;
								vertlist1[vert_index1 + 3] = v1.pos.w;
								vert_index1 += 4;
								var _vuv1 = v1.uv.uv0;
								tcoordlist1[tcoord_index1] = _vuv1.u;
								tcoordlist1[tcoord_index1 + 1] = _vuv1.v;
								tcoordlist1[tcoord_index1 + 2] = _vuv1.w;
								tcoordlist1[tcoord_index1 + 3] = _vuv1.t;
								tcoord_index1 += 4;
								colorlist1[color_index1] = v1.color.r;
								colorlist1[color_index1 + 1] = v1.color.g;
								colorlist1[color_index1 + 2] = v1.color.b;
								colorlist1[color_index1 + 3] = v1.color.a;
								color_index1 += 4;
								++_idx1;
							}
							var _length1 = _geom.vertices.length * 4;
							this.pos_floats += _length1;
							this.tcoord_floats += _length1;
							this.color_floats += _length1;
							this.normal_floats += _length1;
						}
						this.dynamic_batched_count++;
						this.vert_count += _geom.vertices.length;
					}
					if(!persist_immediate && _geom.immediate) {
						_geom.dropped = true;
						this._dropped.push(_geom);
					}
				}
			}
		}
		if(this.pos_floats > 0 && geom != null) {
			this.state.update(geom);
			var _this5 = this.state;
			if(_this5.geom_state.dirty) {
				if(_this5.geom_state.texture != null) {
					if(_this5.last_texture_id != _this5.geom_state.texture.id) {
						_this5.last_texture_id = _this5.geom_state.texture.id;
						if(_this5.geom_state.texture.texture != null) {
							_this5.geom_state.texture.bind();
						}
					}
				} else {
					Luxe.renderer.state.bindTexture2D(null);
					_this5.last_texture_id = null;
				}
				var _shader1 = this.shader == null ? _this5.geom_state.shader : this.shader;
				if(_shader1 == null) {
					if(_this5.geom_state.texture != null) {
						_shader1 = this.renderer.shaders.textured.shader;
					} else {
						_shader1 = this.renderer.shaders.plain.shader;
					}
				}
				if(_this5.last_shader_id != _shader1.program) {
					if(!_shader1.no_default_uniforms) {
						var _value2 = this.view.proj_arr;
						var _this6 = _shader1.uniforms;
						var _location2 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader1.program,"projectionMatrix");
						var _matrix42 = _this6.matrix4arrs.get("projectionMatrix");
						if(_matrix42 != null) {
							_matrix42.value = _value2;
						} else {
							_matrix42 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value2,_location2);
							_this6.matrix4arrs.set("projectionMatrix",_matrix42);
						}
						_this6.dirty_matrix4arrs.push(_matrix42);
						var _value3 = this.view.view_inverse_arr;
						var _this7 = _shader1.uniforms;
						var _location3 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader1.program,"modelViewMatrix");
						var _matrix43 = _this7.matrix4arrs.get("modelViewMatrix");
						if(_matrix43 != null) {
							_matrix43.value = _value3;
						} else {
							_matrix43 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value3,_location3);
							_this7.matrix4arrs.set("modelViewMatrix",_matrix43);
						}
						_this7.dirty_matrix4arrs.push(_matrix43);
					}
					_shader1["use"]();
					_shader1.uniforms.apply();
					Luxe.renderer.state.activeTexture(33984);
					_this5.last_shader_id = _shader1.program;
				}
				var blend_dirty1 = _this5.last_blend_src_rgb != _this5.geom_state.blend_src_rgb;
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_src_alpha != _this5.geom_state.blend_src_alpha;
				} else {
					blend_dirty1 = true;
				}
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_dest_rgb != _this5.geom_state.blend_dest_rgb;
				} else {
					blend_dirty1 = true;
				}
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_dest_alpha != _this5.geom_state.blend_dest_alpha;
				} else {
					blend_dirty1 = true;
				}
				if(blend_dirty1 && !_this5.geom_state.ignore_blend) {
					_this5.last_blend_src_rgb = _this5.geom_state.blend_src_rgb;
					_this5.last_blend_src_alpha = _this5.geom_state.blend_src_alpha;
					_this5.last_blend_dest_rgb = _this5.geom_state.blend_dest_rgb;
					_this5.last_blend_dest_alpha = _this5.geom_state.blend_dest_alpha;
					snow_modules_opengl_web_GL.gl.blendFuncSeparate(_this5.last_blend_src_rgb,_this5.last_blend_dest_rgb,_this5.last_blend_src_alpha,_this5.last_blend_dest_alpha);
				}
			}
			if(_this5.geom_state.clip) {
				if(!_this5.is_clipping) {
					snow_modules_opengl_web_GL.gl.enable(3089);
					_this5.is_clipping = true;
				}
				if(_this5.clip_rect != null) {
					if(!_this5.clip_rect.equal(_this5.last_clip_rect)) {
						this.renderer.state.scissor(_this5.clip_rect.x,_this5.clip_rect.y,_this5.clip_rect.w,_this5.clip_rect.h);
					}
				}
			} else if(_this5.is_clipping) {
				snow_modules_opengl_web_GL.gl.disable(3089);
				_this5.is_clipping = false;
			}
			_this5.geom_state.dirty = false;
			var type5 = this.state.last_geom_state.primitive_type;
			if(this.pos_floats != 0) {
				if(this.pos_floats > this.max_floats) {
					throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
				}
				var _pos5 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
				var _tcoords5 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
				var _colors5 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
				var _normals5 = null;
				this.submit_buffers(type5,_pos5,_tcoords5,_colors5,_normals5);
				_pos5 = null;
				_tcoords5 = null;
				_colors5 = null;
				_normals5 = null;
				this.pos_floats = 0;
				this.tcoord_floats = 0;
				this.color_floats = 0;
				this.normal_floats = 0;
			}
		}
		this.state.deactivate(this);
		this.state = null;
		if(this._dropped.length > 0) {
			var _g1 = 0;
			var _g11 = this._dropped;
			while(_g1 < _g11.length) {
				var geom1 = _g11[_g1];
				++_g1;
				geom1.drop();
				geom1 = null;
			}
			this._dropped = null;
			this._dropped = [];
		}
	}
	,prune: function() {
		if(this._dropped.length > 0) {
			var _g = 0;
			var _g1 = this._dropped;
			while(_g < _g1.length) {
				var geom = _g1[_g];
				++_g;
				geom.drop();
				geom = null;
			}
			this._dropped = null;
			this._dropped = [];
		}
	}
	,draw: function(persist_immediate) {
		if(persist_immediate == null) {
			persist_immediate = false;
		}
		if(this.name != "") {
			Luxe.debug.start(this.name);
		}
		this.draw_calls = 0;
		this.vert_count = 0;
		this.emitter.emit(1,this);
		this.view.process();
		this.renderer.state.viewport(this.view.viewport.x,this.view.viewport.y,this.view.viewport.w,this.view.viewport.h);
		this.batch(persist_immediate);
		this.emitter.emit(2,this);
		var _stats = this.renderer.stats;
		var _node = this.geometry.root;
		_stats.geometry_count += (_node == null ? 0 : _node.nodecount) * this.show_stats;
		_stats.dynamic_batched_count += this.dynamic_batched_count * this.show_stats;
		_stats.static_batched_count += this.static_batched_count * this.show_stats;
		_stats.visible_count += this.visible_count * this.show_stats;
		_stats.draw_calls += this.draw_calls * this.show_stats;
		_stats.vert_count += this.vert_count * this.show_stats;
		if(this.name != "") {
			Luxe.debug.end(this.name);
		}
	}
	,update_view: function() {
		this.view.process();
		this.renderer.state.viewport(this.view.viewport.x,this.view.viewport.y,this.view.viewport.w,this.view.viewport.h);
	}
	,apply_default_uniforms: function(_shader) {
		if(!_shader.no_default_uniforms) {
			var _value = this.view.proj_arr;
			var _this = _shader.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix");
			var _matrix4 = _this.matrix4arrs.get("projectionMatrix");
			if(_matrix4 != null) {
				_matrix4.value = _value;
			} else {
				_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value,_location);
				_this.matrix4arrs.set("projectionMatrix",_matrix4);
			}
			_this.dirty_matrix4arrs.push(_matrix4);
			var _value1 = this.view.view_inverse_arr;
			var _this1 = _shader.uniforms;
			var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix");
			var _matrix41 = _this1.matrix4arrs.get("modelViewMatrix");
			if(_matrix41 != null) {
				_matrix41.value = _value1;
			} else {
				_matrix41 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value1,_location1);
				_this1.matrix4arrs.set("modelViewMatrix",_matrix41);
			}
			_this1.dirty_matrix4arrs.push(_matrix41);
		}
	}
	,submit_geometry: function(_geom,_shader) {
		if(!_geom.buffer_based) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_geom.buffer_based" + (" ( " + "Only buffer based geometry can be submitted directly" + " )")));
		}
		if(!_geom.visible) {
			return;
		}
		if(_shader == null) {
			_shader = _geom.state.shader;
		}
		if(this.shader != null) {
			_shader = this.shader;
		}
		_shader["use"]();
		_shader.uniforms.apply();
		Luxe.renderer.state.activeTexture(33984);
		if(!_shader.no_default_uniforms) {
			var _value = this.view.proj_arr;
			var _this = _shader.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix");
			var _matrix4 = _this.matrix4arrs.get("projectionMatrix");
			if(_matrix4 != null) {
				_matrix4.value = _value;
			} else {
				_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value,_location);
				_this.matrix4arrs.set("projectionMatrix",_matrix4);
			}
			_this.dirty_matrix4arrs.push(_matrix4);
			var _value1 = this.view.view_inverse_arr;
			var _this1 = _shader.uniforms;
			var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix");
			var _matrix41 = _this1.matrix4arrs.get("modelViewMatrix");
			if(_matrix41 != null) {
				_matrix41.value = _value1;
			} else {
				_matrix41 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value1,_location1);
				_this1.matrix4arrs.set("modelViewMatrix",_matrix41);
			}
			_this1.dirty_matrix4arrs.push(_matrix41);
		}
		_geom.uniforms.apply();
		var _length = _geom.vertices.length;
		if(_geom.update_buffers()) {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_pos,_geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_tcoords,_geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_colors,_geom.buffer_type);
		} else {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		}
		snow_modules_opengl_web_GL.gl.drawArrays(_geom.state.primitive_type,0,_geom.buffer_pos.length / 4 | 0);
		var _stats = this.renderer.stats;
		_stats.geometry_count++;
		_stats.visible_count++;
		_stats.draw_calls++;
		_stats.vert_count += _length;
	}
	,submit_buffers: function(type,_pos,_tcoords,_colors,_normals) {
		var pb = snow_modules_opengl_web_GL.gl.createBuffer();
		var cb = snow_modules_opengl_web_GL.gl.createBuffer();
		var tb = snow_modules_opengl_web_GL.gl.createBuffer();
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,pb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_pos,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,tb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_tcoords,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,cb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_colors,35040);
		snow_modules_opengl_web_GL.gl.drawArrays(type,0,_pos.length / 4 | 0);
		snow_modules_opengl_web_GL.gl.deleteBuffer(pb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(cb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(tb);
		this.draw_calls++;
	}
	,submit_static_geometry: function(geom) {
		if(geom.vertices.length == 0) {
			return false;
		}
		if(geom.update_buffers()) {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_pos,geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_tcoords,geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_colors,geom.buffer_type);
		} else {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		}
		snow_modules_opengl_web_GL.gl.drawArrays(geom.state.primitive_type,0,geom.buffer_pos.length / 4 | 0);
		this.static_batched_count++;
		this.draw_calls++;
		geom.set_dirty(false);
		return true;
	}
	,submit_current_vertex_list: function(type) {
		if(this.pos_floats == 0) {
			return false;
		}
		if(this.pos_floats > this.max_floats) {
			throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
		}
		var _pos = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
		var _tcoords = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
		var _colors = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
		var _normals = null;
		this.submit_buffers(type,_pos,_tcoords,_colors,_normals);
		_pos = null;
		_tcoords = null;
		_colors = null;
		_normals = null;
		this.pos_floats = 0;
		this.tcoord_floats = 0;
		this.color_floats = 0;
		this.normal_floats = 0;
		return true;
	}
	,geometry_batch: function(geom) {
		if(geom.vertices.length > this.max_verts) {
			geom.set_locked(true);
			geom.dirty_based = false;
			haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + geom.id + "` that has more verts than the batcher has preallocated, (" + geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
			haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
			return;
		}
		if(geom.vertices.length + this.pos_floats / 4 > this.max_verts) {
			var type = geom.state.primitive_type;
			if(this.pos_floats != 0) {
				if(this.pos_floats > this.max_floats) {
					throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
				}
				var _pos = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
				var _tcoords = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
				var _colors = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
				var _normals = null;
				this.submit_buffers(type,_pos,_tcoords,_colors,_normals);
				_pos = null;
				_tcoords = null;
				_colors = null;
				_normals = null;
				this.pos_floats = 0;
				this.tcoord_floats = 0;
				this.color_floats = 0;
				this.normal_floats = 0;
			}
		}
		var vert_index = this.pos_floats;
		var tcoord_index = this.tcoord_floats;
		var color_index = this.color_floats;
		var vertlist = this.pos_list;
		var tcoordlist = this.tcoord_list;
		var colorlist = this.color_list;
		var _this = geom.transform;
		if(!_this._destroying) {
			if(_this.parent != null && _this.parent.dirty) {
				_this.parent.clean_check();
			}
			if(_this.dirty && !_this._cleaning && !_this.manual_update) {
				_this.clean();
			}
		}
		var _el = _this.world.matrix.elements;
		var _count = geom.vertices.length;
		var _idx = 0;
		while(_idx < _count) {
			var v = geom.vertices[_idx];
			var _vx = v.pos.x;
			var _vy = v.pos.y;
			var _vz = v.pos.z;
			var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
			var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
			vertlist[vert_index] = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
			vertlist[vert_index + 1] = _tvy;
			vertlist[vert_index + 2] = _tvz;
			vertlist[vert_index + 3] = v.pos.w;
			vert_index += 4;
			var _vuv = v.uv.uv0;
			tcoordlist[tcoord_index] = _vuv.u;
			tcoordlist[tcoord_index + 1] = _vuv.v;
			tcoordlist[tcoord_index + 2] = _vuv.w;
			tcoordlist[tcoord_index + 3] = _vuv.t;
			tcoord_index += 4;
			colorlist[color_index] = v.color.r;
			colorlist[color_index + 1] = v.color.g;
			colorlist[color_index + 2] = v.color.b;
			colorlist[color_index + 3] = v.color.a;
			color_index += 4;
			++_idx;
		}
		var _length = geom.vertices.length * 4;
		this.pos_floats += _length;
		this.tcoord_floats += _length;
		this.color_floats += _length;
		this.normal_floats += _length;
	}
	,set_layer: function(_layer) {
		this.layer = _layer;
		this.renderer.batchers.sort(($_=this.renderer,$bind($_,$_.sort_batchers)));
		return this.layer;
	}
	,toString: function() {
		return "Batcher(" + this.name + ")";
	}
	,compare: function(other) {
		if(this.layer == other.layer) {
			return 0;
		}
		if(this.layer < other.layer) {
			return -1;
		}
		return 1;
	}
	,compare_rule_to_string: function(r) {
		switch(r) {
		case 0:
			return "same";
		case 1:
			return "depth <";
		case 2:
			return "depth >";
		case 3:
			return "shader <";
		case 4:
			return "shader >";
		case 5:
			return "shader s._ >";
		case 6:
			return "shader _.s <";
		case 7:
			return "texture <";
		case 8:
			return "texture >";
		case 9:
			return "texture t._ >";
		case 10:
			return "texture _.t <";
		case 11:
			return "primitive <";
		case 12:
			return "primitive >";
		case 13:
			return "unclipped";
		case 14:
			return "clipped";
		case 15:
			return "timestamp <";
		case 16:
			return "timestamp >";
		case 17:
			return "timestamp ==";
		case 18:
			return "sequence <";
		case 19:
			return "sequence >";
		case 20:
			return "fallback";
		default:
			return "unknown";
		}
	}
	,compare_rule: function(a,b) {
		if(a.uuid == b.uuid) {
			return 0;
		}
		if(a.depth < b.depth) {
			return 1;
		}
		if(a.depth > b.depth) {
			return 2;
		}
		if(a.shader != null && b.shader != null) {
			if(a.shader.id < b.shader.id) {
				return 3;
			}
			if(a.shader.id > b.shader.id) {
				return 4;
			}
		} else if(a.shader != null && b.shader == null) {
			return 5;
		} else if(a.shader == null && b.shader != null) {
			return 6;
		}
		if(a.texture != null && b.texture != null) {
			if(a.texture.id < b.texture.id) {
				return 7;
			}
			if(a.texture.id > b.texture.id) {
				return 8;
			}
		} else if(a.texture != null && b.texture == null) {
			return 9;
		} else if(a.texture == null && b.texture != null) {
			return 10;
		}
		var a_primitive_index = a.primitive_type;
		var b_primitive_index = b.primitive_type;
		if(a_primitive_index < b_primitive_index) {
			return 11;
		}
		if(a_primitive_index > b_primitive_index) {
			return 12;
		}
		if(a.clip != b.clip) {
			if(a.clip == false && b.clip == true) {
				return 13;
			} else if(a.clip == true && b.clip == false) {
				return 14;
			}
		}
		if(a.timestamp < b.timestamp) {
			return 15;
		}
		if(a.timestamp > b.timestamp) {
			return 16;
		}
		if(a.timestamp == b.timestamp) {
			return 17;
		}
		if(a.sequence < b.sequence) {
			return 18;
		}
		if(a.sequence > b.sequence) {
			return 19;
		}
		return 20;
	}
	,geometry_compare: function(a,b) {
		if(a.uuid == b.uuid) {
			return 0;
		}
		if(a.depth < b.depth) {
			return -1;
		}
		if(a.depth > b.depth) {
			return 1;
		}
		if(a.shader != null && b.shader != null) {
			if(a.shader.id < b.shader.id) {
				return -1;
			}
			if(a.shader.id > b.shader.id) {
				return 1;
			}
		} else if(a.shader != null && b.shader == null) {
			return 1;
		} else if(a.shader == null && b.shader != null) {
			return -1;
		}
		if(a.texture != null && b.texture != null) {
			if(a.texture.id < b.texture.id) {
				return -1;
			}
			if(a.texture.id > b.texture.id) {
				return 1;
			}
		} else if(a.texture != null && b.texture == null) {
			return 1;
		} else if(a.texture == null && b.texture != null) {
			return -1;
		}
		var a_primitive_index = a.primitive_type;
		var b_primitive_index = b.primitive_type;
		if(a_primitive_index < b_primitive_index) {
			return -1;
		}
		if(a_primitive_index > b_primitive_index) {
			return 1;
		}
		if(a.clip != b.clip) {
			if(a.clip == false && b.clip == true) {
				return 1;
			} else if(a.clip == true && b.clip == false) {
				return -1;
			}
		}
		if(a.timestamp < b.timestamp) {
			return -1;
		}
		if(a.timestamp > b.timestamp) {
			return 1;
		}
		if(a.sequence < b.sequence) {
			return -1;
		}
		if(a.sequence > b.sequence) {
			return 1;
		}
		return 1;
	}
	,list_geometry: function() {
		var _g = this.geometry.iterator();
		while(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
			var tmp;
			if(!(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0)) {
				tmp = null;
			} else if(_g.current.right != null) {
				var _node = _g.current.right;
				while(_node.left != null) _node = _node.left;
				tmp = _node;
			} else {
				var _next = null;
				var _temp = _g.tree.root;
				while(_temp != null) {
					var _comp = _g.tree.compare(_g.current.key,_temp.key);
					if(_comp < 0) {
						_next = _temp;
						_temp = _temp.left;
					} else if(_comp > 0) {
						_temp = _temp.right;
					} else {
						_g.current = _next;
						break;
					}
				}
				tmp = _next;
			}
			_g.current = tmp;
		}
	}
	,set_show_stats: function(_value) {
		if(_value == 0) {
			this.renderer.stats.batchers--;
		} else {
			this.renderer.stats.batchers++;
		}
		return this.show_stats = _value;
	}
	,__class__: phoenix_Batcher
	,__properties__: {set_show_stats:"set_show_stats",set_layer:"set_layer"}
};
var phoenix_BitmapFont = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 6;
	luxe_resource_Resource.call(this,_options);
	if(_options.texture_path != null) {
		this.texture_path = _options.texture_path;
	} else {
		this.texture_path = haxe_io_Path.directory(this.id);
	}
	this.pages = new haxe_ds_IntMap();
	if(_options.pages != null) {
		if(_options.font_data == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.font_data was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
		}
	}
	if(_options.font_data != null) {
		if(_options.pages == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.pages was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
		}
		this.set_info(luxe_importers_bitmapfont_BitmapFontParser.parse(_options.font_data));
		this.apply_pages(_options.pages);
	}
};
$hxClasses["phoenix.BitmapFont"] = phoenix_BitmapFont;
phoenix_BitmapFont.__name__ = ["phoenix","BitmapFont"];
phoenix_BitmapFont.__super__ = luxe_resource_Resource;
phoenix_BitmapFont.prototype = $extend(luxe_resource_Resource.prototype,{
	kerning: function(_first,_second) {
		var _map = this.info.kernings.h[_first];
		if(_map != null && _map.h.hasOwnProperty(_second)) {
			return _map.h[_second];
		}
		return 0;
	}
	,wrap_string_to_bounds: function(_string,_bounds,_point_size,_letter_spc) {
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		if(_point_size == null) {
			_point_size = 1.0;
		}
		var _gthis = this;
		if(_bounds == null) {
			return _string;
		}
		var _cur_x = 0.0;
		var _idx = 0;
		var _final_str = "";
		var _max_w = 0.0;
		var _lines = luxe_utils_unifill_Unifill.uSplit(" ","\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			_max_w = Math.max(_max_w,_gthis.width_of_line(_line,_point_size,_letter_spc));
		}
		var _spacew = _max_w;
		var _strings = _string.split(" ");
		var _count = _strings.length;
		var _g1 = 0;
		while(_g1 < _strings.length) {
			var _str = _strings[_g1];
			++_g1;
			while(false) {
			}
			var index = _str.indexOf("\n",0);
			if((index >= 0 ? luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(_str,0,index) : -1) == -1) {
				if(_str == "") {
					_str = " ";
				}
				var _max_w1 = 0.0;
				var _lines1 = luxe_utils_unifill_Unifill.uSplit(_str,"\n");
				var _g2 = 0;
				while(_g2 < _lines1.length) {
					var _line1 = _lines1[_g2];
					++_g2;
					_max_w1 = Math.max(_max_w1,_gthis.width_of_line(_line1,_point_size,_letter_spc));
				}
				var _w = _max_w1;
				if(_cur_x + _w > _bounds.w) {
					_cur_x = 0;
					_final_str += "\n";
				}
				_cur_x += _w;
				_final_str += _str;
			} else {
				var _widx = 0;
				var _words = _str.split("\n");
				var _g11 = 0;
				while(_g11 < _words.length) {
					var _word = _words[_g11];
					++_g11;
					if(_word != "") {
						var _max_w2 = 0.0;
						var _lines2 = luxe_utils_unifill_Unifill.uSplit(_word,"\n");
						var _g3 = 0;
						while(_g3 < _lines2.length) {
							var _line2 = _lines2[_g3];
							++_g3;
							_max_w2 = Math.max(_max_w2,_gthis.width_of_line(_line2,_point_size,_letter_spc));
						}
						var _w1 = _max_w2;
						if(_cur_x + _w1 > _bounds.w) {
							_cur_x = 0;
							_final_str += "\n";
						}
						_cur_x += _w1;
						_final_str += _word;
					} else {
						_cur_x = 0;
					}
					if(_widx < _words.length - 1) {
						_final_str += "\n";
						_cur_x = 0;
					}
					++_widx;
				}
			}
			if(_idx < _count - 1) {
				_final_str += " ";
				_cur_x += _spacew + _letter_spc;
			}
			++_idx;
		}
		return _final_str;
	}
	,width_of_line: function(_string,_point_size,_letter_spc) {
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		if(_point_size == null) {
			_point_size = 1.0;
		}
		var _g_endIndex;
		var _g_index;
		var _cur_x = 0.0;
		var _cur_w = 0.0;
		var _ratio = _point_size / this.info.point_size;
		var i = 0;
		var _len = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(_string,0,_string.length);
		var _g_i = 0;
		_g_index = 0;
		_g_endIndex = _string.length;
		while(_g_index < _g_endIndex) {
			_g_i = _g_index;
			var c = _string.charCodeAt(_g_index);
			_g_index += !(55296 <= c && c <= 56319) ? 1 : 2;
			var _index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_string,_g_i);
			var _char = this.info.chars.h[_index];
			if(_char == null) {
				_char = this.space_char;
			}
			var _cw = (_char.xoffset + Math.max(_char.width,_char.xadvance)) * _ratio;
			var _cx = _cur_x + _char.xoffset * _ratio;
			var _spacing = _char.xadvance;
			if(i < _len - 1) {
				var index = i + 1;
				var s = _string;
				var i1;
				if(index >= 0) {
					var index1 = 0;
					var len = s.length;
					var i2 = 0;
					while(i2 < index && index1 < len) {
						var c1 = s.charCodeAt(index1);
						index1 += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
						++i2;
					}
					i1 = index1;
				} else {
					while(false) {
					}
					i1 = 0;
				}
				var _next_index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_string,i1);
				var _map = this.info.kernings.get(_index);
				_spacing += _map != null && _map.h.hasOwnProperty(_next_index) ? _map.h[_next_index] : 0;
				if(_next_index >= 32) {
					_spacing += _letter_spc;
				}
			}
			_cur_x += _spacing * _ratio;
			_cur_w = Math.max(_cur_w,_cx + _cw);
			++i;
		}
		return _cur_w;
	}
	,width_of: function(_string,_point_size,_letter_spc,_line_widths) {
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		if(_point_size == null) {
			_point_size = 1.0;
		}
		var _max_w = 0.0;
		var _push_widths = _line_widths != null;
		var _lines = luxe_utils_unifill_Unifill.uSplit(_string,"\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			var _cur_w = this.width_of_line(_line,_point_size,_letter_spc);
			_max_w = Math.max(_max_w,_cur_w);
			if(_push_widths) {
				_line_widths.push(_cur_w);
			}
		}
		return _max_w;
	}
	,height_of: function(_string,_point_size,_line_spc) {
		if(_line_spc == null) {
			_line_spc = 0.0;
		}
		return _string.split("\n").length * ((this.info.line_height + _line_spc) * (_point_size / this.info.point_size));
	}
	,dimensions_of: function(_string,_point_size,_into,_letter_spc,_line_spc) {
		if(_line_spc == null) {
			_line_spc = 0.0;
		}
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		var _max_w = 0.0;
		var _lines = luxe_utils_unifill_Unifill.uSplit(_string,"\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			_max_w = Math.max(_max_w,this.width_of_line(_line,_point_size,_letter_spc));
		}
		var _width = _max_w;
		var _height = _string.split("\n").length * ((this.info.line_height + _line_spc) * (_point_size / this.info.point_size));
		var prev = _into.ignore_listeners;
		_into.ignore_listeners = true;
		_into.x = _width;
		if(!_into._construct) {
			if(_into.listen_x != null && !_into.ignore_listeners) {
				_into.listen_x(_width);
			}
		}
		_into.y = _height;
		if(!_into._construct) {
			if(_into.listen_y != null && !_into.ignore_listeners) {
				_into.listen_y(_height);
			}
		}
		_into.ignore_listeners = prev;
		if(_into.listen_x != null && !_into.ignore_listeners) {
			_into.listen_x(_into.x);
		}
		if(_into.listen_y != null && !_into.ignore_listeners) {
			_into.listen_y(_into.y);
		}
		return _into;
	}
	,height_of_lines: function(_lines,_point_size,_line_spc) {
		if(_line_spc == null) {
			_line_spc = 0.0;
		}
		return _lines.length * ((this.info.line_height + _line_spc) * (_point_size / this.info.point_size));
	}
	,line_height_to_point_size: function(_pixel_height,_line_spc) {
		if(_line_spc == null) {
			_line_spc = 0.0;
		}
		return _pixel_height * (this.info.point_size / (this.info.line_height + _line_spc));
	}
	,clear: function() {
		this.set_info(null);
		var _pageid = this.pages.keys();
		while(_pageid.hasNext()) {
			var _pageid1 = _pageid.next();
			var _page = this.pages.h[_pageid1];
			_page.destroy();
			this.pages.remove(_pageid1);
			_page = null;
		}
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.id).then(function(_asset) {
				var tmp = luxe_importers_bitmapfont_BitmapFontParser.parse(_asset.text);
				_gthis.set_info(tmp);
				_asset.destroy();
				_asset = null;
				if(_gthis.info == null) {
					throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("info was null"));
				}
				var _tex_get = [];
				var _g = 0;
				var _g1 = _gthis.info.pages;
				while(_g < _g1.length) {
					var _page = _g1[_g];
					++_g;
					var _path = haxe_io_Path.join([_gthis.texture_path,_page.file]);
					var _prior = _gthis.system.cache.get(_path);
					if(_prior != null) {
						_tex_get.push(_prior.reload());
					} else {
						_tex_get.push(_gthis.system.load_texture(_path));
					}
				}
				snow_api_Promise.all(_tex_get).then(function(_pages) {
					_gthis.apply_pages(_pages);
					_gthis.set_state(3);
					resolve(_gthis);
				}).error(function(_error) {
					_gthis.set_state(4);
					reject(_error);
				});
			}).error(function(_error1) {
				_gthis.set_state(4);
				reject(_error1);
			});
		});
	}
	,apply_pages: function(_pages) {
		var _pageid = 0;
		var _g = 0;
		while(_g < _pages.length) {
			var _page = _pages[_g];
			++_g;
			_page.slot = _pageid;
			this.pages.h[_pageid] = _page;
			++_pageid;
		}
	}
	,set_info: function(_info) {
		this.info = _info;
		if(this.info != null) {
			this.space_char = this.info.chars.h[32];
		}
		return this.info;
	}
	,toString: function() {
		return "BitmapFont(" + this.id + ")";
	}
	,__class__: phoenix_BitmapFont
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_info:"set_info"})
});
var phoenix_ProjectionType = $hxClasses["phoenix.ProjectionType"] = { __ename__ : ["phoenix","ProjectionType"], __constructs__ : ["ortho","perspective","custom"] };
phoenix_ProjectionType.ortho = ["ortho",0];
phoenix_ProjectionType.ortho.toString = $estr;
phoenix_ProjectionType.ortho.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.perspective = ["perspective",1];
phoenix_ProjectionType.perspective.toString = $estr;
phoenix_ProjectionType.perspective.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.custom = ["custom",2];
phoenix_ProjectionType.custom.toString = $estr;
phoenix_ProjectionType.custom.__enum__ = phoenix_ProjectionType;
var phoenix_Camera = function(_options) {
	this.refresh_pos_ = false;
	this.up_ = new phoenix_Vector(0,1,0);
	this.setup_ = true;
	this.look_at_dirty = true;
	this.projection_dirty = true;
	this.transform_dirty = true;
	this.minimum_zoom = 0.01;
	this.depth_test = false;
	this.cull_backfaces = false;
	this.aspect = 1.5;
	this.fov_type = phoenix_FOVType.horizontal;
	this.fov = 60;
	this.far = -1000;
	this.near = 1000;
	this.zoom = 1.0;
	this.name = "camera";
	this.transform = new phoenix_Transform();
	this.projection_matrix = new phoenix_Matrix();
	this.view_matrix = new phoenix_Matrix();
	this.view_matrix_inverse = new phoenix_Matrix();
	this.look_at_matrix = new phoenix_Matrix();
	if(_options == null) {
		_options = { projection : phoenix_ProjectionType.ortho, depth_test : false, cull_backfaces : false, near : 1000, far : -1000};
	}
	if(_options.projection == null) {
		_options.projection = phoenix_ProjectionType.ortho;
	}
	this.projection = _options.projection;
	this.set_center(new phoenix_Vector(Luxe.core.screen.get_w() / 2,Luxe.core.screen.get_h() / 2));
	this.set_pos(new phoenix_Vector());
	if(_options.viewport == null) {
		_options.viewport = new phoenix_Rectangle(0,0,Luxe.core.screen.get_w(),Luxe.core.screen.get_h());
	}
	this.set_viewport(_options.viewport);
	if(_options.camera_name != null) {
		this.name = _options.camera_name;
	}
	var _this = this.transform;
	if(_this._clean_handlers == null) {
		_this._clean_handlers = [];
	}
	_this._clean_handlers.push($bind(this,this.on_transform_cleaned));
	switch(this.projection[1]) {
	case 0:
		this.set_ortho(_options);
		break;
	case 1:
		this.set_perspective(_options);
		break;
	case 2:
		break;
	}
	this.process();
	this.setup_ = false;
};
$hxClasses["phoenix.Camera"] = phoenix_Camera;
phoenix_Camera.__name__ = ["phoenix","Camera"];
phoenix_Camera.prototype = {
	set_ortho: function(_options) {
		this.projection = phoenix_ProjectionType.ortho;
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			var _fov = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov;
			}
			this.fov = _fov;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) {
			var _fov1 = _options.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov1 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov1;
			}
			this.fov = _fov1;
		}
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) {
			this.set_viewport(_options.viewport);
		}
		if(_options.cull_backfaces != null) {
			this.cull_backfaces = _options.cull_backfaces;
		}
		if(_options.depth_test != null) {
			this.depth_test = _options.depth_test;
		}
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			var _fov2 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov2 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov2;
			}
			this.fov = _fov2;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			var _fov3 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov3 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov3;
			}
			this.fov = _fov3;
		}
	}
	,set_perspective: function(_options) {
		this.projection = phoenix_ProjectionType.perspective;
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			var _fov = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov;
			}
			this.fov = _fov;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) {
			var _fov1 = _options.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov1 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov1;
			}
			this.fov = _fov1;
		}
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) {
			this.set_viewport(_options.viewport);
		}
		if(_options.cull_backfaces != null) {
			this.cull_backfaces = _options.cull_backfaces;
		}
		if(_options.depth_test != null) {
			this.depth_test = _options.depth_test;
		}
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			var _fov2 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov2 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov2;
			}
			this.fov = _fov2;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			var _fov3 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov3 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov3;
			}
			this.fov = _fov3;
		}
		var _this = this.transform.origin;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.z = 0;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
	}
	,project: function(_vector) {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Matrix();
		var ae = this.projection_matrix.elements;
		var be = this.view_matrix_inverse.elements;
		var te = _this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		var _this1 = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var e = _this.elements;
		var x = _this1.x;
		var y = _this1.y;
		var z = _this1.z;
		var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);
		var _x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;
		var _y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;
		var _z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;
		var prev = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = _y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y);
			}
		}
		_this1.z = _z;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z);
			}
		}
		_this1.ignore_listeners = prev;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return _this1;
	}
	,unproject: function(_vector) {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Matrix();
		var ae = this.projection_matrix.elements;
		var be = this.view_matrix_inverse.elements;
		var te = _this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		var _this1 = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var te1 = _this.elements;
		var me = _this.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te1[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te1[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te1[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te1[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te1[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te1[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te1[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te1[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te1[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te1[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te1[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te1[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te1[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te1[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te1[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te1[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te1[0] + me[1] * te1[4] + me[2] * te1[8] + me[3] * te1[12];
		var m;
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			var e = _this.elements;
			e[0] = 1;
			e[4] = 0;
			e[8] = 0;
			e[12] = 0;
			e[1] = 0;
			e[5] = 1;
			e[9] = 0;
			e[13] = 0;
			e[2] = 0;
			e[6] = 0;
			e[10] = 1;
			e[14] = 0;
			e[3] = 0;
			e[7] = 0;
			e[11] = 0;
			e[15] = 1;
			m = _this;
		} else {
			var _s = 1 / det;
			var te2 = _this.elements;
			te2[0] *= _s;
			te2[4] *= _s;
			te2[8] *= _s;
			te2[12] *= _s;
			te2[1] *= _s;
			te2[5] *= _s;
			te2[9] *= _s;
			te2[13] *= _s;
			te2[2] *= _s;
			te2[6] *= _s;
			te2[10] *= _s;
			te2[14] *= _s;
			te2[3] *= _s;
			te2[7] *= _s;
			te2[11] *= _s;
			te2[15] *= _s;
			m = _this;
		}
		var e1 = m.elements;
		var x = _this1.x;
		var y = _this1.y;
		var z = _this1.z;
		var d = 1 / (e1[3] * x + e1[7] * y + e1[11] * z + e1[15]);
		var _x = (e1[0] * x + e1[4] * y + e1[8] * z + e1[12]) * d;
		var _y = (e1[1] * x + e1[5] * y + e1[9] * z + e1[13]) * d;
		var _z = (e1[2] * x + e1[6] * y + e1[10] * z + e1[14]) * d;
		var prev = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = _y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y);
			}
		}
		_this1.z = _z;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z);
			}
		}
		_this1.ignore_listeners = prev;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return _this1;
	}
	,screen_point_to_ray: function(_vector) {
		return new phoenix_Ray(_vector,this);
	}
	,screen_point_to_world: function(_vector) {
		if(this.projection == phoenix_ProjectionType.ortho) {
			if(this.target != null) {
				this.update_look_at();
			}
			this.update_projection_matrix();
			this.update_view_matrix();
			var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			var e = this.view_matrix.elements;
			var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
			var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
			var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
			return _this;
		} else if(this.projection == phoenix_ProjectionType.perspective) {
			return this.screen_point_to_ray(_vector).end;
		}
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this1 = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x2 = _this1.x;
		var _y2 = _this1.y;
		var _z2 = _this1.z;
		var e1 = this.view_matrix.elements;
		var _x3 = e1[0] * _x2 + e1[4] * _y2 + e1[8] * _z2 + e1[12];
		var _y3 = e1[1] * _x2 + e1[5] * _y2 + e1[9] * _z2 + e1[13];
		var _z3 = e1[2] * _x2 + e1[6] * _y2 + e1[10] * _z2 + e1[14];
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x3;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x3);
			}
		}
		_this1.y = _y3;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y3);
			}
		}
		_this1.z = _z3;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z3);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return _this1;
	}
	,world_point_to_screen: function(_vector,_viewport) {
		if(this.projection == phoenix_ProjectionType.ortho) {
			if(this.target != null) {
				this.update_look_at();
			}
			this.update_projection_matrix();
			this.update_view_matrix();
			var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			var e = this.view_matrix_inverse.elements;
			var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
			var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
			var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
			return _this;
		} else if(this.projection == phoenix_ProjectionType.perspective) {
			var _viewport1 = _viewport;
			if(_viewport == null) {
				_viewport1 = this.viewport;
			}
			var _projected = this.project(_vector);
			var width_half = _viewport1.w / 2;
			var height_half = _viewport1.h / 2;
			return new phoenix_Vector(_projected.x * width_half + width_half,-(_projected.y * height_half) + height_half);
		}
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this1 = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x2 = _this1.x;
		var _y2 = _this1.y;
		var _z2 = _this1.z;
		var e1 = this.view_matrix_inverse.elements;
		var _x3 = e1[0] * _x2 + e1[4] * _y2 + e1[8] * _z2 + e1[12];
		var _y3 = e1[1] * _x2 + e1[5] * _y2 + e1[9] * _z2 + e1[13];
		var _z3 = e1[2] * _x2 + e1[6] * _y2 + e1[10] * _z2 + e1[14];
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x3;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x3);
			}
		}
		_this1.y = _y3;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y3);
			}
		}
		_this1.z = _z3;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z3);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return _this1;
	}
	,process: function() {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		if(this.cull_backfaces) {
			Luxe.renderer.state.enable(2884);
		} else {
			Luxe.renderer.state.disable(2884);
		}
		if(this.depth_test) {
			Luxe.renderer.state.enable(2929);
		} else {
			Luxe.renderer.state.disable(2929);
		}
	}
	,update_matrices: function() {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
	}
	,on_transform_cleaned: function(t) {
		this.transform_dirty = true;
	}
	,update_look_at: function() {
		if(this.look_at_dirty && this.target != null) {
			var _this = this.look_at_matrix;
			var _eye = this.target;
			var _target = this.pos;
			var _up = this.up_;
			var _x = new phoenix_Vector();
			var _y = new phoenix_Vector();
			var _z = new phoenix_Vector();
			var te = _this.elements;
			var _x1 = _target.x - _eye.x;
			var _y1 = _target.y - _eye.y;
			var _z1 = _target.z - _eye.z;
			var b = Math.sqrt(_x1 * _x1 + _y1 * _y1 + _z1 * _z1);
			_z = new phoenix_Vector(_x1 / b,_y1 / b,_z1 / b);
			if(Math.sqrt(_z.x * _z.x + _z.y * _z.y + _z.z * _z.z) == 0) {
				_z.z = 1;
				if(!_z._construct) {
					if(_z.listen_z != null && !_z.ignore_listeners) {
						_z.listen_z(1);
					}
				}
			}
			var _x2 = _up.y * _z.z - _up.z * _z.y;
			var _y2 = _up.z * _z.x - _up.x * _z.z;
			var _z2 = _up.x * _z.y - _up.y * _z.x;
			var b1 = Math.sqrt(_x2 * _x2 + _y2 * _y2 + _z2 * _z2);
			_x = new phoenix_Vector(_x2 / b1,_y2 / b1,_z2 / b1);
			if(Math.sqrt(_x.x * _x.x + _x.y * _x.y + _x.z * _x.z) == 0) {
				var _g = _z;
				var _x3 = _g.x + 0.0001;
				_g.x = _x3;
				if(!_g._construct) {
					if(_g.listen_x != null && !_g.ignore_listeners) {
						_g.listen_x(_x3);
					}
				}
				var _x4 = _up.y * _z.z - _up.z * _z.y;
				var _y3 = _up.z * _z.x - _up.x * _z.z;
				var _z3 = _up.x * _z.y - _up.y * _z.x;
				var b2 = Math.sqrt(_x4 * _x4 + _y3 * _y3 + _z3 * _z3);
				_x = new phoenix_Vector(_x4 / b2,_y3 / b2,_z3 / b2);
			}
			_y = new phoenix_Vector(_z.y * _x.z - _z.z * _x.y,_z.z * _x.x - _z.x * _x.z,_z.x * _x.y - _z.y * _x.x);
			te[0] = _x.x;
			te[4] = _y.x;
			te[8] = _z.x;
			te[1] = _x.y;
			te[5] = _y.y;
			te[9] = _z.y;
			te[2] = _x.z;
			te[6] = _y.z;
			te[10] = _z.z;
			this.transform.local.rotation.setFromRotationMatrix(this.look_at_matrix);
		}
	}
	,update_view_matrix: function() {
		var _this = this.transform;
		if(!_this._destroying) {
			if(_this.parent != null && _this.parent.dirty) {
				_this.parent.clean_check();
			}
			if(_this.dirty && !_this._cleaning && !_this.manual_update) {
				_this.clean();
			}
		}
		this.view_matrix = _this.world.matrix;
		if(!this.transform_dirty) {
			return;
		}
		var _this1 = this.view_matrix;
		var te = _this1.elements;
		var _this2 = new phoenix_Matrix(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);
		var te1 = _this2.elements;
		var me = _this1.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te1[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te1[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te1[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te1[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te1[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te1[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te1[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te1[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te1[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te1[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te1[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te1[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te1[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te1[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te1[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te1[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te1[0] + me[1] * te1[4] + me[2] * te1[8] + me[3] * te1[12];
		var tmp;
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			var e = _this2.elements;
			e[0] = 1;
			e[4] = 0;
			e[8] = 0;
			e[12] = 0;
			e[1] = 0;
			e[5] = 1;
			e[9] = 0;
			e[13] = 0;
			e[2] = 0;
			e[6] = 0;
			e[10] = 1;
			e[14] = 0;
			e[3] = 0;
			e[7] = 0;
			e[11] = 0;
			e[15] = 1;
			tmp = _this2;
		} else {
			var _s = 1 / det;
			var te2 = _this2.elements;
			te2[0] *= _s;
			te2[4] *= _s;
			te2[8] *= _s;
			te2[12] *= _s;
			te2[1] *= _s;
			te2[5] *= _s;
			te2[9] *= _s;
			te2[13] *= _s;
			te2[2] *= _s;
			te2[6] *= _s;
			te2[10] *= _s;
			te2[14] *= _s;
			te2[3] *= _s;
			te2[7] *= _s;
			te2[11] *= _s;
			te2[15] *= _s;
			tmp = _this2;
		}
		this.view_matrix_inverse = tmp;
		var _this3 = this.view_matrix_inverse;
		var i = 0;
		while(i < 16) {
			_this3._float32array[i] = _this3.elements[i];
			++i;
		}
		this.view_inverse_arr = _this3._float32array;
		this.transform_dirty = false;
	}
	,update_projection_matrix: function() {
		if(!this.projection_dirty) {
			return;
		}
		switch(this.projection[1]) {
		case 0:
			var _l = 0.0;
			var _t = 0.0;
			var _r = this.viewport.w;
			var _b = this.viewport.h;
			if(this.ortho_left != null) {
				_l = this.ortho_left;
			}
			if(this.ortho_right != null) {
				_r = this.ortho_right;
			}
			if(this.ortho_top != null) {
				_t = this.ortho_top;
			}
			if(this.ortho_bottom != null) {
				_b = this.ortho_bottom;
			}
			var _near = this.near;
			var _far = this.far;
			var te = this.projection_matrix.elements;
			var w = _r - _l;
			var h = _t - _b;
			var p = _far - _near;
			te[0] = 2 / w;
			te[4] = 0;
			te[8] = 0;
			te[12] = -((_r + _l) / w);
			te[1] = 0;
			te[5] = 2 / h;
			te[9] = 0;
			te[13] = -((_t + _b) / h);
			te[2] = 0;
			te[6] = 0;
			te[10] = -2 / p;
			te[14] = -((_far + _near) / p);
			te[3] = 0;
			te[7] = 0;
			te[11] = 0;
			te[15] = 1;
			break;
		case 1:
			var _aspect = this.aspect;
			var _near1 = this.near;
			var _far1 = this.far;
			var ymax = _near1 * Math.tan(this.fov_y * 0.5 * 0.0174532925199432781);
			var ymin = -ymax;
			var xmin = ymin * _aspect;
			var xmax = ymax * _aspect;
			var te1 = this.projection_matrix.elements;
			te1[0] = 2 * _near1 / (xmax - xmin);
			te1[4] = 0;
			te1[8] = (xmax + xmin) / (xmax - xmin);
			te1[12] = 0;
			te1[1] = 0;
			te1[5] = 2 * _near1 / (ymax - ymin);
			te1[9] = (ymax + ymin) / (ymax - ymin);
			te1[13] = 0;
			te1[2] = 0;
			te1[6] = 0;
			te1[10] = -(_far1 + _near1) / (_far1 - _near1);
			te1[14] = -2 * _far1 * _near1 / (_far1 - _near1);
			te1[3] = 0;
			te1[7] = 0;
			te1[11] = -1;
			te1[15] = 0;
			break;
		case 2:
			break;
		}
		var _this = this.projection_matrix;
		var i = 0;
		while(i < 16) {
			_this._float32array[i] = _this.elements[i];
			++i;
		}
		this.proj_arr = _this._float32array;
		this.projection_dirty = false;
	}
	,apply_state: function(state,value) {
		if(value) {
			Luxe.renderer.state.enable(state);
		} else {
			Luxe.renderer.state.disable(state);
		}
	}
	,apply_default_camera_options: function() {
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
	}
	,default_camera_options: function() {
		return { projection : phoenix_ProjectionType.ortho, depth_test : false, cull_backfaces : false, near : 1000, far : -1000};
	}
	,ortho_screen_to_world: function(_vector) {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		var e = this.view_matrix.elements;
		var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
		var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
		var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x1);
			}
		}
		_this.y = _y1;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y1);
			}
		}
		_this.z = _z1;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z1);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		return _this;
	}
	,ortho_world_to_screen: function(_vector) {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		var e = this.view_matrix_inverse.elements;
		var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
		var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
		var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x1);
			}
		}
		_this.y = _y1;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y1);
			}
		}
		_this.z = _z1;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z1);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		return _this;
	}
	,persepective_world_to_screen: function(_vector,_viewport) {
		if(_viewport == null) {
			_viewport = this.viewport;
		}
		var _projected = this.project(_vector);
		var width_half = _viewport.w / 2;
		var height_half = _viewport.h / 2;
		return new phoenix_Vector(_projected.x * width_half + width_half,-(_projected.y * height_half) + height_half);
	}
	,set_target: function(_target) {
		if(_target != null) {
			this.look_at_dirty = true;
		}
		return this.target = _target;
	}
	,set_fov: function(_fov) {
		this.projection_dirty = true;
		if(this.fov_type == phoenix_FOVType.horizontal) {
			this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
		} else {
			this.fov_y = _fov;
		}
		return this.fov = _fov;
	}
	,set_fov_type: function(_fov_type) {
		this.fov_type = _fov_type;
		var _fov = this.fov;
		this.projection_dirty = true;
		if(this.fov_type == phoenix_FOVType.horizontal) {
			this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
		} else {
			this.fov_y = _fov;
		}
		this.fov = _fov;
		return this.fov_type;
	}
	,set_aspect: function(_aspect) {
		this.projection_dirty = true;
		this.aspect = _aspect;
		var _fov = this.fov;
		this.projection_dirty = true;
		if(this.fov_type == phoenix_FOVType.horizontal) {
			this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
		} else {
			this.fov_y = _fov;
		}
		this.fov = _fov;
		return this.aspect;
	}
	,set_near: function(_near) {
		this.projection_dirty = true;
		return this.near = _near;
	}
	,set_far: function(_far) {
		this.projection_dirty = true;
		return this.far = _far;
	}
	,set_ortho_left: function(_val) {
		this.projection_dirty = true;
		return this.ortho_left = _val;
	}
	,set_ortho_right: function(_val) {
		this.projection_dirty = true;
		return this.ortho_right = _val;
	}
	,set_ortho_top: function(_val) {
		this.projection_dirty = true;
		return this.ortho_top = _val;
	}
	,set_ortho_bottom: function(_val) {
		this.projection_dirty = true;
		return this.ortho_bottom = _val;
	}
	,set_zoom: function(_z) {
		var _new_zoom = _z;
		if(_z < this.minimum_zoom) {
			_new_zoom = this.minimum_zoom;
		}
		switch(this.projection[1]) {
		case 0:
			var _this = this.transform.local.scale;
			var _x = 1 / _new_zoom;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			var _this1 = this.transform.local.scale;
			var _y = 1 / _new_zoom;
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			var _this2 = this.transform.local.scale;
			var _z1 = 1 / _new_zoom;
			_this2.z = _z1;
			if(!_this2._construct) {
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_z1);
				}
			}
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.zoom = _new_zoom;
	}
	,set_center: function(_p) {
		this.center = _p;
		switch(this.projection[1]) {
		case 0:
			if(!this.refresh_pos_ && !this.setup_) {
				this.pos.ignore_listeners = true;
				var _this = this.pos;
				var _x = _p.x - this.viewport.w / 2;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				var _this1 = this.pos;
				var _y = _p.y - this.viewport.h / 2;
				_this1.y = _y;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y);
					}
				}
				this.pos.ignore_listeners = false;
				var _this2 = this.transform.local.pos;
				var _x1 = _p.x;
				var _y1 = _p.y;
				var _z = _p.z;
				var _w = _p.w;
				var prev = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x1;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x1);
					}
				}
				_this2.y = _y1;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y1);
					}
				}
				_this2.z = _z;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z);
					}
				}
				_this2.w = _w;
				_this2.ignore_listeners = prev;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			break;
		case 1:
			break;
		case 2:
			break;
		}
		var _v = this.center;
		var listener = $bind(this,this._center_changed);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		return this.center;
	}
	,get_center: function() {
		return this.center;
	}
	,get_pos: function() {
		return this.pos;
	}
	,get_rotation: function() {
		return this.transform.local.rotation;
	}
	,get_scale: function() {
		return this.transform.local.scale;
	}
	,get_viewport: function() {
		return this.viewport;
	}
	,set_viewport: function(_r) {
		this.projection_dirty = true;
		this.viewport = _r;
		switch(this.projection[1]) {
		case 0:
			var _this = this.transform;
			var o = new phoenix_Vector(_r.w / 2,_r.h / 2);
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			_this.origin = o;
			if(_this._origin_handlers != null && _this._origin_handlers.length > 0) {
				var _origin = _this.origin;
				var _g2 = 0;
				var _g11 = _this._origin_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_origin);
					}
				}
			}
			this.set_pos(this.pos);
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.viewport;
	}
	,set_rotation: function(_q) {
		var _this = this.transform.local;
		_this.rotation = _q;
		if(_q != null) {
			var _q1 = _this.rotation;
			var listener = $bind(_this,_this._rotation_change);
			_q1.listen_x = listener;
			_q1.listen_y = listener;
			_q1.listen_z = listener;
			_q1.listen_w = listener;
			if(_this.rotation_changed != null && !_this.ignore_listeners) {
				_this.rotation_changed(_this.rotation);
			}
		}
		return _this.rotation;
	}
	,set_scale: function(_s) {
		var _this = this.transform.local;
		_this.scale = _s;
		if(_s != null) {
			var _v = _this.scale;
			var listener = $bind(_this,_this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.scale_changed != null && !_this.ignore_listeners) {
				_this.scale_changed(_this.scale);
			}
		}
		return _this.scale;
	}
	,set_pos: function(_p) {
		this.pos = _p;
		switch(this.projection[1]) {
		case 0:
			var _cx = this.center.x;
			var _cy = this.center.y;
			if(this.viewport != null) {
				_cx = _p.x + this.viewport.w / 2;
				_cy = _p.y + this.viewport.h / 2;
			}
			this.refresh_pos_ = true;
			this.center.ignore_listeners = true;
			var _this = this.center;
			_this.x = _cx;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_cx);
				}
			}
			var _this1 = this.center;
			_this1.y = _cy;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_cy);
				}
			}
			this.center.ignore_listeners = false;
			this.refresh_pos_ = false;
			var _this2 = this.transform.local.pos;
			_this2.x = _cx;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_cx);
				}
			}
			var _this3 = this.transform.local.pos;
			_this3.y = _cy;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_cy);
				}
			}
			break;
		case 1:
			var value = this.pos;
			var _this4 = this.transform.local;
			_this4.pos = value;
			if(value != null) {
				var _v = _this4.pos;
				var listener = $bind(_this4,_this4._pos_change);
				_v.listen_x = listener;
				_v.listen_y = listener;
				_v.listen_z = listener;
				if(_this4.pos_changed != null && !_this4.ignore_listeners) {
					_this4.pos_changed(_this4.pos);
				}
			}
			break;
		case 2:
			break;
		}
		var _v1 = this.pos;
		var listener1 = $bind(this,this._pos_changed);
		_v1.listen_x = listener1;
		_v1.listen_y = listener1;
		_v1.listen_z = listener1;
		return this.pos;
	}
	,_merge_options: function(_o) {
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
		if(_o.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _o.aspect;
			var _fov = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov;
			}
			this.fov = _fov;
		}
		if(_o.far != null) {
			this.projection_dirty = true;
			this.far = _o.far;
		}
		if(_o.fov != null) {
			var _fov1 = _o.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov1 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov1;
			}
			this.fov = _fov1;
		}
		if(_o.near != null) {
			this.projection_dirty = true;
			this.near = _o.near;
		}
		if(_o.viewport != null) {
			this.set_viewport(_o.viewport);
		}
		if(_o.cull_backfaces != null) {
			this.cull_backfaces = _o.cull_backfaces;
		}
		if(_o.depth_test != null) {
			this.depth_test = _o.depth_test;
		}
		if(_o.fov_type != null) {
			this.fov_type = _o.fov_type;
			var _fov2 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov2 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov2;
			}
			this.fov = _fov2;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			var _fov3 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov3 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov3;
			}
			this.fov = _fov3;
		}
	}
	,_pos_changed: function(v) {
		this.set_pos(this.pos);
	}
	,_center_changed: function(v) {
		this.set_center(this.center);
	}
	,__class__: phoenix_Camera
	,__properties__: {set_ortho_bottom:"set_ortho_bottom",set_ortho_top:"set_ortho_top",set_ortho_right:"set_ortho_right",set_ortho_left:"set_ortho_left",set_rotation:"set_rotation",get_rotation:"get_rotation",set_scale:"set_scale",get_scale:"get_scale",set_pos:"set_pos",get_pos:"get_pos",set_target:"set_target",set_aspect:"set_aspect",set_fov_type:"set_fov_type",set_fov:"set_fov",set_far:"set_far",set_near:"set_near",set_zoom:"set_zoom",set_center:"set_center",get_center:"get_center",set_viewport:"set_viewport",get_viewport:"get_viewport"}
};
var phoenix_FOVType = $hxClasses["phoenix.FOVType"] = { __ename__ : ["phoenix","FOVType"], __constructs__ : ["vertical","horizontal"] };
phoenix_FOVType.vertical = ["vertical",0];
phoenix_FOVType.vertical.toString = $estr;
phoenix_FOVType.vertical.__enum__ = phoenix_FOVType;
phoenix_FOVType.horizontal = ["horizontal",1];
phoenix_FOVType.horizontal.toString = $estr;
phoenix_FOVType.horizontal.__enum__ = phoenix_FOVType;
var phoenix_ColorHSL = function(_h,_s,_l,_a) {
	if(_a == null) {
		_a = 1.0;
	}
	if(_l == null) {
		_l = 1.0;
	}
	if(_s == null) {
		_s = 1.0;
	}
	if(_h == null) {
		_h = 0.0;
	}
	this.l = 1.0;
	this.s = 1.0;
	this.h = 0.0;
	phoenix_Color.call(this);
	this.is_hsl = true;
	this.set_h(_h);
	this.set_s(_s);
	this.set_l(_l);
	this.a = _a;
	this._refresh();
};
$hxClasses["phoenix.ColorHSL"] = phoenix_ColorHSL;
phoenix_ColorHSL.__name__ = ["phoenix","ColorHSL"];
phoenix_ColorHSL.__super__ = phoenix_Color;
phoenix_ColorHSL.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return _s;
	}
	,set_l: function(_l) {
		this.l = _l;
		this._refresh();
		return _l;
	}
	,set: function(_h,_s,_l,_a) {
		var _seth = this.h;
		var _sets = this.s;
		var _setl = this.l;
		var _seta = this.a;
		if(_h != null) {
			_seth = _h;
		}
		if(_s != null) {
			_sets = _s;
		}
		if(_l != null) {
			_setl = _l;
		}
		if(_a != null) {
			_seta = _a;
		}
		this.set_h(_seth);
		this.set_s(_sets);
		this.set_l(_setl);
		this.a = _seta;
		this._refresh();
		return this;
	}
	,tween: function(_time_in_seconds,_dest,_override) {
		if(_override == null) {
			_override = true;
		}
		if(_time_in_seconds == null) {
			_time_in_seconds = 0.5;
		}
		phoenix_Color.prototype.tween.call(this,_time_in_seconds,_dest,_override);
		if(_dest != null) {
			var _dest_h = this.h;
			var _dest_s = this.s;
			var _dest_l = this.l;
			var _dest_a = this.a;
			var _change_h = false;
			var _change_s = false;
			var _change_l = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_dest,phoenix_ColorHSL)) {
				_dest_h = _dest.h;
				_dest_s = _dest.s;
				_dest_l = _dest.l;
				_dest_a = _dest.a;
				_change_h = true;
				_change_s = true;
				_change_l = true;
				_change_a = true;
			} else {
				if(_dest.h != null) {
					_dest_h = _dest.h;
					_change_h = true;
				}
				if(_dest.s != null) {
					_dest_s = _dest.s;
					_change_s = true;
				}
				if(_dest.l != null) {
					_dest_l = _dest.l;
					_change_l = true;
				}
				if(_dest.a != null) {
					_dest_a = _dest.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_h) {
				_properties.h = _dest_h;
			}
			if(_change_s) {
				_properties.s = _dest_s;
			}
			if(_change_l) {
				_properties.l = _dest_l;
			}
			if(_change_a) {
				_properties.a = _dest_a;
			}
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else {
			throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
		}
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSL.call(this,this);
		this.refreshing = false;
		return this;
	}
	,clone: function() {
		return new phoenix_ColorHSL(this.h,this.s,this.l,this.a);
	}
	,toColor: function() {
		return this._refresh();
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var add = max + min;
		var sub = max - min;
		var _h = 0;
		if(max == min) {
			_h = 0;
		} else if(max == _color.r) {
			_h = (60 * (_color.g - _color.b) / sub + 360) % 360;
		} else if(max == _color.g) {
			_h = 60 * (_color.b - _color.r) / sub + 120;
		} else if(max == _color.b) {
			_h = 60 * (_color.r - _color.g) / sub + 240;
		}
		var _s = max == min ? 0 : this.l <= 0.5 ? sub / add : sub / (2 - add);
		this.set_h(_h);
		this.set_s(_s);
		this.set_l(add / 2);
		this.a = _color.a;
		return this;
	}
	,toString: function() {
		return "{ h:" + this.h + " , s:" + this.s + " , l:" + this.l + " , a:" + this.a + " }";
	}
	,__class__: phoenix_ColorHSL
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_l:"set_l",set_s:"set_s",set_h:"set_h"})
});
var phoenix_ColorHSV = function(_h,_s,_v,_a) {
	if(_a == null) {
		_a = 1.0;
	}
	if(_v == null) {
		_v = 1.0;
	}
	if(_s == null) {
		_s = 0.0;
	}
	if(_h == null) {
		_h = 0.0;
	}
	this.v = 1.0;
	this.s = 0.0;
	this.h = 0.0;
	phoenix_Color.call(this);
	this.is_hsv = true;
	this.set_h(_h);
	this.set_s(_s);
	this.set_v(_v);
	this.a = _a;
	this._refresh();
};
$hxClasses["phoenix.ColorHSV"] = phoenix_ColorHSV;
phoenix_ColorHSV.__name__ = ["phoenix","ColorHSV"];
phoenix_ColorHSV.__super__ = phoenix_Color;
phoenix_ColorHSV.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return this.s;
	}
	,set_v: function(_v) {
		this.v = _v;
		this._refresh();
		return this.v;
	}
	,set: function(_h,_s,_v,_a) {
		var _seth = this.h;
		var _sets = this.s;
		var _setv = this.v;
		var _seta = this.a;
		if(_h != null) {
			_seth = _h;
		}
		if(_s != null) {
			_sets = _s;
		}
		if(_v != null) {
			_setv = _v;
		}
		if(_a != null) {
			_seta = _a;
		}
		this.set_h(_seth);
		this.set_s(_sets);
		this.set_v(_setv);
		this.a = _seta;
		this._refresh();
		return this;
	}
	,tween: function(_time_in_seconds,_dest,_override) {
		if(_override == null) {
			_override = true;
		}
		if(_time_in_seconds == null) {
			_time_in_seconds = 0.5;
		}
		phoenix_Color.prototype.tween.call(this,_time_in_seconds,_dest,_override);
		if(_dest != null) {
			var _dest_h = this.h;
			var _dest_s = this.s;
			var _dest_v = this.v;
			var _dest_a = this.a;
			var _change_h = false;
			var _change_s = false;
			var _change_v = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_dest,phoenix_ColorHSV)) {
				_dest_h = _dest.h;
				_dest_s = _dest.s;
				_dest_v = _dest.v;
				_dest_a = _dest.a;
				_change_h = true;
				_change_s = true;
				_change_v = true;
				_change_a = true;
			} else {
				if(_dest.h != null) {
					_dest_h = _dest.h;
					_change_h = true;
				}
				if(_dest.s != null) {
					_dest_s = _dest.s;
					_change_s = true;
				}
				if(_dest.v != null) {
					_dest_v = _dest.v;
					_change_v = true;
				}
				if(_dest.a != null) {
					_dest_a = _dest.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_h) {
				_properties.h = _dest_h;
			}
			if(_change_s) {
				_properties.s = _dest_s;
			}
			if(_change_v) {
				_properties.v = _dest_v;
			}
			if(_change_a) {
				_properties.a = _dest_a;
			}
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else {
			throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
		}
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSV.call(this,this);
		this.refreshing = false;
		return this;
	}
	,clone: function() {
		return new phoenix_ColorHSV(this.h,this.s,this.v,this.a);
	}
	,toColor: function() {
		return this._refresh();
	}
	,toColorHSL: function() {
		this._refresh();
		return phoenix_Color.prototype.toColorHSL.call(this);
	}
	,fromColorHSL: function(_color_hsl) {
		_color_hsl._refresh();
		return this.fromColor(_color_hsl);
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var sub = max - min;
		var _h = 0;
		if(max == min) {
			_h = 0;
		} else if(max == _color.r) {
			_h = (60 * (_color.g - _color.b) / sub + 360) % 360;
		} else if(max == _color.g) {
			_h = 60 * (_color.b - _color.r) / sub + 120;
		} else if(max == _color.b) {
			_h = 60 * (_color.r - _color.g) / sub + 240;
		}
		this.set_h(_h);
		this.set_s(max == 0 ? 0 : 1 - min / max);
		this.set_v(max);
		this.a = _color.a;
		return this;
	}
	,toString: function() {
		return "{ h:" + this.h + " , s:" + this.s + " , v:" + this.v + " , a:" + this.a + " }";
	}
	,__class__: phoenix_ColorHSV
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_v:"set_v",set_s:"set_s",set_h:"set_h"})
});
var phoenix_MatrixTransform = function(p,r,s) {
	this.pos = p;
	this.rotation = r;
	this.scale = s;
};
$hxClasses["phoenix.MatrixTransform"] = phoenix_MatrixTransform;
phoenix_MatrixTransform.__name__ = ["phoenix","MatrixTransform"];
phoenix_MatrixTransform.prototype = {
	destroy: function() {
		this.pos = null;
		this.rotation = null;
		this.scale = null;
	}
	,__class__: phoenix_MatrixTransform
};
var phoenix_Matrix = function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44) {
	if(n44 == null) {
		n44 = 1;
	}
	if(n43 == null) {
		n43 = 0;
	}
	if(n42 == null) {
		n42 = 0;
	}
	if(n41 == null) {
		n41 = 0;
	}
	if(n34 == null) {
		n34 = 0;
	}
	if(n33 == null) {
		n33 = 1;
	}
	if(n32 == null) {
		n32 = 0;
	}
	if(n31 == null) {
		n31 = 0;
	}
	if(n24 == null) {
		n24 = 0;
	}
	if(n23 == null) {
		n23 = 0;
	}
	if(n22 == null) {
		n22 = 1;
	}
	if(n21 == null) {
		n21 = 0;
	}
	if(n14 == null) {
		n14 = 0;
	}
	if(n13 == null) {
		n13 = 0;
	}
	if(n12 == null) {
		n12 = 0;
	}
	if(n11 == null) {
		n11 = 1;
	}
	this.elements = [];
	var i = 0;
	while(i++ < 16) this.elements.push(0.0);
	var e = this.elements;
	e[0] = n11;
	e[4] = n12;
	e[8] = n13;
	e[12] = n14;
	e[1] = n21;
	e[5] = n22;
	e[9] = n23;
	e[13] = n24;
	e[2] = n31;
	e[6] = n32;
	e[10] = n33;
	e[14] = n34;
	e[3] = n41;
	e[7] = n42;
	e[11] = n43;
	e[15] = n44;
	this._float32array = new Float32Array(this.elements);
};
$hxClasses["phoenix.Matrix"] = phoenix_Matrix;
phoenix_Matrix.__name__ = ["phoenix","Matrix"];
phoenix_Matrix.prototype = {
	set: function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44) {
		var e = this.elements;
		e[0] = n11;
		e[4] = n12;
		e[8] = n13;
		e[12] = n14;
		e[1] = n21;
		e[5] = n22;
		e[9] = n23;
		e[13] = n24;
		e[2] = n31;
		e[6] = n32;
		e[10] = n33;
		e[14] = n34;
		e[3] = n41;
		e[7] = n42;
		e[11] = n43;
		e[15] = n44;
		return this;
	}
	,toString: function() {
		var e = this.elements;
		var n = Math.pow(10,3);
		var n1 = Math.pow(10,3);
		var n2 = Math.pow(10,3);
		var n3 = Math.pow(10,3);
		var n4 = Math.pow(10,3);
		var n5 = Math.pow(10,3);
		var n6 = Math.pow(10,3);
		var n7 = Math.pow(10,3);
		var n8 = Math.pow(10,3);
		var n9 = Math.pow(10,3);
		var n10 = Math.pow(10,3);
		var n11 = Math.pow(10,3);
		var n12 = Math.pow(10,3);
		var n13 = Math.pow(10,3);
		var n14 = Math.pow(10,3);
		var n15 = Math.pow(10,3);
		return "{ 11:" + (e[0] * n | 0) / n + ", 12:" + (e[4] * n1 | 0) / n1 + ", 13:" + (e[8] * n2 | 0) / n2 + ", 14:" + (e[12] * n3 | 0) / n3 + " }, " + "{ 21:" + (e[1] * n4 | 0) / n4 + ", 22:" + (e[5] * n5 | 0) / n5 + ", 23:" + (e[9] * n6 | 0) / n6 + ", 24:" + (e[13] * n7 | 0) / n7 + " }, " + "{ 31:" + (e[2] * n8 | 0) / n8 + ", 32:" + (e[6] * n9 | 0) / n9 + ", 33:" + (e[10] * n10 | 0) / n10 + ", 34:" + (e[14] * n11 | 0) / n11 + " }, " + "{ 41:" + (e[3] * n12 | 0) / n12 + ", 42:" + (e[7] * n13 | 0) / n13 + ", 43:" + (e[11] * n14 | 0) / n14 + ", 44:" + (e[15] * n15 | 0) / n15 + " }";
	}
	,get_M11: function() {
		return this.elements[0];
	}
	,get_M21: function() {
		return this.elements[1];
	}
	,get_M31: function() {
		return this.elements[2];
	}
	,get_M41: function() {
		return this.elements[3];
	}
	,get_M12: function() {
		return this.elements[4];
	}
	,get_M22: function() {
		return this.elements[5];
	}
	,get_M32: function() {
		return this.elements[6];
	}
	,get_M42: function() {
		return this.elements[7];
	}
	,get_M13: function() {
		return this.elements[8];
	}
	,get_M23: function() {
		return this.elements[9];
	}
	,get_M33: function() {
		return this.elements[10];
	}
	,get_M43: function() {
		return this.elements[11];
	}
	,get_M14: function() {
		return this.elements[12];
	}
	,get_M24: function() {
		return this.elements[13];
	}
	,get_M34: function() {
		return this.elements[14];
	}
	,get_M44: function() {
		return this.elements[15];
	}
	,set_M11: function(_v) {
		this.elements[0] = _v;
		return _v;
	}
	,set_M21: function(_v) {
		this.elements[1] = _v;
		return _v;
	}
	,set_M31: function(_v) {
		this.elements[2] = _v;
		return _v;
	}
	,set_M41: function(_v) {
		this.elements[3] = _v;
		return _v;
	}
	,set_M12: function(_v) {
		this.elements[4] = _v;
		return _v;
	}
	,set_M22: function(_v) {
		this.elements[5] = _v;
		return _v;
	}
	,set_M32: function(_v) {
		this.elements[6] = _v;
		return _v;
	}
	,set_M42: function(_v) {
		this.elements[7] = _v;
		return _v;
	}
	,set_M13: function(_v) {
		this.elements[8] = _v;
		return _v;
	}
	,set_M23: function(_v) {
		this.elements[9] = _v;
		return _v;
	}
	,set_M33: function(_v) {
		this.elements[10] = _v;
		return _v;
	}
	,set_M43: function(_v) {
		this.elements[11] = _v;
		return _v;
	}
	,set_M14: function(_v) {
		this.elements[12] = _v;
		return _v;
	}
	,set_M24: function(_v) {
		this.elements[13] = _v;
		return _v;
	}
	,set_M34: function(_v) {
		this.elements[14] = _v;
		return _v;
	}
	,set_M44: function(_v) {
		this.elements[15] = _v;
		return _v;
	}
	,float32array: function() {
		var i = 0;
		while(i < 16) {
			this._float32array[i] = this.elements[i];
			++i;
		}
		return this._float32array;
	}
	,identity: function() {
		var e = this.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = 0;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = 0;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,copy: function(m) {
		var me = m.elements;
		var e = this.elements;
		e[0] = me[0];
		e[4] = me[4];
		e[8] = me[8];
		e[12] = me[12];
		e[1] = me[1];
		e[5] = me[5];
		e[9] = me[9];
		e[13] = me[13];
		e[2] = me[2];
		e[6] = me[6];
		e[10] = me[10];
		e[14] = me[14];
		e[3] = me[3];
		e[7] = me[7];
		e[11] = me[11];
		e[15] = me[15];
		return this;
	}
	,make2D: function(_x,_y,_scale,_rotation) {
		if(_rotation == null) {
			_rotation = 0;
		}
		if(_scale == null) {
			_scale = 1;
		}
		var theta = _rotation * 0.0174532925199432781;
		var c = Math.cos(theta);
		var s = Math.sin(theta);
		var e = this.elements;
		e[0] = c * _scale;
		e[4] = s * _scale;
		e[8] = 0;
		e[12] = _x;
		e[1] = -s * _scale;
		e[5] = c * _scale;
		e[9] = 0;
		e[13] = _y;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,copyPosition: function(m) {
		this.elements[12] = m.elements[12];
		this.elements[13] = m.elements[13];
		this.elements[14] = m.elements[14];
		return this;
	}
	,getPosition: function() {
		return new phoenix_Vector(this.elements[12],this.elements[13],this.elements[14],1);
	}
	,extractRotation: function(m) {
		var _temp = new phoenix_Vector();
		var me = m.elements;
		var _x = me[0];
		var _y = me[1];
		var _z = me[2];
		var prev = _temp.ignore_listeners;
		_temp.ignore_listeners = true;
		_temp.x = _x;
		if(!_temp._construct) {
			if(_temp.listen_x != null && !_temp.ignore_listeners) {
				_temp.listen_x(_x);
			}
		}
		_temp.y = _y;
		if(!_temp._construct) {
			if(_temp.listen_y != null && !_temp.ignore_listeners) {
				_temp.listen_y(_y);
			}
		}
		_temp.z = _z;
		if(!_temp._construct) {
			if(_temp.listen_z != null && !_temp.ignore_listeners) {
				_temp.listen_z(_z);
			}
		}
		_temp.ignore_listeners = prev;
		if(_temp.listen_x != null && !_temp.ignore_listeners) {
			_temp.listen_x(_temp.x);
		}
		if(_temp.listen_y != null && !_temp.ignore_listeners) {
			_temp.listen_y(_temp.y);
		}
		if(_temp.listen_z != null && !_temp.ignore_listeners) {
			_temp.listen_z(_temp.z);
		}
		var _scale_x = 1 / Math.sqrt(_temp.x * _temp.x + _temp.y * _temp.y + _temp.z * _temp.z);
		var _x1 = me[4];
		var _y1 = me[5];
		var _z1 = me[6];
		var prev1 = _temp.ignore_listeners;
		_temp.ignore_listeners = true;
		_temp.x = _x1;
		if(!_temp._construct) {
			if(_temp.listen_x != null && !_temp.ignore_listeners) {
				_temp.listen_x(_x1);
			}
		}
		_temp.y = _y1;
		if(!_temp._construct) {
			if(_temp.listen_y != null && !_temp.ignore_listeners) {
				_temp.listen_y(_y1);
			}
		}
		_temp.z = _z1;
		if(!_temp._construct) {
			if(_temp.listen_z != null && !_temp.ignore_listeners) {
				_temp.listen_z(_z1);
			}
		}
		_temp.ignore_listeners = prev1;
		if(_temp.listen_x != null && !_temp.ignore_listeners) {
			_temp.listen_x(_temp.x);
		}
		if(_temp.listen_y != null && !_temp.ignore_listeners) {
			_temp.listen_y(_temp.y);
		}
		if(_temp.listen_z != null && !_temp.ignore_listeners) {
			_temp.listen_z(_temp.z);
		}
		var _scale_y = 1 / Math.sqrt(_temp.x * _temp.x + _temp.y * _temp.y + _temp.z * _temp.z);
		var _x2 = me[8];
		var _y2 = me[9];
		var _z2 = me[10];
		var prev2 = _temp.ignore_listeners;
		_temp.ignore_listeners = true;
		_temp.x = _x2;
		if(!_temp._construct) {
			if(_temp.listen_x != null && !_temp.ignore_listeners) {
				_temp.listen_x(_x2);
			}
		}
		_temp.y = _y2;
		if(!_temp._construct) {
			if(_temp.listen_y != null && !_temp.ignore_listeners) {
				_temp.listen_y(_y2);
			}
		}
		_temp.z = _z2;
		if(!_temp._construct) {
			if(_temp.listen_z != null && !_temp.ignore_listeners) {
				_temp.listen_z(_z2);
			}
		}
		_temp.ignore_listeners = prev2;
		if(_temp.listen_x != null && !_temp.ignore_listeners) {
			_temp.listen_x(_temp.x);
		}
		if(_temp.listen_y != null && !_temp.ignore_listeners) {
			_temp.listen_y(_temp.y);
		}
		if(_temp.listen_z != null && !_temp.ignore_listeners) {
			_temp.listen_z(_temp.z);
		}
		var _scale_z = 1 / Math.sqrt(_temp.x * _temp.x + _temp.y * _temp.y + _temp.z * _temp.z);
		this.elements[0] = me[0] * _scale_x;
		this.elements[1] = me[1] * _scale_x;
		this.elements[2] = me[2] * _scale_x;
		this.elements[4] = me[4] * _scale_y;
		this.elements[5] = me[5] * _scale_y;
		this.elements[6] = me[6] * _scale_y;
		this.elements[8] = me[8] * _scale_z;
		this.elements[9] = me[9] * _scale_z;
		this.elements[10] = me[10] * _scale_z;
		return this;
	}
	,makeRotationFromEuler: function(_v,_order) {
		if(_order == null) {
			_order = 0;
		}
		var te = this.elements;
		var x = _v.x;
		var y = _v.y;
		var z = _v.z;
		var a = Math.cos(x);
		var b = Math.sin(x);
		var c = Math.cos(y);
		var d = Math.sin(y);
		var e = Math.cos(z);
		var f = Math.sin(z);
		if(_order == 0) {
			var ae = a * e;
			var af = a * f;
			var be = b * e;
			var bf = b * f;
			te[0] = c * e;
			te[4] = -c * f;
			te[8] = d;
			te[1] = af + be * d;
			te[5] = ae - bf * d;
			te[9] = -b * c;
			te[2] = bf - ae * d;
			te[6] = be + af * d;
			te[10] = a * c;
		} else if(_order == 1) {
			var ce = c * e;
			var cf = c * f;
			var de = d * e;
			var df = d * f;
			te[0] = ce + df * b;
			te[4] = de * b - cf;
			te[8] = a * d;
			te[1] = a * f;
			te[5] = a * e;
			te[9] = -b;
			te[2] = cf * b - de;
			te[6] = df + ce * b;
			te[10] = a * c;
		} else if(_order == 2) {
			var ce1 = c * e;
			var cf1 = c * f;
			var de1 = d * e;
			var df1 = d * f;
			te[0] = ce1 - df1 * b;
			te[4] = -a * f;
			te[8] = de1 + cf1 * b;
			te[1] = cf1 + de1 * b;
			te[5] = a * e;
			te[9] = df1 - ce1 * b;
			te[2] = -a * d;
			te[6] = b;
			te[10] = a * c;
		} else if(_order == 3) {
			var ae1 = a * e;
			var af1 = a * f;
			var be1 = b * e;
			var bf1 = b * f;
			te[0] = c * e;
			te[4] = be1 * d - af1;
			te[8] = ae1 * d + bf1;
			te[1] = c * f;
			te[5] = bf1 * d + ae1;
			te[9] = af1 * d - be1;
			te[2] = -d;
			te[6] = b * c;
			te[10] = a * c;
		} else if(_order == 4) {
			var ac = a * c;
			var ad = a * d;
			var bc = b * c;
			var bd = b * d;
			te[0] = c * e;
			te[4] = bd - ac * f;
			te[8] = bc * f + ad;
			te[1] = f;
			te[5] = a * e;
			te[9] = -b * e;
			te[2] = -d * e;
			te[6] = ad * f + bc;
			te[10] = ac - bd * f;
		} else if(_order == 5) {
			var ac1 = a * c;
			var ad1 = a * d;
			var bc1 = b * c;
			var bd1 = b * d;
			te[0] = c * e;
			te[4] = -f;
			te[8] = d * e;
			te[1] = ac1 * f + bd1;
			te[5] = a * e;
			te[9] = ad1 * f - bc1;
			te[2] = bc1 * f - ad1;
			te[6] = b * e;
			te[10] = bd1 * f + ac1;
		}
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		return this;
	}
	,makeRotationFromQuaternion: function(q) {
		var te = this.elements;
		var x2 = q.x + q.x;
		var y2 = q.y + q.y;
		var z2 = q.z + q.z;
		var xx = q.x * x2;
		var xy = q.x * y2;
		var xz = q.x * z2;
		var yy = q.y * y2;
		var yz = q.y * z2;
		var zz = q.z * z2;
		var wx = q.w * x2;
		var wy = q.w * y2;
		var wz = q.w * z2;
		te[0] = 1 - (yy + zz);
		te[4] = xy - wz;
		te[8] = xz + wy;
		te[1] = xy + wz;
		te[5] = 1 - (xx + zz);
		te[9] = yz - wx;
		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - (xx + yy);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		return this;
	}
	,lookAt: function(_eye,_target,_up) {
		var _x = new phoenix_Vector();
		var _y = new phoenix_Vector();
		var _z = new phoenix_Vector();
		var te = this.elements;
		var _x1 = _target.x - _eye.x;
		var _y1 = _target.y - _eye.y;
		var _z1 = _target.z - _eye.z;
		var b = Math.sqrt(_x1 * _x1 + _y1 * _y1 + _z1 * _z1);
		_z = new phoenix_Vector(_x1 / b,_y1 / b,_z1 / b);
		if(Math.sqrt(_z.x * _z.x + _z.y * _z.y + _z.z * _z.z) == 0) {
			_z.z = 1;
			if(!_z._construct) {
				if(_z.listen_z != null && !_z.ignore_listeners) {
					_z.listen_z(1);
				}
			}
		}
		var _x2 = _up.y * _z.z - _up.z * _z.y;
		var _y2 = _up.z * _z.x - _up.x * _z.z;
		var _z2 = _up.x * _z.y - _up.y * _z.x;
		var b1 = Math.sqrt(_x2 * _x2 + _y2 * _y2 + _z2 * _z2);
		_x = new phoenix_Vector(_x2 / b1,_y2 / b1,_z2 / b1);
		if(Math.sqrt(_x.x * _x.x + _x.y * _x.y + _x.z * _x.z) == 0) {
			var _g = _z;
			var _x3 = _g.x + 0.0001;
			_g.x = _x3;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x3);
				}
			}
			var _x4 = _up.y * _z.z - _up.z * _z.y;
			var _y3 = _up.z * _z.x - _up.x * _z.z;
			var _z3 = _up.x * _z.y - _up.y * _z.x;
			var b2 = Math.sqrt(_x4 * _x4 + _y3 * _y3 + _z3 * _z3);
			_x = new phoenix_Vector(_x4 / b2,_y3 / b2,_z3 / b2);
		}
		_y = new phoenix_Vector(_z.y * _x.z - _z.z * _x.y,_z.z * _x.x - _z.x * _x.z,_z.x * _x.y - _z.y * _x.x);
		te[0] = _x.x;
		te[4] = _y.x;
		te[8] = _z.x;
		te[1] = _x.y;
		te[5] = _y.y;
		te[9] = _z.y;
		te[2] = _x.z;
		te[6] = _y.z;
		te[10] = _z.z;
		return this;
	}
	,multiply: function(_m) {
		var ae = this.elements;
		var be = _m.elements;
		var te = this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,multiplyMatrices: function(_a,_b) {
		var ae = _a.elements;
		var be = _b.elements;
		var te = this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,multiplyToArray: function(_a,_b,_r) {
		var te = this.elements;
		var ae = _a.elements;
		var be = _b.elements;
		var te1 = this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te1[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te1[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te1[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te1[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te1[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te1[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te1[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te1[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te1[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te1[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te1[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te1[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te1[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te1[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te1[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te1[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		_r[0] = te[0];
		_r[1] = te[1];
		_r[2] = te[2];
		_r[3] = te[3];
		_r[4] = te[4];
		_r[5] = te[5];
		_r[6] = te[6];
		_r[7] = te[7];
		_r[8] = te[8];
		_r[9] = te[9];
		_r[10] = te[10];
		_r[11] = te[11];
		_r[12] = te[12];
		_r[13] = te[13];
		_r[14] = te[14];
		_r[15] = te[15];
		return this;
	}
	,multiplyScalar: function(_s) {
		var te = this.elements;
		te[0] *= _s;
		te[4] *= _s;
		te[8] *= _s;
		te[12] *= _s;
		te[1] *= _s;
		te[5] *= _s;
		te[9] *= _s;
		te[13] *= _s;
		te[2] *= _s;
		te[6] *= _s;
		te[10] *= _s;
		te[14] *= _s;
		te[3] *= _s;
		te[7] *= _s;
		te[11] *= _s;
		te[15] *= _s;
		return this;
	}
	,multiplyVector3Array: function(_a) {
		var v1 = new phoenix_Vector();
		var i = 0;
		var il = _a.length;
		while(i < il) {
			var _x = _a[i];
			v1.x = _x;
			if(!v1._construct) {
				if(v1.listen_x != null && !v1.ignore_listeners) {
					v1.listen_x(_x);
				}
			}
			var _y = _a[i + 1];
			v1.y = _y;
			if(!v1._construct) {
				if(v1.listen_y != null && !v1.ignore_listeners) {
					v1.listen_y(_y);
				}
			}
			var _z = _a[i + 2];
			v1.z = _z;
			if(!v1._construct) {
				if(v1.listen_z != null && !v1.ignore_listeners) {
					v1.listen_z(_z);
				}
			}
			var e = this.elements;
			var x = v1.x;
			var y = v1.y;
			var z = v1.z;
			var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);
			var _x1 = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;
			var _y1 = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;
			var _z1 = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;
			var prev = v1.ignore_listeners;
			v1.ignore_listeners = true;
			v1.x = _x1;
			if(!v1._construct) {
				if(v1.listen_x != null && !v1.ignore_listeners) {
					v1.listen_x(_x1);
				}
			}
			v1.y = _y1;
			if(!v1._construct) {
				if(v1.listen_y != null && !v1.ignore_listeners) {
					v1.listen_y(_y1);
				}
			}
			v1.z = _z1;
			if(!v1._construct) {
				if(v1.listen_z != null && !v1.ignore_listeners) {
					v1.listen_z(_z1);
				}
			}
			v1.ignore_listeners = prev;
			if(v1.listen_x != null && !v1.ignore_listeners) {
				v1.listen_x(v1.x);
			}
			if(v1.listen_y != null && !v1.ignore_listeners) {
				v1.listen_y(v1.y);
			}
			if(v1.listen_z != null && !v1.ignore_listeners) {
				v1.listen_z(v1.z);
			}
			_a[i] = v1.x;
			_a[i + 1] = v1.y;
			_a[i + 2] = v1.z;
			i += 3;
		}
		return _a;
	}
	,determinant: function() {
		var te = this.elements;
		var n11 = te[0];
		var n12 = te[4];
		var n13 = te[8];
		var n14 = te[12];
		var n21 = te[1];
		var n22 = te[5];
		var n23 = te[9];
		var n24 = te[13];
		var n31 = te[2];
		var n32 = te[6];
		var n33 = te[10];
		var n34 = te[14];
		return te[3] * (n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + te[7] * (n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + te[11] * (n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + te[15] * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);
	}
	,transpose: function() {
		var te = this.elements;
		var tmp = te[1];
		te[1] = te[4];
		te[4] = tmp;
		tmp = te[2];
		te[2] = te[8];
		te[8] = tmp;
		tmp = te[6];
		te[6] = te[9];
		te[9] = tmp;
		tmp = te[3];
		te[3] = te[12];
		te[12] = tmp;
		tmp = te[7];
		te[7] = te[13];
		te[13] = tmp;
		tmp = te[11];
		te[11] = te[14];
		te[14] = tmp;
		return this;
	}
	,flattenToArray: function(_flat) {
		if(_flat == null) {
			_flat = [];
			var _g = 0;
			while(_g < 16) {
				++_g;
				_flat.push(0.0);
			}
		}
		var te = this.elements;
		_flat[0] = te[0];
		_flat[1] = te[1];
		_flat[2] = te[2];
		_flat[3] = te[3];
		_flat[4] = te[4];
		_flat[5] = te[5];
		_flat[6] = te[6];
		_flat[7] = te[7];
		_flat[8] = te[8];
		_flat[9] = te[9];
		_flat[10] = te[10];
		_flat[11] = te[11];
		_flat[12] = te[12];
		_flat[13] = te[13];
		_flat[14] = te[14];
		_flat[15] = te[15];
		return _flat;
	}
	,flattenToArrayOffset: function(_flat,_offset) {
		var te = this.elements;
		_flat[_offset] = te[0];
		_flat[_offset + 1] = te[1];
		_flat[_offset + 2] = te[2];
		_flat[_offset + 3] = te[3];
		_flat[_offset + 4] = te[4];
		_flat[_offset + 5] = te[5];
		_flat[_offset + 6] = te[6];
		_flat[_offset + 7] = te[7];
		_flat[_offset + 8] = te[8];
		_flat[_offset + 9] = te[9];
		_flat[_offset + 10] = te[10];
		_flat[_offset + 11] = te[11];
		_flat[_offset + 12] = te[12];
		_flat[_offset + 13] = te[13];
		_flat[_offset + 14] = te[14];
		_flat[_offset + 15] = te[15];
		return _flat;
	}
	,setPosition: function(_v) {
		var te = this.elements;
		te[12] = _v.x;
		te[13] = _v.y;
		te[14] = _v.z;
		return this;
	}
	,inverse: function() {
		var te = this.elements;
		var _this = new phoenix_Matrix(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);
		var te1 = _this.elements;
		var me = this.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te1[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te1[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te1[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te1[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te1[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te1[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te1[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te1[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te1[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te1[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te1[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te1[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te1[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te1[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te1[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te1[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te1[0] + me[1] * te1[4] + me[2] * te1[8] + me[3] * te1[12];
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			var e = _this.elements;
			e[0] = 1;
			e[4] = 0;
			e[8] = 0;
			e[12] = 0;
			e[1] = 0;
			e[5] = 1;
			e[9] = 0;
			e[13] = 0;
			e[2] = 0;
			e[6] = 0;
			e[10] = 1;
			e[14] = 0;
			e[3] = 0;
			e[7] = 0;
			e[11] = 0;
			e[15] = 1;
			return _this;
		} else {
			var _s = 1 / det;
			var te2 = _this.elements;
			te2[0] *= _s;
			te2[4] *= _s;
			te2[8] *= _s;
			te2[12] *= _s;
			te2[1] *= _s;
			te2[5] *= _s;
			te2[9] *= _s;
			te2[13] *= _s;
			te2[2] *= _s;
			te2[6] *= _s;
			te2[10] *= _s;
			te2[14] *= _s;
			te2[3] *= _s;
			te2[7] *= _s;
			te2[11] *= _s;
			te2[15] *= _s;
			return _this;
		}
	}
	,getInverse: function(_m) {
		var te = this.elements;
		var me = _m.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te[0] + me[1] * te[4] + me[2] * te[8] + me[3] * te[12];
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			var e = this.elements;
			e[0] = 1;
			e[4] = 0;
			e[8] = 0;
			e[12] = 0;
			e[1] = 0;
			e[5] = 1;
			e[9] = 0;
			e[13] = 0;
			e[2] = 0;
			e[6] = 0;
			e[10] = 1;
			e[14] = 0;
			e[3] = 0;
			e[7] = 0;
			e[11] = 0;
			e[15] = 1;
			return this;
		}
		var _s = 1 / det;
		var te1 = this.elements;
		te1[0] *= _s;
		te1[4] *= _s;
		te1[8] *= _s;
		te1[12] *= _s;
		te1[1] *= _s;
		te1[5] *= _s;
		te1[9] *= _s;
		te1[13] *= _s;
		te1[2] *= _s;
		te1[6] *= _s;
		te1[10] *= _s;
		te1[14] *= _s;
		te1[3] *= _s;
		te1[7] *= _s;
		te1[11] *= _s;
		te1[15] *= _s;
		return this;
	}
	,scale: function(_v) {
		var te = this.elements;
		var _x = _v.x;
		var _y = _v.y;
		var _z = _v.z;
		te[0] *= _x;
		te[4] *= _y;
		te[8] *= _z;
		te[1] *= _x;
		te[5] *= _y;
		te[9] *= _z;
		te[2] *= _x;
		te[6] *= _y;
		te[10] *= _z;
		te[3] *= _x;
		te[7] *= _y;
		te[11] *= _z;
		return this;
	}
	,getMaxScaleOnAxis: function() {
		var te = this.elements;
		return Math.sqrt(Math.max(te[0] * te[0] + te[1] * te[1] + te[2] * te[2],Math.max(te[4] * te[4] + te[5] * te[5] + te[6] * te[6],te[8] * te[8] + te[9] * te[9] + te[10] * te[10])));
	}
	,makeTranslation: function(_x,_y,_z) {
		var e = this.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = _x;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = _y;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = _z;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,makeRotationX: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		var e = this.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = 0;
		e[1] = 0;
		e[5] = _c;
		e[9] = -_s;
		e[13] = 0;
		e[2] = 0;
		e[6] = _s;
		e[10] = _c;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,makeRotationY: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		var e = this.elements;
		e[0] = _c;
		e[4] = 0;
		e[8] = _s;
		e[12] = 0;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = 0;
		e[2] = -_s;
		e[6] = 0;
		e[10] = _c;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,makeRotationZ: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		var e = this.elements;
		e[0] = _c;
		e[4] = -_s;
		e[8] = 0;
		e[12] = 0;
		e[1] = _s;
		e[5] = _c;
		e[9] = 0;
		e[13] = 0;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,makeRotationAxis: function(_axis,_angle) {
		var _c = Math.cos(_angle);
		var _s = Math.sin(_angle);
		var _t = 1 - _c;
		var _ax = _axis.x;
		var _ay = _axis.y;
		var _az = _axis.z;
		var _tx = _t * _ax;
		var _ty = _t * _ay;
		var e = this.elements;
		e[0] = _tx * _ax + _c;
		e[4] = _tx * _ay - _s * _az;
		e[8] = _tx * _az + _s * _ay;
		e[12] = 0;
		e[1] = _tx * _ay + _s * _az;
		e[5] = _ty * _ay + _c;
		e[9] = _ty * _az - _s * _ax;
		e[13] = 0;
		e[2] = _tx * _az - _s * _ay;
		e[6] = _ty * _az + _s * _ax;
		e[10] = _t * _az * _az + _c;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,makeScale: function(_x,_y,_z) {
		var e = this.elements;
		e[0] = _x;
		e[4] = 0;
		e[8] = 0;
		e[12] = 0;
		e[1] = 0;
		e[5] = _y;
		e[9] = 0;
		e[13] = 0;
		e[2] = 0;
		e[6] = 0;
		e[10] = _z;
		e[14] = 0;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		return this;
	}
	,compose_with_origin: function(_position,_origin,_quaternion,_scale) {
		var e = this.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = _origin.x;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = _origin.y;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = _origin.z;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		var te = this.elements;
		var _x = _scale.x;
		var _y = _scale.y;
		var _z = _scale.z;
		te[0] *= _x;
		te[4] *= _y;
		te[8] *= _z;
		te[1] *= _x;
		te[5] *= _y;
		te[9] *= _z;
		te[2] *= _x;
		te[6] *= _y;
		te[10] *= _z;
		te[3] *= _x;
		te[7] *= _y;
		te[11] *= _z;
		var _this = new phoenix_Matrix();
		var te1 = _this.elements;
		var x2 = _quaternion.x + _quaternion.x;
		var y2 = _quaternion.y + _quaternion.y;
		var z2 = _quaternion.z + _quaternion.z;
		var xx = _quaternion.x * x2;
		var xy = _quaternion.x * y2;
		var xz = _quaternion.x * z2;
		var yy = _quaternion.y * y2;
		var yz = _quaternion.y * z2;
		var zz = _quaternion.z * z2;
		var wx = _quaternion.w * x2;
		var wy = _quaternion.w * y2;
		var wz = _quaternion.w * z2;
		te1[0] = 1 - (yy + zz);
		te1[4] = xy - wz;
		te1[8] = xz + wy;
		te1[1] = xy + wz;
		te1[5] = 1 - (xx + zz);
		te1[9] = yz - wx;
		te1[2] = xz - wy;
		te1[6] = yz + wx;
		te1[10] = 1 - (xx + yy);
		te1[3] = 0;
		te1[7] = 0;
		te1[11] = 0;
		te1[12] = 0;
		te1[13] = 0;
		te1[14] = 0;
		te1[15] = 1;
		var ae = this.elements;
		var be = _this.elements;
		var te2 = this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te2[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te2[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te2[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te2[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te2[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te2[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te2[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te2[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te2[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te2[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te2[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te2[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te2[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te2[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te2[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te2[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		var _this1 = new phoenix_Matrix();
		var e1 = _this1.elements;
		e1[0] = 1;
		e1[4] = 0;
		e1[8] = 0;
		e1[12] = -_origin.x;
		e1[1] = 0;
		e1[5] = 1;
		e1[9] = 0;
		e1[13] = -_origin.y;
		e1[2] = 0;
		e1[6] = 0;
		e1[10] = 1;
		e1[14] = -_origin.z;
		e1[3] = 0;
		e1[7] = 0;
		e1[11] = 0;
		e1[15] = 1;
		var ae1 = this.elements;
		var be1 = _this1.elements;
		var te3 = this.elements;
		var a111 = ae1[0];
		var a121 = ae1[4];
		var a131 = ae1[8];
		var a141 = ae1[12];
		var a211 = ae1[1];
		var a221 = ae1[5];
		var a231 = ae1[9];
		var a241 = ae1[13];
		var a311 = ae1[2];
		var a321 = ae1[6];
		var a331 = ae1[10];
		var a341 = ae1[14];
		var a411 = ae1[3];
		var a421 = ae1[7];
		var a431 = ae1[11];
		var a441 = ae1[15];
		var b111 = be1[0];
		var b121 = be1[4];
		var b131 = be1[8];
		var b141 = be1[12];
		var b211 = be1[1];
		var b221 = be1[5];
		var b231 = be1[9];
		var b241 = be1[13];
		var b311 = be1[2];
		var b321 = be1[6];
		var b331 = be1[10];
		var b341 = be1[14];
		var b411 = be1[3];
		var b421 = be1[7];
		var b431 = be1[11];
		var b441 = be1[15];
		te3[0] = a111 * b111 + a121 * b211 + a131 * b311 + a141 * b411;
		te3[4] = a111 * b121 + a121 * b221 + a131 * b321 + a141 * b421;
		te3[8] = a111 * b131 + a121 * b231 + a131 * b331 + a141 * b431;
		te3[12] = a111 * b141 + a121 * b241 + a131 * b341 + a141 * b441;
		te3[1] = a211 * b111 + a221 * b211 + a231 * b311 + a241 * b411;
		te3[5] = a211 * b121 + a221 * b221 + a231 * b321 + a241 * b421;
		te3[9] = a211 * b131 + a221 * b231 + a231 * b331 + a241 * b431;
		te3[13] = a211 * b141 + a221 * b241 + a231 * b341 + a241 * b441;
		te3[2] = a311 * b111 + a321 * b211 + a331 * b311 + a341 * b411;
		te3[6] = a311 * b121 + a321 * b221 + a331 * b321 + a341 * b421;
		te3[10] = a311 * b131 + a321 * b231 + a331 * b331 + a341 * b431;
		te3[14] = a311 * b141 + a321 * b241 + a331 * b341 + a341 * b441;
		te3[3] = a411 * b111 + a421 * b211 + a431 * b311 + a441 * b411;
		te3[7] = a411 * b121 + a421 * b221 + a431 * b321 + a441 * b421;
		te3[11] = a411 * b131 + a421 * b231 + a431 * b331 + a441 * b431;
		te3[15] = a411 * b141 + a421 * b241 + a431 * b341 + a441 * b441;
		var _this2 = new phoenix_Matrix();
		var e2 = _this2.elements;
		e2[0] = 1;
		e2[4] = 0;
		e2[8] = 0;
		e2[12] = _position.x;
		e2[1] = 0;
		e2[5] = 1;
		e2[9] = 0;
		e2[13] = _position.y;
		e2[2] = 0;
		e2[6] = 0;
		e2[10] = 1;
		e2[14] = _position.z;
		e2[3] = 0;
		e2[7] = 0;
		e2[11] = 0;
		e2[15] = 1;
		var ae2 = this.elements;
		var be2 = _this2.elements;
		var te4 = this.elements;
		var a112 = ae2[0];
		var a122 = ae2[4];
		var a132 = ae2[8];
		var a142 = ae2[12];
		var a212 = ae2[1];
		var a222 = ae2[5];
		var a232 = ae2[9];
		var a242 = ae2[13];
		var a312 = ae2[2];
		var a322 = ae2[6];
		var a332 = ae2[10];
		var a342 = ae2[14];
		var a412 = ae2[3];
		var a422 = ae2[7];
		var a432 = ae2[11];
		var a442 = ae2[15];
		var b112 = be2[0];
		var b122 = be2[4];
		var b132 = be2[8];
		var b142 = be2[12];
		var b212 = be2[1];
		var b222 = be2[5];
		var b232 = be2[9];
		var b242 = be2[13];
		var b312 = be2[2];
		var b322 = be2[6];
		var b332 = be2[10];
		var b342 = be2[14];
		var b412 = be2[3];
		var b422 = be2[7];
		var b432 = be2[11];
		var b442 = be2[15];
		te4[0] = a112 * b112 + a122 * b212 + a132 * b312 + a142 * b412;
		te4[4] = a112 * b122 + a122 * b222 + a132 * b322 + a142 * b422;
		te4[8] = a112 * b132 + a122 * b232 + a132 * b332 + a142 * b432;
		te4[12] = a112 * b142 + a122 * b242 + a132 * b342 + a142 * b442;
		te4[1] = a212 * b112 + a222 * b212 + a232 * b312 + a242 * b412;
		te4[5] = a212 * b122 + a222 * b222 + a232 * b322 + a242 * b422;
		te4[9] = a212 * b132 + a222 * b232 + a232 * b332 + a242 * b432;
		te4[13] = a212 * b142 + a222 * b242 + a232 * b342 + a242 * b442;
		te4[2] = a312 * b112 + a322 * b212 + a332 * b312 + a342 * b412;
		te4[6] = a312 * b122 + a322 * b222 + a332 * b322 + a342 * b422;
		te4[10] = a312 * b132 + a322 * b232 + a332 * b332 + a342 * b432;
		te4[14] = a312 * b142 + a322 * b242 + a332 * b342 + a342 * b442;
		te4[3] = a412 * b112 + a422 * b212 + a432 * b312 + a442 * b412;
		te4[7] = a412 * b122 + a422 * b222 + a432 * b322 + a442 * b422;
		te4[11] = a412 * b132 + a422 * b232 + a432 * b332 + a442 * b432;
		te4[15] = a412 * b142 + a422 * b242 + a432 * b342 + a442 * b442;
		return this;
	}
	,compose: function(_position,_quaternion,_scale) {
		var te = this.elements;
		var x2 = _quaternion.x + _quaternion.x;
		var y2 = _quaternion.y + _quaternion.y;
		var z2 = _quaternion.z + _quaternion.z;
		var xx = _quaternion.x * x2;
		var xy = _quaternion.x * y2;
		var xz = _quaternion.x * z2;
		var yy = _quaternion.y * y2;
		var yz = _quaternion.y * z2;
		var zz = _quaternion.z * z2;
		var wx = _quaternion.w * x2;
		var wy = _quaternion.w * y2;
		var wz = _quaternion.w * z2;
		te[0] = 1 - (yy + zz);
		te[4] = xy - wz;
		te[8] = xz + wy;
		te[1] = xy + wz;
		te[5] = 1 - (xx + zz);
		te[9] = yz - wx;
		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - (xx + yy);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		var te1 = this.elements;
		var _x = _scale.x;
		var _y = _scale.y;
		var _z = _scale.z;
		te1[0] *= _x;
		te1[4] *= _y;
		te1[8] *= _z;
		te1[1] *= _x;
		te1[5] *= _y;
		te1[9] *= _z;
		te1[2] *= _x;
		te1[6] *= _y;
		te1[10] *= _z;
		te1[3] *= _x;
		te1[7] *= _y;
		te1[11] *= _z;
		var te2 = this.elements;
		te2[12] = _position.x;
		te2[13] = _position.y;
		te2[14] = _position.z;
		return this;
	}
	,decompose: function(_position,_quaternion,_scale) {
		var te = this.elements;
		var matrix = new phoenix_Matrix();
		var _ax_x = te[0];
		var _ax_y = te[1];
		var _ax_z = te[2];
		var _ay_x = te[4];
		var _ay_y = te[5];
		var _ay_z = te[6];
		var _az_x = te[8];
		var _az_y = te[9];
		var _az_z = te[10];
		var _ax_length = Math.sqrt(_ax_x * _ax_x + _ax_y * _ax_y + _ax_z * _ax_z);
		var _ay_length = Math.sqrt(_ay_x * _ay_x + _ay_y * _ay_y + _ay_z * _ay_z);
		var _az_length = Math.sqrt(_az_x * _az_x + _az_y * _az_y + _az_z * _az_z);
		if(_quaternion == null) {
			_quaternion = new phoenix_Quaternion();
		}
		if(_position == null) {
			_position = new phoenix_Vector(te[12],te[13],te[14]);
		} else {
			var _x = te[12];
			_position.x = _x;
			if(!_position._construct) {
				if(_position.listen_x != null && !_position.ignore_listeners) {
					_position.listen_x(_x);
				}
			}
			var _y = te[13];
			_position.y = _y;
			if(!_position._construct) {
				if(_position.listen_y != null && !_position.ignore_listeners) {
					_position.listen_y(_y);
				}
			}
			var _z = te[14];
			_position.z = _z;
			if(!_position._construct) {
				if(_position.listen_z != null && !_position.ignore_listeners) {
					_position.listen_z(_z);
				}
			}
		}
		if(_scale == null) {
			_scale = new phoenix_Vector(_ax_length,_ay_length,_az_length);
		} else {
			_scale.x = _ax_length;
			if(!_scale._construct) {
				if(_scale.listen_x != null && !_scale.ignore_listeners) {
					_scale.listen_x(_ax_length);
				}
			}
			_scale.y = _ay_length;
			if(!_scale._construct) {
				if(_scale.listen_y != null && !_scale.ignore_listeners) {
					_scale.listen_y(_ay_length);
				}
			}
			_scale.z = _az_length;
			if(!_scale._construct) {
				if(_scale.listen_z != null && !_scale.ignore_listeners) {
					_scale.listen_z(_az_length);
				}
			}
		}
		matrix.elements = this.elements.concat([]);
		var me = matrix.elements;
		me[0] /= _ax_length;
		me[1] /= _ax_length;
		me[2] /= _ax_length;
		me[4] /= _ay_length;
		me[5] /= _ay_length;
		me[6] /= _ay_length;
		me[8] /= _az_length;
		me[9] /= _az_length;
		me[10] /= _az_length;
		_quaternion.setFromRotationMatrix(matrix);
		if(this._transform == null) {
			this._transform = new phoenix_MatrixTransform(_position,_quaternion,_scale);
		} else {
			this._transform.pos = _position;
			this._transform.rotation = _quaternion;
			this._transform.scale = _scale;
		}
		return this._transform;
	}
	,makeFrustum: function(_left,_right,_bottom,_top,_near,_far) {
		var te = this.elements;
		te[0] = 2 * _near / (_right - _left);
		te[4] = 0;
		te[8] = (_right + _left) / (_right - _left);
		te[12] = 0;
		te[1] = 0;
		te[5] = 2 * _near / (_top - _bottom);
		te[9] = (_top + _bottom) / (_top - _bottom);
		te[13] = 0;
		te[2] = 0;
		te[6] = 0;
		te[10] = -(_far + _near) / (_far - _near);
		te[14] = -2 * _far * _near / (_far - _near);
		te[3] = 0;
		te[7] = 0;
		te[11] = -1;
		te[15] = 0;
		return this;
	}
	,makePerspective: function(_fov,_aspect,_near,_far) {
		var ymax = _near * Math.tan(_fov * 0.5 * 0.0174532925199432781);
		var ymin = -ymax;
		var xmin = ymin * _aspect;
		var xmax = ymax * _aspect;
		var te = this.elements;
		te[0] = 2 * _near / (xmax - xmin);
		te[4] = 0;
		te[8] = (xmax + xmin) / (xmax - xmin);
		te[12] = 0;
		te[1] = 0;
		te[5] = 2 * _near / (ymax - ymin);
		te[9] = (ymax + ymin) / (ymax - ymin);
		te[13] = 0;
		te[2] = 0;
		te[6] = 0;
		te[10] = -(_far + _near) / (_far - _near);
		te[14] = -2 * _far * _near / (_far - _near);
		te[3] = 0;
		te[7] = 0;
		te[11] = -1;
		te[15] = 0;
		return this;
	}
	,makeOrthographic: function(_left,_right,_top,_bottom,_near,_far) {
		var te = this.elements;
		var w = _right - _left;
		var h = _top - _bottom;
		var p = _far - _near;
		te[0] = 2 / w;
		te[4] = 0;
		te[8] = 0;
		te[12] = -((_right + _left) / w);
		te[1] = 0;
		te[5] = 2 / h;
		te[9] = 0;
		te[13] = -((_top + _bottom) / h);
		te[2] = 0;
		te[6] = 0;
		te[10] = -2 / p;
		te[14] = -((_far + _near) / p);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[15] = 1;
		return this;
	}
	,fromArray: function(_from) {
		this.elements = _from.concat([]);
	}
	,toArray: function() {
		var te = this.elements;
		return [te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8],te[9],te[10],te[11],te[12],te[13],te[14],te[15]];
	}
	,clone: function() {
		var te = this.elements;
		return new phoenix_Matrix(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);
	}
	,up: function() {
		return new phoenix_Vector(this.elements[4],this.elements[5],this.elements[6]);
	}
	,down: function() {
		return new phoenix_Vector(-this.elements[4],-this.elements[5],-this.elements[6]);
	}
	,left: function() {
		return new phoenix_Vector(-this.elements[0],-this.elements[1],-this.elements[2]);
	}
	,right: function() {
		return new phoenix_Vector(this.elements[0],this.elements[1],this.elements[2]);
	}
	,backward: function() {
		return new phoenix_Vector(this.elements[8],this.elements[9],this.elements[10]);
	}
	,forward: function() {
		return new phoenix_Vector(-this.elements[8],-this.elements[9],-this.elements[10]);
	}
	,__class__: phoenix_Matrix
	,__properties__: {set_M44:"set_M44",get_M44:"get_M44",set_M34:"set_M34",get_M34:"get_M34",set_M24:"set_M24",get_M24:"get_M24",set_M14:"set_M14",get_M14:"get_M14",set_M43:"set_M43",get_M43:"get_M43",set_M33:"set_M33",get_M33:"get_M33",set_M23:"set_M23",get_M23:"get_M23",set_M13:"set_M13",get_M13:"get_M13",set_M42:"set_M42",get_M42:"get_M42",set_M32:"set_M32",get_M32:"get_M32",set_M22:"set_M22",get_M22:"get_M22",set_M12:"set_M12",get_M12:"get_M12",set_M41:"set_M41",get_M41:"get_M41",set_M31:"set_M31",get_M31:"get_M31",set_M21:"set_M21",get_M21:"get_M21",set_M11:"set_M11",get_M11:"get_M11"}
};
var phoenix_Quaternion = function(_x,_y,_z,_w) {
	if(_w == null) {
		_w = 1;
	}
	if(_z == null) {
		_z = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this.ignore_euler = false;
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0.0;
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
	this._construct = true;
	this.x = _x;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x1 = _this.x;
			var _y1 = _this.y;
			var _z1 = _this.z;
			_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
	}
	this.y = _y;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this1 = this.euler;
			var sqx1 = this.x * this.x;
			var sqy1 = this.y * this.y;
			var sqz1 = this.z * this.z;
			var sqw1 = this.w * this.w;
			var _x2 = _this1.x;
			var _y2 = _this1.y;
			var _z2 = _this1.z;
			_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
			var value1 = 2 * (this.x * this.z + this.y * this.w);
			_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
			_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x2);
				}
			}
			_this1.y = _y2;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y2);
				}
			}
			_this1.z = _z2;
			if(!_this1._construct) {
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_z2);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_this1.z);
			}
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
	}
	this.z = _z;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this2 = this.euler;
			var sqx2 = this.x * this.x;
			var sqy2 = this.y * this.y;
			var sqz2 = this.z * this.z;
			var sqw2 = this.w * this.w;
			var _x3 = _this2.x;
			var _y3 = _this2.y;
			var _z3 = _this2.z;
			_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
			var value2 = 2 * (this.x * this.z + this.y * this.w);
			_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
			_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x3;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_x3);
				}
			}
			_this2.y = _y3;
			if(!_this2._construct) {
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_y3);
				}
			}
			_this2.z = _z3;
			if(!_this2._construct) {
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_z3);
				}
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_this2.x);
			}
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_this2.y);
			}
			if(_this2.listen_z != null && !_this2.ignore_listeners) {
				_this2.listen_z(_this2.z);
			}
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
	}
	this.w = _w;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this3 = this.euler;
			var sqx3 = this.x * this.x;
			var sqy3 = this.y * this.y;
			var sqz3 = this.z * this.z;
			var sqw3 = this.w * this.w;
			var _x4 = _this3.x;
			var _y4 = _this3.y;
			var _z4 = _this3.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
			var value3 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x4;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x4);
				}
			}
			_this3.y = _y4;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y4);
				}
			}
			_this3.z = _z4;
			if(!_this3._construct) {
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_z4);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_this3.z);
			}
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
	}
	this.euler = new phoenix_Vector();
	this._construct = false;
};
$hxClasses["phoenix.Quaternion"] = phoenix_Quaternion;
phoenix_Quaternion.__name__ = ["phoenix","Quaternion"];
phoenix_Quaternion.Add = function(_a,_b) {
	return _a.clone().add(_b);
};
phoenix_Quaternion.Multiply = function(_a,_b) {
	return _a.clone().multiply(_b);
};
phoenix_Quaternion.MultiplyScalar = function(_quaternion,_scalar) {
	return _quaternion.clone().multiplyScalar(_scalar);
};
phoenix_Quaternion.Slerp = function(_qa,_qb,_qm,_t) {
	return _qm.copy(_qa).slerp(_qb,_t);
};
phoenix_Quaternion.Dot = function(_a,_b) {
	return new phoenix_Quaternion(_a.x,_a.y,_a.z,_a.w).dot(_b);
};
phoenix_Quaternion.Listen = function(_q,listener) {
	_q.listen_x = listener;
	_q.listen_y = listener;
	_q.listen_z = listener;
	_q.listen_w = listener;
};
phoenix_Quaternion.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", z:" + this.z + ", w:" + this.w + " }";
	}
	,set: function(_x,_y,_z,_w) {
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,copy: function(_quaternion) {
		var _y = _quaternion.y;
		var _z = _quaternion.z;
		var _w = _quaternion.w;
		this.ignore_euler = true;
		this.x = _quaternion.x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x4 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x4;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x4);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,dot: function(_other) {
		return this.x * _other.x + this.y * _other.y + this.z * _other.z + this.w * _other.w;
	}
	,setFromEuler: function(_euler,_order) {
		if(_order == null) {
			_order = 0;
		}
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var c1 = Math.cos(_euler.x / 2);
		var c2 = Math.cos(_euler.y / 2);
		var c3 = Math.cos(_euler.z / 2);
		var s1 = Math.sin(_euler.x / 2);
		var s2 = Math.sin(_euler.y / 2);
		var s3 = Math.sin(_euler.z / 2);
		if(_order == 0) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 1) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 2) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 3) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 4) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 5) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,setFromAxisAngle: function(_axis,_angle) {
		var _halfAngle = _angle / 2;
		var _s = Math.sin(_halfAngle);
		var _y = _axis.y * _s;
		var _z = _axis.z * _s;
		var _w = Math.cos(_halfAngle);
		this.ignore_euler = true;
		this.x = _axis.x * _s;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x4 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x4;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x4);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,setFromRotationMatrix: function(_m) {
		var te = _m.elements;
		var m11 = te[0];
		var m12 = te[4];
		var m13 = te[8];
		var m21 = te[1];
		var m22 = te[5];
		var m23 = te[9];
		var m31 = te[2];
		var m32 = te[6];
		var m33 = te[10];
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var tr = m11 + m22 + m33;
		var s;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_w = 0.25 / s;
			_x = (m32 - m23) * s;
			_y = (m13 - m31) * s;
			_z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_w = (m32 - m23) / s;
			_x = 0.25 * s;
			_y = (m12 + m21) / s;
			_z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_w = (m13 - m31) / s;
			_x = (m12 + m21) / s;
			_y = 0.25 * s;
			_z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_w = (m21 - m12) / s;
			_x = (m13 + m31) / s;
			_y = (m23 + m32) / s;
			_z = 0.25 * s;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,inverse: function() {
		return this.conjugate().normalize();
	}
	,conjugate: function() {
		var _y = this.y * -1;
		var _z = this.z * -1;
		this.ignore_euler = true;
		this.x = this.x * -1;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this3 = this.euler;
			var sqx3 = this.x * this.x;
			var sqy3 = this.y * this.y;
			var sqz3 = this.z * this.z;
			var sqw3 = this.w * this.w;
			var _x3 = _this3.x;
			var _y4 = _this3.y;
			var _z4 = _this3.z;
			_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
			var value3 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x3;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x3);
				}
			}
			_this3.y = _y4;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y4);
				}
			}
			_this3.z = _z4;
			if(!_this3._construct) {
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_z4);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_this3.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		return this;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,normalize: function() {
		var l = this.length();
		if(l == 0) {
			this.ignore_euler = true;
			this.x = 0;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this = this.euler;
					var sqx = this.x * this.x;
					var sqy = this.y * this.y;
					var sqz = this.z * this.z;
					var sqw = this.w * this.w;
					var _x = _this.x;
					var _y = _this.y;
					var _z = _this.z;
					_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
					var value = 2 * (this.x * this.z + this.y * this.w);
					_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
					_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
					var prev = _this.ignore_listeners;
					_this.ignore_listeners = true;
					_this.x = _x;
					if(!_this._construct) {
						if(_this.listen_x != null && !_this.ignore_listeners) {
							_this.listen_x(_x);
						}
					}
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
					_this.z = _z;
					if(!_this._construct) {
						if(_this.listen_z != null && !_this.ignore_listeners) {
							_this.listen_z(_z);
						}
					}
					_this.ignore_listeners = prev;
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_this.x);
					}
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_this.y);
					}
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_this.z);
					}
				}
				if(this.listen_x != null && !this.ignore_listeners) {
					this.listen_x(this.x);
				}
			}
			this.y = 0;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this1 = this.euler;
					var sqx1 = this.x * this.x;
					var sqy1 = this.y * this.y;
					var sqz1 = this.z * this.z;
					var sqw1 = this.w * this.w;
					var _x1 = _this1.x;
					var _y1 = _this1.y;
					var _z1 = _this1.z;
					_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
					var value1 = 2 * (this.x * this.z + this.y * this.w);
					_y1 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
					_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
					var prev1 = _this1.ignore_listeners;
					_this1.ignore_listeners = true;
					_this1.x = _x1;
					if(!_this1._construct) {
						if(_this1.listen_x != null && !_this1.ignore_listeners) {
							_this1.listen_x(_x1);
						}
					}
					_this1.y = _y1;
					if(!_this1._construct) {
						if(_this1.listen_y != null && !_this1.ignore_listeners) {
							_this1.listen_y(_y1);
						}
					}
					_this1.z = _z1;
					if(!_this1._construct) {
						if(_this1.listen_z != null && !_this1.ignore_listeners) {
							_this1.listen_z(_z1);
						}
					}
					_this1.ignore_listeners = prev1;
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_this1.x);
					}
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_this1.y);
					}
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_this1.z);
					}
				}
				if(this.listen_y != null && !this.ignore_listeners) {
					this.listen_y(this.y);
				}
			}
			this.z = 0;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this2 = this.euler;
					var sqx2 = this.x * this.x;
					var sqy2 = this.y * this.y;
					var sqz2 = this.z * this.z;
					var sqw2 = this.w * this.w;
					var _x2 = _this2.x;
					var _y2 = _this2.y;
					var _z2 = _this2.z;
					_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
					var value2 = 2 * (this.x * this.z + this.y * this.w);
					_y2 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
					_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
					var prev2 = _this2.ignore_listeners;
					_this2.ignore_listeners = true;
					_this2.x = _x2;
					if(!_this2._construct) {
						if(_this2.listen_x != null && !_this2.ignore_listeners) {
							_this2.listen_x(_x2);
						}
					}
					_this2.y = _y2;
					if(!_this2._construct) {
						if(_this2.listen_y != null && !_this2.ignore_listeners) {
							_this2.listen_y(_y2);
						}
					}
					_this2.z = _z2;
					if(!_this2._construct) {
						if(_this2.listen_z != null && !_this2.ignore_listeners) {
							_this2.listen_z(_z2);
						}
					}
					_this2.ignore_listeners = prev2;
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_this2.x);
					}
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_this2.y);
					}
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_this2.z);
					}
				}
				if(this.listen_z != null && !this.ignore_listeners) {
					this.listen_z(this.z);
				}
			}
			this.w = 1;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this3 = this.euler;
					var sqx3 = this.x * this.x;
					var sqy3 = this.y * this.y;
					var sqz3 = this.z * this.z;
					var sqw3 = this.w * this.w;
					var _x3 = _this3.x;
					var _y3 = _this3.y;
					var _z3 = _this3.z;
					_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
					var value3 = 2 * (this.x * this.z + this.y * this.w);
					_y3 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
					_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
					var prev3 = _this3.ignore_listeners;
					_this3.ignore_listeners = true;
					_this3.x = _x3;
					if(!_this3._construct) {
						if(_this3.listen_x != null && !_this3.ignore_listeners) {
							_this3.listen_x(_x3);
						}
					}
					_this3.y = _y3;
					if(!_this3._construct) {
						if(_this3.listen_y != null && !_this3.ignore_listeners) {
							_this3.listen_y(_y3);
						}
					}
					_this3.z = _z3;
					if(!_this3._construct) {
						if(_this3.listen_z != null && !_this3.ignore_listeners) {
							_this3.listen_z(_z3);
						}
					}
					_this3.ignore_listeners = prev3;
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_this3.x);
					}
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_this3.y);
					}
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_this3.z);
					}
				}
				if(this.listen_w != null && !this.ignore_listeners) {
					this.listen_w(this.w);
				}
			}
			this.ignore_euler = false;
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this4 = this.euler;
				var sqx4 = this.x * this.x;
				var sqy4 = this.y * this.y;
				var sqz4 = this.z * this.z;
				var sqw4 = this.w * this.w;
				var _x4 = _this4.x;
				var _y4 = _this4.y;
				var _z4 = _this4.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
				var value4 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
				var prev4 = _this4.ignore_listeners;
				_this4.ignore_listeners = true;
				_this4.x = _x4;
				if(!_this4._construct) {
					if(_this4.listen_x != null && !_this4.ignore_listeners) {
						_this4.listen_x(_x4);
					}
				}
				_this4.y = _y4;
				if(!_this4._construct) {
					if(_this4.listen_y != null && !_this4.ignore_listeners) {
						_this4.listen_y(_y4);
					}
				}
				_this4.z = _z4;
				if(!_this4._construct) {
					if(_this4.listen_z != null && !_this4.ignore_listeners) {
						_this4.listen_z(_z4);
					}
				}
				_this4.ignore_listeners = prev4;
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_this4.x);
				}
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_this4.y);
				}
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_this4.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		} else {
			l = 1 / l;
			var _y5 = this.y * l;
			var _z5 = this.z * l;
			var _w = this.w * l;
			this.ignore_euler = true;
			this.x = this.x * l;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this5 = this.euler;
					var sqx5 = this.x * this.x;
					var sqy5 = this.y * this.y;
					var sqz5 = this.z * this.z;
					var sqw5 = this.w * this.w;
					var _x5 = _this5.x;
					var _y6 = _this5.y;
					var _z6 = _this5.z;
					_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw5 - sqx5 - sqy5 + sqz5);
					var value5 = 2 * (this.x * this.z + this.y * this.w);
					_y6 = Math.asin(value5 < -1 ? -1 : value5 > 1 ? 1 : value5);
					_z6 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw5 + sqx5 - sqy5 - sqz5);
					var prev5 = _this5.ignore_listeners;
					_this5.ignore_listeners = true;
					_this5.x = _x5;
					if(!_this5._construct) {
						if(_this5.listen_x != null && !_this5.ignore_listeners) {
							_this5.listen_x(_x5);
						}
					}
					_this5.y = _y6;
					if(!_this5._construct) {
						if(_this5.listen_y != null && !_this5.ignore_listeners) {
							_this5.listen_y(_y6);
						}
					}
					_this5.z = _z6;
					if(!_this5._construct) {
						if(_this5.listen_z != null && !_this5.ignore_listeners) {
							_this5.listen_z(_z6);
						}
					}
					_this5.ignore_listeners = prev5;
					if(_this5.listen_x != null && !_this5.ignore_listeners) {
						_this5.listen_x(_this5.x);
					}
					if(_this5.listen_y != null && !_this5.ignore_listeners) {
						_this5.listen_y(_this5.y);
					}
					if(_this5.listen_z != null && !_this5.ignore_listeners) {
						_this5.listen_z(_this5.z);
					}
				}
				if(this.listen_x != null && !this.ignore_listeners) {
					this.listen_x(this.x);
				}
			}
			this.y = _y5;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this6 = this.euler;
					var sqx6 = this.x * this.x;
					var sqy6 = this.y * this.y;
					var sqz6 = this.z * this.z;
					var sqw6 = this.w * this.w;
					var _x6 = _this6.x;
					var _y7 = _this6.y;
					var _z7 = _this6.z;
					_x6 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw6 - sqx6 - sqy6 + sqz6);
					var value6 = 2 * (this.x * this.z + this.y * this.w);
					_y7 = Math.asin(value6 < -1 ? -1 : value6 > 1 ? 1 : value6);
					_z7 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw6 + sqx6 - sqy6 - sqz6);
					var prev6 = _this6.ignore_listeners;
					_this6.ignore_listeners = true;
					_this6.x = _x6;
					if(!_this6._construct) {
						if(_this6.listen_x != null && !_this6.ignore_listeners) {
							_this6.listen_x(_x6);
						}
					}
					_this6.y = _y7;
					if(!_this6._construct) {
						if(_this6.listen_y != null && !_this6.ignore_listeners) {
							_this6.listen_y(_y7);
						}
					}
					_this6.z = _z7;
					if(!_this6._construct) {
						if(_this6.listen_z != null && !_this6.ignore_listeners) {
							_this6.listen_z(_z7);
						}
					}
					_this6.ignore_listeners = prev6;
					if(_this6.listen_x != null && !_this6.ignore_listeners) {
						_this6.listen_x(_this6.x);
					}
					if(_this6.listen_y != null && !_this6.ignore_listeners) {
						_this6.listen_y(_this6.y);
					}
					if(_this6.listen_z != null && !_this6.ignore_listeners) {
						_this6.listen_z(_this6.z);
					}
				}
				if(this.listen_y != null && !this.ignore_listeners) {
					this.listen_y(this.y);
				}
			}
			this.z = _z5;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this7 = this.euler;
					var sqx7 = this.x * this.x;
					var sqy7 = this.y * this.y;
					var sqz7 = this.z * this.z;
					var sqw7 = this.w * this.w;
					var _x7 = _this7.x;
					var _y8 = _this7.y;
					var _z8 = _this7.z;
					_x7 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw7 - sqx7 - sqy7 + sqz7);
					var value7 = 2 * (this.x * this.z + this.y * this.w);
					_y8 = Math.asin(value7 < -1 ? -1 : value7 > 1 ? 1 : value7);
					_z8 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw7 + sqx7 - sqy7 - sqz7);
					var prev7 = _this7.ignore_listeners;
					_this7.ignore_listeners = true;
					_this7.x = _x7;
					if(!_this7._construct) {
						if(_this7.listen_x != null && !_this7.ignore_listeners) {
							_this7.listen_x(_x7);
						}
					}
					_this7.y = _y8;
					if(!_this7._construct) {
						if(_this7.listen_y != null && !_this7.ignore_listeners) {
							_this7.listen_y(_y8);
						}
					}
					_this7.z = _z8;
					if(!_this7._construct) {
						if(_this7.listen_z != null && !_this7.ignore_listeners) {
							_this7.listen_z(_z8);
						}
					}
					_this7.ignore_listeners = prev7;
					if(_this7.listen_x != null && !_this7.ignore_listeners) {
						_this7.listen_x(_this7.x);
					}
					if(_this7.listen_y != null && !_this7.ignore_listeners) {
						_this7.listen_y(_this7.y);
					}
					if(_this7.listen_z != null && !_this7.ignore_listeners) {
						_this7.listen_z(_this7.z);
					}
				}
				if(this.listen_z != null && !this.ignore_listeners) {
					this.listen_z(this.z);
				}
			}
			this.w = _w;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this8 = this.euler;
					var sqx8 = this.x * this.x;
					var sqy8 = this.y * this.y;
					var sqz8 = this.z * this.z;
					var sqw8 = this.w * this.w;
					var _x8 = _this8.x;
					var _y9 = _this8.y;
					var _z9 = _this8.z;
					_x8 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw8 - sqx8 - sqy8 + sqz8);
					var value8 = 2 * (this.x * this.z + this.y * this.w);
					_y9 = Math.asin(value8 < -1 ? -1 : value8 > 1 ? 1 : value8);
					_z9 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw8 + sqx8 - sqy8 - sqz8);
					var prev8 = _this8.ignore_listeners;
					_this8.ignore_listeners = true;
					_this8.x = _x8;
					if(!_this8._construct) {
						if(_this8.listen_x != null && !_this8.ignore_listeners) {
							_this8.listen_x(_x8);
						}
					}
					_this8.y = _y9;
					if(!_this8._construct) {
						if(_this8.listen_y != null && !_this8.ignore_listeners) {
							_this8.listen_y(_y9);
						}
					}
					_this8.z = _z9;
					if(!_this8._construct) {
						if(_this8.listen_z != null && !_this8.ignore_listeners) {
							_this8.listen_z(_z9);
						}
					}
					_this8.ignore_listeners = prev8;
					if(_this8.listen_x != null && !_this8.ignore_listeners) {
						_this8.listen_x(_this8.x);
					}
					if(_this8.listen_y != null && !_this8.ignore_listeners) {
						_this8.listen_y(_this8.y);
					}
					if(_this8.listen_z != null && !_this8.ignore_listeners) {
						_this8.listen_z(_this8.z);
					}
				}
				if(this.listen_w != null && !this.ignore_listeners) {
					this.listen_w(this.w);
				}
			}
			this.ignore_euler = false;
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this9 = this.euler;
				var sqx9 = this.x * this.x;
				var sqy9 = this.y * this.y;
				var sqz9 = this.z * this.z;
				var sqw9 = this.w * this.w;
				var _x9 = _this9.x;
				var _y10 = _this9.y;
				var _z10 = _this9.z;
				_x9 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw9 - sqx9 - sqy9 + sqz9);
				var value9 = 2 * (this.x * this.z + this.y * this.w);
				_y10 = Math.asin(value9 < -1 ? -1 : value9 > 1 ? 1 : value9);
				_z10 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw9 + sqx9 - sqy9 - sqz9);
				var prev9 = _this9.ignore_listeners;
				_this9.ignore_listeners = true;
				_this9.x = _x9;
				if(!_this9._construct) {
					if(_this9.listen_x != null && !_this9.ignore_listeners) {
						_this9.listen_x(_x9);
					}
				}
				_this9.y = _y10;
				if(!_this9._construct) {
					if(_this9.listen_y != null && !_this9.ignore_listeners) {
						_this9.listen_y(_y10);
					}
				}
				_this9.z = _z10;
				if(!_this9._construct) {
					if(_this9.listen_z != null && !_this9.ignore_listeners) {
						_this9.listen_z(_z10);
					}
				}
				_this9.ignore_listeners = prev9;
				if(_this9.listen_x != null && !_this9.ignore_listeners) {
					_this9.listen_x(_this9.x);
				}
				if(_this9.listen_y != null && !_this9.ignore_listeners) {
					_this9.listen_y(_this9.y);
				}
				if(_this9.listen_z != null && !_this9.ignore_listeners) {
					_this9.listen_z(_this9.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		return this;
	}
	,multiply: function(_quaternion) {
		return this.multiplyQuaternions(this,_quaternion);
	}
	,add: function(_quaternion) {
		return this.addQuaternions(this,_quaternion);
	}
	,addQuaternions: function(_a,_b) {
		this.x = _a.x + _b.x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y = _this.y;
				var _z = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y);
					}
				}
				_this.z = _z;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _a.y + _b.y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y1 = _this1.y;
				var _z1 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y1;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y1);
					}
				}
				_this1.z = _z1;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z1);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _a.z + _b.z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y2 = _this2.y;
				var _z2 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y2;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y2);
					}
				}
				_this2.z = _z2;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z2);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _a.w + _b.w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y3 = _this3.y;
				var _z3 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y3;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y3);
					}
				}
				_this3.z = _z3;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z3);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		return this;
	}
	,multiplyScalar: function(_scalar) {
		var _g = this;
		_g.x *= _scalar;
		if(!_g._construct) {
			if(!(_g.euler == null || _g.ignore_euler || _g._construct)) {
				var _this = _g.euler;
				var sqx = _g.x * _g.x;
				var sqy = _g.y * _g.y;
				var sqz = _g.z * _g.z;
				var sqw = _g.w * _g.w;
				var _x = _this.x;
				var _y = _this.y;
				var _z = _this.z;
				_x = Math.atan2(2 * (_g.x * _g.w - _g.y * _g.z),sqw - sqx - sqy + sqz);
				var value = 2 * (_g.x * _g.z + _g.y * _g.w);
				_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z = Math.atan2(2 * (_g.z * _g.w - _g.x * _g.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y);
					}
				}
				_this.z = _z;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(_g.listen_x != null && !_g.ignore_listeners) {
				_g.listen_x(_g.x);
			}
		}
		var _g1 = this;
		_g1.y *= _scalar;
		if(!_g1._construct) {
			if(!(_g1.euler == null || _g1.ignore_euler || _g1._construct)) {
				var _this1 = _g1.euler;
				var sqx1 = _g1.x * _g1.x;
				var sqy1 = _g1.y * _g1.y;
				var sqz1 = _g1.z * _g1.z;
				var sqw1 = _g1.w * _g1.w;
				var _x1 = _this1.x;
				var _y1 = _this1.y;
				var _z1 = _this1.z;
				_x1 = Math.atan2(2 * (_g1.x * _g1.w - _g1.y * _g1.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (_g1.x * _g1.z + _g1.y * _g1.w);
				_y1 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z1 = Math.atan2(2 * (_g1.z * _g1.w - _g1.x * _g1.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y1;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y1);
					}
				}
				_this1.z = _z1;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z1);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(_g1.listen_y != null && !_g1.ignore_listeners) {
				_g1.listen_y(_g1.y);
			}
		}
		var _g2 = this;
		_g2.z *= _scalar;
		if(!_g2._construct) {
			if(!(_g2.euler == null || _g2.ignore_euler || _g2._construct)) {
				var _this2 = _g2.euler;
				var sqx2 = _g2.x * _g2.x;
				var sqy2 = _g2.y * _g2.y;
				var sqz2 = _g2.z * _g2.z;
				var sqw2 = _g2.w * _g2.w;
				var _x2 = _this2.x;
				var _y2 = _this2.y;
				var _z2 = _this2.z;
				_x2 = Math.atan2(2 * (_g2.x * _g2.w - _g2.y * _g2.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (_g2.x * _g2.z + _g2.y * _g2.w);
				_y2 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z2 = Math.atan2(2 * (_g2.z * _g2.w - _g2.x * _g2.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y2;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y2);
					}
				}
				_this2.z = _z2;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z2);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(_g2.listen_z != null && !_g2.ignore_listeners) {
				_g2.listen_z(_g2.z);
			}
		}
		var _g3 = this;
		_g3.w *= _scalar;
		if(!_g3._construct) {
			if(!(_g3.euler == null || _g3.ignore_euler || _g3._construct)) {
				var _this3 = _g3.euler;
				var sqx3 = _g3.x * _g3.x;
				var sqy3 = _g3.y * _g3.y;
				var sqz3 = _g3.z * _g3.z;
				var sqw3 = _g3.w * _g3.w;
				var _x3 = _this3.x;
				var _y3 = _this3.y;
				var _z3 = _this3.z;
				_x3 = Math.atan2(2 * (_g3.x * _g3.w - _g3.y * _g3.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (_g3.x * _g3.z + _g3.y * _g3.w);
				_y3 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z3 = Math.atan2(2 * (_g3.z * _g3.w - _g3.x * _g3.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y3;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y3);
					}
				}
				_this3.z = _z3;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z3);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(_g3.listen_w != null && !_g3.ignore_listeners) {
				_g3.listen_w(_g3.w);
			}
		}
		return this;
	}
	,multiplyQuaternions: function(_a,_b) {
		var qax = _a.x;
		var qay = _a.y;
		var qaz = _a.z;
		var qaw = _a.w;
		var qbx = _b.x;
		var qby = _b.y;
		var qbz = _b.z;
		var qbw = _b.w;
		this.ignore_euler = true;
		this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y = _this.y;
				var _z = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y);
					}
				}
				_this.z = _z;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y1 = _this1.y;
				var _z1 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y1;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y1);
					}
				}
				_this1.z = _z1;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z1);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y2 = _this2.y;
				var _z2 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y2;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y2);
					}
				}
				_this2.z = _z2;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z2);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y3 = _this3.y;
				var _z3 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y3;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y3);
					}
				}
				_this3.z = _z3;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z3);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x4 = _this4.x;
			var _y4 = _this4.y;
			var _z4 = _this4.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x4;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x4);
				}
			}
			_this4.y = _y4;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y4);
				}
			}
			_this4.z = _z4;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z4);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,slerp: function(_qb,_t) {
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var cosHalfTheta = _w * _qb.w + _x * _qb.x + _y * _qb.y + _z * _qb.z;
		if(cosHalfTheta < 0) {
			this.x = -_qb.x;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this = this.euler;
					var sqx = this.x * this.x;
					var sqy = this.y * this.y;
					var sqz = this.z * this.z;
					var sqw = this.w * this.w;
					var _x1 = _this.x;
					var _y1 = _this.y;
					var _z1 = _this.z;
					_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
					var value = 2 * (this.x * this.z + this.y * this.w);
					_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
					_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
					var prev = _this.ignore_listeners;
					_this.ignore_listeners = true;
					_this.x = _x1;
					if(!_this._construct) {
						if(_this.listen_x != null && !_this.ignore_listeners) {
							_this.listen_x(_x1);
						}
					}
					_this.y = _y1;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y1);
						}
					}
					_this.z = _z1;
					if(!_this._construct) {
						if(_this.listen_z != null && !_this.ignore_listeners) {
							_this.listen_z(_z1);
						}
					}
					_this.ignore_listeners = prev;
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_this.x);
					}
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_this.y);
					}
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_this.z);
					}
				}
				if(this.listen_x != null && !this.ignore_listeners) {
					this.listen_x(this.x);
				}
			}
			this.y = -_qb.y;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this1 = this.euler;
					var sqx1 = this.x * this.x;
					var sqy1 = this.y * this.y;
					var sqz1 = this.z * this.z;
					var sqw1 = this.w * this.w;
					var _x2 = _this1.x;
					var _y2 = _this1.y;
					var _z2 = _this1.z;
					_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
					var value1 = 2 * (this.x * this.z + this.y * this.w);
					_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
					_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
					var prev1 = _this1.ignore_listeners;
					_this1.ignore_listeners = true;
					_this1.x = _x2;
					if(!_this1._construct) {
						if(_this1.listen_x != null && !_this1.ignore_listeners) {
							_this1.listen_x(_x2);
						}
					}
					_this1.y = _y2;
					if(!_this1._construct) {
						if(_this1.listen_y != null && !_this1.ignore_listeners) {
							_this1.listen_y(_y2);
						}
					}
					_this1.z = _z2;
					if(!_this1._construct) {
						if(_this1.listen_z != null && !_this1.ignore_listeners) {
							_this1.listen_z(_z2);
						}
					}
					_this1.ignore_listeners = prev1;
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_this1.x);
					}
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_this1.y);
					}
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_this1.z);
					}
				}
				if(this.listen_y != null && !this.ignore_listeners) {
					this.listen_y(this.y);
				}
			}
			this.z = -_qb.z;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this2 = this.euler;
					var sqx2 = this.x * this.x;
					var sqy2 = this.y * this.y;
					var sqz2 = this.z * this.z;
					var sqw2 = this.w * this.w;
					var _x3 = _this2.x;
					var _y3 = _this2.y;
					var _z3 = _this2.z;
					_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
					var value2 = 2 * (this.x * this.z + this.y * this.w);
					_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
					_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
					var prev2 = _this2.ignore_listeners;
					_this2.ignore_listeners = true;
					_this2.x = _x3;
					if(!_this2._construct) {
						if(_this2.listen_x != null && !_this2.ignore_listeners) {
							_this2.listen_x(_x3);
						}
					}
					_this2.y = _y3;
					if(!_this2._construct) {
						if(_this2.listen_y != null && !_this2.ignore_listeners) {
							_this2.listen_y(_y3);
						}
					}
					_this2.z = _z3;
					if(!_this2._construct) {
						if(_this2.listen_z != null && !_this2.ignore_listeners) {
							_this2.listen_z(_z3);
						}
					}
					_this2.ignore_listeners = prev2;
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_this2.x);
					}
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_this2.y);
					}
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_this2.z);
					}
				}
				if(this.listen_z != null && !this.ignore_listeners) {
					this.listen_z(this.z);
				}
			}
			this.w = -_qb.w;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this3 = this.euler;
					var sqx3 = this.x * this.x;
					var sqy3 = this.y * this.y;
					var sqz3 = this.z * this.z;
					var sqw3 = this.w * this.w;
					var _x4 = _this3.x;
					var _y4 = _this3.y;
					var _z4 = _this3.z;
					_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
					var value3 = 2 * (this.x * this.z + this.y * this.w);
					_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
					_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
					var prev3 = _this3.ignore_listeners;
					_this3.ignore_listeners = true;
					_this3.x = _x4;
					if(!_this3._construct) {
						if(_this3.listen_x != null && !_this3.ignore_listeners) {
							_this3.listen_x(_x4);
						}
					}
					_this3.y = _y4;
					if(!_this3._construct) {
						if(_this3.listen_y != null && !_this3.ignore_listeners) {
							_this3.listen_y(_y4);
						}
					}
					_this3.z = _z4;
					if(!_this3._construct) {
						if(_this3.listen_z != null && !_this3.ignore_listeners) {
							_this3.listen_z(_z4);
						}
					}
					_this3.ignore_listeners = prev3;
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_this3.x);
					}
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_this3.y);
					}
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_this3.z);
					}
				}
				if(this.listen_w != null && !this.ignore_listeners) {
					this.listen_w(this.w);
				}
			}
			cosHalfTheta = -cosHalfTheta;
		} else {
			this.copy(_qb);
		}
		if(cosHalfTheta >= 1.0) {
			this.ignore_euler = true;
			this.x = _x;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this4 = this.euler;
					var sqx4 = this.x * this.x;
					var sqy4 = this.y * this.y;
					var sqz4 = this.z * this.z;
					var sqw4 = this.w * this.w;
					var _x5 = _this4.x;
					var _y5 = _this4.y;
					var _z5 = _this4.z;
					_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
					var value4 = 2 * (this.x * this.z + this.y * this.w);
					_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
					_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
					var prev4 = _this4.ignore_listeners;
					_this4.ignore_listeners = true;
					_this4.x = _x5;
					if(!_this4._construct) {
						if(_this4.listen_x != null && !_this4.ignore_listeners) {
							_this4.listen_x(_x5);
						}
					}
					_this4.y = _y5;
					if(!_this4._construct) {
						if(_this4.listen_y != null && !_this4.ignore_listeners) {
							_this4.listen_y(_y5);
						}
					}
					_this4.z = _z5;
					if(!_this4._construct) {
						if(_this4.listen_z != null && !_this4.ignore_listeners) {
							_this4.listen_z(_z5);
						}
					}
					_this4.ignore_listeners = prev4;
					if(_this4.listen_x != null && !_this4.ignore_listeners) {
						_this4.listen_x(_this4.x);
					}
					if(_this4.listen_y != null && !_this4.ignore_listeners) {
						_this4.listen_y(_this4.y);
					}
					if(_this4.listen_z != null && !_this4.ignore_listeners) {
						_this4.listen_z(_this4.z);
					}
				}
				if(this.listen_x != null && !this.ignore_listeners) {
					this.listen_x(this.x);
				}
			}
			this.y = _y;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this5 = this.euler;
					var sqx5 = this.x * this.x;
					var sqy5 = this.y * this.y;
					var sqz5 = this.z * this.z;
					var sqw5 = this.w * this.w;
					var _x6 = _this5.x;
					var _y6 = _this5.y;
					var _z6 = _this5.z;
					_x6 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw5 - sqx5 - sqy5 + sqz5);
					var value5 = 2 * (this.x * this.z + this.y * this.w);
					_y6 = Math.asin(value5 < -1 ? -1 : value5 > 1 ? 1 : value5);
					_z6 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw5 + sqx5 - sqy5 - sqz5);
					var prev5 = _this5.ignore_listeners;
					_this5.ignore_listeners = true;
					_this5.x = _x6;
					if(!_this5._construct) {
						if(_this5.listen_x != null && !_this5.ignore_listeners) {
							_this5.listen_x(_x6);
						}
					}
					_this5.y = _y6;
					if(!_this5._construct) {
						if(_this5.listen_y != null && !_this5.ignore_listeners) {
							_this5.listen_y(_y6);
						}
					}
					_this5.z = _z6;
					if(!_this5._construct) {
						if(_this5.listen_z != null && !_this5.ignore_listeners) {
							_this5.listen_z(_z6);
						}
					}
					_this5.ignore_listeners = prev5;
					if(_this5.listen_x != null && !_this5.ignore_listeners) {
						_this5.listen_x(_this5.x);
					}
					if(_this5.listen_y != null && !_this5.ignore_listeners) {
						_this5.listen_y(_this5.y);
					}
					if(_this5.listen_z != null && !_this5.ignore_listeners) {
						_this5.listen_z(_this5.z);
					}
				}
				if(this.listen_y != null && !this.ignore_listeners) {
					this.listen_y(this.y);
				}
			}
			this.z = _z;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this6 = this.euler;
					var sqx6 = this.x * this.x;
					var sqy6 = this.y * this.y;
					var sqz6 = this.z * this.z;
					var sqw6 = this.w * this.w;
					var _x7 = _this6.x;
					var _y7 = _this6.y;
					var _z7 = _this6.z;
					_x7 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw6 - sqx6 - sqy6 + sqz6);
					var value6 = 2 * (this.x * this.z + this.y * this.w);
					_y7 = Math.asin(value6 < -1 ? -1 : value6 > 1 ? 1 : value6);
					_z7 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw6 + sqx6 - sqy6 - sqz6);
					var prev6 = _this6.ignore_listeners;
					_this6.ignore_listeners = true;
					_this6.x = _x7;
					if(!_this6._construct) {
						if(_this6.listen_x != null && !_this6.ignore_listeners) {
							_this6.listen_x(_x7);
						}
					}
					_this6.y = _y7;
					if(!_this6._construct) {
						if(_this6.listen_y != null && !_this6.ignore_listeners) {
							_this6.listen_y(_y7);
						}
					}
					_this6.z = _z7;
					if(!_this6._construct) {
						if(_this6.listen_z != null && !_this6.ignore_listeners) {
							_this6.listen_z(_z7);
						}
					}
					_this6.ignore_listeners = prev6;
					if(_this6.listen_x != null && !_this6.ignore_listeners) {
						_this6.listen_x(_this6.x);
					}
					if(_this6.listen_y != null && !_this6.ignore_listeners) {
						_this6.listen_y(_this6.y);
					}
					if(_this6.listen_z != null && !_this6.ignore_listeners) {
						_this6.listen_z(_this6.z);
					}
				}
				if(this.listen_z != null && !this.ignore_listeners) {
					this.listen_z(this.z);
				}
			}
			this.w = _w;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this7 = this.euler;
					var sqx7 = this.x * this.x;
					var sqy7 = this.y * this.y;
					var sqz7 = this.z * this.z;
					var sqw7 = this.w * this.w;
					var _x8 = _this7.x;
					var _y8 = _this7.y;
					var _z8 = _this7.z;
					_x8 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw7 - sqx7 - sqy7 + sqz7);
					var value7 = 2 * (this.x * this.z + this.y * this.w);
					_y8 = Math.asin(value7 < -1 ? -1 : value7 > 1 ? 1 : value7);
					_z8 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw7 + sqx7 - sqy7 - sqz7);
					var prev7 = _this7.ignore_listeners;
					_this7.ignore_listeners = true;
					_this7.x = _x8;
					if(!_this7._construct) {
						if(_this7.listen_x != null && !_this7.ignore_listeners) {
							_this7.listen_x(_x8);
						}
					}
					_this7.y = _y8;
					if(!_this7._construct) {
						if(_this7.listen_y != null && !_this7.ignore_listeners) {
							_this7.listen_y(_y8);
						}
					}
					_this7.z = _z8;
					if(!_this7._construct) {
						if(_this7.listen_z != null && !_this7.ignore_listeners) {
							_this7.listen_z(_z8);
						}
					}
					_this7.ignore_listeners = prev7;
					if(_this7.listen_x != null && !_this7.ignore_listeners) {
						_this7.listen_x(_this7.x);
					}
					if(_this7.listen_y != null && !_this7.ignore_listeners) {
						_this7.listen_y(_this7.y);
					}
					if(_this7.listen_z != null && !_this7.ignore_listeners) {
						_this7.listen_z(_this7.z);
					}
				}
				if(this.listen_w != null && !this.ignore_listeners) {
					this.listen_w(this.w);
				}
			}
			this.ignore_euler = false;
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this8 = this.euler;
				var sqx8 = this.x * this.x;
				var sqy8 = this.y * this.y;
				var sqz8 = this.z * this.z;
				var sqw8 = this.w * this.w;
				var _x9 = _this8.x;
				var _y9 = _this8.y;
				var _z9 = _this8.z;
				_x9 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw8 - sqx8 - sqy8 + sqz8);
				var value8 = 2 * (this.x * this.z + this.y * this.w);
				_y9 = Math.asin(value8 < -1 ? -1 : value8 > 1 ? 1 : value8);
				_z9 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw8 + sqx8 - sqy8 - sqz8);
				var prev8 = _this8.ignore_listeners;
				_this8.ignore_listeners = true;
				_this8.x = _x9;
				if(!_this8._construct) {
					if(_this8.listen_x != null && !_this8.ignore_listeners) {
						_this8.listen_x(_x9);
					}
				}
				_this8.y = _y9;
				if(!_this8._construct) {
					if(_this8.listen_y != null && !_this8.ignore_listeners) {
						_this8.listen_y(_y9);
					}
				}
				_this8.z = _z9;
				if(!_this8._construct) {
					if(_this8.listen_z != null && !_this8.ignore_listeners) {
						_this8.listen_z(_z9);
					}
				}
				_this8.ignore_listeners = prev8;
				if(_this8.listen_x != null && !_this8.ignore_listeners) {
					_this8.listen_x(_this8.x);
				}
				if(_this8.listen_y != null && !_this8.ignore_listeners) {
					_this8.listen_y(_this8.y);
				}
				if(_this8.listen_z != null && !_this8.ignore_listeners) {
					_this8.listen_z(_this8.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
			return this;
		}
		var halfTheta = Math.acos(cosHalfTheta);
		var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);
		if(Math.abs(sinHalfTheta) < 0.001) {
			var _y10 = 0.5 * (_y + this.y);
			var _z10 = 0.5 * (_z + this.z);
			var _w1 = 0.5 * (_w + this.w);
			this.ignore_euler = true;
			this.x = 0.5 * (_x + this.x);
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this9 = this.euler;
					var sqx9 = this.x * this.x;
					var sqy9 = this.y * this.y;
					var sqz9 = this.z * this.z;
					var sqw9 = this.w * this.w;
					var _x10 = _this9.x;
					var _y11 = _this9.y;
					var _z11 = _this9.z;
					_x10 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw9 - sqx9 - sqy9 + sqz9);
					var value9 = 2 * (this.x * this.z + this.y * this.w);
					_y11 = Math.asin(value9 < -1 ? -1 : value9 > 1 ? 1 : value9);
					_z11 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw9 + sqx9 - sqy9 - sqz9);
					var prev9 = _this9.ignore_listeners;
					_this9.ignore_listeners = true;
					_this9.x = _x10;
					if(!_this9._construct) {
						if(_this9.listen_x != null && !_this9.ignore_listeners) {
							_this9.listen_x(_x10);
						}
					}
					_this9.y = _y11;
					if(!_this9._construct) {
						if(_this9.listen_y != null && !_this9.ignore_listeners) {
							_this9.listen_y(_y11);
						}
					}
					_this9.z = _z11;
					if(!_this9._construct) {
						if(_this9.listen_z != null && !_this9.ignore_listeners) {
							_this9.listen_z(_z11);
						}
					}
					_this9.ignore_listeners = prev9;
					if(_this9.listen_x != null && !_this9.ignore_listeners) {
						_this9.listen_x(_this9.x);
					}
					if(_this9.listen_y != null && !_this9.ignore_listeners) {
						_this9.listen_y(_this9.y);
					}
					if(_this9.listen_z != null && !_this9.ignore_listeners) {
						_this9.listen_z(_this9.z);
					}
				}
				if(this.listen_x != null && !this.ignore_listeners) {
					this.listen_x(this.x);
				}
			}
			this.y = _y10;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this10 = this.euler;
					var sqx10 = this.x * this.x;
					var sqy10 = this.y * this.y;
					var sqz10 = this.z * this.z;
					var sqw10 = this.w * this.w;
					var _x11 = _this10.x;
					var _y12 = _this10.y;
					var _z12 = _this10.z;
					_x11 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw10 - sqx10 - sqy10 + sqz10);
					var value10 = 2 * (this.x * this.z + this.y * this.w);
					_y12 = Math.asin(value10 < -1 ? -1 : value10 > 1 ? 1 : value10);
					_z12 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw10 + sqx10 - sqy10 - sqz10);
					var prev10 = _this10.ignore_listeners;
					_this10.ignore_listeners = true;
					_this10.x = _x11;
					if(!_this10._construct) {
						if(_this10.listen_x != null && !_this10.ignore_listeners) {
							_this10.listen_x(_x11);
						}
					}
					_this10.y = _y12;
					if(!_this10._construct) {
						if(_this10.listen_y != null && !_this10.ignore_listeners) {
							_this10.listen_y(_y12);
						}
					}
					_this10.z = _z12;
					if(!_this10._construct) {
						if(_this10.listen_z != null && !_this10.ignore_listeners) {
							_this10.listen_z(_z12);
						}
					}
					_this10.ignore_listeners = prev10;
					if(_this10.listen_x != null && !_this10.ignore_listeners) {
						_this10.listen_x(_this10.x);
					}
					if(_this10.listen_y != null && !_this10.ignore_listeners) {
						_this10.listen_y(_this10.y);
					}
					if(_this10.listen_z != null && !_this10.ignore_listeners) {
						_this10.listen_z(_this10.z);
					}
				}
				if(this.listen_y != null && !this.ignore_listeners) {
					this.listen_y(this.y);
				}
			}
			this.z = _z10;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this11 = this.euler;
					var sqx11 = this.x * this.x;
					var sqy11 = this.y * this.y;
					var sqz11 = this.z * this.z;
					var sqw11 = this.w * this.w;
					var _x12 = _this11.x;
					var _y13 = _this11.y;
					var _z13 = _this11.z;
					_x12 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw11 - sqx11 - sqy11 + sqz11);
					var value11 = 2 * (this.x * this.z + this.y * this.w);
					_y13 = Math.asin(value11 < -1 ? -1 : value11 > 1 ? 1 : value11);
					_z13 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw11 + sqx11 - sqy11 - sqz11);
					var prev11 = _this11.ignore_listeners;
					_this11.ignore_listeners = true;
					_this11.x = _x12;
					if(!_this11._construct) {
						if(_this11.listen_x != null && !_this11.ignore_listeners) {
							_this11.listen_x(_x12);
						}
					}
					_this11.y = _y13;
					if(!_this11._construct) {
						if(_this11.listen_y != null && !_this11.ignore_listeners) {
							_this11.listen_y(_y13);
						}
					}
					_this11.z = _z13;
					if(!_this11._construct) {
						if(_this11.listen_z != null && !_this11.ignore_listeners) {
							_this11.listen_z(_z13);
						}
					}
					_this11.ignore_listeners = prev11;
					if(_this11.listen_x != null && !_this11.ignore_listeners) {
						_this11.listen_x(_this11.x);
					}
					if(_this11.listen_y != null && !_this11.ignore_listeners) {
						_this11.listen_y(_this11.y);
					}
					if(_this11.listen_z != null && !_this11.ignore_listeners) {
						_this11.listen_z(_this11.z);
					}
				}
				if(this.listen_z != null && !this.ignore_listeners) {
					this.listen_z(this.z);
				}
			}
			this.w = _w1;
			if(!this._construct) {
				if(!(this.euler == null || this.ignore_euler || this._construct)) {
					var _this12 = this.euler;
					var sqx12 = this.x * this.x;
					var sqy12 = this.y * this.y;
					var sqz12 = this.z * this.z;
					var sqw12 = this.w * this.w;
					var _x13 = _this12.x;
					var _y14 = _this12.y;
					var _z14 = _this12.z;
					_x13 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw12 - sqx12 - sqy12 + sqz12);
					var value12 = 2 * (this.x * this.z + this.y * this.w);
					_y14 = Math.asin(value12 < -1 ? -1 : value12 > 1 ? 1 : value12);
					_z14 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw12 + sqx12 - sqy12 - sqz12);
					var prev12 = _this12.ignore_listeners;
					_this12.ignore_listeners = true;
					_this12.x = _x13;
					if(!_this12._construct) {
						if(_this12.listen_x != null && !_this12.ignore_listeners) {
							_this12.listen_x(_x13);
						}
					}
					_this12.y = _y14;
					if(!_this12._construct) {
						if(_this12.listen_y != null && !_this12.ignore_listeners) {
							_this12.listen_y(_y14);
						}
					}
					_this12.z = _z14;
					if(!_this12._construct) {
						if(_this12.listen_z != null && !_this12.ignore_listeners) {
							_this12.listen_z(_z14);
						}
					}
					_this12.ignore_listeners = prev12;
					if(_this12.listen_x != null && !_this12.ignore_listeners) {
						_this12.listen_x(_this12.x);
					}
					if(_this12.listen_y != null && !_this12.ignore_listeners) {
						_this12.listen_y(_this12.y);
					}
					if(_this12.listen_z != null && !_this12.ignore_listeners) {
						_this12.listen_z(_this12.z);
					}
				}
				if(this.listen_w != null && !this.ignore_listeners) {
					this.listen_w(this.w);
				}
			}
			this.ignore_euler = false;
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this13 = this.euler;
				var sqx13 = this.x * this.x;
				var sqy13 = this.y * this.y;
				var sqz13 = this.z * this.z;
				var sqw13 = this.w * this.w;
				var _x14 = _this13.x;
				var _y15 = _this13.y;
				var _z15 = _this13.z;
				_x14 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw13 - sqx13 - sqy13 + sqz13);
				var value13 = 2 * (this.x * this.z + this.y * this.w);
				_y15 = Math.asin(value13 < -1 ? -1 : value13 > 1 ? 1 : value13);
				_z15 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw13 + sqx13 - sqy13 - sqz13);
				var prev13 = _this13.ignore_listeners;
				_this13.ignore_listeners = true;
				_this13.x = _x14;
				if(!_this13._construct) {
					if(_this13.listen_x != null && !_this13.ignore_listeners) {
						_this13.listen_x(_x14);
					}
				}
				_this13.y = _y15;
				if(!_this13._construct) {
					if(_this13.listen_y != null && !_this13.ignore_listeners) {
						_this13.listen_y(_y15);
					}
				}
				_this13.z = _z15;
				if(!_this13._construct) {
					if(_this13.listen_z != null && !_this13.ignore_listeners) {
						_this13.listen_z(_z15);
					}
				}
				_this13.ignore_listeners = prev13;
				if(_this13.listen_x != null && !_this13.ignore_listeners) {
					_this13.listen_x(_this13.x);
				}
				if(_this13.listen_y != null && !_this13.ignore_listeners) {
					_this13.listen_y(_this13.y);
				}
				if(_this13.listen_z != null && !_this13.ignore_listeners) {
					_this13.listen_z(_this13.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
			return this;
		}
		var ratioA = Math.sin((1 - _t) * halfTheta) / sinHalfTheta;
		var ratioB = Math.sin(_t * halfTheta) / sinHalfTheta;
		var _y16 = _y * ratioA + this.y * ratioB;
		var _z16 = _z * ratioA + this.z * ratioB;
		var _w2 = _w * ratioA + this.w * ratioB;
		this.ignore_euler = true;
		this.x = _x * ratioA + this.x * ratioB;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this14 = this.euler;
				var sqx14 = this.x * this.x;
				var sqy14 = this.y * this.y;
				var sqz14 = this.z * this.z;
				var sqw14 = this.w * this.w;
				var _x15 = _this14.x;
				var _y17 = _this14.y;
				var _z17 = _this14.z;
				_x15 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw14 - sqx14 - sqy14 + sqz14);
				var value14 = 2 * (this.x * this.z + this.y * this.w);
				_y17 = Math.asin(value14 < -1 ? -1 : value14 > 1 ? 1 : value14);
				_z17 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw14 + sqx14 - sqy14 - sqz14);
				var prev14 = _this14.ignore_listeners;
				_this14.ignore_listeners = true;
				_this14.x = _x15;
				if(!_this14._construct) {
					if(_this14.listen_x != null && !_this14.ignore_listeners) {
						_this14.listen_x(_x15);
					}
				}
				_this14.y = _y17;
				if(!_this14._construct) {
					if(_this14.listen_y != null && !_this14.ignore_listeners) {
						_this14.listen_y(_y17);
					}
				}
				_this14.z = _z17;
				if(!_this14._construct) {
					if(_this14.listen_z != null && !_this14.ignore_listeners) {
						_this14.listen_z(_z17);
					}
				}
				_this14.ignore_listeners = prev14;
				if(_this14.listen_x != null && !_this14.ignore_listeners) {
					_this14.listen_x(_this14.x);
				}
				if(_this14.listen_y != null && !_this14.ignore_listeners) {
					_this14.listen_y(_this14.y);
				}
				if(_this14.listen_z != null && !_this14.ignore_listeners) {
					_this14.listen_z(_this14.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y16;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this15 = this.euler;
				var sqx15 = this.x * this.x;
				var sqy15 = this.y * this.y;
				var sqz15 = this.z * this.z;
				var sqw15 = this.w * this.w;
				var _x16 = _this15.x;
				var _y18 = _this15.y;
				var _z18 = _this15.z;
				_x16 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw15 - sqx15 - sqy15 + sqz15);
				var value15 = 2 * (this.x * this.z + this.y * this.w);
				_y18 = Math.asin(value15 < -1 ? -1 : value15 > 1 ? 1 : value15);
				_z18 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw15 + sqx15 - sqy15 - sqz15);
				var prev15 = _this15.ignore_listeners;
				_this15.ignore_listeners = true;
				_this15.x = _x16;
				if(!_this15._construct) {
					if(_this15.listen_x != null && !_this15.ignore_listeners) {
						_this15.listen_x(_x16);
					}
				}
				_this15.y = _y18;
				if(!_this15._construct) {
					if(_this15.listen_y != null && !_this15.ignore_listeners) {
						_this15.listen_y(_y18);
					}
				}
				_this15.z = _z18;
				if(!_this15._construct) {
					if(_this15.listen_z != null && !_this15.ignore_listeners) {
						_this15.listen_z(_z18);
					}
				}
				_this15.ignore_listeners = prev15;
				if(_this15.listen_x != null && !_this15.ignore_listeners) {
					_this15.listen_x(_this15.x);
				}
				if(_this15.listen_y != null && !_this15.ignore_listeners) {
					_this15.listen_y(_this15.y);
				}
				if(_this15.listen_z != null && !_this15.ignore_listeners) {
					_this15.listen_z(_this15.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z16;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this16 = this.euler;
				var sqx16 = this.x * this.x;
				var sqy16 = this.y * this.y;
				var sqz16 = this.z * this.z;
				var sqw16 = this.w * this.w;
				var _x17 = _this16.x;
				var _y19 = _this16.y;
				var _z19 = _this16.z;
				_x17 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw16 - sqx16 - sqy16 + sqz16);
				var value16 = 2 * (this.x * this.z + this.y * this.w);
				_y19 = Math.asin(value16 < -1 ? -1 : value16 > 1 ? 1 : value16);
				_z19 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw16 + sqx16 - sqy16 - sqz16);
				var prev16 = _this16.ignore_listeners;
				_this16.ignore_listeners = true;
				_this16.x = _x17;
				if(!_this16._construct) {
					if(_this16.listen_x != null && !_this16.ignore_listeners) {
						_this16.listen_x(_x17);
					}
				}
				_this16.y = _y19;
				if(!_this16._construct) {
					if(_this16.listen_y != null && !_this16.ignore_listeners) {
						_this16.listen_y(_y19);
					}
				}
				_this16.z = _z19;
				if(!_this16._construct) {
					if(_this16.listen_z != null && !_this16.ignore_listeners) {
						_this16.listen_z(_z19);
					}
				}
				_this16.ignore_listeners = prev16;
				if(_this16.listen_x != null && !_this16.ignore_listeners) {
					_this16.listen_x(_this16.x);
				}
				if(_this16.listen_y != null && !_this16.ignore_listeners) {
					_this16.listen_y(_this16.y);
				}
				if(_this16.listen_z != null && !_this16.ignore_listeners) {
					_this16.listen_z(_this16.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w2;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this17 = this.euler;
				var sqx17 = this.x * this.x;
				var sqy17 = this.y * this.y;
				var sqz17 = this.z * this.z;
				var sqw17 = this.w * this.w;
				var _x18 = _this17.x;
				var _y20 = _this17.y;
				var _z20 = _this17.z;
				_x18 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw17 - sqx17 - sqy17 + sqz17);
				var value17 = 2 * (this.x * this.z + this.y * this.w);
				_y20 = Math.asin(value17 < -1 ? -1 : value17 > 1 ? 1 : value17);
				_z20 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw17 + sqx17 - sqy17 - sqz17);
				var prev17 = _this17.ignore_listeners;
				_this17.ignore_listeners = true;
				_this17.x = _x18;
				if(!_this17._construct) {
					if(_this17.listen_x != null && !_this17.ignore_listeners) {
						_this17.listen_x(_x18);
					}
				}
				_this17.y = _y20;
				if(!_this17._construct) {
					if(_this17.listen_y != null && !_this17.ignore_listeners) {
						_this17.listen_y(_y20);
					}
				}
				_this17.z = _z20;
				if(!_this17._construct) {
					if(_this17.listen_z != null && !_this17.ignore_listeners) {
						_this17.listen_z(_z20);
					}
				}
				_this17.ignore_listeners = prev17;
				if(_this17.listen_x != null && !_this17.ignore_listeners) {
					_this17.listen_x(_this17.x);
				}
				if(_this17.listen_y != null && !_this17.ignore_listeners) {
					_this17.listen_y(_this17.y);
				}
				if(_this17.listen_z != null && !_this17.ignore_listeners) {
					_this17.listen_z(_this17.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this18 = this.euler;
			var sqx18 = this.x * this.x;
			var sqy18 = this.y * this.y;
			var sqz18 = this.z * this.z;
			var sqw18 = this.w * this.w;
			var _x19 = _this18.x;
			var _y21 = _this18.y;
			var _z21 = _this18.z;
			_x19 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw18 - sqx18 - sqy18 + sqz18);
			var value18 = 2 * (this.x * this.z + this.y * this.w);
			_y21 = Math.asin(value18 < -1 ? -1 : value18 > 1 ? 1 : value18);
			_z21 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw18 + sqx18 - sqy18 - sqz18);
			var prev18 = _this18.ignore_listeners;
			_this18.ignore_listeners = true;
			_this18.x = _x19;
			if(!_this18._construct) {
				if(_this18.listen_x != null && !_this18.ignore_listeners) {
					_this18.listen_x(_x19);
				}
			}
			_this18.y = _y21;
			if(!_this18._construct) {
				if(_this18.listen_y != null && !_this18.ignore_listeners) {
					_this18.listen_y(_y21);
				}
			}
			_this18.z = _z21;
			if(!_this18._construct) {
				if(_this18.listen_z != null && !_this18.ignore_listeners) {
					_this18.listen_z(_z21);
				}
			}
			_this18.ignore_listeners = prev18;
			if(_this18.listen_x != null && !_this18.ignore_listeners) {
				_this18.listen_x(_this18.x);
			}
			if(_this18.listen_y != null && !_this18.ignore_listeners) {
				_this18.listen_y(_this18.y);
			}
			if(_this18.listen_z != null && !_this18.ignore_listeners) {
				_this18.listen_z(_this18.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,equals: function(_q) {
		if(_q.x == this.x && _q.y == this.y && _q.z == this.z) {
			return _q.w == this.w;
		} else {
			return false;
		}
	}
	,fromArray: function(_a) {
		this.ignore_euler = true;
		this.x = _a[0];
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y = _this.y;
				var _z = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y);
					}
				}
				_this.z = _z;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _a[1];
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y1 = _this1.y;
				var _z1 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y1;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y1);
					}
				}
				_this1.z = _z1;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z1);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _a[2];
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y2 = _this2.y;
				var _z2 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y2;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y2);
					}
				}
				_this2.z = _z2;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z2);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _a[3];
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y3 = _this3.y;
				var _z3 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y3;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y3);
					}
				}
				_this3.z = _z3;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z3);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x4 = _this4.x;
			var _y4 = _this4.y;
			var _z4 = _this4.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x4;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x4);
				}
			}
			_this4.y = _y4;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y4);
				}
			}
			_this4.z = _z4;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z4);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,toArray: function() {
		return [this.x,this.y,this.z,this.w];
	}
	,clone: function() {
		return new phoenix_Quaternion(this.x,this.y,this.z,this.w);
	}
	,toeuler: function() {
		var _this = new phoenix_Vector();
		var sqx = this.x * this.x;
		var sqy = this.y * this.y;
		var sqz = this.z * this.z;
		var sqw = this.w * this.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
		var value = 2 * (this.x * this.z + this.y * this.w);
		_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
		_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		var _x1 = _this.x * 57.2957795130823797;
		var _y1 = _this.y * 57.2957795130823797;
		var _z1 = _this.z * 57.2957795130823797;
		var prev1 = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x1);
			}
		}
		_this.y = _y1;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y1);
			}
		}
		_this.z = _z1;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z1);
			}
		}
		_this.ignore_listeners = prev1;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		return _this;
	}
	,update_euler: function() {
		if(this.euler == null || this.ignore_euler || this._construct) {
			return;
		}
		var _this = this.euler;
		var sqx = this.x * this.x;
		var sqy = this.y * this.y;
		var sqz = this.z * this.z;
		var sqw = this.w * this.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
		var value = 2 * (this.x * this.z + this.y * this.w);
		_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
		_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
	}
	,set_xyzw: function(_x,_y,_z,_w) {
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
	}
	,set_xyz: function(_x,_y,_z) {
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this3 = this.euler;
			var sqx3 = this.x * this.x;
			var sqy3 = this.y * this.y;
			var sqz3 = this.z * this.z;
			var sqw3 = this.w * this.w;
			var _x4 = _this3.x;
			var _y4 = _this3.y;
			var _z4 = _this3.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
			var value3 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x4;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x4);
				}
			}
			_this3.y = _y4;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y4);
				}
			}
			_this3.z = _z4;
			if(!_this3._construct) {
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_z4);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_this3.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
	}
	,set_x: function(_v) {
		this.x = _v;
		if(this._construct) {
			return this.x;
		}
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		return this.x;
	}
	,set_y: function(_v) {
		this.y = _v;
		if(this._construct) {
			return this.y;
		}
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		return this.y;
	}
	,set_z: function(_v) {
		this.z = _v;
		if(this._construct) {
			return this.z;
		}
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		return this.z;
	}
	,set_w: function(_v) {
		this.w = _v;
		if(this._construct) {
			return this.w;
		}
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x = _this.x;
			var _y = _this.y;
			var _z = _this.z;
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this.w;
	}
	,__class__: phoenix_Quaternion
	,__properties__: {set_w:"set_w",set_z:"set_z",set_y:"set_y",set_x:"set_x"}
};
var phoenix_Ray = function(_screen_pos,_camera,_viewport) {
	if(_viewport == null) {
		_viewport = new phoenix_Rectangle(0,0,Luxe.core.screen.get_w(),Luxe.core.screen.get_h());
	}
	if(_camera == null) {
		throw new js__$Boot_HaxeError("Camera required for a ray!");
	}
	this.camera = _camera;
	this.viewport = _viewport;
	this.refresh(_screen_pos);
};
$hxClasses["phoenix.Ray"] = phoenix_Ray;
phoenix_Ray.__name__ = ["phoenix","Ray"];
phoenix_Ray.prototype = {
	refresh: function(_screen_pos) {
		var ndc_x = (_screen_pos.x / this.viewport.w - 0.5) * 2.0;
		var ndc_y = ((this.viewport.h - _screen_pos.y) / this.viewport.h - 0.5) * 2.0;
		var start_ndc = new phoenix_Vector(ndc_x,ndc_y,0.0,1.0);
		var end_ndc = new phoenix_Vector(ndc_x,ndc_y,1.0,1.0);
		this.origin = this.camera.unproject(start_ndc);
		this.end = this.camera.unproject(end_ndc);
		var a = this.end;
		var b = this.origin;
		this.dir = new phoenix_Vector(a.x - b.x,a.y - b.y,a.z - b.z);
	}
	,__class__: phoenix_Ray
};
var phoenix_Rectangle = function(_x,_y,_w,_h) {
	if(_h == null) {
		_h = 0;
	}
	if(_w == null) {
		_w = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this.ignore_listeners = false;
	this.h = 0;
	this.w = 0;
	this.y = 0;
	this.x = 0;
	this.set_x(_x);
	this.set_y(_y);
	this.set_w(_w);
	this.set_h(_h);
};
$hxClasses["phoenix.Rectangle"] = phoenix_Rectangle;
phoenix_Rectangle.__name__ = ["phoenix","Rectangle"];
phoenix_Rectangle.listen = function(_r,listener) {
	_r.listen_x = listener;
	_r.listen_y = listener;
	_r.listen_w = listener;
	_r.listen_h = listener;
};
phoenix_Rectangle.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", w:" + this.w + ", h:" + this.h + " }";
	}
	,point_inside: function(_p) {
		if(_p.x < this.x) {
			return false;
		}
		if(_p.y < this.y) {
			return false;
		}
		if(_p.x > this.x + this.w) {
			return false;
		}
		if(_p.y > this.y + this.h) {
			return false;
		}
		return true;
	}
	,overlaps: function(_other) {
		if(_other == null) {
			return false;
		}
		if(this.x < _other.x + _other.w && this.y < _other.y + _other.h && this.x + this.w > _other.x && this.y + this.h > _other.y) {
			return true;
		}
		return false;
	}
	,clone: function() {
		return new phoenix_Rectangle(this.x,this.y,this.w,this.h);
	}
	,equal: function(_other) {
		if(_other == null) {
			return false;
		}
		if(this.x == _other.x && this.y == _other.y && this.w == _other.w) {
			return this.h == _other.h;
		} else {
			return false;
		}
	}
	,copy_from: function(_rect) {
		this.set_x(_rect.x);
		this.set_y(_rect.y);
		this.set_w(_rect.w);
		this.set_h(_rect.h);
	}
	,set: function(_x,_y,_w,_h) {
		var _setx = this.x;
		var _sety = this.y;
		var _setw = this.w;
		var _seth = this.h;
		if(_x != null) {
			_setx = _x;
		}
		if(_y != null) {
			_sety = _y;
		}
		if(_w != null) {
			_setw = _w;
		}
		if(_h != null) {
			_seth = _h;
		}
		this.set_x(_setx);
		this.set_y(_sety);
		this.set_w(_setw);
		this.set_h(_seth);
		return this;
	}
	,set_x: function(_x) {
		this.x = _x;
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(_x);
		}
		return this.x;
	}
	,set_y: function(_y) {
		this.y = _y;
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(_y);
		}
		return this.y;
	}
	,set_w: function(_w) {
		this.w = _w;
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(_w);
		}
		return this.w;
	}
	,set_h: function(_h) {
		this.h = _h;
		if(this.listen_h != null && !this.ignore_listeners) {
			this.listen_h(_h);
		}
		return this.h;
	}
	,__class__: phoenix_Rectangle
	,__properties__: {set_h:"set_h",set_w:"set_w",set_y:"set_y",set_x:"set_x"}
};
var phoenix_RenderPath = function(_renderer) {
	this.renderer = _renderer;
};
$hxClasses["phoenix.RenderPath"] = phoenix_RenderPath;
phoenix_RenderPath.__name__ = ["phoenix","RenderPath"];
phoenix_RenderPath.prototype = {
	render: function(_batchers,_stats) {
		var c = _batchers.length;
		var i = 0;
		while(i < c) {
			var batch = _batchers[i];
			if(batch.enabled) {
				if(batch.name != "") {
					Luxe.debug.start(batch.name);
				}
				batch.draw_calls = 0;
				batch.vert_count = 0;
				batch.emitter.emit(1,batch);
				batch.view.process();
				batch.renderer.state.viewport(batch.view.viewport.x,batch.view.viewport.y,batch.view.viewport.w,batch.view.viewport.h);
				batch.batch(false);
				batch.emitter.emit(2,batch);
				var _stats1 = batch.renderer.stats;
				var _node = batch.geometry.root;
				_stats1.geometry_count += (_node == null ? 0 : _node.nodecount) * batch.show_stats;
				_stats1.dynamic_batched_count += batch.dynamic_batched_count * batch.show_stats;
				_stats1.static_batched_count += batch.static_batched_count * batch.show_stats;
				_stats1.visible_count += batch.visible_count * batch.show_stats;
				_stats1.draw_calls += batch.draw_calls * batch.show_stats;
				_stats1.vert_count += batch.vert_count * batch.show_stats;
				if(batch.name != "") {
					Luxe.debug.end(batch.name);
				}
			}
			batch = null;
			++i;
		}
	}
	,__class__: phoenix_RenderPath
};
var phoenix_RenderState = function(_renderer) {
	this._last_depth_mask = true;
	this._last_line_width = 1;
	this._active_texture = -1;
	this._used_program = null;
	this.current_renderbuffer = null;
	this.current_framebuffer = null;
	this.depth_func = -1;
	this._view_target_h = 0.0;
	this.depth_mask = true;
	this.depth_test = false;
	this.cull_face = false;
	this.renderer = _renderer;
	this._viewport = new phoenix_Rectangle(0,0,0,0);
};
$hxClasses["phoenix.RenderState"] = phoenix_RenderState;
phoenix_RenderState.__name__ = ["phoenix","RenderState"];
phoenix_RenderState.prototype = {
	enable: function(what) {
		switch(what) {
		case 2884:
			if(!this.cull_face) {
				this.cull_face = true;
				snow_modules_opengl_web_GL.gl.enable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(!this.depth_test) {
					this.depth_test = true;
					snow_modules_opengl_web_GL.gl.enable(2929);
				}
			}
			break;
		}
	}
	,disable: function(what) {
		switch(what) {
		case 2884:
			if(this.cull_face) {
				this.cull_face = false;
				snow_modules_opengl_web_GL.gl.disable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(this.depth_test) {
					this.depth_test = false;
					snow_modules_opengl_web_GL.gl.disable(2929);
				}
			}
			break;
		}
	}
	,depth_function: function(what) {
		if(this.depth_func != what) {
			snow_modules_opengl_web_GL.gl.depthFunc(what);
			this.depth_func = what;
		}
	}
	,scissor: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		snow_modules_opengl_web_GL.gl.scissor(x | 0,this.renderer.get_target().height - (y + h) | 0,w | 0,h | 0);
	}
	,viewport: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		snow_modules_opengl_web_GL.gl.viewport(x | 0,this.renderer.get_target().height - (y + h) | 0,w | 0,h | 0);
	}
	,bindFramebuffer: function(buffer) {
		if(this.current_framebuffer != buffer) {
			if(buffer == null) {
				buffer = this.renderer.default_framebuffer;
			}
			snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,buffer);
			this.current_framebuffer = buffer;
		}
	}
	,bindRenderbuffer: function(buffer) {
		if(this.current_renderbuffer != buffer) {
			if(buffer == null) {
				buffer = this.renderer.default_renderbuffer;
			}
			snow_modules_opengl_web_GL.gl.bindRenderbuffer(36161,buffer);
			this.current_renderbuffer = buffer;
		}
	}
	,useProgram: function(program) {
		if(this._used_program != program) {
			this._used_program = program;
			snow_modules_opengl_web_GL.gl.useProgram(program);
		}
	}
	,activeTexture: function(val) {
		if(this._active_texture != val) {
			snow_modules_opengl_web_GL.gl.activeTexture(val);
			this._active_texture = val;
		}
	}
	,bindTexture: function(type,tex) {
		switch(type) {
		case 3553:
			this.bindTexture2D(tex);
			break;
		case 34067:
			this.bindTextureCube(tex);
			break;
		}
	}
	,bindTexture2D: function(tex) {
		if(phoenix_RenderState.bound_texture_2D != tex) {
			phoenix_RenderState.bound_texture_2D = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(3553,tex);
		}
	}
	,bindTextureCube: function(tex) {
		if(phoenix_RenderState.bound_texture_cube != tex) {
			phoenix_RenderState.bound_texture_cube = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(34067,tex);
		}
	}
	,lineWidth: function(_width) {
		if(this._last_line_width != _width) {
			this._last_line_width = _width;
			snow_modules_opengl_web_GL.gl.lineWidth(_width);
		}
	}
	,depthMask: function(_enable) {
		if(this._last_depth_mask != _enable) {
			this._last_depth_mask = _enable;
			snow_modules_opengl_web_GL.gl.depthMask(_enable);
		}
	}
	,__class__: phoenix_RenderState
};
var phoenix_Texture = function(_options) {
	this.load_premultiply_alpha = false;
	this.height = -1;
	this.width = -1;
	this.height_actual = -1;
	this.width_actual = -1;
	this.compressed = false;
	this.border = 0;
	this.slot = 0;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Texture create requires non-null options" + " )")));
	}
	if(_options.resource_type == null) {
		_options.resource_type = 4;
	}
	luxe_resource_Resource.call(this,_options);
	if(_options.texture == null) {
		_options.texture = this.create_texture_id();
	}
	this.texture = _options.texture;
	this.bind();
	this.apply_default_options(_options);
	if(_options.pixels != null) {
		if(_options.width == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
		}
		if(_options.height == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
		}
	}
	if(_options.width != null || _options.height != null) {
		if(_options.height == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture requires both width and height, only width was given in construct options" + " )")));
		}
		if(_options.width == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture requires both width and height, only height was given in construct options" + " )")));
		}
		this.width = this.width_actual = _options.width;
		this.height = this.height_actual = _options.height;
		if(_options.pixels != null) {
			this.submit(_options.pixels);
		}
	}
};
$hxClasses["phoenix.Texture"] = phoenix_Texture;
phoenix_Texture.__name__ = ["phoenix","Texture"];
phoenix_Texture.max_size = function() {
	return snow_modules_opengl_web_GL.gl.getParameter(3379);
};
phoenix_Texture.dump_asset_info = function(_asset) {
};
phoenix_Texture.type_name = function(_type) {
	switch(_type) {
	case 3553:
		return "tex_2D";
	case 34067:
		return "tex_cube";
	}
};
phoenix_Texture.filter_name = function(_filter) {
	switch(_filter) {
	case 9728:
		return "nearest";
	case 9729:
		return "linear";
	case 9984:
		return "mip_nearest_nearest";
	case 9985:
		return "mip_linear_nearest";
	case 9986:
		return "mip_nearest_linear";
	case 9987:
		return "mip_linear_linear";
	}
};
phoenix_Texture.clamp_name = function(_clamp) {
	switch(_clamp) {
	case 10497:
		return "repeat";
	case 33071:
		return "edge";
	case 33648:
		return "mirror";
	}
};
phoenix_Texture.__super__ = luxe_resource_Resource;
phoenix_Texture.prototype = $extend(luxe_resource_Resource.prototype,{
	memory_use: function() {
		return this.width_actual * this.height_actual * 4;
	}
	,fetch: function(_into,_x,_y,_w,_h) {
		if(_y == null) {
			_y = 0;
		}
		if(_x == null) {
			_x = 0;
		}
		if(_into == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_into was null" + (" ( " + "Texture fetch requires a valid buffer to store the pixels." + " )")));
		}
		if(_x == null) {
			_x = 0;
		}
		if(_y == null) {
			_y = 0;
		}
		if(_w == null) {
			_w = this.width;
		}
		if(_h == null) {
			_h = this.height;
		}
		var _required = _w * _h * 4;
		if(_into.length < _required) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_into.length >= _required" + (" ( " + ("Texture fetch requires at least " + _required + " (w * h * 4) bytes for the pixels, you have " + _into.length + "!") + " )")));
		}
		var fb = snow_modules_opengl_web_GL.gl.createFramebuffer();
		snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,fb);
		snow_modules_opengl_web_GL.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
		if(snow_modules_opengl_web_GL.gl.checkFramebufferStatus(36160) != 36053) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("GL.checkFramebufferStatus(GL.FRAMEBUFFER) == GL.FRAMEBUFFER_COMPLETE"));
		}
		snow_modules_opengl_web_GL.gl.readPixels(_x,_y,_w,_h,6408,5121,_into);
		snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,null);
		snow_modules_opengl_web_GL.gl.deleteFramebuffer(fb);
		fb = null;
		return _into;
	}
	,submit: function(_pixels,_target,_level) {
		if(_level == null) {
			_level = 0;
		}
		if(_level < 0) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_level >= 0" + (" ( " + "Texture submit level cannot be negative" + " )")));
		}
		var _max = phoenix_Texture.max_size();
		if(this.width_actual > _max) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("width_actual <= _max" + (" ( " + ("Texture actual width bigger than maximum hardware size (width:" + this.width_actual + ", max:" + _max + ")") + " )")));
		}
		if(this.height_actual > _max) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("height_actual <= _max" + (" ( " + ("Texture actual height bigger than maximum hardware size (height:" + this.height_actual + ", max:" + _max + ")") + " )")));
		}
		this.bind();
		if(_target == null) {
			_target = 3553;
		}
		if(this.type == 3553) {
			if(this.compressed) {
				snow_modules_opengl_web_GL.gl.compressedTexImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,_pixels);
			} else {
				snow_modules_opengl_web_GL.gl.texImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,this.format,this.data_type,_pixels);
			}
		}
	}
	,generate_mipmaps: function() {
		this.bind();
		snow_modules_opengl_web_GL.gl.generateMipmap(this.type);
	}
	,bind: function() {
		Luxe.renderer.state.activeTexture(33984 + this.slot);
		var _this = Luxe.renderer.state;
		var tex = this.texture;
		switch(this.type) {
		case 3553:
			_this.bindTexture2D(tex);
			break;
		case 34067:
			_this.bindTextureCube(tex);
			break;
		}
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + (" ( " + "Resource cannot reload when already destroyed" + " )")));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetImage.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.texture = _gthis.create_texture_id();
				_gthis.from_asset(_asset);
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,from_asset: function(_asset,_clear_asset) {
		if(_clear_asset == null) {
			_clear_asset = true;
		}
		this.width = _asset.image.width;
		this.height = _asset.image.height;
		this.width_actual = _asset.image.width_actual;
		this.height_actual = _asset.image.height_actual;
		if(this.load_premultiply_alpha) {
			Luxe.utils.premultiply_alpha(_asset.image.pixels);
		}
		this.submit(_asset.image.pixels);
		if(_clear_asset) {
			_asset.image.pixels = null;
			_asset = null;
		}
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	}
	,clear: function() {
		if(this.texture != null) {
			snow_modules_opengl_web_GL.gl.deleteTexture(this.texture);
		}
	}
	,create_texture_id: function() {
		return snow_modules_opengl_web_GL.gl.createTexture();
	}
	,apply_props: function() {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	}
	,apply_default_options: function(_options) {
		if(_options.load_premultiply_alpha == null) {
			_options.load_premultiply_alpha = false;
		}
		this.load_premultiply_alpha = _options.load_premultiply_alpha;
		if(_options.compressed == null) {
			_options.compressed = false;
		}
		this.compressed = _options.compressed;
		if(_options.format == null) {
			_options.format = 6408;
		}
		this.format = _options.format;
		if(_options.type == null) {
			_options.type = 3553;
		}
		this.type = _options.type;
		if(_options.data_type == null) {
			_options.data_type = 5121;
		}
		this.data_type = _options.data_type;
		if(_options.filter_min == null) {
			_options.filter_min = phoenix_Texture.default_filter;
		}
		this.set_filter_min(_options.filter_min);
		if(_options.filter_mag == null) {
			_options.filter_mag = phoenix_Texture.default_filter;
		}
		this.set_filter_mag(_options.filter_mag);
		if(_options.clamp_s == null) {
			_options.clamp_s = phoenix_Texture.default_clamp;
		}
		this.set_clamp_s(_options.clamp_s);
		if(_options.clamp_t == null) {
			_options.clamp_t = phoenix_Texture.default_clamp;
		}
		this.set_clamp_t(_options.clamp_t);
	}
	,set_clamp_s: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,_clamp);
		return this.clamp_s = _clamp;
	}
	,set_clamp_t: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,_clamp);
		return this.clamp_t = _clamp;
	}
	,set_filter_min: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,_filter);
		return this.filter_min = _filter;
	}
	,set_filter_mag: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,_filter);
		return this.filter_mag = _filter;
	}
	,apply_clamp: function(_clamp,_type) {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,_type,_clamp);
	}
	,apply_filter: function(_filter,_type) {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,_type,_filter);
	}
	,toString: function() {
		var _clamp_t = phoenix_Texture.clamp_name(this.clamp_t);
		return "Texture(id: " + this.id + ", tex: " + Std.string(this.texture) + ", type:" + phoenix_Texture.type_name(this.type) + ", " + ("size(size: " + this.width + "x" + this.height + ", actual: " + this.width_actual + "x" + this.height_actual + ")") + " " + ("filter(min: " + phoenix_Texture.filter_name(this.filter_min) + ", mag:" + phoenix_Texture.filter_name(this.filter_mag) + ")") + " " + ("clamp(s: " + _clamp_t + ", t: " + _clamp_t + ")") + " )";
	}
	,__class__: phoenix_Texture
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_clamp_t:"set_clamp_t",set_clamp_s:"set_clamp_s",set_filter_mag:"set_filter_mag",set_filter_min:"set_filter_min"})
});
var phoenix_RenderTarget = function() { };
$hxClasses["phoenix.RenderTarget"] = phoenix_RenderTarget;
phoenix_RenderTarget.__name__ = ["phoenix","RenderTarget"];
phoenix_RenderTarget.prototype = {
	__class__: phoenix_RenderTarget
};
var phoenix_RenderTexture = function(_options) {
	this.viewport_scale = 1;
	_options.resource_type = 5;
	phoenix_Texture.call(this,_options);
	if(_options.width == null) {
		_options.width = Luxe.core.screen.get_w() | 0;
	}
	if(_options.height == null) {
		_options.height = Luxe.core.screen.get_h() | 0;
	}
	this.width = this.width_actual = _options.width;
	this.height = this.height_actual = _options.height;
	if(_options.texture != null) {
		this.submit(null);
	}
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	this.framebuffer = snow_modules_opengl_web_GL.gl.createFramebuffer();
	this.bindBuffer();
	this.renderbuffer = snow_modules_opengl_web_GL.gl.createRenderbuffer();
	this.bindRenderBuffer();
	snow_modules_opengl_web_GL.gl.renderbufferStorage(36161,33189,this.width,this.height);
	snow_modules_opengl_web_GL.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
	snow_modules_opengl_web_GL.gl.framebufferRenderbuffer(36160,36096,36161,this.renderbuffer);
	var status = snow_modules_opengl_web_GL.gl.checkFramebufferStatus(36160);
	switch(status) {
	case 36053:
		break;
	case 36054:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
		break;
	case 36055:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
		break;
	case 36057:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
		break;
	case 36061:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");
		break;
	default:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: " + status);
	}
	this.unbindBuffer();
	this.unbindRenderBuffer();
	this.system.add(this);
};
$hxClasses["phoenix.RenderTexture"] = phoenix_RenderTexture;
phoenix_RenderTexture.__name__ = ["phoenix","RenderTexture"];
phoenix_RenderTexture.__interfaces__ = [phoenix_RenderTarget];
phoenix_RenderTexture.__super__ = phoenix_Texture;
phoenix_RenderTexture.prototype = $extend(phoenix_Texture.prototype,{
	clear: function() {
		phoenix_Texture.prototype.clear.call(this);
		if(this.framebuffer != null) {
			snow_modules_opengl_web_GL.gl.deleteFramebuffer(this.framebuffer);
		}
		if(this.renderbuffer != null) {
			snow_modules_opengl_web_GL.gl.deleteRenderbuffer(this.renderbuffer);
		}
	}
	,bindBuffer: function() {
		Luxe.renderer.state.bindFramebuffer(this.framebuffer);
	}
	,unbindBuffer: function(_other) {
		Luxe.renderer.state.bindFramebuffer(_other);
	}
	,bindRenderBuffer: function() {
		Luxe.renderer.state.bindRenderbuffer(this.renderbuffer);
	}
	,unbindRenderBuffer: function(_other) {
		Luxe.renderer.state.bindRenderbuffer(_other);
	}
	,__class__: phoenix_RenderTexture
});
var phoenix_Backbuffer = function(_render_w,_render_h,_render_scale,_fb,_rb) {
	this.width = _render_w;
	this.height = _render_h;
	this.viewport_scale = _render_scale;
	this.framebuffer = _fb;
	this.renderbuffer = _rb;
};
$hxClasses["phoenix.Backbuffer"] = phoenix_Backbuffer;
phoenix_Backbuffer.__name__ = ["phoenix","Backbuffer"];
phoenix_Backbuffer.__interfaces__ = [phoenix_RenderTarget];
phoenix_Backbuffer.prototype = {
	__class__: phoenix_Backbuffer
};
var phoenix_Renderer = function(_core,_asset) {
	this.stop_count = 0;
	this.stop = false;
	this.should_clear = true;
	this.core = _core;
	this.font_asset = _asset;
	this.default_framebuffer = snow_modules_opengl_web_GL.gl.getParameter(36006);
	this.default_renderbuffer = snow_modules_opengl_web_GL.gl.getParameter(36007);
	this.backbuffer = new phoenix_Backbuffer(this.core.app.runtime.window.width,this.core.app.runtime.window.height,window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio,this.default_framebuffer,this.default_renderbuffer);
};
$hxClasses["phoenix.Renderer"] = phoenix_Renderer;
phoenix_Renderer.__name__ = ["phoenix","Renderer"];
phoenix_Renderer.prototype = {
	init: function() {
		haxe_Log.trace(" i / renderer / " + ("opengl " + snow_modules_opengl_web_GL.versionString()),{ fileName : "Renderer.hx", lineNumber : 137, className : "phoenix.Renderer", methodName : "init"});
		this.state = new phoenix_RenderState(this);
		this.clear_color = new phoenix_Color().rgb(1710618);
		this.stats = new phoenix_RendererStats();
		this.set_target(this.default_target = this.backbuffer);
		this.batchers = [];
		this.camera = new phoenix_Camera();
		this.default_render_path = new phoenix_RenderPath(this);
		this.render_path = this.default_render_path;
		this.create_default_shaders();
		this.batcher = new phoenix_Batcher(this,"default batcher");
		var _this = this.batcher;
		_this.layer = 1;
		_this.renderer.batchers.sort(($_=_this.renderer,$bind($_,$_.sort_batchers)));
		this.add_batch(this.batcher);
		this.create_default_font();
		if(Luxe.core.app.config.render.depth > 0) {
			this.state.enable(2929);
			this.state.depth_function(515);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		}
		snow_modules_opengl_web_GL.gl.enable(3042);
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.pixelStorei(37441,0);
	}
	,destroy: function() {
		this.clear(new phoenix_Color().rgb(16729099));
	}
	,sort_batchers: function(a,b) {
		if(a.layer < b.layer) {
			return -1;
		}
		if(a.layer > b.layer) {
			return 1;
		}
		if(a.sequence < b.sequence) {
			return -1;
		}
		if(a.sequence > b.sequence) {
			return 1;
		}
		return 1;
	}
	,add_batch: function(batch) {
		this.batchers.push(batch);
		this.batchers.sort($bind(this,this.sort_batchers));
	}
	,remove_batch: function(batch) {
		HxOverrides.remove(this.batchers,batch);
	}
	,create_batcher: function(options) {
		if(options != null) {
			if(options.name == null) {
				options.name = "batcher";
			}
			if(options.layer == null) {
				options.layer = 2;
			}
			if(options.camera == null) {
				options.camera = new phoenix_Camera();
			}
			if(options.max_verts == null) {
				options.max_verts = 16384;
			}
		} else {
			options = { name : "batcher", camera : new phoenix_Camera(), layer : 2, max_verts : 16384};
		}
		var _batcher = new phoenix_Batcher(this,options.name,options.max_verts);
		_batcher.view = options.camera;
		_batcher.layer = options.layer;
		_batcher.renderer.batchers.sort(($_=_batcher.renderer,$bind($_,$_.sort_batchers)));
		if(options.no_add == null || options.no_add == false) {
			this.add_batch(_batcher);
		}
		return _batcher;
	}
	,clear: function(_color) {
		if(_color == null) {
			_color = this.clear_color;
		}
		snow_modules_opengl_web_GL.gl.clearColor(_color.r,_color.g,_color.b,_color.a);
		if(Luxe.core.app.config.render.depth > 0) {
			snow_modules_opengl_web_GL.gl.clear(16640);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		} else {
			snow_modules_opengl_web_GL.gl.clear(16384);
		}
	}
	,blend_mode: function(_src_mode,_dst_mode) {
		if(_dst_mode == null) {
			_dst_mode = 771;
		}
		if(_src_mode == null) {
			_src_mode = 770;
		}
		snow_modules_opengl_web_GL.gl.blendFunc(_src_mode,_dst_mode);
	}
	,blend_equation: function(_equation) {
		if(_equation == null) {
			_equation = 32774;
		}
		snow_modules_opengl_web_GL.gl.blendEquation(_equation);
	}
	,internal_resized: function(_w,_h) {
		this.backbuffer.width = _w;
		this.backbuffer.height = _h;
		this.backbuffer.viewport_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
	}
	,process: function() {
		if(this.should_clear) {
			this.clear(this.clear_color);
		}
		this.render_path.render(this.batchers,this.stats);
	}
	,prerender: function() {
		this.stats.reset();
	}
	,get_target: function() {
		return this.target;
	}
	,set_target: function(_target) {
		if(_target == null) {
			_target = this.default_target;
		}
		this.state.bindFramebuffer(_target.framebuffer);
		this.state.bindRenderbuffer(_target.renderbuffer);
		return this.target = _target;
	}
	,bind_target: function(_target) {
		this.state.bindFramebuffer(_target.framebuffer);
		this.state.bindRenderbuffer(_target.renderbuffer);
	}
	,create_default_shaders: function() {
		var vert = null;
		var frag = null;
		var frag_textured = null;
		var frag_bitmapfont = null;
		if(vert == null) {
			vert = haxe_Resource.getString("default.vert.glsl");
			frag = haxe_Resource.getString("default.frag.glsl");
			frag_textured = haxe_Resource.getString("default.frag.textured.glsl");
			frag_bitmapfont = haxe_Resource.getString("default.frag.bitmapfont.glsl");
		}
		snow_modules_opengl_web_GL.gl.getExtension("OES_standard_derivatives");
		frag = "precision mediump float;\n" + frag;
		frag_textured = "precision mediump float;\n" + frag_textured;
		frag_bitmapfont = "#extension GL_OES_standard_derivatives : enable\n#extension OES_standard_derivatives : enable\nprecision mediump float;\n" + frag_bitmapfont;
		var _plain = new phoenix_Shader({ id : "luxe.shader", frag_id : "default", vert_id : "default"});
		var _textured = new phoenix_Shader({ id : "luxe.shader_textured", frag_id : "textured", vert_id : "default"});
		var _font = new phoenix_Shader({ id : "luxe.shader_bitmapfont", frag_id : "bitmapfont", vert_id : "default"});
		var _ok = true;
		_ok = _plain.from_string(vert,frag);
		if(_ok) {
			_ok = _textured.from_string(vert,frag_textured);
		} else {
			_ok = false;
		}
		if(_ok) {
			_ok = _font.from_string(vert,frag_bitmapfont);
		} else {
			_ok = false;
		}
		if(!_ok) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_ok" + (" ( " + "Default shaders failed to compile or link. See log for errors" + " )")));
		}
		this.shaders = { plain : { shader : _plain, source : { vert : vert, frag : frag}}, textured : { shader : _textured, source : { vert : vert, frag : frag_textured}}, bitmapfont : { shader : _font, source : { vert : vert, frag : frag_bitmapfont}}};
	}
	,create_default_font: function() {
		if(this.font_asset == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("font_asset was null" + (" ( " + "Renderer / failed to create the default font" + " )")));
		}
		var _font_texture = new phoenix_Texture({ id : "luxe.font.png", width : this.font_asset.image.width_actual, height : this.font_asset.image.height_actual, pixels : this.font_asset.image.pixels});
		if(_font_texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_font_texture was null" + (" ( " + "Renderer / failed to create the default font... font_texture was null." + " )")));
		}
		this.font = new phoenix_BitmapFont({ id : "luxe.font", font_data : haxe_Resource.getString("default.fnt"), pages : [_font_texture]});
	}
	,__class__: phoenix_Renderer
	,__properties__: {set_target:"set_target",get_target:"get_target"}
};
var phoenix_RendererStats = function() {
	this.vert_count = 0;
	this.draw_calls = 0;
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.geometry_count = 0;
	this.batchers = 0;
};
$hxClasses["phoenix.RendererStats"] = phoenix_RendererStats;
phoenix_RendererStats.__name__ = ["phoenix","RendererStats"];
phoenix_RendererStats.prototype = {
	reset: function() {
		this.geometry_count = 0;
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.draw_calls = 0;
		this.vert_count = 0;
	}
	,toString: function() {
		return "Renderer Statistics\n" + "\tbatcher count : " + this.batchers + "\n" + "\ttotal geometry : " + this.geometry_count + "\n" + "\tvisible geometry : " + this.visible_count + "\n" + "\tdynamic batched geometry : " + this.dynamic_batched_count + "\n" + "\tstatic batched geometry : " + this.static_batched_count + "\n" + "\ttotal draw calls : " + this.draw_calls + "\n" + "\ttotal vertices : " + this.vert_count;
	}
	,__class__: phoenix_RendererStats
};
var phoenix_Uniforms = function() {
	this.clear();
};
$hxClasses["phoenix.Uniforms"] = phoenix_Uniforms;
phoenix_Uniforms.__name__ = ["phoenix","Uniforms"];
phoenix_Uniforms.prototype = {
	destroy: function() {
		this.ints = null;
		this.floats = null;
		this.vector2s = null;
		this.vector2arrs = null;
		this.vector3s = null;
		this.vector3arrs = null;
		this.vector4s = null;
		this.vector4arrs = null;
		this.matrix4s = null;
		this.matrix4arrs = null;
		this.colors = null;
		this.textures = null;
		this.dirty_ints = null;
		this.dirty_floats = null;
		this.dirty_vector2s = null;
		this.dirty_vector2arrs = null;
		this.dirty_vector3s = null;
		this.dirty_vector3arrs = null;
		this.dirty_vector4s = null;
		this.dirty_vector4arrs = null;
		this.dirty_matrix4s = null;
		this.dirty_matrix4arrs = null;
		this.dirty_colors = null;
		this.dirty_textures = null;
	}
	,clear: function() {
		this.destroy();
		this.ints = new haxe_ds_StringMap();
		this.floats = new haxe_ds_StringMap();
		this.vector2s = new haxe_ds_StringMap();
		this.vector2arrs = new haxe_ds_StringMap();
		this.vector3s = new haxe_ds_StringMap();
		this.vector3arrs = new haxe_ds_StringMap();
		this.vector4s = new haxe_ds_StringMap();
		this.vector4arrs = new haxe_ds_StringMap();
		this.matrix4s = new haxe_ds_StringMap();
		this.matrix4arrs = new haxe_ds_StringMap();
		this.colors = new haxe_ds_StringMap();
		this.textures = new haxe_ds_StringMap();
		this.dirty_ints = [];
		this.dirty_floats = [];
		this.dirty_vector2s = [];
		this.dirty_vector2arrs = [];
		this.dirty_vector3s = [];
		this.dirty_vector3arrs = [];
		this.dirty_vector4s = [];
		this.dirty_vector4arrs = [];
		this.dirty_matrix4s = [];
		this.dirty_matrix4arrs = [];
		this.dirty_colors = [];
		this.dirty_textures = [];
	}
	,set_int: function(_name,_value,_location) {
		var _this = this.ints;
		var _int = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_int != null) {
			_int.value = _value;
		} else {
			_int = new phoenix__$Shader_Uniform_$Int(_name,_value,_location);
			var _this1 = this.ints;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_int);
			} else {
				_this1.h[_name] = _int;
			}
		}
		this.dirty_ints.push(_int);
	}
	,set_float: function(_name,_value,_location) {
		var _this = this.floats;
		var _float = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_float != null) {
			_float.value = _value;
		} else {
			_float = new phoenix__$Shader_Uniform_$Float(_name,_value,_location);
			var _this1 = this.floats;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_float);
			} else {
				_this1.h[_name] = _float;
			}
		}
		this.dirty_floats.push(_float);
	}
	,set_vector2: function(_name,_value,_location) {
		var _this = this.vector2s;
		var _vector2 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector2 != null) {
			_vector2.value = _value;
		} else {
			_vector2 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			var _this1 = this.vector2s;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector2);
			} else {
				_this1.h[_name] = _vector2;
			}
		}
		this.dirty_vector2s.push(_vector2);
	}
	,set_vector2_arr: function(_name,_value,_location) {
		var _this = this.vector2arrs;
		var _vector2 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector2 != null) {
			_vector2.value = _value;
		} else {
			_vector2 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			var _this1 = this.vector2arrs;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector2);
			} else {
				_this1.h[_name] = _vector2;
			}
		}
		this.dirty_vector2arrs.push(_vector2);
	}
	,set_vector3: function(_name,_value,_location) {
		var _this = this.vector3s;
		var _vector3 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector3 != null) {
			_vector3.value = _value;
		} else {
			_vector3 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			var _this1 = this.vector3s;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector3);
			} else {
				_this1.h[_name] = _vector3;
			}
		}
		this.dirty_vector3s.push(_vector3);
	}
	,set_vector3_arr: function(_name,_value,_location) {
		var _this = this.vector3arrs;
		var _vector3 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector3 != null) {
			_vector3.value = _value;
		} else {
			_vector3 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			var _this1 = this.vector3arrs;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector3);
			} else {
				_this1.h[_name] = _vector3;
			}
		}
		this.dirty_vector3arrs.push(_vector3);
	}
	,set_vector4: function(_name,_value,_location) {
		var _this = this.vector4s;
		var _vector4 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector4 != null) {
			_vector4.value = _value;
		} else {
			_vector4 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			var _this1 = this.vector4s;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector4);
			} else {
				_this1.h[_name] = _vector4;
			}
		}
		this.dirty_vector4s.push(_vector4);
	}
	,set_vector4_arr: function(_name,_value,_location) {
		var _this = this.vector4arrs;
		var _vector4 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_vector4 != null) {
			_vector4.value = _value;
		} else {
			_vector4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			var _this1 = this.vector4arrs;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_vector4);
			} else {
				_this1.h[_name] = _vector4;
			}
		}
		this.dirty_vector4arrs.push(_vector4);
	}
	,set_matrix4: function(_name,_value,_location) {
		var _this = this.matrix4s;
		var _matrix4 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_matrix4 != null) {
			_matrix4.value = _value;
		} else {
			_matrix4 = new phoenix__$Shader_Uniform_$phoenix_$Matrix(_name,_value,_location);
			var _this1 = this.matrix4s;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_matrix4);
			} else {
				_this1.h[_name] = _matrix4;
			}
		}
		this.dirty_matrix4s.push(_matrix4);
	}
	,set_matrix4_arr: function(_name,_value,_location) {
		var _this = this.matrix4arrs;
		var _matrix4 = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_matrix4 != null) {
			_matrix4.value = _value;
		} else {
			_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			var _this1 = this.matrix4arrs;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_matrix4);
			} else {
				_this1.h[_name] = _matrix4;
			}
		}
		this.dirty_matrix4arrs.push(_matrix4);
	}
	,set_color: function(_name,_value,_location) {
		var _this = this.colors;
		var _color = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_color != null) {
			_color.value = _value;
		} else {
			_color = new phoenix__$Shader_Uniform_$phoenix_$Color(_name,_value,_location);
			var _this1 = this.colors;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_color);
			} else {
				_this1.h[_name] = _color;
			}
		}
		this.dirty_colors.push(_color);
	}
	,set_texture: function(_name,_value,_location) {
		var _this = this.textures;
		var _texture = __map_reserved[_name] != null ? _this.getReserved(_name) : _this.h[_name];
		if(_texture != null) {
			_texture.value = _value;
		} else {
			_texture = new phoenix__$Shader_Uniform_$phoenix_$Texture(_name,_value,_location);
			var _this1 = this.textures;
			if(__map_reserved[_name] != null) {
				_this1.setReserved(_name,_texture);
			} else {
				_this1.h[_name] = _texture;
			}
		}
		this.dirty_textures.push(_texture);
	}
	,apply: function() {
		while(this.dirty_ints.length > 0) {
			var uf = this.dirty_ints.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf.location,uf.value);
		}
		while(this.dirty_floats.length > 0) {
			var uf1 = this.dirty_floats.pop();
			snow_modules_opengl_web_GL.gl.uniform1f(uf1.location,uf1.value);
		}
		while(this.dirty_vector2s.length > 0) {
			var uf2 = this.dirty_vector2s.pop();
			snow_modules_opengl_web_GL.gl.uniform2f(uf2.location,uf2.value.x,uf2.value.y);
		}
		while(this.dirty_vector2arrs.length > 0) {
			var uf3 = this.dirty_vector2arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform2fv(uf3.location,uf3.value);
		}
		while(this.dirty_vector3s.length > 0) {
			var uf4 = this.dirty_vector3s.pop();
			snow_modules_opengl_web_GL.gl.uniform3f(uf4.location,uf4.value.x,uf4.value.y,uf4.value.z);
		}
		while(this.dirty_vector3arrs.length > 0) {
			var uf5 = this.dirty_vector3arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform3fv(uf5.location,uf5.value);
		}
		while(this.dirty_vector4s.length > 0) {
			var uf6 = this.dirty_vector4s.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf6.location,uf6.value.x,uf6.value.y,uf6.value.z,uf6.value.w);
		}
		while(this.dirty_vector4arrs.length > 0) {
			var uf7 = this.dirty_vector4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform4fv(uf7.location,uf7.value);
		}
		while(this.dirty_colors.length > 0) {
			var uf8 = this.dirty_colors.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf8.location,uf8.value.r,uf8.value.g,uf8.value.b,uf8.value.a);
		}
		while(this.dirty_textures.length > 0) {
			var uf9 = this.dirty_textures.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf9.location,uf9.value.slot);
			uf9.value.bind();
		}
		while(this.dirty_matrix4s.length > 0) {
			var uf10 = this.dirty_matrix4s.pop();
			var location = uf10.location;
			var _this = uf10.value;
			var i = 0;
			while(i < 16) {
				_this._float32array[i] = _this.elements[i];
				++i;
			}
			snow_modules_opengl_web_GL.gl.uniformMatrix4fv(location,false,_this._float32array);
		}
		while(this.dirty_matrix4arrs.length > 0) {
			var uf11 = this.dirty_matrix4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniformMatrix4fv(uf11.location,false,uf11.value);
		}
	}
	,__class__: phoenix_Uniforms
};
var phoenix_Shader = function(_options) {
	this.no_default_uniforms = false;
	this.frag_id = "";
	this.vert_id = "";
	this.log = "";
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 7;
	luxe_resource_Resource.call(this,_options);
	this.frag_id = _options.frag_id;
	this.vert_id = _options.vert_id;
	if(_options.no_default_uniforms == null) {
		_options.no_default_uniforms = false;
	}
	this.no_default_uniforms = _options.no_default_uniforms;
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.Shader"] = phoenix_Shader;
phoenix_Shader.__name__ = ["phoenix","Shader"];
phoenix_Shader.__super__ = luxe_resource_Resource;
phoenix_Shader.prototype = $extend(luxe_resource_Resource.prototype,{
	activate: function() {
		this["use"]();
		this.uniforms.apply();
		Luxe.renderer.state.activeTexture(33984);
	}
	,'use': function() {
		if(this.program != null) {
			Luxe.renderer.state.useProgram(this.program);
		}
	}
	,deactivate: function() {
		Luxe.renderer.state.useProgram(null);
	}
	,clone: function(_id) {
		var _clone = new phoenix_Shader({ id : _id, frag_id : this.frag_id, vert_id : this.vert_id});
		_clone.from_string(this.vert_source,this.frag_source);
		return _clone;
	}
	,set_int: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _int = _this.ints.get(_name);
		if(_int != null) {
			_int.value = _value;
		} else {
			_int = new phoenix__$Shader_Uniform_$Int(_name,_value,_location);
			_this.ints.set(_name,_int);
		}
		_this.dirty_ints.push(_int);
	}
	,set_float: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _float = _this.floats.get(_name);
		if(_float != null) {
			_float.value = _value;
		} else {
			_float = new phoenix__$Shader_Uniform_$Float(_name,_value,_location);
			_this.floats.set(_name,_float);
		}
		_this.dirty_floats.push(_float);
	}
	,set_vector2: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector2 = _this.vector2s.get(_name);
		if(_vector2 != null) {
			_vector2.value = _value;
		} else {
			_vector2 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			_this.vector2s.set(_name,_vector2);
		}
		_this.dirty_vector2s.push(_vector2);
	}
	,set_vector2_arr: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector2 = _this.vector2arrs.get(_name);
		if(_vector2 != null) {
			_vector2.value = _value;
		} else {
			_vector2 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			_this.vector2arrs.set(_name,_vector2);
		}
		_this.dirty_vector2arrs.push(_vector2);
	}
	,set_vector3: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector3 = _this.vector3s.get(_name);
		if(_vector3 != null) {
			_vector3.value = _value;
		} else {
			_vector3 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			_this.vector3s.set(_name,_vector3);
		}
		_this.dirty_vector3s.push(_vector3);
	}
	,set_vector3_arr: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector3 = _this.vector3arrs.get(_name);
		if(_vector3 != null) {
			_vector3.value = _value;
		} else {
			_vector3 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			_this.vector3arrs.set(_name,_vector3);
		}
		_this.dirty_vector3arrs.push(_vector3);
	}
	,set_vector4: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector4 = _this.vector4s.get(_name);
		if(_vector4 != null) {
			_vector4.value = _value;
		} else {
			_vector4 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			_this.vector4s.set(_name,_vector4);
		}
		_this.dirty_vector4s.push(_vector4);
	}
	,set_vector4_arr: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _vector4 = _this.vector4arrs.get(_name);
		if(_vector4 != null) {
			_vector4.value = _value;
		} else {
			_vector4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			_this.vector4arrs.set(_name,_vector4);
		}
		_this.dirty_vector4arrs.push(_vector4);
	}
	,set_matrix4: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _matrix4 = _this.matrix4s.get(_name);
		if(_matrix4 != null) {
			_matrix4.value = _value;
		} else {
			_matrix4 = new phoenix__$Shader_Uniform_$phoenix_$Matrix(_name,_value,_location);
			_this.matrix4s.set(_name,_matrix4);
		}
		_this.dirty_matrix4s.push(_matrix4);
	}
	,set_matrix4_arr: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _matrix4 = _this.matrix4arrs.get(_name);
		if(_matrix4 != null) {
			_matrix4.value = _value;
		} else {
			_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			_this.matrix4arrs.set(_name,_matrix4);
		}
		_this.dirty_matrix4arrs.push(_matrix4);
	}
	,set_color: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _color = _this.colors.get(_name);
		if(_color != null) {
			_color.value = _value;
		} else {
			_color = new phoenix__$Shader_Uniform_$phoenix_$Color(_name,_value,_location);
			_this.colors.set(_name,_color);
		}
		_this.dirty_colors.push(_color);
	}
	,set_texture: function(_name,_value) {
		var _this = this.uniforms;
		var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
		var _texture = _this.textures.get(_name);
		if(_texture != null) {
			_texture.value = _value;
		} else {
			_texture = new phoenix__$Shader_Uniform_$phoenix_$Texture(_name,_value,_location);
			_this.textures.set(_name,_texture);
		}
		_this.dirty_textures.push(_texture);
	}
	,compile: function(_type,_source) {
		var _shader = snow_modules_opengl_web_GL.gl.createShader(_type);
		snow_modules_opengl_web_GL.gl.shaderSource(_shader,_source);
		snow_modules_opengl_web_GL.gl.compileShader(_shader);
		var _compile_log = snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader);
		var _log = "";
		if(_compile_log.length > 0) {
			var _is_frag = _type == 35632;
			_log = "" + ("\n\t// start -- (" + (_is_frag ? "frag" : "vert") + " / " + (_is_frag ? this.frag_id : this.vert_id) + ") compile log --\n");
			var _items = _compile_log.split("\n");
			_items = _items.filter(function(s) {
				return StringTools.trim(s) != "";
			});
			_items = _items.map(function(s1) {
				return "\t\t" + StringTools.trim(s1);
			});
			_log += _items.join("\n");
			_log += "\n\t// end --\n";
		}
		if(snow_modules_opengl_web_GL.gl.getShaderParameter(_shader,35713) == 0) {
			this.log += "\tFailed to compile shader `" + this.id + "`:\n";
			var _log1;
			if(_log.length == 0) {
				var _items1 = snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader).split("\n");
				_items1 = _items1.filter(function(s2) {
					return StringTools.trim(s2) != "";
				});
				_items1 = _items1.map(function(s3) {
					return "\t\t" + StringTools.trim(s3);
				});
				_log1 = _items1.join("\n");
			} else {
				_log1 = _log;
			}
			this.log += _log1;
			snow_modules_opengl_web_GL.gl.deleteShader(_shader);
			return null;
		}
		return _shader;
	}
	,link: function() {
		this.program = snow_modules_opengl_web_GL.gl.createProgram();
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.vert_shader);
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.frag_shader);
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,0,"vertexPosition");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,1,"vertexTCoord");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,2,"vertexColor");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,3,"vertexNormal");
		snow_modules_opengl_web_GL.gl.linkProgram(this.program);
		if(snow_modules_opengl_web_GL.gl.getProgramParameter(this.program,35714) == 0) {
			this.log += "\tFailed to link shader program:";
			var _items = snow_modules_opengl_web_GL.gl.getProgramInfoLog(this.program).split("\n");
			_items = _items.filter(function(s) {
				return StringTools.trim(s) != "";
			});
			_items = _items.map(function(s1) {
				return "\t\t" + StringTools.trim(s1);
			});
			var _log = _items.join("\n");
			this.log += _log;
			snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
			this.program = null;
			return false;
		}
		this["use"]();
		if(!this.no_default_uniforms) {
			this.proj_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"projectionMatrix");
			this.view_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"modelViewMatrix");
			var _tex0_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex0");
			var _tex1_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex1");
			var _tex2_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex2");
			var _tex3_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex3");
			var _tex4_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex4");
			var _tex5_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex5");
			var _tex6_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex6");
			var _tex7_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex7");
			if(_tex0_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex0_attribute,0);
			}
			if(_tex1_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex1_attribute,1);
			}
			if(_tex2_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex2_attribute,2);
			}
			if(_tex3_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex3_attribute,3);
			}
			if(_tex4_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex4_attribute,4);
			}
			if(_tex5_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex5_attribute,5);
			}
			if(_tex6_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex6_attribute,6);
			}
			if(_tex7_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex7_attribute,7);
			}
		}
		return true;
	}
	,location: function(_name) {
		return snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
	}
	,clear: function() {
		if(this.vert_shader != null) {
			snow_modules_opengl_web_GL.gl.deleteShader(this.vert_shader);
		}
		if(this.frag_shader != null) {
			snow_modules_opengl_web_GL.gl.deleteShader(this.frag_shader);
		}
		if(this.program != null) {
			snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
		}
		this.vert_source = null;
		this.frag_source = null;
		this.uniforms.clear();
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			switch(_gthis.frag_id) {
			case "default":
				_gthis.frag_source = Luxe.renderer.shaders.plain.source.frag;
				break;
			case "textured":
				_gthis.frag_source = Luxe.renderer.shaders.textured.source.frag;
				break;
			}
			if(_gthis.vert_id == "default") {
				_gthis.vert_source = Luxe.renderer.shaders.plain.source.vert;
			}
			var _onfail = function(_err) {
				_gthis.set_state(4);
				reject(_err);
			};
			var _wait = [snow_api_Promise.resolve()];
			if(_gthis.frag_source == null) {
				var _frag = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.frag_id);
				_frag.then(function(_asset) {
					_gthis.frag_source = _asset.text;
				});
				_wait.push(_frag);
			}
			if(_gthis.vert_source == null) {
				var _vert = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.vert_id);
				_vert.then(function(_asset1) {
					_gthis.vert_source = _asset1.text;
				});
				_wait.push(_vert);
			}
			snow_api_Promise.all(_wait).then(function() {
				if(_gthis.from_string(_gthis.vert_source,_gthis.frag_source)) {
					_gthis.set_state(3);
					resolve(_gthis);
				} else {
					_onfail(snow_types_Error.error("`" + _gthis.id + "` failed to create :\n\n" + _gthis.log));
				}
			}).error(function(err) {
				_onfail(snow_types_Error.error("`" + _gthis.id + "` failed to create :\n\t\t" + err + "\n"));
			});
		});
	}
	,from_string: function(_vert_source,_fragment_source) {
		var _gthis = this;
		this.clear();
		this.frag_source = _fragment_source;
		this.vert_source = _vert_source;
		this.vert_shader = this.compile(35633,this.vert_source);
		this.frag_shader = this.compile(35632,this.frag_source);
		if(this.vert_shader == null || this.frag_shader == null) {
			if(_gthis.log.length > 0) {
				haxe_Log.trace("   i / shader / " + _gthis.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			}
			return false;
		}
		if(!this.link()) {
			if(_gthis.log.length > 0) {
				haxe_Log.trace("   i / shader / " + _gthis.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			}
			return false;
		}
		return true;
	}
	,add_log: function(_log) {
		this.log += _log;
	}
	,toString: function() {
		return "Shader(" + this.id + ") vert:" + this.vert_id + " / frag: " + this.frag_id;
	}
	,format_log: function(_log) {
		var _items = _log.split("\n");
		_items = _items.filter(function(s) {
			return StringTools.trim(s) != "";
		});
		_items = _items.map(function(s1) {
			return "\t\t" + StringTools.trim(s1);
		});
		return _items.join("\n");
	}
	,__class__: phoenix_Shader
});
var phoenix__$Shader_Uniform = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform"] = phoenix__$Shader_Uniform;
phoenix__$Shader_Uniform.__name__ = ["phoenix","_Shader","Uniform"];
phoenix__$Shader_Uniform.prototype = {
	__class__: phoenix__$Shader_Uniform
};
var phoenix_Transform = function() {
	this._destroying = false;
	this._cleaning = false;
	this._setup = true;
	this.manual_update = false;
	this.dirty = true;
	luxe_ID.call(this,"transform");
	var l = new phoenix_Spatial();
	if(l != null) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		l.pos_changed = $bind(this,this.on_local_pos_change);
		l.rotation_changed = $bind(this,this.on_local_rotation_change);
		l.scale_changed = $bind(this,this.on_local_scale_change);
	}
	this.local = l;
	var w = new phoenix_Spatial();
	if(w == null) {
		this.world = w;
	} else {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._dirty_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(this);
				}
			}
		}
		this.world = w;
	}
	this._origin_undo_matrix = new phoenix_Matrix();
	this._pos_matrix = new phoenix_Matrix();
	this._rotation_matrix = new phoenix_Matrix();
	var o = new phoenix_Vector();
	this.dirty = true;
	if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
		var _g3 = 0;
		var _g12 = this._dirty_handlers;
		while(_g3 < _g12.length) {
			var _handler2 = _g12[_g3];
			++_g3;
			if(_handler2 != null) {
				_handler2(this);
			}
		}
	}
	this.origin = o;
	if(this._origin_handlers != null && this._origin_handlers.length > 0) {
		var _origin = this.origin;
		var _g4 = 0;
		var _g13 = this._origin_handlers;
		while(_g4 < _g13.length) {
			var _handler3 = _g13[_g4];
			++_g4;
			if(_handler3 != null) {
				_handler3(_origin);
			}
		}
	}
	this.local.pos_changed = $bind(this,this.on_local_pos_change);
	this.local.rotation_changed = $bind(this,this.on_local_rotation_change);
	this.local.scale_changed = $bind(this,this.on_local_scale_change);
	this._setup = false;
};
$hxClasses["phoenix.Transform"] = phoenix_Transform;
phoenix_Transform.__name__ = ["phoenix","Transform"];
phoenix_Transform.__super__ = luxe_ID;
phoenix_Transform.prototype = $extend(luxe_ID.prototype,{
	destroy: function() {
		this._destroying = true;
		if(this.parent != null) {
			var _this = this.parent;
			if(_this._clean_handlers != null) {
				HxOverrides.remove(_this._clean_handlers,$bind(this,this.on_parent_cleaned));
			}
		}
		this._clean_handlers = null;
		this._dirty_handlers = null;
		this._pos_handlers = null;
		this._rotation_handlers = null;
		this._scale_handlers = null;
		this._origin_handlers = null;
		this._parent_handlers = null;
		var _this1 = this.local;
		_this1.matrix = null;
		_this1.floats = null;
		_this1.pos = null;
		_this1.rotation = null;
		_this1.scale = null;
		if(!this._destroying) {
			if(this.parent != null && this.parent.dirty) {
				this.parent.clean_check();
			}
			if(this.dirty && !this._cleaning && !this.manual_update) {
				this.clean();
			}
		}
		var _this2 = this.world;
		_this2.matrix = null;
		_this2.floats = null;
		_this2.pos = null;
		_this2.rotation = null;
		_this2.scale = null;
		this.local = null;
		this.world = null;
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		this.origin = null;
		if(this._origin_handlers != null && this._origin_handlers.length > 0) {
			var _origin = this.origin;
			var _g2 = 0;
			var _g11 = this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin);
				}
			}
		}
		this._origin_undo_matrix = null;
		this._pos_matrix = null;
		this._rotation_matrix = null;
	}
	,set_dirty: function(_dirty) {
		this.dirty = _dirty;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		return this.dirty;
	}
	,on_local_pos_change: function(v) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._pos_handlers != null && this._pos_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._pos_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(v);
				}
			}
		}
	}
	,on_local_rotation_change: function(r) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._rotation_handlers != null && this._rotation_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._rotation_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(r);
				}
			}
		}
	}
	,on_local_scale_change: function(s) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._scale_handlers != null && this._scale_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._scale_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(s);
				}
			}
		}
	}
	,on_parent_cleaned: function(p) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
	}
	,get_local: function() {
		return this.local;
	}
	,set_local: function(l) {
		if(l != null) {
			this.dirty = true;
			if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(this);
					}
				}
			}
			l.pos_changed = $bind(this,this.on_local_pos_change);
			l.rotation_changed = $bind(this,this.on_local_rotation_change);
			l.scale_changed = $bind(this,this.on_local_scale_change);
		}
		return this.local = l;
	}
	,get_world: function() {
		if(!this._destroying) {
			if(this.parent != null && this.parent.dirty) {
				this.parent.clean_check();
			}
			if(this.dirty && !this._cleaning && !this.manual_update) {
				this.clean();
			}
		}
		return this.world;
	}
	,clean_check: function() {
		if(this.parent != null && this.parent.dirty) {
			this.parent.clean_check();
		}
		if(this.dirty && !this._cleaning && !this.manual_update) {
			this.clean();
		}
	}
	,clean: function() {
		if(!this.dirty) {
			return;
		}
		this._cleaning = true;
		var e = this._pos_matrix.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = this.local.pos.x;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = this.local.pos.y;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = this.local.pos.z;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		var q = this.local.rotation;
		var te = this._rotation_matrix.elements;
		var x2 = q.x + q.x;
		var y2 = q.y + q.y;
		var z2 = q.z + q.z;
		var xx = q.x * x2;
		var xy = q.x * y2;
		var xz = q.x * z2;
		var yy = q.y * y2;
		var yz = q.y * z2;
		var zz = q.z * z2;
		var wx = q.w * x2;
		var wy = q.w * y2;
		var wz = q.w * z2;
		te[0] = 1 - (yy + zz);
		te[4] = xy - wz;
		te[8] = xz + wy;
		te[1] = xy + wz;
		te[5] = 1 - (xx + zz);
		te[9] = yz - wx;
		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - (xx + yy);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		var e1 = this._origin_undo_matrix.elements;
		e1[0] = 1;
		e1[4] = 0;
		e1[8] = 0;
		e1[12] = -this.origin.x;
		e1[1] = 0;
		e1[5] = 1;
		e1[9] = 0;
		e1[13] = -this.origin.y;
		e1[2] = 0;
		e1[6] = 0;
		e1[10] = 1;
		e1[14] = -this.origin.z;
		e1[3] = 0;
		e1[7] = 0;
		e1[11] = 0;
		e1[15] = 1;
		var e2 = this.local.matrix.elements;
		e2[0] = 1;
		e2[4] = 0;
		e2[8] = 0;
		e2[12] = this.origin.x;
		e2[1] = 0;
		e2[5] = 1;
		e2[9] = 0;
		e2[13] = this.origin.y;
		e2[2] = 0;
		e2[6] = 0;
		e2[10] = 1;
		e2[14] = this.origin.z;
		e2[3] = 0;
		e2[7] = 0;
		e2[11] = 0;
		e2[15] = 1;
		var _this = this.local.matrix;
		var ae = _this.elements;
		var be = this._rotation_matrix.elements;
		var te1 = _this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te1[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te1[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te1[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te1[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te1[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te1[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te1[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te1[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te1[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te1[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te1[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te1[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te1[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te1[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te1[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te1[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		var _v = this.local.scale;
		var te2 = this.local.matrix.elements;
		var _x = _v.x;
		var _y = _v.y;
		var _z = _v.z;
		te2[0] *= _x;
		te2[4] *= _y;
		te2[8] *= _z;
		te2[1] *= _x;
		te2[5] *= _y;
		te2[9] *= _z;
		te2[2] *= _x;
		te2[6] *= _y;
		te2[10] *= _z;
		te2[3] *= _x;
		te2[7] *= _y;
		te2[11] *= _z;
		var _v1 = this.local.pos;
		var te3 = this.local.matrix.elements;
		te3[12] = _v1.x;
		te3[13] = _v1.y;
		te3[14] = _v1.z;
		var _this1 = this.local.matrix;
		var ae1 = _this1.elements;
		var be1 = this._origin_undo_matrix.elements;
		var te4 = _this1.elements;
		var a111 = ae1[0];
		var a121 = ae1[4];
		var a131 = ae1[8];
		var a141 = ae1[12];
		var a211 = ae1[1];
		var a221 = ae1[5];
		var a231 = ae1[9];
		var a241 = ae1[13];
		var a311 = ae1[2];
		var a321 = ae1[6];
		var a331 = ae1[10];
		var a341 = ae1[14];
		var a411 = ae1[3];
		var a421 = ae1[7];
		var a431 = ae1[11];
		var a441 = ae1[15];
		var b111 = be1[0];
		var b121 = be1[4];
		var b131 = be1[8];
		var b141 = be1[12];
		var b211 = be1[1];
		var b221 = be1[5];
		var b231 = be1[9];
		var b241 = be1[13];
		var b311 = be1[2];
		var b321 = be1[6];
		var b331 = be1[10];
		var b341 = be1[14];
		var b411 = be1[3];
		var b421 = be1[7];
		var b431 = be1[11];
		var b441 = be1[15];
		te4[0] = a111 * b111 + a121 * b211 + a131 * b311 + a141 * b411;
		te4[4] = a111 * b121 + a121 * b221 + a131 * b321 + a141 * b421;
		te4[8] = a111 * b131 + a121 * b231 + a131 * b331 + a141 * b431;
		te4[12] = a111 * b141 + a121 * b241 + a131 * b341 + a141 * b441;
		te4[1] = a211 * b111 + a221 * b211 + a231 * b311 + a241 * b411;
		te4[5] = a211 * b121 + a221 * b221 + a231 * b321 + a241 * b421;
		te4[9] = a211 * b131 + a221 * b231 + a231 * b331 + a241 * b431;
		te4[13] = a211 * b141 + a221 * b241 + a231 * b341 + a241 * b441;
		te4[2] = a311 * b111 + a321 * b211 + a331 * b311 + a341 * b411;
		te4[6] = a311 * b121 + a321 * b221 + a331 * b321 + a341 * b421;
		te4[10] = a311 * b131 + a321 * b231 + a331 * b331 + a341 * b431;
		te4[14] = a311 * b141 + a321 * b241 + a331 * b341 + a341 * b441;
		te4[3] = a411 * b111 + a421 * b211 + a431 * b311 + a441 * b411;
		te4[7] = a411 * b121 + a421 * b221 + a431 * b321 + a441 * b421;
		te4[11] = a411 * b131 + a421 * b231 + a431 * b331 + a441 * b431;
		te4[15] = a411 * b141 + a421 * b241 + a431 * b341 + a441 * b441;
		if(this.parent != null) {
			var _this2 = this.get_world();
			var _this3 = this.get_world().matrix;
			var ae2 = this.parent.get_world().matrix.elements;
			var be2 = this.local.matrix.elements;
			var te5 = _this3.elements;
			var a112 = ae2[0];
			var a122 = ae2[4];
			var a132 = ae2[8];
			var a142 = ae2[12];
			var a212 = ae2[1];
			var a222 = ae2[5];
			var a232 = ae2[9];
			var a242 = ae2[13];
			var a312 = ae2[2];
			var a322 = ae2[6];
			var a332 = ae2[10];
			var a342 = ae2[14];
			var a412 = ae2[3];
			var a422 = ae2[7];
			var a432 = ae2[11];
			var a442 = ae2[15];
			var b112 = be2[0];
			var b122 = be2[4];
			var b132 = be2[8];
			var b142 = be2[12];
			var b212 = be2[1];
			var b222 = be2[5];
			var b232 = be2[9];
			var b242 = be2[13];
			var b312 = be2[2];
			var b322 = be2[6];
			var b332 = be2[10];
			var b342 = be2[14];
			var b412 = be2[3];
			var b422 = be2[7];
			var b432 = be2[11];
			var b442 = be2[15];
			te5[0] = a112 * b112 + a122 * b212 + a132 * b312 + a142 * b412;
			te5[4] = a112 * b122 + a122 * b222 + a132 * b322 + a142 * b422;
			te5[8] = a112 * b132 + a122 * b232 + a132 * b332 + a142 * b432;
			te5[12] = a112 * b142 + a122 * b242 + a132 * b342 + a142 * b442;
			te5[1] = a212 * b112 + a222 * b212 + a232 * b312 + a242 * b412;
			te5[5] = a212 * b122 + a222 * b222 + a232 * b322 + a242 * b422;
			te5[9] = a212 * b132 + a222 * b232 + a232 * b332 + a242 * b432;
			te5[13] = a212 * b142 + a222 * b242 + a232 * b342 + a242 * b442;
			te5[2] = a312 * b112 + a322 * b212 + a332 * b312 + a342 * b412;
			te5[6] = a312 * b122 + a322 * b222 + a332 * b322 + a342 * b422;
			te5[10] = a312 * b132 + a322 * b232 + a332 * b332 + a342 * b432;
			te5[14] = a312 * b142 + a322 * b242 + a332 * b342 + a342 * b442;
			te5[3] = a412 * b112 + a422 * b212 + a432 * b312 + a442 * b412;
			te5[7] = a412 * b122 + a422 * b222 + a432 * b322 + a442 * b422;
			te5[11] = a412 * b132 + a422 * b232 + a432 * b332 + a442 * b432;
			te5[15] = a412 * b142 + a422 * b242 + a432 * b342 + a442 * b442;
			_this2.matrix = _this3;
			if(_this3 != null) {
				var _this4 = _this2.matrix;
				var i = 0;
				while(i < 16) {
					_this4._float32array[i] = _this4.elements[i];
					++i;
				}
				_this2.floats = _this4._float32array;
			}
		} else {
			var _this5 = this.get_world().matrix;
			var me = this.local.matrix.elements;
			var e3 = _this5.elements;
			e3[0] = me[0];
			e3[4] = me[4];
			e3[8] = me[8];
			e3[12] = me[12];
			e3[1] = me[1];
			e3[5] = me[5];
			e3[9] = me[9];
			e3[13] = me[13];
			e3[2] = me[2];
			e3[6] = me[6];
			e3[10] = me[10];
			e3[14] = me[14];
			e3[3] = me[3];
			e3[7] = me[7];
			e3[11] = me[11];
			e3[15] = me[15];
		}
		var _this6 = this.get_world();
		if(_this6.auto_decompose) {
			var _this7 = _this6.matrix;
			var _position = null;
			var _quaternion = null;
			var _scale = null;
			var te6 = _this7.elements;
			var matrix = new phoenix_Matrix();
			var _ax_x = te6[0];
			var _ax_y = te6[1];
			var _ax_z = te6[2];
			var _ay_x = te6[4];
			var _ay_y = te6[5];
			var _ay_z = te6[6];
			var _az_x = te6[8];
			var _az_y = te6[9];
			var _az_z = te6[10];
			var _ax_length = Math.sqrt(_ax_x * _ax_x + _ax_y * _ax_y + _ax_z * _ax_z);
			var _ay_length = Math.sqrt(_ay_x * _ay_x + _ay_y * _ay_y + _ay_z * _ay_z);
			var _az_length = Math.sqrt(_az_x * _az_x + _az_y * _az_y + _az_z * _az_z);
			if(_quaternion == null) {
				_quaternion = new phoenix_Quaternion();
			}
			if(_position == null) {
				_position = new phoenix_Vector(te6[12],te6[13],te6[14]);
			} else {
				var _x1 = te6[12];
				_position.x = _x1;
				if(!_position._construct) {
					if(_position.listen_x != null && !_position.ignore_listeners) {
						_position.listen_x(_x1);
					}
				}
				var _y1 = te6[13];
				_position.y = _y1;
				if(!_position._construct) {
					if(_position.listen_y != null && !_position.ignore_listeners) {
						_position.listen_y(_y1);
					}
				}
				var _z1 = te6[14];
				_position.z = _z1;
				if(!_position._construct) {
					if(_position.listen_z != null && !_position.ignore_listeners) {
						_position.listen_z(_z1);
					}
				}
			}
			if(_scale == null) {
				_scale = new phoenix_Vector(_ax_length,_ay_length,_az_length);
			} else {
				_scale.x = _ax_length;
				if(!_scale._construct) {
					if(_scale.listen_x != null && !_scale.ignore_listeners) {
						_scale.listen_x(_ax_length);
					}
				}
				_scale.y = _ay_length;
				if(!_scale._construct) {
					if(_scale.listen_y != null && !_scale.ignore_listeners) {
						_scale.listen_y(_ay_length);
					}
				}
				_scale.z = _az_length;
				if(!_scale._construct) {
					if(_scale.listen_z != null && !_scale.ignore_listeners) {
						_scale.listen_z(_az_length);
					}
				}
			}
			matrix.elements = _this7.elements.concat([]);
			var me1 = matrix.elements;
			me1[0] /= _ax_length;
			me1[1] /= _ax_length;
			me1[2] /= _ax_length;
			me1[4] /= _ay_length;
			me1[5] /= _ay_length;
			me1[6] /= _ay_length;
			me1[8] /= _az_length;
			me1[9] /= _az_length;
			me1[10] /= _az_length;
			_quaternion.setFromRotationMatrix(matrix);
			if(_this7._transform == null) {
				_this7._transform = new phoenix_MatrixTransform(_position,_quaternion,_scale);
			} else {
				_this7._transform.pos = _position;
				_this7._transform.rotation = _quaternion;
				_this7._transform.scale = _scale;
			}
			var _transform = _this7._transform;
			var _p = _transform.pos;
			_this6.pos = _p;
			if(_p != null) {
				var _v2 = _this6.pos;
				var listener = $bind(_this6,_this6._pos_change);
				_v2.listen_x = listener;
				_v2.listen_y = listener;
				_v2.listen_z = listener;
				if(_this6.pos_changed != null && !_this6.ignore_listeners) {
					_this6.pos_changed(_this6.pos);
				}
			}
			var _r = _transform.rotation;
			_this6.rotation = _r;
			if(_r != null) {
				var _q = _this6.rotation;
				var listener1 = $bind(_this6,_this6._rotation_change);
				_q.listen_x = listener1;
				_q.listen_y = listener1;
				_q.listen_z = listener1;
				_q.listen_w = listener1;
				if(_this6.rotation_changed != null && !_this6.ignore_listeners) {
					_this6.rotation_changed(_this6.rotation);
				}
			}
			var _s = _transform.scale;
			_this6.scale = _s;
			if(_s != null) {
				var _v3 = _this6.scale;
				var listener2 = $bind(_this6,_this6._scale_change);
				_v3.listen_x = listener2;
				_v3.listen_y = listener2;
				_v3.listen_z = listener2;
				if(_this6.scale_changed != null && !_this6.ignore_listeners) {
					_this6.scale_changed(_this6.scale);
				}
			}
		}
		this.dirty = false;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		this._cleaning = false;
		if(this._clean_handlers != null && this._clean_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._clean_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(this);
				}
			}
		}
	}
	,toString: function() {
		return "Transform (" + this.id + ")";
	}
	,get_origin: function() {
		return this.origin;
	}
	,set_origin: function(o) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		this.origin = o;
		if(this._origin_handlers != null && this._origin_handlers.length > 0) {
			var _origin = this.origin;
			var _g2 = 0;
			var _g11 = this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin);
				}
			}
		}
		return this.origin;
	}
	,set_world: function(w) {
		if(w == null) {
			return this.world = w;
		}
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		return this.world = w;
	}
	,get_parent: function() {
		return this.parent;
	}
	,set_parent: function(_p) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this.parent != null) {
			var _this = this.parent;
			if(_this._clean_handlers != null) {
				HxOverrides.remove(_this._clean_handlers,$bind(this,this.on_parent_cleaned));
			}
		}
		this.parent = _p;
		if(this._parent_handlers != null && this._parent_handlers.length > 0) {
			var _parent = this.parent;
			var _g2 = 0;
			var _g11 = this._parent_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_parent);
				}
			}
		}
		if(this.parent != null) {
			var _this1 = this.parent;
			if(_this1._clean_handlers == null) {
				_this1._clean_handlers = [];
			}
			_this1._clean_handlers.push($bind(this,this.on_parent_cleaned));
		}
		return this.parent;
	}
	,get_pos: function() {
		return this.local.pos;
	}
	,get_rotation: function() {
		return this.local.rotation;
	}
	,get_scale: function() {
		return this.local.scale;
	}
	,set_pos: function(value) {
		var _this = this.local;
		_this.pos = value;
		if(value != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		return _this.pos;
	}
	,set_rotation: function(value) {
		var _this = this.local;
		_this.rotation = value;
		if(value != null) {
			var _q = _this.rotation;
			var listener = $bind(_this,_this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(_this.rotation_changed != null && !_this.ignore_listeners) {
				_this.rotation_changed(_this.rotation);
			}
		}
		return _this.rotation;
	}
	,set_scale: function(value) {
		var _this = this.local;
		_this.scale = value;
		if(value != null) {
			var _v = _this.scale;
			var listener = $bind(_this,_this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.scale_changed != null && !_this.ignore_listeners) {
				_this.scale_changed(_this.scale);
			}
		}
		return _this.scale;
	}
	,propagate_clean: function() {
		var _g = 0;
		var _g1 = this._clean_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(this);
			}
		}
	}
	,propagate_dirty: function() {
		var _g = 0;
		var _g1 = this._dirty_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(this);
			}
		}
	}
	,propagate_pos: function(_pos) {
		var _g = 0;
		var _g1 = this._pos_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_pos);
			}
		}
	}
	,propagate_rotation: function(_rotation) {
		var _g = 0;
		var _g1 = this._rotation_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_rotation);
			}
		}
	}
	,propagate_scale: function(_scale) {
		var _g = 0;
		var _g1 = this._scale_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_scale);
			}
		}
	}
	,propagate_origin: function(_origin) {
		var _g = 0;
		var _g1 = this._origin_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_origin);
			}
		}
	}
	,propagate_parent: function(_parent) {
		var _g = 0;
		var _g1 = this._parent_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_parent);
			}
		}
	}
	,listen: function(_handler) {
		if(this._clean_handlers == null) {
			this._clean_handlers = [];
		}
		this._clean_handlers.push(_handler);
	}
	,unlisten: function(_handler) {
		if(this._clean_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._clean_handlers,_handler);
	}
	,listen_dirty: function(_handler) {
		if(this._dirty_handlers == null) {
			this._dirty_handlers = [];
		}
		this._dirty_handlers.push(_handler);
	}
	,unlisten_dirty: function(_handler) {
		if(this._dirty_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._dirty_handlers,_handler);
	}
	,listen_pos: function(_handler) {
		if(this._pos_handlers == null) {
			this._pos_handlers = [];
		}
		this._pos_handlers.push(_handler);
	}
	,unlisten_pos: function(_handler) {
		if(this._pos_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._pos_handlers,_handler);
	}
	,listen_scale: function(_handler) {
		if(this._scale_handlers == null) {
			this._scale_handlers = [];
		}
		this._scale_handlers.push(_handler);
	}
	,unlisten_scale: function(_handler) {
		if(this._scale_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._scale_handlers,_handler);
	}
	,listen_rotation: function(_handler) {
		if(this._rotation_handlers == null) {
			this._rotation_handlers = [];
		}
		this._rotation_handlers.push(_handler);
	}
	,unlisten_rotation: function(_handler) {
		if(this._rotation_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._rotation_handlers,_handler);
	}
	,listen_origin: function(_handler) {
		if(this._origin_handlers == null) {
			this._origin_handlers = [];
		}
		this._origin_handlers.push(_handler);
	}
	,unlisten_origin: function(_handler) {
		if(this._origin_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._origin_handlers,_handler);
	}
	,listen_parent: function(_handler) {
		if(this._parent_handlers == null) {
			this._parent_handlers = [];
		}
		this._parent_handlers.push(_handler);
	}
	,unlisten_parent: function(_handler) {
		if(this._parent_handlers == null) {
			return false;
		}
		return HxOverrides.remove(this._parent_handlers,_handler);
	}
	,__class__: phoenix_Transform
	,__properties__: {set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_dirty:"set_dirty",set_origin:"set_origin",get_origin:"get_origin",set_world:"set_world",get_world:"get_world",set_local:"set_local",get_local:"get_local",set_parent:"set_parent",get_parent:"get_parent"}
});
var phoenix_Spatial = function() {
	this._setup = true;
	this.auto_decompose = false;
	this.ignore_listeners = false;
	var _m = new phoenix_Matrix();
	this.matrix = _m;
	if(_m != null) {
		var _this = this.matrix;
		var i = 0;
		while(i < 16) {
			_this._float32array[i] = _this.elements[i];
			++i;
		}
		this.floats = _this._float32array;
	}
	var _this1 = this.matrix;
	var i1 = 0;
	while(i1 < 16) {
		_this1._float32array[i1] = _this1.elements[i1];
		++i1;
	}
	this.floats = _this1._float32array;
	var _p = new phoenix_Vector();
	this.pos = _p;
	if(_p != null) {
		var _v = this.pos;
		var listener = $bind(this,this._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(this.pos_changed != null && !this.ignore_listeners) {
			this.pos_changed(this.pos);
		}
	}
	var _r = new phoenix_Quaternion();
	this.rotation = _r;
	if(_r != null) {
		var _q = this.rotation;
		var listener1 = $bind(this,this._rotation_change);
		_q.listen_x = listener1;
		_q.listen_y = listener1;
		_q.listen_z = listener1;
		_q.listen_w = listener1;
		if(this.rotation_changed != null && !this.ignore_listeners) {
			this.rotation_changed(this.rotation);
		}
	}
	var _s = new phoenix_Vector(1,1,1);
	this.scale = _s;
	if(_s != null) {
		var _v1 = this.scale;
		var listener2 = $bind(this,this._scale_change);
		_v1.listen_x = listener2;
		_v1.listen_y = listener2;
		_v1.listen_z = listener2;
		if(this.scale_changed != null && !this.ignore_listeners) {
			this.scale_changed(this.scale);
		}
	}
	this._setup = false;
};
$hxClasses["phoenix.Spatial"] = phoenix_Spatial;
phoenix_Spatial.__name__ = ["phoenix","Spatial"];
phoenix_Spatial.prototype = {
	destroy: function() {
		this.matrix = null;
		this.floats = null;
		this.pos = null;
		this.rotation = null;
		this.scale = null;
	}
	,decompose: function(_force) {
		if(_force == null) {
			_force = true;
		}
		if(this.auto_decompose || _force) {
			var _this = this.matrix;
			var _position = null;
			var _quaternion = null;
			var _scale = null;
			var te = _this.elements;
			var matrix = new phoenix_Matrix();
			var _ax_x = te[0];
			var _ax_y = te[1];
			var _ax_z = te[2];
			var _ay_x = te[4];
			var _ay_y = te[5];
			var _ay_z = te[6];
			var _az_x = te[8];
			var _az_y = te[9];
			var _az_z = te[10];
			var _ax_length = Math.sqrt(_ax_x * _ax_x + _ax_y * _ax_y + _ax_z * _ax_z);
			var _ay_length = Math.sqrt(_ay_x * _ay_x + _ay_y * _ay_y + _ay_z * _ay_z);
			var _az_length = Math.sqrt(_az_x * _az_x + _az_y * _az_y + _az_z * _az_z);
			if(_quaternion == null) {
				_quaternion = new phoenix_Quaternion();
			}
			if(_position == null) {
				_position = new phoenix_Vector(te[12],te[13],te[14]);
			} else {
				var _x = te[12];
				_position.x = _x;
				if(!_position._construct) {
					if(_position.listen_x != null && !_position.ignore_listeners) {
						_position.listen_x(_x);
					}
				}
				var _y = te[13];
				_position.y = _y;
				if(!_position._construct) {
					if(_position.listen_y != null && !_position.ignore_listeners) {
						_position.listen_y(_y);
					}
				}
				var _z = te[14];
				_position.z = _z;
				if(!_position._construct) {
					if(_position.listen_z != null && !_position.ignore_listeners) {
						_position.listen_z(_z);
					}
				}
			}
			if(_scale == null) {
				_scale = new phoenix_Vector(_ax_length,_ay_length,_az_length);
			} else {
				_scale.x = _ax_length;
				if(!_scale._construct) {
					if(_scale.listen_x != null && !_scale.ignore_listeners) {
						_scale.listen_x(_ax_length);
					}
				}
				_scale.y = _ay_length;
				if(!_scale._construct) {
					if(_scale.listen_y != null && !_scale.ignore_listeners) {
						_scale.listen_y(_ay_length);
					}
				}
				_scale.z = _az_length;
				if(!_scale._construct) {
					if(_scale.listen_z != null && !_scale.ignore_listeners) {
						_scale.listen_z(_az_length);
					}
				}
			}
			matrix.elements = _this.elements.concat([]);
			var me = matrix.elements;
			me[0] /= _ax_length;
			me[1] /= _ax_length;
			me[2] /= _ax_length;
			me[4] /= _ay_length;
			me[5] /= _ay_length;
			me[6] /= _ay_length;
			me[8] /= _az_length;
			me[9] /= _az_length;
			me[10] /= _az_length;
			_quaternion.setFromRotationMatrix(matrix);
			if(_this._transform == null) {
				_this._transform = new phoenix_MatrixTransform(_position,_quaternion,_scale);
			} else {
				_this._transform.pos = _position;
				_this._transform.rotation = _quaternion;
				_this._transform.scale = _scale;
			}
			var _transform = _this._transform;
			var _p = _transform.pos;
			this.pos = _p;
			if(_p != null) {
				var _v = this.pos;
				var listener = $bind(this,this._pos_change);
				_v.listen_x = listener;
				_v.listen_y = listener;
				_v.listen_z = listener;
				if(this.pos_changed != null && !this.ignore_listeners) {
					this.pos_changed(this.pos);
				}
			}
			var _r = _transform.rotation;
			this.rotation = _r;
			if(_r != null) {
				var _q = this.rotation;
				var listener1 = $bind(this,this._rotation_change);
				_q.listen_x = listener1;
				_q.listen_y = listener1;
				_q.listen_z = listener1;
				_q.listen_w = listener1;
				if(this.rotation_changed != null && !this.ignore_listeners) {
					this.rotation_changed(this.rotation);
				}
			}
			var _s = _transform.scale;
			this.scale = _s;
			if(_s != null) {
				var _v1 = this.scale;
				var listener2 = $bind(this,this._scale_change);
				_v1.listen_x = listener2;
				_v1.listen_y = listener2;
				_v1.listen_z = listener2;
				if(this.scale_changed != null && !this.ignore_listeners) {
					this.scale_changed(this.scale);
				}
			}
		}
		return this;
	}
	,get_matrix: function() {
		return this.matrix;
	}
	,set_matrix: function(_m) {
		this.matrix = _m;
		if(_m != null) {
			var _this = this.matrix;
			var i = 0;
			while(i < 16) {
				_this._float32array[i] = _this.elements[i];
				++i;
			}
			this.floats = _this._float32array;
		}
		return this.matrix;
	}
	,propagate_pos: function(_p) {
		if(this.pos_changed != null && !this.ignore_listeners) {
			this.pos_changed(_p);
		}
	}
	,propagate_rotation: function(_r) {
		if(this.rotation_changed != null && !this.ignore_listeners) {
			this.rotation_changed(_r);
		}
	}
	,propagate_scale: function(_s) {
		if(this.scale_changed != null && !this.ignore_listeners) {
			this.scale_changed(_s);
		}
	}
	,set_pos: function(_p) {
		this.pos = _p;
		if(_p != null) {
			var _v = this.pos;
			var listener = $bind(this,this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.pos_changed != null && !this.ignore_listeners) {
				this.pos_changed(this.pos);
			}
		}
		return this.pos;
	}
	,set_rotation: function(_r) {
		this.rotation = _r;
		if(_r != null) {
			var _q = this.rotation;
			var listener = $bind(this,this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(this.rotation_changed != null && !this.ignore_listeners) {
				this.rotation_changed(this.rotation);
			}
		}
		return this.rotation;
	}
	,set_scale: function(_s) {
		this.scale = _s;
		if(_s != null) {
			var _v = this.scale;
			var listener = $bind(this,this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.scale_changed != null && !this.ignore_listeners) {
				this.scale_changed(this.scale);
			}
		}
		return this.scale;
	}
	,_pos_change: function(_v) {
		this.set_pos(this.pos);
	}
	,_scale_change: function(_v) {
		this.set_scale(this.scale);
	}
	,_rotation_change: function(_v) {
		this.set_rotation(this.rotation);
	}
	,__class__: phoenix_Spatial
	,__properties__: {set_matrix:"set_matrix",get_matrix:"get_matrix",set_scale:"set_scale",set_rotation:"set_rotation",set_pos:"set_pos"}
};
var phoenix_Vector = function(_x,_y,_z,_w) {
	if(_w == null) {
		_w = 0;
	}
	if(_z == null) {
		_z = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0;
	this.z = 0;
	this.y = 0;
	this.x = 0;
	this._construct = true;
	this.x = _x;
	if(!this._construct) {
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(_x);
		}
	}
	this.y = _y;
	if(!this._construct) {
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(_y);
		}
	}
	this.z = _z;
	if(!this._construct) {
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(_z);
		}
	}
	this.w = _w;
	this._construct = false;
};
$hxClasses["phoenix.Vector"] = phoenix_Vector;
phoenix_Vector.__name__ = ["phoenix","Vector"];
phoenix_Vector.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", z:" + this.z + " }";
	}
	,set_x: function(_x) {
		this.x = _x;
		if(this._construct) {
			return this.x;
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(_x);
		}
		return this.x;
	}
	,set_y: function(_y) {
		this.y = _y;
		if(this._construct) {
			return this.y;
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(_y);
		}
		return this.y;
	}
	,set_z: function(_z) {
		this.z = _z;
		if(this._construct) {
			return this.z;
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(_z);
		}
		return this.z;
	}
	,set_angle2D: function(value) {
		var len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		var _x = Math.cos(value) * len;
		var _y = Math.sin(value) * len;
		var prev = this.ignore_listeners;
		this.ignore_listeners = true;
		this.x = _x;
		if(!this._construct) {
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(_x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(_y);
			}
		}
		this.ignore_listeners = prev;
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		return value;
	}
	,__class__: phoenix_Vector
	,__properties__: {set_angle2D:"set_angle2D",set_z:"set_z",set_y:"set_y",set_x:"set_x"}
};
var phoenix__$Vector_Vec_$Impl_$ = {};
$hxClasses["phoenix._Vector.Vec_Impl_"] = phoenix__$Vector_Vec_$Impl_$;
phoenix__$Vector_Vec_$Impl_$.__name__ = ["phoenix","_Vector","Vec_Impl_"];
phoenix__$Vector_Vec_$Impl_$._new = function(_x,_y,_z,_w) {
	return new phoenix_Vector(_x,_y,_z,_w);
};
phoenix__$Vector_Vec_$Impl_$._multiply = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs.x,lhs.y * rhs.y,lhs.z * rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._multiply_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs,lhs.y * rhs,lhs.z * rhs);
};
phoenix__$Vector_Vec_$Impl_$._multiply_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs,lhs.y * rhs,lhs.z * rhs);
};
phoenix__$Vector_Vec_$Impl_$._divide = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs.x,lhs.y / rhs.y,lhs.z / rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._divide_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs,lhs.y / rhs,lhs.z / rhs);
};
phoenix__$Vector_Vec_$Impl_$._divide_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs,lhs.y / rhs,lhs.z / rhs);
};
phoenix__$Vector_Vec_$Impl_$._add = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs.x,lhs.y + rhs.y,lhs.z + rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._add_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs,lhs.y + rhs,lhs.z + rhs);
};
phoenix__$Vector_Vec_$Impl_$._add_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs,lhs.y + rhs,lhs.z + rhs);
};
phoenix__$Vector_Vec_$Impl_$._subtract = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs.x,lhs.y - rhs.y,lhs.z - rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._subtract_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs,lhs.y - rhs,lhs.z - rhs);
};
phoenix__$Vector_Vec_$Impl_$._subtract_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs,lhs.y - rhs,lhs.z - rhs);
};
var phoenix__$Shader_Uniform_$Float = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_Float"] = phoenix__$Shader_Uniform_$Float;
phoenix__$Shader_Uniform_$Float.__name__ = ["phoenix","_Shader","Uniform_Float"];
phoenix__$Shader_Uniform_$Float.prototype = {
	__class__: phoenix__$Shader_Uniform_$Float
};
var phoenix__$Shader_Uniform_$Int = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_Int"] = phoenix__$Shader_Uniform_$Int;
phoenix__$Shader_Uniform_$Int.__name__ = ["phoenix","_Shader","Uniform_Int"];
phoenix__$Shader_Uniform_$Int.prototype = {
	__class__: phoenix__$Shader_Uniform_$Int
};
var phoenix__$Shader_Uniform_$phoenix_$Color = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Color"] = phoenix__$Shader_Uniform_$phoenix_$Color;
phoenix__$Shader_Uniform_$phoenix_$Color.__name__ = ["phoenix","_Shader","Uniform_phoenix_Color"];
phoenix__$Shader_Uniform_$phoenix_$Color.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Color
};
var phoenix__$Shader_Uniform_$phoenix_$Matrix = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Matrix"] = phoenix__$Shader_Uniform_$phoenix_$Matrix;
phoenix__$Shader_Uniform_$phoenix_$Matrix.__name__ = ["phoenix","_Shader","Uniform_phoenix_Matrix"];
phoenix__$Shader_Uniform_$phoenix_$Matrix.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Matrix
};
var phoenix__$Shader_Uniform_$phoenix_$Texture = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Texture"] = phoenix__$Shader_Uniform_$phoenix_$Texture;
phoenix__$Shader_Uniform_$phoenix_$Texture.__name__ = ["phoenix","_Shader","Uniform_phoenix_Texture"];
phoenix__$Shader_Uniform_$phoenix_$Texture.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Texture
};
var phoenix__$Shader_Uniform_$phoenix_$Vector = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Vector"] = phoenix__$Shader_Uniform_$phoenix_$Vector;
phoenix__$Shader_Uniform_$phoenix_$Vector.__name__ = ["phoenix","_Shader","Uniform_phoenix_Vector"];
phoenix__$Shader_Uniform_$phoenix_$Vector.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Vector
};
var phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_snow_api_buffers_Float32Array"] = phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array;
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.__name__ = ["phoenix","_Shader","Uniform_snow_api_buffers_Float32Array"];
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.prototype = {
	__class__: phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array
};
var phoenix_geometry_Geometry = function(_options) {
	this._prev_count = 0;
	this.dirty_based = true;
	this.dirty = false;
	this.locked = false;
	this.immediate = false;
	this.visible = true;
	this.dirty_blend = false;
	this.dirty_clip = false;
	this.dirty_depth = false;
	this.dirty_shader = false;
	this.dirty_texture = false;
	this.dirty_primitive_type = false;
	this.shadow_blend_dest_rgb = 771;
	this.shadow_blend_dest_alpha = 771;
	this.shadow_blend_src_rgb = 770;
	this.shadow_blend_src_alpha = 770;
	this.shadow_clip = false;
	this.shadow_depth = 0.0;
	this.blend_dest_rgb = 771;
	this.blend_dest_alpha = 771;
	this.blend_src_rgb = 770;
	this.blend_src_alpha = 770;
	this.id = "";
	this.uuid = "";
	this.dropped = false;
	this.added = false;
	this.buffer_type = 35048;
	this.buffer_based = false;
	this.object_space = false;
	this.uuid = Luxe.utils.uniqueid();
	this.id = this.uuid;
	this.state = new phoenix_geometry_GeometryState();
	this.vertices = [];
	this.batchers = [];
	this.transform = new phoenix_Transform();
	this._final_vert_position = new phoenix_Vector();
	this.set_clip_rect(null);
	this.set_clip(false);
	var _do_add = true;
	if(_options.id == null) {
		_options.id = this.uuid;
	}
	this.id = _options.id;
	if(_options.color == null) {
		_options.color = new phoenix_Color();
	}
	this.set_color(_options.color);
	if(_options.visible == null) {
		_options.visible = true;
	}
	this.set_visible(_options.visible);
	if(_options.immediate == null) {
		_options.immediate = false;
	}
	this.immediate = _options.immediate;
	if(_options.buffer_based == null) {
		_options.buffer_based = false;
	}
	this.buffer_based = _options.buffer_based;
	if(_options.object_space == null) {
		_options.object_space = false;
	}
	this.object_space = _options.object_space;
	if(_options.depth == null) {
		_options.depth = this.state.depth;
	}
	this.state.depth = _options.depth;
	var _this = this.state;
	if(_options.texture == null) {
		_options.texture = this.state.texture;
	}
	_this.dirty = true;
	_this.texture = _options.texture;
	var _this1 = this.state;
	if(_options.primitive_type == null) {
		_options.primitive_type = this.state.primitive_type;
	}
	_this1.dirty = true;
	_this1.primitive_type = _options.primitive_type;
	var _this2 = this.state;
	if(_options.shader == null) {
		_options.shader = this.state.shader;
	}
	_this2.dirty = true;
	_this2.shader = _options.shader;
	if(_options.clip_rect != null) {
		var _r = _options.clip_rect;
		var _this3 = this.state;
		_this3.dirty = true;
		_this3.clip_x = _r.x;
		var _this4 = this.state;
		_this4.dirty = true;
		_this4.clip_y = _r.y;
		var _this5 = this.state;
		_this5.dirty = true;
		_this5.clip_w = _r.w;
		var _this6 = this.state;
		_this6.dirty = true;
		_this6.clip_h = _r.h;
	}
	if(_options.pos == null) {
		_options.pos = this.transform.local.pos;
	}
	var value = _options.pos;
	var _this7 = this.transform.local;
	_this7.pos = value;
	if(value != null) {
		var _v = _this7.pos;
		var listener = $bind(_this7,_this7._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(_this7.pos_changed != null && !_this7.ignore_listeners) {
			_this7.pos_changed(_this7.pos);
		}
	}
	if(_options.rotation == null) {
		_options.rotation = this.transform.local.rotation;
	}
	var value1 = _options.rotation;
	var _this8 = this.transform.local;
	_this8.rotation = value1;
	if(value1 != null) {
		var _q = _this8.rotation;
		var listener1 = $bind(_this8,_this8._rotation_change);
		_q.listen_x = listener1;
		_q.listen_y = listener1;
		_q.listen_z = listener1;
		_q.listen_w = listener1;
		if(_this8.rotation_changed != null && !_this8.ignore_listeners) {
			_this8.rotation_changed(_this8.rotation);
		}
	}
	if(_options.scale == null) {
		_options.scale = this.transform.local.scale;
	}
	var value2 = _options.scale;
	var _this9 = this.transform.local;
	_this9.scale = value2;
	if(value2 != null) {
		var _v1 = _this9.scale;
		var listener2 = $bind(_this9,_this9._scale_change);
		_v1.listen_x = listener2;
		_v1.listen_y = listener2;
		_v1.listen_z = listener2;
		if(_this9.scale_changed != null && !_this9.ignore_listeners) {
			_this9.scale_changed(_this9.scale);
		}
	}
	var _this10 = this.transform;
	if(_options.origin == null) {
		_options.origin = this.transform.origin;
	}
	var o = _options.origin;
	_this10.dirty = true;
	if(_this10.dirty && !_this10._setup && _this10._dirty_handlers != null && _this10._dirty_handlers.length > 0) {
		var _g = 0;
		var _g1 = _this10._dirty_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_this10);
			}
		}
	}
	_this10.origin = o;
	if(_this10._origin_handlers != null && _this10._origin_handlers.length > 0) {
		var _origin = _this10.origin;
		var _g2 = 0;
		var _g11 = _this10._origin_handlers;
		while(_g2 < _g11.length) {
			var _handler1 = _g11[_g2];
			++_g2;
			if(_handler1 != null) {
				_handler1(_origin);
			}
		}
	}
	if(_options.no_batcher_add != null && _options.no_batcher_add == true) {
		_do_add = false;
	}
	phoenix_geometry_Geometry._sequence_key++;
	this.key = new phoenix_geometry_GeometryKey();
	this.key.uuid = this.uuid;
	var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	this.key.timestamp = tmp;
	this.key.sequence = phoenix_geometry_Geometry._sequence_key;
	this.key.primitive_type = this.state.primitive_type;
	this.key.texture = this.state.texture;
	this.key.shader = this.state.shader;
	this.key.depth = this.state.depth;
	this.key.clip = this.state.clip;
	this.key.blend_src_alpha = this.state.blend_src_alpha;
	this.key.blend_src_rgb = this.state.blend_src_rgb;
	this.key.blend_dest_alpha = this.state.blend_dest_alpha;
	this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	this.transform.id = this.uuid;
	this.transform.name = this.id;
	if(_options.batcher != null && _do_add) {
		_options.batcher.add(this);
	}
	if(this.buffer_based) {
		if(this.vb_pos == null) {
			this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
			this.set_dirty(true);
		}
	}
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.geometry.Geometry"] = phoenix_geometry_Geometry;
phoenix_geometry_Geometry.__name__ = ["phoenix","geometry","Geometry"];
phoenix_geometry_Geometry.prototype = {
	key_string: function() {
		return "ts: " + this.key.timestamp + "\n" + "sequence: " + this.key.sequence + "\n" + "primitive_type: " + this.key.primitive_type + "\n" + "texture: " + (this.key.texture == null ? "null" : this.key.texture.id) + "\n" + "shader: " + (this.key.shader == null ? "null" : this.key.shader.id) + "\n" + "depth: " + this.key.depth + "\n" + "clip: " + Std.string(this.key.clip);
	}
	,refresh_key: function() {
		this.key.uuid = this.uuid;
		var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.key.timestamp = tmp;
		this.key.primitive_type = this.state.primitive_type;
		this.key.texture = this.state.texture;
		this.key.shader = this.state.shader;
		this.key.depth = this.state.depth;
		this.key.clip = this.state.clip;
		this.key.blend_src_alpha = this.state.blend_src_alpha;
		this.key.blend_src_rgb = this.state.blend_src_rgb;
		this.key.blend_dest_alpha = this.state.blend_dest_alpha;
		this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	}
	,str: function() {
		if(!this.state.log) {
			return;
		}
		haxe_Log.trace("\t\tgeometry ; " + this.id,{ fileName : "Geometry.hx", lineNumber : 236, className : "phoenix.geometry.Geometry", methodName : "str"});
		this.state.log = true;
		this.state.str();
		this.state.log = false;
	}
	,drop: function(remove) {
		if(remove == null) {
			remove = true;
		}
		if(remove && this.added) {
			var _g = 0;
			var _g1 = this.batchers;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				b.remove(this,true);
			}
		}
		this.key = null;
		this.set_color(null);
		this.state = null;
		this._final_vert_position = null;
		this.batchers = null;
		this.uuid = null;
		this.id = null;
		this.shadow_texture = null;
		this.shadow_shader = null;
		this.vertices = null;
		if(this.transform != null) {
			this.transform.destroy();
			this.transform = null;
		}
		if(this.uniforms != null) {
			this.uniforms.destroy();
			this.uniforms = null;
		}
		this.destroy_vbos();
		if(this.buffer_pos != null) {
			this.buffer_pos = null;
			this.buffer_tcoords = null;
			this.buffer_colors = null;
			this.buffer_normals = null;
		}
		this.dropped = true;
	}
	,add: function(v) {
		this.vertices.push(v);
	}
	,remove: function(v) {
		HxOverrides.remove(this.vertices,v);
	}
	,batch_object_space: function(vert_index,tcoord_index,color_index,normal_index,vertlist,tcoordlist,colorlist,normallist) {
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var _vpos = v.pos;
			var _vuv = v.uv.uv0;
			var _vcol = v.color;
			vertlist[vert_index] = _vpos.x;
			vertlist[vert_index + 1] = _vpos.y;
			vertlist[vert_index + 2] = _vpos.z;
			vertlist[vert_index + 3] = _vpos.w;
			vert_index += 4;
			tcoordlist[tcoord_index] = _vuv.u;
			tcoordlist[tcoord_index + 1] = _vuv.v;
			tcoordlist[tcoord_index + 2] = _vuv.w;
			tcoordlist[tcoord_index + 3] = _vuv.t;
			tcoord_index += 4;
			colorlist[color_index] = _vcol.r;
			colorlist[color_index + 1] = _vcol.g;
			colorlist[color_index + 2] = _vcol.b;
			colorlist[color_index + 3] = _vcol.a;
			color_index += 4;
		}
	}
	,batch_into_arrays: function(vertlist,tcoordlist,colorlist,normallist) {
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var _this = this._final_vert_position;
			var _x = v.pos.x;
			var _y = v.pos.y;
			var _z = v.pos.z;
			var _w = v.pos.w;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.w = _w;
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
			var _this1 = this._final_vert_position;
			var _this2 = this.transform;
			if(!_this2._destroying) {
				if(_this2.parent != null && _this2.parent.dirty) {
					_this2.parent.clean_check();
				}
				if(_this2.dirty && !_this2._cleaning && !_this2.manual_update) {
					_this2.clean();
				}
			}
			var _x1 = _this1.x;
			var _y1 = _this1.y;
			var _z1 = _this1.z;
			var e = _this2.world.matrix.elements;
			var _x2 = e[0] * _x1 + e[4] * _y1 + e[8] * _z1 + e[12];
			var _y2 = e[1] * _x1 + e[5] * _y1 + e[9] * _z1 + e[13];
			var _z2 = e[2] * _x1 + e[6] * _y1 + e[10] * _z1 + e[14];
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x2);
				}
			}
			_this1.y = _y2;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y2);
				}
			}
			_this1.z = _z2;
			if(!_this1._construct) {
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_z2);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_this1.z);
			}
			vertlist.push(this._final_vert_position.x);
			vertlist.push(this._final_vert_position.y);
			vertlist.push(this._final_vert_position.z);
			vertlist.push(this._final_vert_position.w);
			tcoordlist.push(v.uv.uv0.u);
			tcoordlist.push(v.uv.uv0.v);
			tcoordlist.push(v.uv.uv0.w);
			tcoordlist.push(v.uv.uv0.t);
			colorlist.push(v.color.r);
			colorlist.push(v.color.g);
			colorlist.push(v.color.b);
			colorlist.push(v.color.a);
		}
	}
	,destroy_vbos: function() {
		if(this.vb_pos == null) {
			return;
		}
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_pos);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_colors);
	}
	,create_vbos: function() {
		if(this.vb_pos != null) {
			return;
		}
		this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
		this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
		this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
		this.set_dirty(true);
	}
	,bind: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
	}
	,bind_pos: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
	}
	,bind_tcoords: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
	}
	,bind_colors: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
	}
	,unbind: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,null);
	}
	,bind_and_upload: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_pos,this.buffer_type);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_tcoords,this.buffer_type);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_colors,this.buffer_type);
	}
	,update_buffers: function() {
		if(!this.dirty && this.dirty_based) {
			return false;
		}
		if(this.vertices.length != this._prev_count || this.buffer_pos == null) {
			var _length = this.vertices.length * 4;
			this.buffer_pos = null;
			this.buffer_normals = null;
			this.buffer_colors = null;
			this.buffer_tcoords = null;
			this.buffer_pos = new Float32Array(_length);
			this.buffer_tcoords = new Float32Array(_length);
			this.buffer_colors = new Float32Array(_length);
		}
		if(this.object_space) {
			var vert_index = 0;
			var tcoord_index = 0;
			var color_index = 0;
			var vertlist = this.buffer_pos;
			var tcoordlist = this.buffer_tcoords;
			var colorlist = this.buffer_colors;
			var _g = 0;
			var _g1 = this.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				var _vpos = v.pos;
				var _vuv = v.uv.uv0;
				var _vcol = v.color;
				vertlist[vert_index] = _vpos.x;
				vertlist[vert_index + 1] = _vpos.y;
				vertlist[vert_index + 2] = _vpos.z;
				vertlist[vert_index + 3] = _vpos.w;
				vert_index += 4;
				tcoordlist[tcoord_index] = _vuv.u;
				tcoordlist[tcoord_index + 1] = _vuv.v;
				tcoordlist[tcoord_index + 2] = _vuv.w;
				tcoordlist[tcoord_index + 3] = _vuv.t;
				tcoord_index += 4;
				colorlist[color_index] = _vcol.r;
				colorlist[color_index + 1] = _vcol.g;
				colorlist[color_index + 2] = _vcol.b;
				colorlist[color_index + 3] = _vcol.a;
				color_index += 4;
			}
		} else {
			var vert_index1 = 0;
			var tcoord_index1 = 0;
			var color_index1 = 0;
			var vertlist1 = this.buffer_pos;
			var tcoordlist1 = this.buffer_tcoords;
			var colorlist1 = this.buffer_colors;
			var _this = this.transform;
			if(!_this._destroying) {
				if(_this.parent != null && _this.parent.dirty) {
					_this.parent.clean_check();
				}
				if(_this.dirty && !_this._cleaning && !_this.manual_update) {
					_this.clean();
				}
			}
			var _el = _this.world.matrix.elements;
			var _count = this.vertices.length;
			var _idx = 0;
			while(_idx < _count) {
				var v1 = this.vertices[_idx];
				var _vx = v1.pos.x;
				var _vy = v1.pos.y;
				var _vz = v1.pos.z;
				var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
				var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
				vertlist1[vert_index1] = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
				vertlist1[vert_index1 + 1] = _tvy;
				vertlist1[vert_index1 + 2] = _tvz;
				vertlist1[vert_index1 + 3] = v1.pos.w;
				vert_index1 += 4;
				var _vuv1 = v1.uv.uv0;
				tcoordlist1[tcoord_index1] = _vuv1.u;
				tcoordlist1[tcoord_index1 + 1] = _vuv1.v;
				tcoordlist1[tcoord_index1 + 2] = _vuv1.w;
				tcoordlist1[tcoord_index1 + 3] = _vuv1.t;
				tcoord_index1 += 4;
				colorlist1[color_index1] = v1.color.r;
				colorlist1[color_index1 + 1] = v1.color.g;
				colorlist1[color_index1 + 2] = v1.color.b;
				colorlist1[color_index1 + 3] = v1.color.a;
				color_index1 += 4;
				++_idx;
			}
		}
		this.set_dirty(false);
		return true;
	}
	,draw: function() {
		snow_modules_opengl_web_GL.gl.drawArrays(this.state.primitive_type,0,this.buffer_pos.length / 4 | 0);
	}
	,translate: function(_offset) {
		var _this = this.transform.local.pos;
		var _x = this.transform.local.pos.x + _offset.x;
		var _y = this.transform.local.pos.y + _offset.y;
		var _z = this.transform.local.pos.x + _offset.z;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
	}
	,set_locked: function(_locked) {
		this.buffer_type = _locked ? 35044 : 35048;
		if(_locked && this.vb_pos == null) {
			if(this.vb_pos == null) {
				this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
				this.set_dirty(true);
			}
		}
		if(!_locked && this.vb_pos != null) {
			this.destroy_vbos();
		}
		return this.locked = _locked;
	}
	,get_locked: function() {
		return this.locked;
	}
	,set_dirty: function(_dirty) {
		return this.dirty = _dirty;
	}
	,get_dirty: function() {
		return this.dirty;
	}
	,refresh: function() {
		var _g = 0;
		var _g1 = this.batchers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.remove(this,false);
		}
		if(this.dirty_primitive_type) {
			this.dirty_primitive_type = false;
			var _this = this.state;
			_this.dirty = true;
			_this.primitive_type = this.shadow_primitive_type;
		}
		if(this.dirty_texture) {
			this.dirty_texture = false;
			var _this1 = this.state;
			_this1.dirty = true;
			_this1.texture = this.shadow_texture;
		}
		if(this.dirty_shader) {
			this.dirty_shader = false;
			var _this2 = this.state;
			_this2.dirty = true;
			_this2.shader = this.shadow_shader;
		}
		if(this.dirty_depth) {
			this.dirty_depth = false;
			this.state.depth = this.shadow_depth;
		}
		if(this.dirty_clip) {
			this.dirty_clip = false;
			var _this3 = this.state;
			_this3.dirty = true;
			_this3.clip = this.shadow_clip;
		}
		if(this.dirty_blend) {
			this.dirty_blend = false;
			var _this4 = this.state;
			_this4.dirty = true;
			_this4.blend_src_alpha = this.shadow_blend_src_alpha;
			var _this5 = this.state;
			_this5.dirty = true;
			_this5.blend_src_rgb = this.shadow_blend_src_rgb;
			var _this6 = this.state;
			_this6.dirty = true;
			_this6.blend_dest_alpha = this.shadow_blend_dest_alpha;
			var _this7 = this.state;
			_this7.dirty = true;
			_this7.blend_dest_rgb = this.shadow_blend_dest_rgb;
		}
		this.refresh_key();
		var _g2 = 0;
		var _g11 = this.batchers;
		while(_g2 < _g11.length) {
			var b1 = _g11[_g2];
			++_g2;
			b1.add(this,false);
		}
	}
	,get_primitive_type: function() {
		return this.state.primitive_type;
	}
	,set_primitive_type: function(val) {
		if(this.state.primitive_type != val) {
			this.shadow_primitive_type = val;
			this.dirty_primitive_type = true;
			this.refresh();
		}
		return this.primitive_type = val;
	}
	,get_texture: function() {
		return this.state.texture;
	}
	,set_texture: function(val) {
		if(this.state.texture != val) {
			this.shadow_texture = val;
			this.dirty_texture = true;
			this.refresh();
		}
		return this.texture = val;
	}
	,set_visible: function(val) {
		return this.visible = val;
	}
	,set_color: function(val) {
		if(this.vertices != null && this.vertices.length > 0) {
			var _g = 0;
			var _g1 = this.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				v.color = val;
			}
		}
		return this.color = val;
	}
	,get_shader: function() {
		return this.state.shader;
	}
	,set_shader: function(val) {
		if(this.state.shader != val) {
			this.shadow_shader = val;
			this.dirty_shader = true;
			this.refresh();
		}
		return this.shader = val;
	}
	,get_depth: function() {
		return this.state.depth;
	}
	,set_depth: function(val) {
		if(this.state.depth != val) {
			this.shadow_depth = val;
			this.dirty_depth = true;
			this.refresh();
		}
		return this.depth = val;
	}
	,get_blend_src_alpha: function() {
		return this.state.blend_src_alpha;
	}
	,get_blend_src_rgb: function() {
		return this.state.blend_src_rgb;
	}
	,get_blend_dest_alpha: function() {
		return this.state.blend_dest_alpha;
	}
	,get_blend_dest_rgb: function() {
		return this.state.blend_dest_rgb;
	}
	,set_blend_src_alpha: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_src_alpha != val) {
			this.shadow_blend_src_alpha = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_src_alpha = val;
	}
	,set_blend_src_rgb: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_src_rgb != val) {
			this.shadow_blend_src_rgb = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_src_rgb = val;
	}
	,set_blend_dest_alpha: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_dest_alpha != val) {
			this.shadow_blend_dest_alpha = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_dest_alpha = val;
	}
	,set_blend_dest_rgb: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_dest_rgb != val) {
			this.shadow_blend_dest_rgb = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_dest_rgb = val;
	}
	,get_clip: function() {
		return this.state.clip;
	}
	,set_clip: function(val) {
		if(this.state.clip != val) {
			this.shadow_clip = val;
			this.dirty_clip = true;
			this.refresh();
		}
		return this.clip = val;
	}
	,get_clip_rect: function() {
		return this.clip_rect;
	}
	,set_clip_rect: function(val) {
		if(val == null) {
			this.set_clip(false);
		} else {
			this.set_clip(true);
			var _this = this.state;
			_this.dirty = true;
			_this.clip_x = val.x;
			var _this1 = this.state;
			_this1.dirty = true;
			_this1.clip_y = val.y;
			var _this2 = this.state;
			_this2.dirty = true;
			_this2.clip_w = val.w;
			var _this3 = this.state;
			_this3.dirty = true;
			_this3.clip_h = val.h;
		}
		return this.clip_rect = val;
	}
	,__class__: phoenix_geometry_Geometry
	,__properties__: {set_clip:"set_clip",get_clip:"get_clip",set_color:"set_color",set_dirty:"set_dirty",get_dirty:"get_dirty",set_locked:"set_locked",get_locked:"get_locked",set_visible:"set_visible",set_blend_dest_rgb:"set_blend_dest_rgb",get_blend_dest_rgb:"get_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",get_blend_dest_alpha:"get_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",get_blend_src_rgb:"get_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",get_blend_src_alpha:"get_blend_src_alpha",set_clip_rect:"set_clip_rect",get_clip_rect:"get_clip_rect",set_depth:"set_depth",get_depth:"get_depth",set_shader:"set_shader",get_shader:"get_shader",set_texture:"set_texture",get_texture:"get_texture",set_primitive_type:"set_primitive_type",get_primitive_type:"get_primitive_type"}
};
var phoenix_geometry_RingGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	var _radius_x = 32.0;
	var _radius_y = 32.0;
	if(_options.end_angle == null) {
		_options.end_angle = 360;
	}
	if(_options.start_angle == null) {
		_options.start_angle = 0;
	}
	if(_options.r != null) {
		_radius_x = _options.r;
		_radius_y = _options.r;
	}
	if(_options.rx != null) {
		_radius_x = _options.rx;
	}
	if(_options.ry != null) {
		_radius_y = _options.ry;
	}
	if(_options.steps == null) {
		if(_options.smooth == null) {
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(Math.max(_radius_x,_radius_y));
		} else {
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(Math.max(_radius_x,_radius_y),_options.smooth);
		}
	}
	this.set(_options.x,_options.y,_radius_x,_radius_y,_options.steps,_options.start_angle,_options.end_angle);
};
$hxClasses["phoenix.geometry.RingGeometry"] = phoenix_geometry_RingGeometry;
phoenix_geometry_RingGeometry.__name__ = ["phoenix","geometry","RingGeometry"];
phoenix_geometry_RingGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_RingGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set: function(_x,_y,_rx,_ry,_steps,_start_angle_degrees,_end_angle_degrees) {
		if(_end_angle_degrees == null) {
			_end_angle_degrees = 360;
		}
		if(_start_angle_degrees == null) {
			_start_angle_degrees = 0;
		}
		var _start_angle_rad = _start_angle_degrees * 0.0174532925199432781;
		var theta = (_end_angle_degrees * 0.0174532925199432781 - _start_angle_rad) / _steps;
		var tangential_factor = Math.tan(theta);
		var radial_factor = Math.cos(theta);
		var x = _rx * Math.cos(_start_angle_rad);
		var y = _rx * Math.sin(_start_angle_rad);
		var radial_ratio = _rx / _ry;
		if(radial_ratio == 0) {
			radial_ratio = 0.000000001;
		}
		var _index = 0;
		var _segment_pos = [];
		var _g1 = 0;
		while(_g1 < _steps) {
			++_g1;
			var _seg = new phoenix_Vector(x,y / radial_ratio);
			_segment_pos.push(_seg);
			this.add(new phoenix_geometry_Vertex(_seg,this.color));
			if(_index > 0) {
				var prevvert = _segment_pos[_index];
				this.add(new phoenix_geometry_Vertex(new phoenix_Vector(prevvert.x,prevvert.y,prevvert.z,prevvert.w),this.color));
			}
			var ty = x;
			x += -y * tangential_factor;
			y += ty * tangential_factor;
			x *= radial_factor;
			y *= radial_factor;
			++_index;
		}
		if(_segment_pos.length > 0) {
			var _this = _segment_pos[0];
			this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_this.x,_this.y,_this.z,_this.w),this.color));
		}
		var _this1 = this.transform;
		var value = new phoenix_Vector(_x,_y);
		var _this2 = _this1.local;
		_this2.pos = value;
		if(value != null) {
			var _v = _this2.pos;
			var listener = $bind(_this2,_this2._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this2.pos_changed != null && !_this2.ignore_listeners) {
				_this2.pos_changed(_this2.pos);
			}
		}
	}
	,__class__: phoenix_geometry_RingGeometry
});
var phoenix_geometry_ArcGeometry = function(_options) {
	phoenix_geometry_RingGeometry.call(this,_options);
	this.vertices.pop();
	this.vertices.pop();
};
$hxClasses["phoenix.geometry.ArcGeometry"] = phoenix_geometry_ArcGeometry;
phoenix_geometry_ArcGeometry.__name__ = ["phoenix","geometry","ArcGeometry"];
phoenix_geometry_ArcGeometry.__super__ = phoenix_geometry_RingGeometry;
phoenix_geometry_ArcGeometry.prototype = $extend(phoenix_geometry_RingGeometry.prototype,{
	__class__: phoenix_geometry_ArcGeometry
});
var phoenix_geometry_CircleGeometry = function(_options) {
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	var _radius_x = 32.0;
	var _radius_y = 32.0;
	if(_options.end_angle == null) {
		_options.end_angle = 360;
	}
	if(_options.start_angle == null) {
		_options.start_angle = 0;
	}
	if(_options.r != null) {
		_radius_x = _options.r;
		_radius_y = _options.r;
	}
	if(_options.rx != null) {
		_radius_x = _options.rx;
	}
	if(_options.ry != null) {
		_radius_y = _options.ry;
	}
	if(_options.steps == null) {
		if(_options.smooth == null) {
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(Math.max(_radius_x,_radius_y));
		} else {
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(Math.max(_radius_x,_radius_y),_options.smooth);
		}
	}
	this.set(_options.x,_options.y,_radius_x,_radius_y,_options.steps,_options.start_angle,_options.end_angle);
};
$hxClasses["phoenix.geometry.CircleGeometry"] = phoenix_geometry_CircleGeometry;
phoenix_geometry_CircleGeometry.__name__ = ["phoenix","geometry","CircleGeometry"];
phoenix_geometry_CircleGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_CircleGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set: function(_x,_y,_rx,_ry,_steps,_start_angle,_end_angle) {
		if(_end_angle == null) {
			_end_angle = 360;
		}
		if(_start_angle == null) {
			_start_angle = 0;
		}
		var half_pi = Math.PI / 2;
		var _start_angle_rad = _start_angle * 0.0174532925199432781 - half_pi;
		var _range = _end_angle * 0.0174532925199432781 - half_pi - _start_angle_rad;
		_steps = Math.ceil(Math.abs(_range) / (Math.PI * 2) * _steps);
		var theta = _range / _steps;
		var tangential_factor = Math.tan(theta);
		var radial_factor = Math.cos(theta);
		var x = _rx * Math.cos(_start_angle_rad);
		var y = _rx * Math.sin(_start_angle_rad);
		var radial_ratio = _rx / _ry;
		if(radial_ratio == 0) {
			radial_ratio = 0.000000001;
		}
		var _index = 0;
		var _segment_pos = [];
		var _g1 = 0;
		var _g = _steps + 1;
		while(_g1 < _g) {
			++_g1;
			var _seg = new phoenix_Vector(x,y / radial_ratio);
			_segment_pos.push(_seg);
			if(_index > 0) {
				this.add(new phoenix_geometry_Vertex(_seg,this.color));
			}
			this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
			this.add(new phoenix_geometry_Vertex(_seg,this.color));
			var ty = x;
			x += -y * tangential_factor;
			y += ty * tangential_factor;
			x *= radial_factor;
			y *= radial_factor;
			++_index;
		}
		this.add(new phoenix_geometry_Vertex(_segment_pos[_steps],this.color));
		var _this = this.transform;
		var value = new phoenix_Vector(_x,_y);
		var _this1 = _this.local;
		_this1.pos = value;
		if(value != null) {
			var _v = _this1.pos;
			var listener = $bind(_this1,_this1._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this1.pos_changed != null && !_this1.ignore_listeners) {
				_this1.pos_changed(_this1.pos);
			}
		}
	}
	,__class__: phoenix_geometry_CircleGeometry
});
var phoenix_geometry_GeometryKey = function() {
	this.blend_dest_rgb = 0;
	this.blend_dest_alpha = 0;
	this.blend_src_rgb = 0;
	this.blend_src_alpha = 0;
	this.clip = false;
	this.depth = 0;
	this.uuid = "";
	this.sequence = 0;
	this.timestamp = 0;
};
$hxClasses["phoenix.geometry.GeometryKey"] = phoenix_geometry_GeometryKey;
phoenix_geometry_GeometryKey.__name__ = ["phoenix","geometry","GeometryKey"];
phoenix_geometry_GeometryKey.prototype = {
	__class__: phoenix_geometry_GeometryKey
};
var phoenix_geometry_GeometryState = function() {
	this.blend_dest_rgb = 771;
	this.blend_dest_alpha = 771;
	this.blend_src_rgb = 770;
	this.blend_src_alpha = 770;
	this.clip_h = 0;
	this.clip_w = 0;
	this.clip_y = 0;
	this.clip_x = 0;
	this.clip = false;
	this.depth = 0.0;
	this.ignore_blend = true;
	this.log = false;
	this.dirty = false;
	this.dirty = true;
	this.texture = null;
	this.dirty = true;
	this.shader = null;
	this.dirty = true;
	this.primitive_type = 0;
};
$hxClasses["phoenix.geometry.GeometryState"] = phoenix_geometry_GeometryState;
phoenix_geometry_GeometryState.__name__ = ["phoenix","geometry","GeometryState"];
phoenix_geometry_GeometryState.prototype = {
	clone_onto: function(_other) {
		_other.dirty = this.dirty;
		_other.dirty = true;
		_other.texture = this.texture;
		_other.dirty = true;
		_other.shader = this.shader;
		_other.depth = this.depth;
		_other.dirty = true;
		_other.primitive_type = this.primitive_type;
		_other.dirty = true;
		_other.clip = this.clip;
		_other.dirty = true;
		_other.clip_x = this.clip_x;
		_other.dirty = true;
		_other.clip_y = this.clip_y;
		_other.dirty = true;
		_other.clip_w = this.clip_w;
		_other.dirty = true;
		_other.clip_h = this.clip_h;
		_other.dirty = true;
		_other.blend_src_alpha = this.blend_src_alpha;
		_other.dirty = true;
		_other.blend_src_rgb = this.blend_src_rgb;
		_other.dirty = true;
		_other.blend_dest_alpha = this.blend_dest_alpha;
		_other.dirty = true;
		_other.blend_dest_rgb = this.blend_dest_rgb;
		_other.ignore_blend = this.ignore_blend;
	}
	,str: function() {
		if(!this.log) {
			return;
		}
		haxe_Log.trace("\t+ GEOMETRYSTATE " + Std.string(this.dirty),{ fileName : "GeometryState.hx", lineNumber : 65, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.depth,{ fileName : "GeometryState.hx", lineNumber : 66, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.texture == null ? "null" : this.texture.id),{ fileName : "GeometryState.hx", lineNumber : 67, className : "phoenix.geometry.GeometryState", methodName : "str"});
		if(this.texture != null) {
			haxe_Log.trace("\t\t\t " + Std.string(this.texture.texture),{ fileName : "GeometryState.hx", lineNumber : 69, className : "phoenix.geometry.GeometryState", methodName : "str"});
		}
		haxe_Log.trace("\t\tshader - " + (this.shader == null ? "null" : this.shader.id),{ fileName : "GeometryState.hx", lineNumber : 71, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.primitive_type,{ fileName : "GeometryState.hx", lineNumber : 72, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.clip),{ fileName : "GeometryState.hx", lineNumber : 73, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tclip rect - " + this.clip_x + "," + this.clip_y + "," + this.clip_w + "," + this.clip_h,{ fileName : "GeometryState.hx", lineNumber : 74, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tblend - src_alpha(" + this.blend_src_alpha + ") src_rgb(" + this.blend_src_rgb + ") dest_alpha(" + this.blend_dest_alpha + ") dest_rgb(" + this.blend_dest_rgb + ")",{ fileName : "GeometryState.hx", lineNumber : 75, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t- GEOMETRYSTATE",{ fileName : "GeometryState.hx", lineNumber : 76, className : "phoenix.geometry.GeometryState", methodName : "str"});
	}
	,clean: function() {
		this.dirty = false;
	}
	,set_primitive_type: function(val) {
		this.dirty = true;
		return this.primitive_type = val;
	}
	,set_texture: function(val) {
		this.dirty = true;
		return this.texture = val;
	}
	,set_shader: function(val) {
		this.dirty = true;
		return this.shader = val;
	}
	,set_depth: function(val) {
		return this.depth = val;
	}
	,set_clip: function(val) {
		this.dirty = true;
		return this.clip = val;
	}
	,set_clip_x: function(val) {
		this.dirty = true;
		return this.clip_x = val;
	}
	,set_clip_y: function(val) {
		this.dirty = true;
		return this.clip_y = val;
	}
	,set_clip_w: function(val) {
		this.dirty = true;
		return this.clip_w = val;
	}
	,set_clip_h: function(val) {
		this.dirty = true;
		return this.clip_h = val;
	}
	,set_blend_src_alpha: function(val) {
		this.dirty = true;
		return this.blend_src_alpha = val;
	}
	,set_blend_src_rgb: function(val) {
		this.dirty = true;
		return this.blend_src_rgb = val;
	}
	,set_blend_dest_alpha: function(val) {
		this.dirty = true;
		return this.blend_dest_alpha = val;
	}
	,set_blend_dest_rgb: function(val) {
		this.dirty = true;
		return this.blend_dest_rgb = val;
	}
	,__class__: phoenix_geometry_GeometryState
	,__properties__: {set_blend_dest_rgb:"set_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",set_clip_h:"set_clip_h",set_clip_w:"set_clip_w",set_clip_y:"set_clip_y",set_clip_x:"set_clip_x",set_clip:"set_clip",set_depth:"set_depth",set_texture:"set_texture",set_shader:"set_shader",set_primitive_type:"set_primitive_type"}
};
var phoenix_geometry_LineGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	if(_options.color == null) {
		_options.color = new phoenix_Color();
	}
	if(_options.color0 == null) {
		_options.color0 = _options.color;
	}
	if(_options.color1 == null) {
		_options.color1 = _options.color;
	}
	if(_options.p0 == null) {
		_options.p0 = new phoenix_Vector();
	}
	this.set_p0(_options.p0);
	if(_options.p1 == null) {
		_options.p1 = new phoenix_Vector(64,64);
	}
	this.set_p1(_options.p1);
	this.add(new phoenix_geometry_Vertex(this.p0,_options.color0));
	this.add(new phoenix_geometry_Vertex(this.p1,_options.color1));
};
$hxClasses["phoenix.geometry.LineGeometry"] = phoenix_geometry_LineGeometry;
phoenix_geometry_LineGeometry.__name__ = ["phoenix","geometry","LineGeometry"];
phoenix_geometry_LineGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_LineGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set_p0: function(_p) {
		this.p0 = _p;
		if(this.vertices.length == 0) {
			return this.p0;
		}
		this.vertices[0].pos = this.p0;
		return this.p0 = _p;
	}
	,set_p1: function(_p) {
		this.p1 = _p;
		if(this.vertices.length == 0) {
			return this.p1;
		}
		this.vertices[1].pos = this.p1;
		return this.p1 = _p;
	}
	,set_color0: function(_c) {
		this.color0 = _c;
		if(this.vertices.length == 0) {
			return this.color0;
		}
		this.vertices[0].color = this.color0;
		return this.color0;
	}
	,set_color1: function(_c) {
		this.color1 = _c;
		if(this.vertices.length == 0) {
			return this.color1;
		}
		this.vertices[1].color = this.color1;
		return this.color1;
	}
	,__class__: phoenix_geometry_LineGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_color1:"set_color1",set_color0:"set_color0",set_p1:"set_p1",set_p0:"set_p0"})
});
var phoenix_geometry_QuadGeometry = function(_options) {
	this._uv_h = 1;
	this._uv_w = 1;
	this._uv_y = 0;
	this._uv_x = 0;
	this.uv_angle = 0;
	this.flipy = false;
	this.flipx = false;
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	if(_options.flipx != null) {
		this.set_flipx(_options.flipx);
	}
	if(_options.flipy != null) {
		this.set_flipy(_options.flipy);
	}
	var _x = _options.x;
	var _y = _options.y;
	var _w = _options.w;
	var _h = _options.h;
	if(_options.rect != null) {
		_x = _options.rect.x;
		_y = _options.rect.y;
		_w = _options.rect.w;
		_h = _options.rect.h;
	}
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	var _this = this.transform;
	var _this1 = this.transform.local.pos;
	var prev = _this1.ignore_listeners;
	_this1.ignore_listeners = true;
	_this1.x = _x;
	if(!_this1._construct) {
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_x);
		}
	}
	_this1.y = _y;
	if(!_this1._construct) {
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_y);
		}
	}
	_this1.ignore_listeners = prev;
	if(_this1.listen_x != null && !_this1.ignore_listeners) {
		_this1.listen_x(_this1.x);
	}
	if(_this1.listen_y != null && !_this1.ignore_listeners) {
		_this1.listen_y(_this1.y);
	}
	var _this2 = _this.local;
	_this2.pos = _this1;
	if(_this1 != null) {
		var _v = _this2.pos;
		var listener = $bind(_this2,_this2._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(_this2.pos_changed != null && !_this2.ignore_listeners) {
			_this2.pos_changed(_this2.pos);
		}
	}
	if(_options.uv != null) {
		var _rect = _options.uv;
		if(this.state.texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
		}
		var tlx = _rect.x / this.state.texture.width_actual;
		var tly = _rect.y / this.state.texture.height_actual;
		var szx = _rect.w / this.state.texture.width_actual;
		var szy = _rect.h / this.state.texture.height_actual;
		if(this.vertices.length != 0) {
			var tl_x = tlx;
			var tl_y = tly;
			this._uv_x = tlx;
			this._uv_y = tly;
			this._uv_w = szx;
			this._uv_h = szy;
			var tr_x = tlx + szx;
			var tr_y = tly;
			var br_x = tlx + szx;
			var br_y = tly + szy;
			var bl_x = tlx;
			var bl_y = tly + szy;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this3 = this.vertices[0].uv.uv0;
			_this3.u = tl_x;
			_this3.v = tl_y;
			var _this4 = this.vertices[1].uv.uv0;
			_this4.u = tr_x;
			_this4.v = tr_y;
			var _this5 = this.vertices[2].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			var _this6 = this.vertices[3].uv.uv0;
			_this6.u = bl_x;
			_this6.v = bl_y;
			var _this7 = this.vertices[4].uv.uv0;
			_this7.u = tl_x;
			_this7.v = tl_y;
			var _this8 = this.vertices[5].uv.uv0;
			_this8.u = br_x;
			_this8.v = br_y;
			this.set_dirty(true);
		}
	} else if(this.vertices.length != 0) {
		var sz_x = 1;
		var sz_y = 1;
		var tl_x1 = 0;
		var tl_y1 = 0;
		this._uv_x = tl_x1;
		this._uv_y = tl_y1;
		this._uv_w = sz_x;
		this._uv_h = sz_y;
		var tr_x1 = tl_x1 + sz_x;
		var tr_y1 = tl_y1;
		var br_x1 = tl_x1 + sz_x;
		var br_y1 = tl_y1 + sz_y;
		var bl_x1 = tl_x1;
		var bl_y1 = tl_y1 + sz_y;
		var tmp_x1 = 0.0;
		var tmp_y1 = 0.0;
		var rotations1 = this.uv_angle / 90 | 0;
		rotations1 -= 4 * Math.floor(rotations1 / 4);
		var _g11 = 0;
		var _g2 = rotations1;
		while(_g11 < _g2) {
			++_g11;
			tmp_x1 = tl_x1;
			tl_x1 = bl_x1;
			bl_x1 = br_x1;
			br_x1 = tr_x1;
			tr_x1 = tmp_x1;
			tmp_y1 = tl_y1;
			tl_y1 = bl_y1;
			bl_y1 = br_y1;
			br_y1 = tr_y1;
			tr_y1 = tmp_y1;
		}
		if(this.flipy) {
			tmp_y1 = bl_y1;
			bl_y1 = tl_y1;
			tl_y1 = tmp_y1;
			tmp_x1 = bl_x1;
			bl_x1 = tl_x1;
			tl_x1 = tmp_x1;
			tmp_y1 = br_y1;
			br_y1 = tr_y1;
			tr_y1 = tmp_y1;
			tmp_x1 = br_x1;
			br_x1 = tr_x1;
			tr_x1 = tmp_x1;
		}
		if(this.flipx) {
			tmp_x1 = tr_x1;
			tr_x1 = tl_x1;
			tl_x1 = tmp_x1;
			tmp_y1 = tr_y1;
			tr_y1 = tl_y1;
			tl_y1 = tmp_y1;
			tmp_x1 = br_x1;
			br_x1 = bl_x1;
			bl_x1 = tmp_x1;
			tmp_y1 = br_y1;
			br_y1 = bl_y1;
			bl_y1 = tmp_y1;
		}
		var _this9 = this.vertices[0].uv.uv0;
		_this9.u = tl_x1;
		_this9.v = tl_y1;
		var _this10 = this.vertices[1].uv.uv0;
		_this10.u = tr_x1;
		_this10.v = tr_y1;
		var _this11 = this.vertices[2].uv.uv0;
		_this11.u = br_x1;
		_this11.v = br_y1;
		var _this12 = this.vertices[3].uv.uv0;
		_this12.u = bl_x1;
		_this12.v = bl_y1;
		var _this13 = this.vertices[4].uv.uv0;
		_this13.u = tl_x1;
		_this13.v = tl_y1;
		var _this14 = this.vertices[5].uv.uv0;
		_this14.u = br_x1;
		_this14.v = br_y1;
		this.set_dirty(true);
	}
};
$hxClasses["phoenix.geometry.QuadGeometry"] = phoenix_geometry_QuadGeometry;
phoenix_geometry_QuadGeometry.__name__ = ["phoenix","geometry","QuadGeometry"];
phoenix_geometry_QuadGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_QuadGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	uv: function(_rect) {
		if(this.state.texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
		}
		var tlx = _rect.x / this.state.texture.width_actual;
		var tly = _rect.y / this.state.texture.height_actual;
		var szx = _rect.w / this.state.texture.width_actual;
		var szy = _rect.h / this.state.texture.height_actual;
		if(this.vertices.length != 0) {
			var tl_x = tlx;
			var tl_y = tly;
			this._uv_x = tlx;
			this._uv_y = tly;
			this._uv_w = szx;
			this._uv_h = szy;
			var tr_x = tlx + szx;
			var tr_y = tly;
			var br_x = tlx + szx;
			var br_y = tly + szy;
			var bl_x = tlx;
			var bl_y = tly + szy;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
	}
	,uv_space: function(_rect_x,_rect_y,_rect_w,_rect_h) {
		if(this.vertices.length == 0) {
			return;
		}
		var tl_x = _rect_x;
		var tl_y = _rect_y;
		this._uv_x = _rect_x;
		this._uv_y = _rect_y;
		this._uv_w = _rect_w;
		this._uv_h = _rect_h;
		var tr_x = _rect_x + _rect_w;
		var tr_y = _rect_y;
		var br_x = _rect_x + _rect_w;
		var br_y = _rect_y + _rect_h;
		var bl_x = _rect_x;
		var bl_y = _rect_y + _rect_h;
		var tmp_x = 0.0;
		var tmp_y = 0.0;
		var rotations = this.uv_angle / 90 | 0;
		rotations -= 4 * Math.floor(rotations / 4);
		var _g1 = 0;
		var _g = rotations;
		while(_g1 < _g) {
			++_g1;
			tmp_x = tl_x;
			tl_x = bl_x;
			bl_x = br_x;
			br_x = tr_x;
			tr_x = tmp_x;
			tmp_y = tl_y;
			tl_y = bl_y;
			bl_y = br_y;
			br_y = tr_y;
			tr_y = tmp_y;
		}
		if(this.flipy) {
			tmp_y = bl_y;
			bl_y = tl_y;
			tl_y = tmp_y;
			tmp_x = bl_x;
			bl_x = tl_x;
			tl_x = tmp_x;
			tmp_y = br_y;
			br_y = tr_y;
			tr_y = tmp_y;
			tmp_x = br_x;
			br_x = tr_x;
			tr_x = tmp_x;
		}
		if(this.flipx) {
			tmp_x = tr_x;
			tr_x = tl_x;
			tl_x = tmp_x;
			tmp_y = tr_y;
			tr_y = tl_y;
			tl_y = tmp_y;
			tmp_x = br_x;
			br_x = bl_x;
			bl_x = tmp_x;
			tmp_y = br_y;
			br_y = bl_y;
			bl_y = tmp_y;
		}
		var _this = this.vertices[0].uv.uv0;
		_this.u = tl_x;
		_this.v = tl_y;
		var _this1 = this.vertices[1].uv.uv0;
		_this1.u = tr_x;
		_this1.v = tr_y;
		var _this2 = this.vertices[2].uv.uv0;
		_this2.u = br_x;
		_this2.v = br_y;
		var _this3 = this.vertices[3].uv.uv0;
		_this3.u = bl_x;
		_this3.v = bl_y;
		var _this4 = this.vertices[4].uv.uv0;
		_this4.u = tl_x;
		_this4.v = tl_y;
		var _this5 = this.vertices[5].uv.uv0;
		_this5.u = br_x;
		_this5.v = br_y;
		this.set_dirty(true);
	}
	,resize_xy: function(_x,_y) {
		if(this.vertices.length == 0) {
			return;
		}
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = 0;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(0);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_x);
			}
		}
		_this2.y = _y;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_y);
			}
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(0);
			}
		}
		_this3.y = _y;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_y);
			}
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = 0;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(0);
			}
		}
		_this4.y = 0;
		if(!_this4._construct) {
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(0);
			}
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) {
			_this4.listen_x(_this4.x);
		}
		if(_this4.listen_y != null && !_this4.ignore_listeners) {
			_this4.listen_y(_this4.y);
		}
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _x;
		if(!_this5._construct) {
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_x);
			}
		}
		_this5.y = _y;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_y);
			}
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) {
			_this5.listen_x(_this5.x);
		}
		if(_this5.listen_y != null && !_this5.ignore_listeners) {
			_this5.listen_y(_this5.y);
		}
	}
	,resize: function(quad) {
		this.resize_xy(quad.x,quad.y);
	}
	,set: function(quad) {
		this.set_xywh(quad.x,quad.y,quad.w,quad.h);
	}
	,set_xywh: function(_x,_y,_w,_h) {
		if(this.vertices.length == 0) {
			return;
		}
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _w;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_w);
			}
		}
		_this1.y = 0;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(0);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _w;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_w);
			}
		}
		_this2.y = _h;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_h);
			}
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(0);
			}
		}
		_this3.y = _h;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_h);
			}
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = 0;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(0);
			}
		}
		_this4.y = 0;
		if(!_this4._construct) {
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(0);
			}
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) {
			_this4.listen_x(_this4.x);
		}
		if(_this4.listen_y != null && !_this4.ignore_listeners) {
			_this4.listen_y(_this4.y);
		}
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _w;
		if(!_this5._construct) {
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_w);
			}
		}
		_this5.y = _h;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_h);
			}
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) {
			_this5.listen_x(_this5.x);
		}
		if(_this5.listen_y != null && !_this5.ignore_listeners) {
			_this5.listen_y(_this5.y);
		}
		var _this6 = this.transform;
		var _this7 = this.transform.local.pos;
		var prev6 = _this7.ignore_listeners;
		_this7.ignore_listeners = true;
		_this7.x = _x;
		if(!_this7._construct) {
			if(_this7.listen_x != null && !_this7.ignore_listeners) {
				_this7.listen_x(_x);
			}
		}
		_this7.y = _y;
		if(!_this7._construct) {
			if(_this7.listen_y != null && !_this7.ignore_listeners) {
				_this7.listen_y(_y);
			}
		}
		_this7.ignore_listeners = prev6;
		if(_this7.listen_x != null && !_this7.ignore_listeners) {
			_this7.listen_x(_this7.x);
		}
		if(_this7.listen_y != null && !_this7.ignore_listeners) {
			_this7.listen_y(_this7.y);
		}
		var _this8 = _this6.local;
		_this8.pos = _this7;
		if(_this7 != null) {
			var _v = _this8.pos;
			var listener = $bind(_this8,_this8._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this8.pos_changed != null && !_this8.ignore_listeners) {
				_this8.pos_changed(_this8.pos);
			}
		}
	}
	,set_flipx: function(_val) {
		this.flipx = _val;
		var _rect_x = this._uv_x;
		var _rect_y = this._uv_y;
		var _rect_w = this._uv_w;
		var _rect_h = this._uv_h;
		if(this.vertices.length != 0) {
			var tl_x = _rect_x;
			var tl_y = _rect_y;
			this._uv_x = _rect_x;
			this._uv_y = _rect_y;
			this._uv_w = _rect_w;
			this._uv_h = _rect_h;
			var tr_x = _rect_x + _rect_w;
			var tr_y = _rect_y;
			var br_x = _rect_x + _rect_w;
			var br_y = _rect_y + _rect_h;
			var bl_x = _rect_x;
			var bl_y = _rect_y + _rect_h;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
		return this.flipx;
	}
	,set_flipy: function(_val) {
		this.flipy = _val;
		var _rect_x = this._uv_x;
		var _rect_y = this._uv_y;
		var _rect_w = this._uv_w;
		var _rect_h = this._uv_h;
		if(this.vertices.length != 0) {
			var tl_x = _rect_x;
			var tl_y = _rect_y;
			this._uv_x = _rect_x;
			this._uv_y = _rect_y;
			this._uv_w = _rect_w;
			this._uv_h = _rect_h;
			var tr_x = _rect_x + _rect_w;
			var tr_y = _rect_y;
			var br_x = _rect_x + _rect_w;
			var br_y = _rect_y + _rect_h;
			var bl_x = _rect_x;
			var bl_y = _rect_y + _rect_h;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
		return this.flipy;
	}
	,set_uv_angle: function(_val) {
		if(_val % 90 != 0) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_val % 90 == 0" + (" ( " + "uv_angle has to be a multiple of 90" + " )")));
		}
		this.uv_angle = _val;
		var _rect_x = this._uv_x;
		var _rect_y = this._uv_y;
		var _rect_w = this._uv_w;
		var _rect_h = this._uv_h;
		if(this.vertices.length != 0) {
			var tl_x = _rect_x;
			var tl_y = _rect_y;
			this._uv_x = _rect_x;
			this._uv_y = _rect_y;
			this._uv_w = _rect_w;
			this._uv_h = _rect_h;
			var tr_x = _rect_x + _rect_w;
			var tr_y = _rect_y;
			var br_x = _rect_x + _rect_w;
			var br_y = _rect_y + _rect_h;
			var bl_x = _rect_x;
			var bl_y = _rect_y + _rect_h;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
		return this.uv_angle;
	}
	,__class__: phoenix_geometry_QuadGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_uv_angle:"set_uv_angle",set_flipy:"set_flipy",set_flipx:"set_flipx"})
});
var phoenix_geometry_QuadPackGeometry = function(_options) {
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	this.quads = new haxe_ds_IntMap();
};
$hxClasses["phoenix.geometry.QuadPackGeometry"] = phoenix_geometry_QuadPackGeometry;
phoenix_geometry_QuadPackGeometry.__name__ = ["phoenix","geometry","QuadPackGeometry"];
phoenix_geometry_QuadPackGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_QuadPackGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	clear: function() {
		var q = this.quads.keys();
		while(q.hasNext()) this.quad_remove(q.next());
	}
	,quad_add: function(_options) {
		if(_options.visible == null) {
			_options.visible = true;
		}
		if(_options.flipx == null) {
			_options.flipx = false;
		}
		if(_options.flipy == null) {
			_options.flipy = false;
		}
		var _uid = Luxe.utils.uniquehash();
		var vert0 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y),_options.color);
		var vert1 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y),_options.color);
		var vert2 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y + _options.h),_options.color);
		var vert3 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y + _options.h),_options.color);
		var vert4 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y),_options.color);
		var vert5 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y + _options.h),_options.color);
		this.add(vert0);
		this.add(vert1);
		this.add(vert2);
		this.add(vert3);
		this.add(vert4);
		this.add(vert5);
		var _quad = { uid : _uid, verts : [], flipx : _options.flipx, flipy : _options.flipx, visible : _options.visible, _uv_cache : new phoenix_Rectangle(0,0,1,1)};
		_quad.verts.push(vert0);
		_quad.verts.push(vert1);
		_quad.verts.push(vert2);
		_quad.verts.push(vert3);
		_quad.verts.push(vert4);
		_quad.verts.push(vert5);
		this.quads.h[_uid] = _quad;
		if(_options.uv != null) {
			this.quad_uv(_uid,_options.uv);
		}
		this.set_dirty(true);
		return _uid;
	}
	,quad_remove: function(_quad_id) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			this.remove(_quad.verts[0]);
			this.remove(_quad.verts[1]);
			this.remove(_quad.verts[2]);
			this.remove(_quad.verts[3]);
			this.remove(_quad.verts[4]);
			this.remove(_quad.verts[5]);
			this.quads.remove(_quad_id);
			this.set_dirty(true);
		}
	}
	,quad_visible: function(_quad_id,visible) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			if(visible && !_quad.visible) {
				_quad.visible = false;
				this.add(_quad.verts[0]);
				this.add(_quad.verts[1]);
				this.add(_quad.verts[2]);
				this.add(_quad.verts[3]);
				this.add(_quad.verts[4]);
				this.add(_quad.verts[5]);
			} else if(!visible && _quad.visible) {
				_quad.visible = false;
				this.remove(_quad.verts[0]);
				this.remove(_quad.verts[1]);
				this.remove(_quad.verts[2]);
				this.remove(_quad.verts[3]);
				this.remove(_quad.verts[4]);
				this.remove(_quad.verts[5]);
			}
			this.set_dirty(true);
		}
	}
	,quad_resize: function(_quad_id,_size) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].pos = new phoenix_Vector(_size.x,_size.y);
			_quad.verts[1].pos = new phoenix_Vector(_size.x + _size.w,_size.y);
			_quad.verts[2].pos = new phoenix_Vector(_size.x + _size.w,_size.y + _size.h);
			_quad.verts[3].pos = new phoenix_Vector(_size.x,_size.y + _size.h);
			_quad.verts[4].pos = new phoenix_Vector(_size.x,_size.y);
			_quad.verts[5].pos = new phoenix_Vector(_size.x + _size.w,_size.y + _size.h);
			this.set_dirty(true);
		}
	}
	,quad_pos: function(_quad_id,_p) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			var _diffx = _p.x - _quad.verts[0].pos.x;
			var _diffy = _p.y - _quad.verts[0].pos.y;
			var _g = _quad.verts[0].pos;
			var _x = _g.x + _diffx;
			_g.x = _x;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x);
				}
			}
			var _g1 = _quad.verts[0].pos;
			var _y = _g1.y + _diffy;
			_g1.y = _y;
			if(!_g1._construct) {
				if(_g1.listen_y != null && !_g1.ignore_listeners) {
					_g1.listen_y(_y);
				}
			}
			var _g2 = _quad.verts[1].pos;
			var _x1 = _g2.x + _diffx;
			_g2.x = _x1;
			if(!_g2._construct) {
				if(_g2.listen_x != null && !_g2.ignore_listeners) {
					_g2.listen_x(_x1);
				}
			}
			var _g3 = _quad.verts[1].pos;
			var _y1 = _g3.y + _diffy;
			_g3.y = _y1;
			if(!_g3._construct) {
				if(_g3.listen_y != null && !_g3.ignore_listeners) {
					_g3.listen_y(_y1);
				}
			}
			var _g4 = _quad.verts[2].pos;
			var _x2 = _g4.x + _diffx;
			_g4.x = _x2;
			if(!_g4._construct) {
				if(_g4.listen_x != null && !_g4.ignore_listeners) {
					_g4.listen_x(_x2);
				}
			}
			var _g5 = _quad.verts[2].pos;
			var _y2 = _g5.y + _diffy;
			_g5.y = _y2;
			if(!_g5._construct) {
				if(_g5.listen_y != null && !_g5.ignore_listeners) {
					_g5.listen_y(_y2);
				}
			}
			var _g6 = _quad.verts[3].pos;
			var _x3 = _g6.x + _diffx;
			_g6.x = _x3;
			if(!_g6._construct) {
				if(_g6.listen_x != null && !_g6.ignore_listeners) {
					_g6.listen_x(_x3);
				}
			}
			var _g7 = _quad.verts[3].pos;
			var _y3 = _g7.y + _diffy;
			_g7.y = _y3;
			if(!_g7._construct) {
				if(_g7.listen_y != null && !_g7.ignore_listeners) {
					_g7.listen_y(_y3);
				}
			}
			var _g8 = _quad.verts[4].pos;
			var _x4 = _g8.x + _diffx;
			_g8.x = _x4;
			if(!_g8._construct) {
				if(_g8.listen_x != null && !_g8.ignore_listeners) {
					_g8.listen_x(_x4);
				}
			}
			var _g9 = _quad.verts[4].pos;
			var _y4 = _g9.y + _diffy;
			_g9.y = _y4;
			if(!_g9._construct) {
				if(_g9.listen_y != null && !_g9.ignore_listeners) {
					_g9.listen_y(_y4);
				}
			}
			var _g10 = _quad.verts[5].pos;
			var _x5 = _g10.x + _diffx;
			_g10.x = _x5;
			if(!_g10._construct) {
				if(_g10.listen_x != null && !_g10.ignore_listeners) {
					_g10.listen_x(_x5);
				}
			}
			var _g11 = _quad.verts[5].pos;
			var _y5 = _g11.y + _diffy;
			_g11.y = _y5;
			if(!_g11._construct) {
				if(_g11.listen_y != null && !_g11.ignore_listeners) {
					_g11.listen_y(_y5);
				}
			}
			this.set_dirty(true);
		}
	}
	,quad_color: function(_quad_id,_c) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].color = _c;
			_quad.verts[1].color = _c;
			_quad.verts[2].color = _c;
			_quad.verts[3].color = _c;
			_quad.verts[4].color = _c;
			_quad.verts[5].color = _c;
		}
	}
	,quad_alpha: function(_quad_id,_a) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].color.a = _a;
			_quad.verts[1].color.a = _a;
			_quad.verts[2].color.a = _a;
			_quad.verts[3].color.a = _a;
			_quad.verts[4].color.a = _a;
			_quad.verts[5].color.a = _a;
		}
	}
	,quad_uv_space: function(_quad_id,_uv) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			var flipx = _quad.flipx;
			var flipy = _quad.flipy;
			var sz_x = _uv.w;
			var sz_y = _uv.h;
			var tl_x = _uv.x;
			var tl_y = _uv.y;
			_quad._uv_cache.set(tl_x,tl_y,sz_x,sz_y);
			var tr_x = tl_x + sz_x;
			var tr_y = tl_y;
			var br_x = tl_x + sz_x;
			var br_y = tl_y + sz_y;
			var bl_x = tl_x;
			var bl_y = tl_y + sz_y;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			if(flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
			}
			var _this = _quad.verts[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = _quad.verts[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = _quad.verts[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = _quad.verts[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = _quad.verts[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = _quad.verts[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
	}
	,quad_uv: function(_quad_id,_uv) {
		if(this.state.texture == null) {
			haxe_Log.trace("Warning : calling UV on a PackedQuad Geometry with null texture.",{ fileName : "QuadPackGeometry.hx", lineNumber : 352, className : "phoenix.geometry.QuadPackGeometry", methodName : "quad_uv"});
			return;
		}
		this.quad_uv_space(_quad_id,new phoenix_Rectangle(_uv.x / this.state.texture.width_actual,_uv.y / this.state.texture.height_actual,_uv.w / this.state.texture.width_actual,_uv.h / this.state.texture.height_actual));
	}
	,quad_flipx: function(_quad_id,_flip) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.flipx = _flip;
			this.quad_uv_space(_quad_id,_quad._uv_cache);
		}
	}
	,quad_flipy: function(_quad_id,_flip) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.flipy = _flip;
			this.quad_uv_space(_quad_id,_quad._uv_cache);
		}
	}
	,__class__: phoenix_geometry_QuadPackGeometry
});
var phoenix_geometry_RectangleGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	var _x = _options.x;
	var _y = _options.y;
	var _w = _options.w;
	var _h = _options.h;
	if(_options.rect != null) {
		_x = _options.rect.x;
		_y = _options.rect.y;
		_w = _options.rect.w;
		_h = _options.rect.h;
	}
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	var _this = this.transform;
	var _this1 = this.transform.local.pos;
	var prev = _this1.ignore_listeners;
	_this1.ignore_listeners = true;
	_this1.x = _x;
	if(!_this1._construct) {
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_x);
		}
	}
	_this1.y = _y;
	if(!_this1._construct) {
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_y);
		}
	}
	_this1.ignore_listeners = prev;
	if(_this1.listen_x != null && !_this1.ignore_listeners) {
		_this1.listen_x(_this1.x);
	}
	if(_this1.listen_y != null && !_this1.ignore_listeners) {
		_this1.listen_y(_this1.y);
	}
	var _this2 = _this.local;
	_this2.pos = _this1;
	if(_this1 != null) {
		var _v = _this2.pos;
		var listener = $bind(_this2,_this2._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(_this2.pos_changed != null && !_this2.ignore_listeners) {
			_this2.pos_changed(_this2.pos);
		}
	}
};
$hxClasses["phoenix.geometry.RectangleGeometry"] = phoenix_geometry_RectangleGeometry;
phoenix_geometry_RectangleGeometry.__name__ = ["phoenix","geometry","RectangleGeometry"];
phoenix_geometry_RectangleGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_RectangleGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set_xywh: function(_x,_y,_w,_h) {
		if(this.vertices.length == 0) {
			return;
		}
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _w;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_w);
			}
		}
		_this1.y = 0;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(0);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _w;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_w);
			}
		}
		_this2.y = 0;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(0);
			}
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = _w;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_w);
			}
		}
		_this3.y = _h;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_h);
			}
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = _w;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_w);
			}
		}
		_this4.y = _h;
		if(!_this4._construct) {
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_h);
			}
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) {
			_this4.listen_x(_this4.x);
		}
		if(_this4.listen_y != null && !_this4.ignore_listeners) {
			_this4.listen_y(_this4.y);
		}
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = 0;
		if(!_this5._construct) {
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(0);
			}
		}
		_this5.y = _h;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_h);
			}
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) {
			_this5.listen_x(_this5.x);
		}
		if(_this5.listen_y != null && !_this5.ignore_listeners) {
			_this5.listen_y(_this5.y);
		}
		var _this6 = this.vertices[6].pos;
		var prev6 = _this6.ignore_listeners;
		_this6.ignore_listeners = true;
		_this6.x = 0;
		if(!_this6._construct) {
			if(_this6.listen_x != null && !_this6.ignore_listeners) {
				_this6.listen_x(0);
			}
		}
		_this6.y = _h;
		if(!_this6._construct) {
			if(_this6.listen_y != null && !_this6.ignore_listeners) {
				_this6.listen_y(_h);
			}
		}
		_this6.ignore_listeners = prev6;
		if(_this6.listen_x != null && !_this6.ignore_listeners) {
			_this6.listen_x(_this6.x);
		}
		if(_this6.listen_y != null && !_this6.ignore_listeners) {
			_this6.listen_y(_this6.y);
		}
		var _this7 = this.vertices[7].pos;
		var prev7 = _this7.ignore_listeners;
		_this7.ignore_listeners = true;
		_this7.x = 0;
		if(!_this7._construct) {
			if(_this7.listen_x != null && !_this7.ignore_listeners) {
				_this7.listen_x(0);
			}
		}
		_this7.y = 0;
		if(!_this7._construct) {
			if(_this7.listen_y != null && !_this7.ignore_listeners) {
				_this7.listen_y(0);
			}
		}
		_this7.ignore_listeners = prev7;
		if(_this7.listen_x != null && !_this7.ignore_listeners) {
			_this7.listen_x(_this7.x);
		}
		if(_this7.listen_y != null && !_this7.ignore_listeners) {
			_this7.listen_y(_this7.y);
		}
		var _this8 = this.transform;
		var _this9 = this.transform.local.pos;
		var prev8 = _this9.ignore_listeners;
		_this9.ignore_listeners = true;
		_this9.x = _x;
		if(!_this9._construct) {
			if(_this9.listen_x != null && !_this9.ignore_listeners) {
				_this9.listen_x(_x);
			}
		}
		_this9.y = _y;
		if(!_this9._construct) {
			if(_this9.listen_y != null && !_this9.ignore_listeners) {
				_this9.listen_y(_y);
			}
		}
		_this9.ignore_listeners = prev8;
		if(_this9.listen_x != null && !_this9.ignore_listeners) {
			_this9.listen_x(_this9.x);
		}
		if(_this9.listen_y != null && !_this9.ignore_listeners) {
			_this9.listen_y(_this9.y);
		}
		var _this10 = _this8.local;
		_this10.pos = _this9;
		if(_this9 != null) {
			var _v = _this10.pos;
			var listener = $bind(_this10,_this10._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this10.pos_changed != null && !_this10.ignore_listeners) {
				_this10.pos_changed(_this10.pos);
			}
		}
	}
	,set: function(_rect) {
		this.set_xywh(_rect.x,_rect.y,_rect.w,_rect.h);
	}
	,__class__: phoenix_geometry_RectangleGeometry
});
var phoenix_geometry_TextGeometry = function(_options) {
	this.setup_ = true;
	this.dirty_align = true;
	this.dirty_sizing = true;
	this.point_ratio = 1;
	this.text_h_h = 0;
	this.text_h_w = 0;
	this.text_height = 0;
	this.text_width = 0;
	this.glow_amount = 0;
	this.glow_threshold = 0;
	this.outline = 0;
	this.thickness = 0.5;
	this.smoothness = 0.75;
	this.unique = false;
	this.sdf = false;
	this.bounds_wrap = false;
	this.letter_snapping = false;
	this.letter_spacing = 0.0;
	this.line_spacing = 0.0;
	this.point_size = 32.0;
	this.text = "";
	this.options = _options;
	this.emitter = new luxe_Emitter();
	if(this.options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "TextGeometry requires non-null options" + " )")));
	}
	if(this.options.sdf != null) {
		this.sdf = this.options.sdf;
	}
	if(this.options.font == null) {
		this.options.font = Luxe.renderer.font;
	}
	this.set_font(this.options.font);
	if(this.font == Luxe.renderer.font) {
		this.sdf = true;
	}
	if(this.options.shader == null) {
		if(this.sdf) {
			this.options.shader = Luxe.renderer.shaders.bitmapfont.shader;
		} else {
			this.options.shader = Luxe.renderer.shaders.textured.shader;
		}
	} else if(this.options.shader != Luxe.renderer.shaders.bitmapfont.shader) {
		this.unique = true;
	}
	this.options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,this.options);
	this.cache = [];
	this.line_widths = [];
	this.line_offsets = [[],[]];
	this.lines = [];
	this.set_outline_color(new phoenix_Color());
	this.set_glow_color(new phoenix_Color());
	this.default_options();
	this.setup_ = false;
};
$hxClasses["phoenix.geometry.TextGeometry"] = phoenix_geometry_TextGeometry;
phoenix_geometry_TextGeometry.__name__ = ["phoenix","geometry","TextGeometry"];
phoenix_geometry_TextGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_TextGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	tidy: function() {
		var _vertidx = Math.floor(this.vertices.length / 6);
		var _diff = this.cache.length - _vertidx;
		if(_diff > 0) {
			var extra = this.cache.splice(_vertidx,_diff);
			var c = extra.length;
			while(c > 0) {
				--c;
				extra.pop();
			}
		}
	}
	,drop: function(remove) {
		if(remove == null) {
			remove = true;
		}
		this.set_text(null);
		this.set_font(null);
		this.set_bounds(null);
		this.set_outline_color(null);
		this.set_glow_color(null);
		if(this.line_widths != null) {
			this.line_widths.splice(0,this.line_widths.length);
			this.line_widths = null;
		}
		if(this.line_offsets != null) {
			this.line_offsets.splice(0,this.line_offsets.length);
			this.line_offsets = null;
		}
		if(this.lines != null) {
			this.lines.splice(0,this.lines.length);
			this.lines = null;
		}
		this.emitter = null;
		this.options = null;
		if(this.cache != null) {
			while(this.cache.length > 0) {
				var c = this.cache.pop();
				while(c.length > 0) {
					var v = c.pop();
					v.pos = null;
					v.color = null;
					v.normal = null;
					var _this = v.uv;
					_this.uv0 = null;
					_this.uv1 = null;
					_this.uv2 = null;
					_this.uv3 = null;
					_this.uv4 = null;
					_this.uv5 = null;
					_this.uv6 = null;
					_this.uv7 = null;
					v.uv = null;
					v = null;
				}
				c = null;
			}
			this.cache = null;
		}
		phoenix_geometry_Geometry.prototype.drop.call(this,remove);
	}
	,default_options: function() {
		this.set_texture(this.font.pages.h[0]);
		if(this.options.letter_snapping != null) {
			this.set_letter_snapping(this.options.letter_snapping);
		}
		if(this.options.letter_spacing != null) {
			this.set_letter_spacing(this.options.letter_spacing);
		}
		if(this.options.line_spacing != null) {
			this.set_line_spacing(this.options.line_spacing);
		}
		if(this.options.point_size != null) {
			this.set_point_size(this.options.point_size);
		}
		if(this.options.bounds != null) {
			this.set_bounds(this.options.bounds);
		}
		if(this.options.bounds_wrap != null) {
			this.set_bounds_wrap(this.options.bounds_wrap);
		}
		if(this.options.align == null) {
			this.options.align = 0;
		}
		if(this.options.align_vertical == null) {
			this.options.align_vertical = 3;
		}
		this.set_align(this.options.align);
		this.set_align_vertical(this.options.align_vertical);
		if(this.options.thickness != null) {
			this.set_thickness(this.options.thickness);
		}
		if(this.options.smoothness != null) {
			this.set_smoothness(this.options.smoothness);
		}
		if(this.options.outline != null) {
			this.set_outline(this.options.outline);
		}
		if(this.options.outline_color != null) {
			this.set_outline_color(this.options.outline_color);
		}
		if(this.options.glow_threshold != null) {
			this.set_glow_threshold(this.options.glow_threshold);
		}
		if(this.options.glow_amount != null) {
			this.set_glow_amount(this.options.glow_amount);
		}
		if(this.options.glow_color != null) {
			this.set_glow_color(this.options.glow_color);
		}
		if(this.sdf) {
			this.flush_uniforms();
		}
		if(this.options.text != null) {
			this.set_text(this.options.text);
		}
	}
	,set_text: function(_text) {
		if(_text == null) {
			_text = "";
		}
		if(this.text != _text) {
			this.text = _text;
			if(this.text != "") {
				this.set_dirty_sizing(true);
				this.update_text();
			} else {
				this.vertices.splice(0,this.vertices.length);
			}
		}
		return this.text;
	}
	,stats: function() {
		return "letters:" + this.vertices.length / 6 + " / cache:" + this.cache.length;
	}
	,update_sizes: function() {
		if(!this.dirty_sizing) {
			return false;
		}
		var drawn_text = this.text.replace(phoenix_geometry_TextGeometry.tab_regex.r,"    ");
		if(this.bounds_wrap && this.bounds != null) {
			drawn_text = this.font.wrap_string_to_bounds(drawn_text,this.bounds,this.point_size,this.letter_spacing);
		}
		this.lines.splice(0,this.lines.length);
		this.lines = drawn_text.split("\n");
		this.line_widths.splice(0,this.line_widths.length);
		var _this = this.font;
		var _point_size = this.point_size;
		var _letter_spc = this.letter_spacing;
		var _line_widths = this.line_widths;
		var _max_w = 0.0;
		var _push_widths = _line_widths != null;
		var _lines = luxe_utils_unifill_Unifill.uSplit(drawn_text,"\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			var _cur_w = _this.width_of_line(_line,_point_size,_letter_spc);
			_max_w = Math.max(_max_w,_cur_w);
			if(_push_widths) {
				_line_widths.push(_cur_w);
			}
		}
		this.text_width = _max_w;
		var _this1 = this.font;
		this.text_height = this.lines.length * ((_this1.info.line_height + this.line_spacing) * (this.point_size / _this1.info.point_size));
		this.text_h_w = this.text_width / 2;
		this.text_h_h = this.text_height / 2;
		this.point_ratio = this.point_size / this.font.info.point_size;
		this.set_dirty_sizing(false);
		return true;
	}
	,update_text: function() {
		var _g2_endIndex;
		var _g2_index;
		var _gthis = this;
		var _pos_x = 0.0;
		var _pos_y = 0.0;
		var _bounds_based = this.bounds != null;
		if(_bounds_based) {
			var _this = this.transform.local.pos;
			_pos_x = this.bounds.x;
			var _x = _pos_x;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			var _this1 = this.transform.local.pos;
			_pos_y = this.bounds.y;
			var _y = _pos_y;
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
		}
		var _cur_x = 0.0;
		var _cur_y = 0.0;
		var _line_idx = 0;
		var _total_idx = 0;
		var _is_char = true;
		this.update_sizes();
		var _g = 0;
		var _g1 = this.lines;
		while(_g < _g1.length) {
			var _line = _g1[_g];
			++_g;
			var _line_x_offset = 0.0;
			var _line_y_offset = 0.0;
			if(this.dirty_align) {
				if(!_bounds_based) {
					switch(this.align) {
					case 1:
						_line_x_offset = -this.line_widths[_line_idx];
						break;
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0);
						break;
					default:
						_line_x_offset = 0.0;
					}
					switch(this.align_vertical) {
					case 2:
						_line_y_offset = -this.text_h_h;
						break;
					case 4:
						_line_y_offset = -this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				} else {
					switch(this.align) {
					case 1:
						_line_x_offset = -this.line_widths[_line_idx] + this.bounds.w;
						break;
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0) + this.bounds.w / 2;
						break;
					default:
						_line_x_offset = 0.0;
					}
					switch(this.align_vertical) {
					case 2:
						_line_y_offset = this.bounds.h / 2 - this.text_h_h;
						break;
					case 4:
						_line_y_offset = this.bounds.h - this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				}
				this.line_offsets[0][_line_idx] = _line_x_offset;
				this.line_offsets[1][_line_idx] = _line_y_offset;
			} else {
				_line_x_offset = this.line_offsets[0][_line_idx];
				_line_y_offset = this.line_offsets[1][_line_idx];
			}
			if(_line_idx != 0) {
				_cur_y += (_gthis.font.info.line_height + _gthis.line_spacing) * _gthis.point_ratio;
				_cur_x = 0;
			}
			var _idx = 0;
			var _g2_i = 0;
			_g2_index = 0;
			_g2_endIndex = _line.length;
			while(_g2_index < _g2_endIndex) {
				_g2_i = _g2_index;
				var c = _line.charCodeAt(_g2_index);
				_g2_index += !(55296 <= c && c <= 56319) ? 1 : 2;
				var _index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_line,_g2_i);
				var _char = this.font.info.chars.h[_index];
				if(_char != null) {
					_is_char = _index > 32;
				} else {
					_is_char = false;
				}
				if(!_is_char) {
					_char = this.font.space_char;
				}
				if(_is_char) {
					var _quad_x = _line_x_offset + _cur_x + _char.xoffset * this.point_ratio;
					var _quad_y = _line_y_offset + _cur_y + _char.yoffset * this.point_ratio;
					if(this.letter_snapping) {
						_quad_x = Math.floor(_quad_x);
						_quad_y = Math.floor(_quad_y);
					}
					var _page = this.font.pages.h[_char.page];
					this.update_char(_total_idx,_quad_x,_quad_y,_char.width * this.point_ratio,_char.height * this.point_ratio,_char.x / _page.width_actual,_char.y / _page.height_actual,(_char.x + _char.width) / _page.width_actual,(_char.y + _char.height) / _page.height_actual,this.color);
					++_total_idx;
				}
				var _x_inc = _char.xadvance;
				if(_idx < _line.length - 1) {
					var _this2 = this.font;
					var index = _idx + 1;
					var s = _line;
					var i;
					if(index >= 0) {
						var index1 = 0;
						var len = s.length;
						var i1 = 0;
						while(i1 < index && index1 < len) {
							var c1 = s.charCodeAt(index1);
							index1 += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
							++i1;
						}
						i = index1;
					} else {
						while(false) {
						}
						i = 0;
					}
					var _second = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_line,i);
					var _map = _this2.info.kernings.get(_index);
					_x_inc += _map != null && _map.h.hasOwnProperty(_second) ? _map.h[_second] : 0;
					if(_index >= 32) {
						_x_inc += this.letter_spacing;
					}
				}
				_x_inc *= this.point_ratio;
				_cur_x += _x_inc;
				++_idx;
			}
			++_line_idx;
		}
		var _diff = (this.vertices.length / 6 | 0) - _total_idx;
		if(_diff > 0) {
			this.vertices.splice(_total_idx * 6,_diff * 6);
		}
		this.dirty_align = false;
		this.emitter.emit(1);
	}
	,update_char: function(_letteridx,_x,_y,_w,_h,_u,_v,_u2,_v2,_color) {
		var vert0;
		var vert1;
		var vert2;
		var vert3;
		var vert4;
		var vert5;
		var quad = this.cache[_letteridx];
		if(quad == null) {
			vert0 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert1 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y),_color);
			vert2 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			vert3 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y + _h),_color);
			vert4 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert5 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			quad = [vert0,vert1,vert2,vert3,vert4,vert5];
			this.cache[_letteridx] = quad;
		} else {
			vert0 = quad[0];
			vert1 = quad[1];
			vert2 = quad[2];
			vert3 = quad[3];
			vert4 = quad[4];
			vert5 = quad[5];
			var _this = vert0.pos;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			var _this1 = vert1.pos;
			var _x1 = _x + _w;
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x1;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x1);
				}
			}
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			var _this2 = vert2.pos;
			var _x2 = _x + _w;
			var _y1 = _y + _h;
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x2;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_x2);
				}
			}
			_this2.y = _y1;
			if(!_this2._construct) {
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_y1);
				}
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_this2.x);
			}
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_this2.y);
			}
			var _this3 = vert3.pos;
			var _y2 = _y + _h;
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x);
				}
			}
			_this3.y = _y2;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y2);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			var _this4 = vert4.pos;
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x);
				}
			}
			_this4.y = _y;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			var _this5 = vert5.pos;
			var _x3 = _x + _w;
			var _y3 = _y + _h;
			var prev5 = _this5.ignore_listeners;
			_this5.ignore_listeners = true;
			_this5.x = _x3;
			if(!_this5._construct) {
				if(_this5.listen_x != null && !_this5.ignore_listeners) {
					_this5.listen_x(_x3);
				}
			}
			_this5.y = _y3;
			if(!_this5._construct) {
				if(_this5.listen_y != null && !_this5.ignore_listeners) {
					_this5.listen_y(_y3);
				}
			}
			_this5.ignore_listeners = prev5;
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_this5.x);
			}
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_this5.y);
			}
		}
		var _this6 = vert0.uv.uv0;
		_this6.u = _u;
		_this6.v = _v;
		var _this7 = vert1.uv.uv0;
		_this7.u = _u2;
		_this7.v = _v;
		var _this8 = vert2.uv.uv0;
		_this8.u = _u2;
		_this8.v = _v2;
		var _this9 = vert3.uv.uv0;
		_this9.u = _u;
		_this9.v = _v2;
		var _this10 = vert4.uv.uv0;
		_this10.u = _u;
		_this10.v = _v;
		var _this11 = vert5.uv.uv0;
		_this11.u = _u2;
		_this11.v = _v2;
		if(Math.floor(this.vertices.length / 6) <= _letteridx) {
			this.add(vert0);
			this.add(vert1);
			this.add(vert2);
			this.add(vert3);
			this.add(vert4);
			this.add(vert5);
		}
	}
	,set_dirty_sizing: function(_b) {
		this.dirty_align = true;
		return this.dirty_sizing = _b;
	}
	,set_bounds: function(_bounds) {
		this.bounds = _bounds;
		if(this.bounds == null) {
			return this.bounds;
		}
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds;
	}
	,set_bounds_wrap: function(_wrap) {
		this.bounds_wrap = _wrap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds_wrap;
	}
	,set_letter_snapping: function(_snap) {
		this.letter_snapping = _snap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_snapping;
	}
	,set_line_spacing: function(_line_spacing) {
		this.line_spacing = _line_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.line_spacing;
	}
	,set_letter_spacing: function(_letter_spacing) {
		this.letter_spacing = _letter_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_spacing;
	}
	,set_align: function(_align) {
		this.align = _align;
		this.dirty_align = true;
		this.update_text();
		return this.align;
	}
	,set_align_vertical: function(_align_vertical) {
		this.align_vertical = _align_vertical;
		this.dirty_align = true;
		this.update_text();
		return this.align_vertical;
	}
	,set_point_size: function(s) {
		if(s < 0) {
			s = 0;
		}
		this.point_size = s;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.point_size;
	}
	,set_font: function(_font) {
		this.font = _font;
		if(!this.setup_ && _font != null) {
			this.set_texture(this.font.pages.h[0]);
			this.set_dirty_sizing(true);
			this.dirty_align = true;
			this.update_text();
		}
		return this.font;
	}
	,set_smoothness: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"smoothness");
			var _float = _this1.floats.get("smoothness");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("smoothness",s,_location);
				_this1.floats.set("smoothness",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.smoothness = s;
	}
	,set_thickness: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"thickness");
			var _float = _this1.floats.get("thickness");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("thickness",s,_location);
				_this1.floats.set("thickness",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.thickness = s;
	}
	,set_outline: function(s) {
		if(s < 0.0) {
			s = 0.0;
		} else if(s > 1.0) {
			s = 1.0;
		} else {
			s = s;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"outline");
			var _float = _this1.floats.get("outline");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("outline",s,_location);
				_this1.floats.set("outline",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.outline = s;
	}
	,set_glow_threshold: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_threshold");
			var _float = _this1.floats.get("glow_threshold");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("glow_threshold",s,_location);
				_this1.floats.set("glow_threshold",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.glow_threshold = s;
	}
	,set_glow_amount: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_amount");
			var _float = _this1.floats.get("glow_amount");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("glow_amount",s,_location);
				_this1.floats.set("glow_amount",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.glow_amount = s;
	}
	,set_outline_color: function(c) {
		if(c == null) {
			return this.outline_color = c;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"outline_color");
			var _color = _this1.colors.get("outline_color");
			if(_color != null) {
				_color.value = c;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("outline_color",c,_location);
				_this1.colors.set("outline_color",_color);
			}
			_this1.dirty_colors.push(_color);
		}
		return this.outline_color = c;
	}
	,set_glow_color: function(c) {
		if(c == null) {
			return this.glow_color = c;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_color");
			var _color = _this1.colors.get("glow_color");
			if(_color != null) {
				_color.value = c;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("glow_color",c,_location);
				_this1.colors.set("glow_color",_color);
			}
			_this1.dirty_colors.push(_color);
		}
		return this.glow_color = c;
	}
	,flush_uniforms: function() {
		if(this.state.shader != null && this.sdf) {
			var _this = this.state.shader;
			var _value = this.smoothness;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"smoothness");
			var _float = _this1.floats.get("smoothness");
			if(_float != null) {
				_float.value = _value;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("smoothness",_value,_location);
				_this1.floats.set("smoothness",_float);
			}
			_this1.dirty_floats.push(_float);
			var _this2 = this.state.shader;
			var _value1 = this.thickness;
			var _this3 = _this2.uniforms;
			var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this2.program,"thickness");
			var _float1 = _this3.floats.get("thickness");
			if(_float1 != null) {
				_float1.value = _value1;
			} else {
				_float1 = new phoenix__$Shader_Uniform_$Float("thickness",_value1,_location1);
				_this3.floats.set("thickness",_float1);
			}
			_this3.dirty_floats.push(_float1);
			var _this4 = this.state.shader;
			var _value2 = this.outline;
			var _this5 = _this4.uniforms;
			var _location2 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this4.program,"outline");
			var _float2 = _this5.floats.get("outline");
			if(_float2 != null) {
				_float2.value = _value2;
			} else {
				_float2 = new phoenix__$Shader_Uniform_$Float("outline",_value2,_location2);
				_this5.floats.set("outline",_float2);
			}
			_this5.dirty_floats.push(_float2);
			var _this6 = this.state.shader;
			var _value3 = this.glow_threshold;
			var _this7 = _this6.uniforms;
			var _location3 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this6.program,"glow_threshold");
			var _float3 = _this7.floats.get("glow_threshold");
			if(_float3 != null) {
				_float3.value = _value3;
			} else {
				_float3 = new phoenix__$Shader_Uniform_$Float("glow_threshold",_value3,_location3);
				_this7.floats.set("glow_threshold",_float3);
			}
			_this7.dirty_floats.push(_float3);
			var _this8 = this.state.shader;
			var _value4 = this.glow_amount;
			var _this9 = _this8.uniforms;
			var _location4 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this8.program,"glow_amount");
			var _float4 = _this9.floats.get("glow_amount");
			if(_float4 != null) {
				_float4.value = _value4;
			} else {
				_float4 = new phoenix__$Shader_Uniform_$Float("glow_amount",_value4,_location4);
				_this9.floats.set("glow_amount",_float4);
			}
			_this9.dirty_floats.push(_float4);
			var _this10 = this.state.shader;
			var _value5 = this.outline_color;
			var _this11 = _this10.uniforms;
			var _location5 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this10.program,"outline_color");
			var _color = _this11.colors.get("outline_color");
			if(_color != null) {
				_color.value = _value5;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("outline_color",_value5,_location5);
				_this11.colors.set("outline_color",_color);
			}
			_this11.dirty_colors.push(_color);
			var _this12 = this.state.shader;
			var _value6 = this.glow_color;
			var _this13 = _this12.uniforms;
			var _location6 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this12.program,"glow_color");
			var _color1 = _this13.colors.get("glow_color");
			if(_color1 != null) {
				_color1.value = _value6;
			} else {
				_color1 = new phoenix__$Shader_Uniform_$phoenix_$Color("glow_color",_value6,_location6);
				_this13.colors.set("glow_color",_color1);
			}
			_this13.dirty_colors.push(_color1);
		}
	}
	,__class__: phoenix_geometry_TextGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_dirty_sizing:"set_dirty_sizing",set_glow_color:"set_glow_color",set_glow_amount:"set_glow_amount",set_glow_threshold:"set_glow_threshold",set_outline_color:"set_outline_color",set_outline:"set_outline",set_thickness:"set_thickness",set_smoothness:"set_smoothness",set_align_vertical:"set_align_vertical",set_align:"set_align",set_bounds_wrap:"set_bounds_wrap",set_bounds:"set_bounds",set_letter_snapping:"set_letter_snapping",set_letter_spacing:"set_letter_spacing",set_line_spacing:"set_line_spacing",set_point_size:"set_point_size",set_font:"set_font",set_text:"set_text"})
});
var phoenix_geometry_TextureCoordSet = function() {
	this.uv0 = new phoenix_geometry_TextureCoord();
	this.uv1 = new phoenix_geometry_TextureCoord();
	this.uv2 = new phoenix_geometry_TextureCoord();
	this.uv3 = new phoenix_geometry_TextureCoord();
	this.uv4 = new phoenix_geometry_TextureCoord();
	this.uv5 = new phoenix_geometry_TextureCoord();
	this.uv6 = new phoenix_geometry_TextureCoord();
	this.uv7 = new phoenix_geometry_TextureCoord();
};
$hxClasses["phoenix.geometry.TextureCoordSet"] = phoenix_geometry_TextureCoordSet;
phoenix_geometry_TextureCoordSet.__name__ = ["phoenix","geometry","TextureCoordSet"];
phoenix_geometry_TextureCoordSet.prototype = {
	clone: function() {
		var _set = new phoenix_geometry_TextureCoordSet();
		var _this = _set.uv0;
		_this.u = this.uv0.u;
		_this.v = this.uv0.v;
		_this.w = this.uv0.w;
		_this.t = this.uv0.t;
		var _this1 = _set.uv1;
		_this1.u = this.uv1.u;
		_this1.v = this.uv1.v;
		_this1.w = this.uv1.w;
		_this1.t = this.uv1.t;
		var _this2 = _set.uv2;
		_this2.u = this.uv2.u;
		_this2.v = this.uv2.v;
		_this2.w = this.uv2.w;
		_this2.t = this.uv2.t;
		var _this3 = _set.uv3;
		_this3.u = this.uv3.u;
		_this3.v = this.uv3.v;
		_this3.w = this.uv3.w;
		_this3.t = this.uv3.t;
		var _this4 = _set.uv4;
		_this4.u = this.uv4.u;
		_this4.v = this.uv4.v;
		_this4.w = this.uv4.w;
		_this4.t = this.uv4.t;
		var _this5 = _set.uv5;
		_this5.u = this.uv5.u;
		_this5.v = this.uv5.v;
		_this5.w = this.uv5.w;
		_this5.t = this.uv5.t;
		var _this6 = _set.uv6;
		_this6.u = this.uv6.u;
		_this6.v = this.uv6.v;
		_this6.w = this.uv6.w;
		_this6.t = this.uv6.t;
		var _this7 = _set.uv7;
		_this7.u = this.uv7.u;
		_this7.v = this.uv7.v;
		_this7.w = this.uv7.w;
		_this7.t = this.uv7.t;
		return _set;
	}
	,destroy: function() {
		this.uv0 = null;
		this.uv1 = null;
		this.uv2 = null;
		this.uv3 = null;
		this.uv4 = null;
		this.uv5 = null;
		this.uv6 = null;
		this.uv7 = null;
	}
	,__class__: phoenix_geometry_TextureCoordSet
};
var phoenix_geometry_TextureCoord = function(_u,_v,_w,_t) {
	if(_t == null) {
		_t = 0.0;
	}
	if(_w == null) {
		_w = 0.0;
	}
	if(_v == null) {
		_v = 0.0;
	}
	if(_u == null) {
		_u = 0.0;
	}
	this.t = 0.0;
	this.w = 0.0;
	this.v = 0.0;
	this.u = 0.0;
	this.u = _u;
	this.v = _v;
	this.w = _w;
	this.t = _t;
};
$hxClasses["phoenix.geometry.TextureCoord"] = phoenix_geometry_TextureCoord;
phoenix_geometry_TextureCoord.__name__ = ["phoenix","geometry","TextureCoord"];
phoenix_geometry_TextureCoord.prototype = {
	clone: function() {
		return new phoenix_geometry_TextureCoord(this.u,this.v,this.w,this.t);
	}
	,set: function(_u,_v,_w,_t) {
		this.u = _u;
		this.v = _v;
		this.w = _w;
		this.t = _t;
		return this;
	}
	,set_uv: function(_u,_v) {
		this.u = _u;
		this.v = _v;
		return this;
	}
	,toString: function() {
		return "{ u:" + this.v + ", v:" + this.v + " }";
	}
	,__class__: phoenix_geometry_TextureCoord
};
var phoenix_geometry_Vertex = function(_pos,_color,_normal) {
	this.uv = new phoenix_geometry_TextureCoordSet();
	this.pos = _pos;
	this.color = _color == null ? new phoenix_Color() : _color;
	this.normal = _normal == null ? new phoenix_Vector() : _normal;
};
$hxClasses["phoenix.geometry.Vertex"] = phoenix_geometry_Vertex;
phoenix_geometry_Vertex.__name__ = ["phoenix","geometry","Vertex"];
phoenix_geometry_Vertex.prototype = {
	clone: function() {
		var _this = this.pos;
		var _new = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
		var _new1 = this.color.clone();
		var _this1 = this.normal;
		var _new2 = new phoenix_geometry_Vertex(_new,_new1,new phoenix_Vector(_this1.x,_this1.y,_this1.z,_this1.w));
		var _this2 = this.uv;
		var _set = new phoenix_geometry_TextureCoordSet();
		var _this3 = _set.uv0;
		_this3.u = _this2.uv0.u;
		_this3.v = _this2.uv0.v;
		_this3.w = _this2.uv0.w;
		_this3.t = _this2.uv0.t;
		var _this4 = _set.uv1;
		_this4.u = _this2.uv1.u;
		_this4.v = _this2.uv1.v;
		_this4.w = _this2.uv1.w;
		_this4.t = _this2.uv1.t;
		var _this5 = _set.uv2;
		_this5.u = _this2.uv2.u;
		_this5.v = _this2.uv2.v;
		_this5.w = _this2.uv2.w;
		_this5.t = _this2.uv2.t;
		var _this6 = _set.uv3;
		_this6.u = _this2.uv3.u;
		_this6.v = _this2.uv3.v;
		_this6.w = _this2.uv3.w;
		_this6.t = _this2.uv3.t;
		var _this7 = _set.uv4;
		_this7.u = _this2.uv4.u;
		_this7.v = _this2.uv4.v;
		_this7.w = _this2.uv4.w;
		_this7.t = _this2.uv4.t;
		var _this8 = _set.uv5;
		_this8.u = _this2.uv5.u;
		_this8.v = _this2.uv5.v;
		_this8.w = _this2.uv5.w;
		_this8.t = _this2.uv5.t;
		var _this9 = _set.uv6;
		_this9.u = _this2.uv6.u;
		_this9.v = _this2.uv6.v;
		_this9.w = _this2.uv6.w;
		_this9.t = _this2.uv6.t;
		var _this10 = _set.uv7;
		_this10.u = _this2.uv7.u;
		_this10.v = _this2.uv7.v;
		_this10.w = _this2.uv7.w;
		_this10.t = _this2.uv7.t;
		_new2.uv = _set;
		return _new2;
	}
	,destroy: function() {
		this.pos = null;
		this.color = null;
		this.normal = null;
		var _this = this.uv;
		_this.uv0 = null;
		_this.uv1 = null;
		_this.uv2 = null;
		_this.uv3 = null;
		_this.uv4 = null;
		_this.uv5 = null;
		_this.uv6 = null;
		_this.uv7 = null;
		this.uv = null;
	}
	,__class__: phoenix_geometry_Vertex
};
var phoenix_utils_Rendering = function() { };
$hxClasses["phoenix.utils.Rendering"] = phoenix_utils_Rendering;
phoenix_utils_Rendering.__name__ = ["phoenix","utils","Rendering"];
phoenix_utils_Rendering.gl_blend_mode_from_BlendMode = function(_b) {
	switch(_b) {
	case 0:
		return 0;
	case 1:
		return 1;
	case 768:
		return 768;
	case 769:
		return 769;
	case 770:
		return 770;
	case 771:
		return 771;
	case 772:
		return 772;
	case 773:
		return 773;
	case 774:
		return 774;
	case 775:
		return 775;
	case 776:
		return 776;
	}
};
phoenix_utils_Rendering.fovx_to_y = function(fovx,aspect) {
	return 180 / Math.PI * (2 * Math.atan(Math.tan(fovx * (Math.PI / 180) / 2) * (1 / aspect)));
};
var snow_Snow = function(_host) {
	this.had_ready_event = false;
	this.i = 0;
	this.window_in_background = false;
	this.immediate_shutdown = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.debug = false;
	this.platform = "unknown";
	this.ready = false;
	this.freeze = false;
	if(_host == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_host was null" + (" ( " + "snow App instance was null!" + " )")));
	}
	this.host = _host;
	this.host.app = this;
	this.config = this.default_config();
	this.sys_event = new snow_types_SystemEvent();
	this.win_event = new snow_types_WindowEvent();
	this.io = new snow_systems_io_IO(this);
	this.input = new snow_systems_input_Input(this);
	this.audio = new snow_systems_audio_Audio(this);
	this.assets = new snow_systems_assets_Assets(this);
	this.extensions = [];
	var _g = 0;
	var _g1 = snow_types_Config.extensions;
	while(_g < _g1.length) {
		var _ext_type = _g1[_g];
		++_g;
		var _class = Type.resolveClass(_ext_type);
		if(_class == null) {
			throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Type not found via Type.resolveClass!"));
		}
		var _instance = Type.createInstance(_class,null);
		if(_instance == null) {
			throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Instance was null on calling new()!"));
		}
		this.extensions.push(_instance);
	}
	this.runtime = new snow_core_web_Runtime(this);
	if(this.os == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("os was null" + (" ( " + "init - Runtime didn't set the app.os value!" + " )")));
	}
	if(this.platform == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("platform was null" + (" ( " + "init - Runtime didn't set the app.platform value!" + " )")));
	}
	this.dispatch_event(1);
	this.host.internal_init();
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) {
		var count = snow_Snow.next_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.next_queue.shift())();
			++i;
		}
	}
	while(snow_Snow.defer_queue.length > 0) {
		var count1 = snow_Snow.defer_queue.length;
		var i1 = 0;
		while(i1 < count1) {
			(snow_Snow.defer_queue.shift())();
			++i1;
		}
	}
	this.dispatch_event(2);
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) {
		var count2 = snow_Snow.next_queue.length;
		var i2 = 0;
		while(i2 < count2) {
			(snow_Snow.next_queue.shift())();
			++i2;
		}
	}
	while(snow_Snow.defer_queue.length > 0) {
		var count3 = snow_Snow.defer_queue.length;
		var i3 = 0;
		while(i3 < count3) {
			(snow_Snow.defer_queue.shift())();
			++i3;
		}
	}
	if(this.runtime.run() && !(this.has_shutdown || this.shutting_down)) {
		this.shutdown();
	}
};
$hxClasses["snow.Snow"] = snow_Snow;
snow_Snow.__name__ = ["snow","Snow"];
snow_Snow.__properties__ = {get_timestamp:"get_timestamp"}
snow_Snow.next = function(func) {
	if(func != null) {
		snow_Snow.next_queue.push(func);
	}
};
snow_Snow.defer = function(func) {
	if(func != null) {
		snow_Snow.defer_queue.push(func);
	}
};
snow_Snow.get_timestamp = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
snow_Snow.prototype = {
	shutdown: function() {
		if(this.shutting_down) {
			haxe_Log.trace("     i / snow / " + "shutdown / called again, already shutting down - ignoring",{ fileName : "Snow.hx", lineNumber : 158, className : "snow.Snow", methodName : "shutdown"});
			return;
		}
		if(this.has_shutdown != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("has_shutdown == false" + (" ( " + "snow - calling shutdown more than once is disallowed" + " )")));
		}
		this.shutting_down = true;
		this.host.ondestroy();
		this.dispatch_event(7);
		this.io.shutdown();
		this.audio.shutdown();
		this.assets.shutdown();
		this.runtime.shutdown(this.immediate_shutdown);
		this.has_shutdown = true;
	}
	,dispatch_event: function(_type) {
		var _this = this.sys_event;
		_this.type = _type;
		_this.window = null;
		_this.input = null;
		this.onevent(this.sys_event);
	}
	,dispatch_window_event: function(_type,_timestamp,_window_id,_x,_y) {
		var _this = this.win_event;
		_this.type = _type;
		_this.timestamp = _timestamp;
		_this.window_id = _window_id;
		_this.x = _x;
		_this.y = _y;
		var _this1 = this.sys_event;
		_this1.type = 8;
		_this1.window = this.win_event;
		_this1.input = null;
		this.onevent(this.sys_event);
	}
	,dispatch_input_event: function(_event) {
		var _this = this.sys_event;
		_this.type = 9;
		_this.window = null;
		_this.input = _event;
		this.onevent(this.sys_event);
	}
	,onevent: function(_event) {
		this.audio.onevent(_event);
		this.input.onevent(_event);
		this.host.onevent(_event);
		this.i = 0;
		while(this.i < this.extensions.length) {
			this.extensions[this.i].onevent(_event);
			++this.i;
		}
		switch(_event.type) {
		case 2:
			var _gthis = this;
			if(this.had_ready_event != false) {
				throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("had_ready_event == false" + (" ( " + "snow; the ready event should not be fired repeatedly" + " )")));
			}
			this.had_ready_event = true;
			this.setup_configs().then(function(_) {
				_gthis.runtime.ready();
				_gthis.host.ready();
				_gthis.ready = true;
			}).error(function(e) {
				throw new js__$Boot_HaxeError(snow_types_Error.init("snow / cannot recover from error: " + e));
			});
			snow_api_Promises.step();
			while(snow_Snow.next_queue.length > 0) {
				var count = snow_Snow.next_queue.length;
				var i = 0;
				while(i < count) {
					(snow_Snow.next_queue.shift())();
					++i;
				}
			}
			while(snow_Snow.defer_queue.length > 0) {
				var count1 = snow_Snow.defer_queue.length;
				var i1 = 0;
				while(i1 < count1) {
					(snow_Snow.defer_queue.shift())();
					++i1;
				}
			}
			break;
		case 3:
			if(!this.freeze) {
				snow_api_Timer.update();
				snow_api_Promises.step();
				var count2 = snow_Snow.next_queue.length;
				var i2 = 0;
				while(i2 < count2) {
					(snow_Snow.next_queue.shift())();
					++i2;
				}
				if(!this.shutting_down && this.ready) {
					this.host.internal_tick();
				}
				var count3 = snow_Snow.defer_queue.length;
				var i3 = 0;
				while(i3 < count3) {
					(snow_Snow.defer_queue.shift())();
					++i3;
				}
			}
			break;
		case 7:
			haxe_Log.trace("     i / snow / " + "goodbye.",{ fileName : "Snow.hx", lineNumber : 248, className : "snow.Snow", methodName : "onevent"});
			break;
		case 10:
			this.shutdown();
			break;
		case 11:
			this.immediate_shutdown = true;
			this.shutdown();
			break;
		default:
		}
	}
	,get_time: function() {
		return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	}
	,get_uniqueid: function() {
		return this.make_uniqueid();
	}
	,on_ready_event: function() {
		var _gthis = this;
		if(this.had_ready_event != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("had_ready_event == false" + (" ( " + "snow; the ready event should not be fired repeatedly" + " )")));
		}
		this.had_ready_event = true;
		this.setup_configs().then(function(_) {
			_gthis.runtime.ready();
			_gthis.host.ready();
			_gthis.ready = true;
		}).error(function(e) {
			throw new js__$Boot_HaxeError(snow_types_Error.init("snow / cannot recover from error: " + e));
		});
		snow_api_Promises.step();
		while(snow_Snow.next_queue.length > 0) {
			var count = snow_Snow.next_queue.length;
			var i = 0;
			while(i < count) {
				(snow_Snow.next_queue.shift())();
				++i;
			}
		}
		while(snow_Snow.defer_queue.length > 0) {
			var count1 = snow_Snow.defer_queue.length;
			var i1 = 0;
			while(i1 < count1) {
				(snow_Snow.defer_queue.shift())();
				++i1;
			}
		}
	}
	,on_tick_event: function() {
		if(this.freeze) {
			return;
		}
		snow_api_Timer.update();
		snow_api_Promises.step();
		var count = snow_Snow.next_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.next_queue.shift())();
			++i;
		}
		if(!this.shutting_down && this.ready) {
			this.host.internal_tick();
		}
		var count1 = snow_Snow.defer_queue.length;
		var i1 = 0;
		while(i1 < count1) {
			(snow_Snow.defer_queue.shift())();
			++i1;
		}
	}
	,setup_configs: function() {
		var _gthis = this;
		if(snow_types_Config.app_config == null || snow_types_Config.app_config == "") {
			this.config = this.host.config(this.config);
			return snow_api_Promise.resolve();
		}
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.default_user_config().then(function(_user_conf) {
				_gthis.config.user = _user_conf;
			}).error(function(error) {
				throw new js__$Boot_HaxeError(snow_types_Error.init("config / failed / default user config JSON failed to parse. Cannot recover. " + error));
			}).then(function() {
				_gthis.config = _gthis.host.config(_gthis.config);
				resolve();
			});
		});
	}
	,setup_host_config: function() {
		this.config = this.host.config(this.config);
	}
	,default_user_config: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.io.data_flow(haxe_io_Path.join([_gthis.assets.root,snow_types_Config.app_config]),snow_systems_assets_AssetJSON.processor).then(resolve).error(function(error) {
				if(error[1] == 2) {
					reject(error);
				} else {
					haxe_Log.trace("     i / snow / " + ("config / user config will be null! / " + Std.string(error)),{ fileName : "Snow.hx", lineNumber : 395, className : "snow.Snow", methodName : "default_user_config"});
					resolve(null);
				}
			});
		});
	}
	,default_config: function() {
		return { user : null, window : this.default_window_config(), render : this.default_render_config(), runtime : null};
	}
	,default_render_config: function() {
		return { depth : 0, stencil : 0, antialiasing : 0, red_bits : 8, green_bits : 8, blue_bits : 8, alpha_bits : 8, default_clear : { r : 0, g : 0, b : 0, a : 1}, opengl : { major : 0, minor : 0, profile : 0}, webgl : { version : 1}};
	}
	,default_window_config: function() {
		return { true_fullscreen : false, fullscreen : false, borderless : false, resizable : true, x : 536805376, y : 536805376, width : 960, height : 640, title : "snow app", no_input : false, background_sleep : 0.0666666666666666657};
	}
	,set_freeze: function(_freeze) {
		this.freeze = _freeze;
		this.dispatch_event(_freeze ? 4 : 5);
		return this.freeze;
	}
	,step: function() {
		snow_api_Promises.step();
		while(snow_Snow.next_queue.length > 0) {
			var count = snow_Snow.next_queue.length;
			var i = 0;
			while(i < count) {
				(snow_Snow.next_queue.shift())();
				++i;
			}
		}
		while(snow_Snow.defer_queue.length > 0) {
			var count1 = snow_Snow.defer_queue.length;
			var i1 = 0;
			while(i1 < count1) {
				(snow_Snow.defer_queue.shift())();
				++i1;
			}
		}
	}
	,cycle_next_queue: function() {
		var count = snow_Snow.next_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.next_queue.shift())();
			++i;
		}
	}
	,cycle_defer_queue: function() {
		var count = snow_Snow.defer_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.defer_queue.shift())();
			++i;
		}
	}
	,copy_window_config: function(_config) {
		return { borderless : _config.borderless, fullscreen : _config.fullscreen, true_fullscreen : _config.true_fullscreen, height : _config.height, no_input : _config.no_input, background_sleep : _config.background_sleep, resizable : _config.resizable, title : "" + _config.title, width : _config.width, x : _config.x, y : _config.y};
	}
	,copy_render_config: function(_config) {
		return { antialiasing : _config.antialiasing, depth : _config.depth, stencil : _config.stencil, red_bits : _config.red_bits, green_bits : _config.green_bits, blue_bits : _config.blue_bits, alpha_bits : _config.alpha_bits, default_clear : { r : _config.default_clear.r, g : _config.default_clear.g, b : _config.default_clear.b, a : _config.default_clear.a}, opengl : { major : _config.opengl.major, minor : _config.opengl.minor, profile : _config.opengl.profile}};
	}
	,make_uniqueid: function(val) {
		if(val == null) {
			val = Std.random(2147483647);
		}
		var r = val % 62 | 0;
		var q = val / 62 | 0;
		if(q > 0) {
			var tmp = this.make_uniqueid(q);
			var tmp1;
			if(r > 9) {
				var ascii = 65 + (r - 10);
				if(ascii > 90) {
					ascii += 6;
				}
				tmp1 = String.fromCharCode(ascii);
			} else {
				tmp1 = (r == null ? "null" : "" + r).charAt(0);
			}
			return tmp + tmp1;
		}
		var tmp2;
		if(r > 9) {
			var ascii1 = 65 + (r - 10);
			if(ascii1 > 90) {
				ascii1 += 6;
			}
			tmp2 = String.fromCharCode(ascii1);
		} else {
			tmp2 = (r == null ? "null" : "" + r).charAt(0);
		}
		return Std.string(tmp2);
	}
	,__class__: snow_Snow
	,__properties__: {get_uniqueid:"get_uniqueid",get_time:"get_time",set_freeze:"set_freeze"}
};
var snow_api__$Debug_LogError = $hxClasses["snow.api._Debug.LogError"] = { __ename__ : ["snow","api","_Debug","LogError"], __constructs__ : ["RequireString"] };
snow_api__$Debug_LogError.RequireString = function(detail) { var $x = ["RequireString",0,detail]; $x.__enum__ = snow_api__$Debug_LogError; $x.toString = $estr; return $x; };
var snow_api_Debug = function() { };
$hxClasses["snow.api.Debug"] = snow_api_Debug;
snow_api_Debug.__name__ = ["snow","api","Debug"];
snow_api_Debug._get_spacing = function(_file) {
	var _spaces = "";
	var _diff = snow_api_Debug._log_width - (_file.length + 4);
	if(_diff > 0) {
		var _g1 = 0;
		while(_g1 < _diff) {
			++_g1;
			_spaces += " ";
		}
	}
	return _spaces;
};
var snow_api_DebugError = $hxClasses["snow.api.DebugError"] = { __ename__ : ["snow","api","DebugError"], __constructs__ : ["assertion","null_assertion"] };
snow_api_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
snow_api_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
var snow_api_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["snow.api.Emitter"] = snow_api_Emitter;
snow_api_Emitter.__name__ = ["snow","api","Emitter"];
snow_api_Emitter.prototype = {
	emit: function(event,data) {
		this._check();
		var list = this.bindings.h[event];
		if(list != null && list.length > 0) {
			var _g = 0;
			while(_g < list.length) {
				var handler = list[_g];
				++_g;
				handler(data);
			}
		}
		this._check();
	}
	,on: function(event,handler) {
		this._check();
		if(!this.bindings.h.hasOwnProperty(event)) {
			this.bindings.h[event] = [handler];
			this.connected.push({ handler : handler, event : event});
		} else {
			var list = this.bindings.h[event];
			if(list.indexOf(handler) == -1) {
				list.push(handler);
				this.connected.push({ handler : handler, event : event});
			}
		}
	}
	,off: function(event,handler) {
		this._check();
		var success = false;
		if(this.bindings.h.hasOwnProperty(event)) {
			this._to_remove.push({ event : event, handler : handler});
			var _g_head = this.connected.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				if(val.event == event && val.handler == handler) {
					this.connected.remove(val);
				}
			}
			success = true;
		}
		return success;
	}
	,_check: function() {
		if(this._checking) {
			return;
		}
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var list = this.bindings.h[val.event];
				HxOverrides.remove(list,val.handler);
				if(list.length == 0) {
					this.bindings.remove(val.event);
				}
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: snow_api_Emitter
};
var snow_api_Promise = function(func) {
	this.was_caught = false;
	var _gthis = this;
	this.state = 0;
	this.reject_reactions = [];
	this.fulfill_reactions = [];
	this.settle_reactions = [];
	snow_api_Promises.queue(function() {
		func($bind(_gthis,_gthis.onfulfill),$bind(_gthis,_gthis.onreject));
		snow_api_Promises.defer(snow_api_Promises.next);
	});
};
$hxClasses["snow.api.Promise"] = snow_api_Promise;
snow_api_Promise.__name__ = ["snow","api","Promise"];
snow_api_Promise.all = function(list) {
	return new snow_api_Promise(function(ok,no) {
		var current = 0;
		var total = list.length;
		var fulfill_result = [];
		var reject_result = null;
		var all_state = 0;
		var single_ok = function(index,val) {
			if(all_state != 0) {
				return;
			}
			current += 1;
			fulfill_result[index] = val;
			if(total == current) {
				all_state = 1;
				ok(fulfill_result);
			}
		};
		var single_err = function(val1) {
			if(all_state != 0) {
				return;
			}
			all_state = 2;
			reject_result = val1;
			no(reject_result);
		};
		var index1 = 0;
		var _g = 0;
		while(_g < list.length) {
			var promise = list[_g];
			++_g;
			promise.then((function(a1,f) {
				return function(a2) {
					f[0](a1[0],a2);
				};
			})([index1],[single_ok])).error(single_err);
			++index1;
		}
	});
};
snow_api_Promise.race = function(list) {
	return new snow_api_Promise(function(ok,no) {
		var settled = false;
		var single_ok = function(val) {
			if(settled) {
				return;
			}
			settled = true;
			ok(val);
		};
		var single_err = function(val1) {
			if(settled) {
				return;
			}
			settled = true;
			no(val1);
		};
		var _g = 0;
		while(_g < list.length) {
			var promise = list[_g];
			++_g;
			promise.then(single_ok).error(single_err);
		}
	});
};
snow_api_Promise.reject = function(reason) {
	return new snow_api_Promise(function(ok,no) {
		no(reason);
	});
};
snow_api_Promise.resolve = function(val) {
	return new snow_api_Promise(function(ok,no) {
		ok(val);
	});
};
snow_api_Promise.prototype = {
	then: function(on_fulfilled,on_rejected) {
		switch(this.state) {
		case 0:
			this.add_fulfill(on_fulfilled);
			this.add_reject(on_rejected);
			return this.new_linked_promise();
		case 1:
			snow_api_Promises.defer(on_fulfilled,this.result);
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,error: function(on_rejected) {
		switch(this.state) {
		case 0:
			this.add_reject(on_rejected);
			return this.new_linked_resolve_empty();
		case 1:
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,toString: function() {
		return "Promise { state:" + this.state_string() + ", result:" + Std.string(this.result) + " }";
	}
	,add_settle: function(f) {
		if(this.state == 0) {
			this.settle_reactions.push(f);
		} else {
			snow_api_Promises.defer(f,this.result);
		}
	}
	,new_linked_promise: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(_) {
				if(_gthis.state == 1) {
					f(_gthis.result);
				} else {
					r(_gthis.result);
				}
			});
		});
	}
	,new_linked_resolve: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(val) {
				f(val);
			});
		});
	}
	,new_linked_reject: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(val) {
				r(val);
			});
		});
	}
	,new_linked_resolve_empty: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(_) {
				f();
			});
		});
	}
	,new_linked_reject_empty: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(_) {
				r();
			});
		});
	}
	,add_fulfill: function(f) {
		if(f != null) {
			this.fulfill_reactions.push(f);
		}
	}
	,add_reject: function(f) {
		if(f != null) {
			this.was_caught = true;
			this.reject_reactions.push(f);
		}
	}
	,onfulfill: function(val) {
		this.state = 1;
		this.result = val;
		while(this.fulfill_reactions.length > 0) this.fulfill_reactions.shift()(this.result);
		this.onsettle();
	}
	,onreject: function(reason) {
		this.state = 2;
		this.result = reason;
		while(this.reject_reactions.length > 0) this.reject_reactions.shift()(this.result);
		this.onsettle();
	}
	,onsettle: function() {
		while(this.settle_reactions.length > 0) this.settle_reactions.shift()(this.result);
	}
	,onexception: function(err) {
		var _gthis = this;
		this.add_settle(function(_) {
			if(!_gthis.was_caught) {
				if(_gthis.state == 2) {
					throw new js__$Boot_HaxeError(snow_api_PromiseError.UnhandledPromiseRejection(_gthis.toString()));
				}
			}
		});
		if(this.state == 0) {
			this.onreject(err);
		}
	}
	,state_string: function() {
		switch(this.state) {
		case 0:
			return "pending";
		case 1:
			return "fulfilled";
		case 2:
			return "rejected";
		}
	}
	,__class__: snow_api_Promise
};
var snow_api_Promises = function() { };
$hxClasses["snow.api.Promises"] = snow_api_Promises;
snow_api_Promises.__name__ = ["snow","api","Promises"];
snow_api_Promises.step = function() {
	snow_api_Promises.next();
	while(snow_api_Promises.defers.length > 0) {
		var defer = snow_api_Promises.defers.shift();
		defer.f(defer.a);
	}
};
snow_api_Promises.next = function() {
	if(snow_api_Promises.calls.length > 0) {
		(snow_api_Promises.calls.shift())();
	}
};
snow_api_Promises.defer = function(f,a) {
	if(f == null) {
		return;
	}
	snow_api_Promises.defers.push({ f : f, a : a});
};
snow_api_Promises.queue = function(f) {
	if(f == null) {
		return;
	}
	snow_api_Promises.calls.push(f);
};
var snow_api_PromiseError = $hxClasses["snow.api.PromiseError"] = { __ename__ : ["snow","api","PromiseError"], __constructs__ : ["UnhandledPromiseRejection"] };
snow_api_PromiseError.UnhandledPromiseRejection = function(err) { var $x = ["UnhandledPromiseRejection",0,err]; $x.__enum__ = snow_api_PromiseError; $x.toString = $estr; return $x; };
var snow_api_Timer = function(_time) {
	this.time = _time;
	snow_api_Timer.running_timers.push(this);
	this.fire_at = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.time;
	this.running = true;
};
$hxClasses["snow.api.Timer"] = snow_api_Timer;
snow_api_Timer.__name__ = ["snow","api","Timer"];
snow_api_Timer.measure = function(f,pos) {
	var t0 = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var r = f();
	haxe_Log.trace(window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - t0 + "s",pos);
	return r;
};
snow_api_Timer.update = function() {
	var now = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var _g = 0;
	var _g1 = snow_api_Timer.running_timers;
	while(_g < _g1.length) {
		var timer = _g1[_g];
		++_g;
		if(timer.running) {
			if(timer.fire_at < now) {
				timer.fire_at += timer.time;
				timer.run();
			}
		}
	}
};
snow_api_Timer.delay = function(_time,_f) {
	var t = new snow_api_Timer(_time);
	t.run = function() {
		t.stop();
		_f();
	};
	return t;
};
snow_api_Timer.prototype = {
	run: function() {
	}
	,stop: function() {
		if(this.running) {
			this.running = false;
			HxOverrides.remove(snow_api_Timer.running_timers,this);
		}
	}
	,__class__: snow_api_Timer
};
var snow_api_buffers__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Float32Array.Float32Array_Impl_"] = snow_api_buffers__$Float32Array_Float32Array_$Impl_$;
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.__name__ = ["snow","api","buffers","_Float32Array","Float32Array_Impl_"];
snow_api_buffers__$Float32Array_Float32Array_$Impl_$._new = function(_elements) {
	return new Float32Array(_elements);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromArray = function(_array) {
	return new Float32Array(_array);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromView = function(_view) {
	return new Float32Array(_view);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Float32Array(_buffer,_byteOffset,_byteLength / 4 | 0);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) {
		byteOffset = 0;
	}
	if(byteOffset == null) {
		return new Float32Array(bytes.b.bufferValue);
	}
	if(len == null) {
		return new Float32Array(bytes.b.bufferValue,byteOffset);
	}
	return new Float32Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.toString = function(this1) {
	return "Float32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_api_buffers__$Int32Array_Int32Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Int32Array.Int32Array_Impl_"] = snow_api_buffers__$Int32Array_Int32Array_$Impl_$;
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.__name__ = ["snow","api","buffers","_Int32Array","Int32Array_Impl_"];
snow_api_buffers__$Int32Array_Int32Array_$Impl_$._new = function(_elements) {
	return new Int32Array(_elements);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromArray = function(_array) {
	return new Int32Array(_array);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromView = function(_view) {
	return new Int32Array(_view);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Int32Array(_buffer,_byteOffset,_byteLength / 4 | 0);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) {
		byteOffset = 0;
	}
	if(byteOffset == null) {
		return new Int32Array(bytes.b.bufferValue);
	}
	if(len == null) {
		return new Int32Array(bytes.b.bufferValue,byteOffset);
	}
	return new Int32Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.toString = function(this1) {
	return "Int32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Uint8Array.Uint8Array_Impl_"] = snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$;
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.__name__ = ["snow","api","buffers","_Uint8Array","Uint8Array_Impl_"];
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$._new = function(_elements) {
	return new Uint8Array(_elements);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromArray = function(_array) {
	return new Uint8Array(_array);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromView = function(_view) {
	return new Uint8Array(_view);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Uint8Array(_buffer,_byteOffset,_byteLength);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) {
		return new Uint8Array(bytes.b.bufferValue);
	}
	if(len == null) {
		return new Uint8Array(bytes.b.bufferValue,byteOffset);
	}
	return new Uint8Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.toString = function(this1) {
	return "Uint8Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_modules_interfaces_Audio = function() { };
$hxClasses["snow.modules.interfaces.Audio"] = snow_modules_interfaces_Audio;
snow_modules_interfaces_Audio.__name__ = ["snow","modules","interfaces","Audio"];
snow_modules_interfaces_Audio.prototype = {
	__class__: snow_modules_interfaces_Audio
};
var snow_core_Audio = function(_app) {
	this.active = false;
	this.app = _app;
};
$hxClasses["snow.core.Audio"] = snow_core_Audio;
snow_core_Audio.__name__ = ["snow","core","Audio"];
snow_core_Audio.__interfaces__ = [snow_modules_interfaces_Audio];
snow_core_Audio.audio_format_from_path = function(_path) {
	switch(haxe_io_Path.extension(_path)) {
	case "ogg":
		return 2;
	case "pcm":
		return 4;
	case "wav":
		return 3;
	default:
		return 0;
	}
};
snow_core_Audio.prototype = {
	onevent: function(event) {
	}
	,shutdown: function() {
	}
	,suspend: function() {
	}
	,resume: function() {
	}
	,data_from_load: function(_path,_is_stream,_format) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		return null;
	}
	,data_from_bytes: function(_id,_bytes,_format) {
		return null;
	}
	,play: function(_source,_volume,_paused) {
		return null;
	}
	,loop: function(_source,_volume,_paused) {
		return null;
	}
	,pause: function(_handle) {
	}
	,unpause: function(_handle) {
	}
	,stop: function(_handle) {
	}
	,volume: function(_handle,_volume) {
	}
	,pan: function(_handle,_pan) {
	}
	,pitch: function(_handle,_pitch) {
	}
	,position: function(_handle,_time) {
	}
	,volume_of: function(_handle) {
		return 0.0;
	}
	,pan_of: function(_handle) {
		return 0.0;
	}
	,pitch_of: function(_handle) {
		return 0.0;
	}
	,position_of: function(_handle) {
		return 0.0;
	}
	,state_of: function(_handle) {
		return -1;
	}
	,loop_of: function(_handle) {
		return false;
	}
	,instance_of: function(_handle) {
		return null;
	}
	,__class__: snow_core_Audio
};
var snow_core_Extension = function() { };
$hxClasses["snow.core.Extension"] = snow_core_Extension;
snow_core_Extension.__name__ = ["snow","core","Extension"];
snow_core_Extension.prototype = {
	__class__: snow_core_Extension
};
var snow_core_Runtime = function() { };
$hxClasses["snow.core.Runtime"] = snow_core_Runtime;
snow_core_Runtime.__name__ = ["snow","core","Runtime"];
snow_core_Runtime.prototype = {
	__class__: snow_core_Runtime
};
var snow_core_web_Runtime = function(_app) {
	this.p_body_margin = "0";
	this.p_body_overflow = "0";
	this.p_height = 0;
	this.p_width = 0;
	this.p_s_height = "";
	this.p_s_width = "";
	this.p_margin = "0";
	this.p_padding = "0";
	this.gamepads_supported = false;
	this.window_dpr = 1.0;
	this.window_h = 0;
	this.window_w = 0;
	this.window_y = 0;
	this.window_x = 0;
	this.name = "web";
	this.app = _app;
	this.app.platform = "web";
	this.app.os = this.guess_os();
	snow_core_web_Runtime.timestamp_start = window.performance.now() / 1000.0;
	this.app.config.runtime = { window_id : "app", window_parent : window.document.body, prevent_default_context_menu : true, prevent_default_mouse_wheel : true, prevent_default_touches : true, prevent_default_keys : [1073741904,1073741903,1073741906,1073741905,8,9,127,32]};
	var _list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
	if(_list != null) {
		this.gamepads_supported = true;
		this.gamepad_btns_cache = [];
		var _g = 0;
		while(_g < _list.length) {
			var _gamepad = _list[_g];
			++_g;
			if(_gamepad != null) {
				this.gamepad_btns_cache[_gamepad.index] = [];
				var _g1 = 0;
				var _g2 = _gamepad.buttons.length;
				while(_g1 < _g2) {
					++_g1;
					this.gamepad_btns_cache[_gamepad.index].push(0);
				}
			}
		}
	} else {
		haxe_Log.trace("  i / runtime / " + "Gamepads are not supported in this browser :(",{ fileName : "Runtime.hx", lineNumber : 861, className : "snow.core.web.Runtime", methodName : "gamepads_init"});
	}
	haxe_Log.trace("  i / runtime / " + "web / init ok",{ fileName : "Runtime.hx", lineNumber : 67, className : "snow.core.web.Runtime", methodName : "new"});
};
$hxClasses["snow.core.web.Runtime"] = snow_core_web_Runtime;
snow_core_web_Runtime.__name__ = ["snow","core","web","Runtime"];
snow_core_web_Runtime.__interfaces__ = [snow_core_Runtime];
snow_core_web_Runtime.timestamp = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
snow_core_web_Runtime.prototype = {
	window_device_pixel_ratio: function() {
		if(window.devicePixelRatio == null) {
			return 1.0;
		} else {
			return window.devicePixelRatio;
		}
	}
	,window_width: function() {
		return this.window.width;
	}
	,window_height: function() {
		return this.window.height;
	}
	,window_grab: function(enable) {
		if(enable) {
			if(($_=this.window,$bind($_,$_.requestPointerLock)) != null) {
				this.window.requestPointerLock();
			} else if(this.window.webkitRequestPointerLock != null) {
				this.window.webkitRequestPointerLock();
			} else if(this.window.mozRequestPointerLock != null) {
				this.window.mozRequestPointerLock();
			} else {
				return false;
			}
		} else if(($_=window.document,$bind($_,$_.exitPointerLock)) != null) {
			window.document.exitPointerLock();
		} else if(window.document.webkitExitPointerLock != null) {
			window.document.webkitExitPointerLock();
		} else if(window.document.mozExitPointerLock != null) {
			window.document.mozExitPointerLock();
		} else {
			return false;
		}
		return true;
	}
	,onresize_handler: function(_) {
		this.window.style.width = "" + Std.string(window.innerWidth) + "px";
		this.window.style.height = "" + Std.string(window.innerHeight) + "px";
	}
	,window_fullscreen: function(enable,true_fullscreen) {
		if(true_fullscreen == null) {
			true_fullscreen = false;
		}
		var _result = true;
		if(enable) {
			this.p_padding = this.window.style.padding;
			this.p_margin = this.window.style.margin;
			this.p_s_width = this.window.style.width;
			this.p_s_height = this.window.style.height;
			this.p_width = this.window.width;
			this.p_height = this.window.height;
			this.p_body_margin = window.document.body.style.margin;
			this.p_body_overflow = window.document.body.style.overflow;
			this.window.style.margin = "0";
			this.window.style.padding = "0";
			this.window.style.width = Std.string(window.innerWidth) + "px";
			this.window.style.height = Std.string(window.innerHeight) + "px";
			this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
			this.window.width = Math.floor(window.innerWidth * this.window_dpr);
			this.window.height = Math.floor(window.innerHeight * this.window_dpr);
			window.document.body.style.margin = "0";
			window.document.body.style.overflow = "hidden";
			if(true_fullscreen) {
				if(($_=this.window,$bind($_,$_.requestFullscreen)) != null) {
					this.window.requestFullscreen();
				} else if(this.window.requestFullScreen != null) {
					this.window.requestFullScreen(null);
				} else if(this.window.webkitRequestFullscreen != null) {
					this.window.webkitRequestFullscreen();
				} else if(this.window.mozRequestFullScreen != null) {
					this.window.mozRequestFullScreen();
				} else {
					_result = false;
				}
			}
			window.addEventListener("resize",$bind(this,this.onresize_handler));
		} else {
			window.removeEventListener("resize",$bind(this,this.onresize_handler));
			this.window.style.padding = this.p_padding;
			this.window.style.margin = this.p_margin;
			this.window.style.width = this.p_s_width;
			this.window.style.height = this.p_s_height;
			this.window.width = this.p_width;
			this.window.height = this.p_height;
			window.document.body.style.margin = this.p_body_margin;
			window.document.body.style.overflow = this.p_body_overflow;
			if(true_fullscreen) {
				if(($_=window.document,$bind($_,$_.exitFullscreen)) != null) {
					window.document.exitFullscreen();
				} else if(window.document.webkitExitFullscreen != null) {
					window.document.webkitExitFullscreen();
				} else if(window.document.mozCancelFullScreen != null) {
					window.document.mozCancelFullScreen();
				} else {
					_result = false;
				}
			}
		}
		return _result;
	}
	,shutdown: function(_immediate) {
		if(_immediate == null) {
			_immediate = false;
		}
		haxe_Log.trace("  i / runtime / " + "runtime / web / shutdown",{ fileName : "Runtime.hx", lineNumber : 230, className : "snow.core.web.Runtime", methodName : "shutdown"});
		window.document.removeEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.removeEventListener("keydown",$bind(this,this.on_keydown));
		window.document.removeEventListener("keyup",$bind(this,this.on_keyup));
		window.document.removeEventListener("keypress",$bind(this,this.on_keypress));
		window.removeEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.removeEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
		this.window.remove();
		this.window = null;
		snow_modules_opengl_web_GL.gl = null;
	}
	,run: function() {
		haxe_Log.trace("  i / runtime / " + "web / run",{ fileName : "Runtime.hx", lineNumber : 248, className : "snow.core.web.Runtime", methodName : "run"});
		this.loop_pre_ready();
		return false;
	}
	,ready: function() {
		haxe_Log.trace("  i / runtime / " + "web / ready",{ fileName : "Runtime.hx", lineNumber : 258, className : "snow.core.web.Runtime", methodName : "ready"});
		this.create_window();
	}
	,dispatch_window_ev: function(_type,_x,_y) {
		this.app.dispatch_window_event(_type,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,_x,_y);
	}
	,setup_events: function() {
		var _gthis = this;
		this.window.addEventListener("mouseleave",function(_ev) {
			_gthis.dispatch_window_ev(11,null,null);
		});
		this.window.addEventListener("mouseenter",function(_ev1) {
			_gthis.dispatch_window_ev(10,null,null);
		});
		window.document.addEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.addEventListener("keydown",$bind(this,this.on_keydown));
		window.document.addEventListener("keyup",$bind(this,this.on_keyup));
		window.document.addEventListener("keypress",$bind(this,this.on_keypress));
		this.window.addEventListener("contextmenu",function(_ev2) {
			if(_gthis.app.config.runtime.prevent_default_context_menu) {
				_ev2.preventDefault();
			}
		});
		this.window.addEventListener("mousedown",function(_ev3) {
			_gthis.app.input.dispatch_mouse_down_event(Math.floor(_gthis.window_dpr * (_ev3.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev3.pageY - _gthis.window_y)),_ev3.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mouseup",function(_ev4) {
			_gthis.app.input.dispatch_mouse_up_event(Math.floor(_gthis.window_dpr * (_ev4.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev4.pageY - _gthis.window_y)),_ev4.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mousemove",function(_ev5) {
			var _movement_x = _ev5.movementX == null ? 0 : _ev5.movementX;
			var _movement_y = _ev5.movementY == null ? 0 : _ev5.movementY;
			_movement_x = Math.floor(_movement_x * _gthis.window_dpr);
			_movement_y = Math.floor(_movement_y * _gthis.window_dpr);
			_gthis.app.input.dispatch_mouse_move_event(Math.floor(_gthis.window_dpr * (_ev5.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev5.pageY - _gthis.window_y)),_movement_x,_movement_y,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("wheel",function(_ev6) {
			if(_gthis.app.config.runtime.prevent_default_mouse_wheel) {
				_ev6.preventDefault();
			}
			_gthis.app.input.dispatch_mouse_wheel_event(_ev6.deltaX,_ev6.deltaY,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("touchstart",function(_ev7) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev7.preventDefault();
			}
			var _bound = _gthis.window.getBoundingClientRect();
			var _g = 0;
			var _g1 = _ev7.changedTouches;
			while(_g < _g1.length) {
				var touch = _g1[_g];
				++_g;
				var _x = touch.clientX - _bound.left;
				var _y = touch.clientY - _bound.top;
				_x /= _bound.width;
				_y /= _bound.height;
				_gthis.app.input.dispatch_touch_down_event(_x,_y,0,0,touch.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchend",function(_ev8) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev8.preventDefault();
			}
			var _bound1 = _gthis.window.getBoundingClientRect();
			var _g2 = 0;
			var _g11 = _ev8.changedTouches;
			while(_g2 < _g11.length) {
				var touch1 = _g11[_g2];
				++_g2;
				var _x1 = touch1.clientX - _bound1.left;
				var _y1 = touch1.clientY - _bound1.top;
				_x1 /= _bound1.width;
				_y1 /= _bound1.height;
				_gthis.app.input.dispatch_touch_up_event(_x1,_y1,0,0,touch1.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchmove",function(_ev9) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev9.preventDefault();
			}
			var _bound2 = _gthis.window.getBoundingClientRect();
			var _g3 = 0;
			var _g12 = _ev9.changedTouches;
			while(_g3 < _g12.length) {
				var touch2 = _g12[_g3];
				++_g3;
				var _x2 = touch2.clientX - _bound2.left;
				var _y2 = touch2.clientY - _bound2.top;
				_x2 /= _bound2.width;
				_y2 /= _bound2.height;
				_gthis.app.input.dispatch_touch_move_event(_x2,_y2,0,0,touch2.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		window.addEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.addEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
	}
	,on_visibilitychange: function(_) {
		if(window.document.hidden) {
			this.app.dispatch_window_event(2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(7,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(13,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		} else {
			this.app.dispatch_window_event(1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(9,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(12,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		}
	}
	,on_keydown: function(_ev) {
		var dom_keycode = _ev.keyCode;
		var _keycode = dom_keycode >= 65 && dom_keycode <= 90 ? dom_keycode + 32 : snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		this.app.input.mod_state.none = !_ev.altKey && !_ev.ctrlKey && !_ev.metaKey && !_ev.shiftKey;
		this.app.input.mod_state.lshift = _ev.shiftKey;
		this.app.input.mod_state.rshift = _ev.shiftKey;
		this.app.input.mod_state.lctrl = _ev.ctrlKey;
		this.app.input.mod_state.rctrl = _ev.ctrlKey;
		this.app.input.mod_state.lalt = _ev.altKey;
		this.app.input.mod_state.ralt = _ev.altKey;
		this.app.input.mod_state.lmeta = _ev.metaKey;
		this.app.input.mod_state.rmeta = _ev.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _ev.ctrlKey;
		this.app.input.mod_state.shift = _ev.shiftKey;
		this.app.input.mod_state.alt = _ev.altKey;
		this.app.input.mod_state.meta = _ev.metaKey;
		var _mod_state = this.app.input.mod_state;
		if(this.app.config.runtime.prevent_default_keys.indexOf(_keycode) != -1) {
			_ev.preventDefault();
		}
		this.app.input.dispatch_key_down_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keyup: function(_ev) {
		var dom_keycode = _ev.keyCode;
		var _keycode = dom_keycode >= 65 && dom_keycode <= 90 ? dom_keycode + 32 : snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		this.app.input.mod_state.none = !_ev.altKey && !_ev.ctrlKey && !_ev.metaKey && !_ev.shiftKey;
		this.app.input.mod_state.lshift = _ev.shiftKey;
		this.app.input.mod_state.rshift = _ev.shiftKey;
		this.app.input.mod_state.lctrl = _ev.ctrlKey;
		this.app.input.mod_state.rctrl = _ev.ctrlKey;
		this.app.input.mod_state.lalt = _ev.altKey;
		this.app.input.mod_state.ralt = _ev.altKey;
		this.app.input.mod_state.lmeta = _ev.metaKey;
		this.app.input.mod_state.rmeta = _ev.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _ev.ctrlKey;
		this.app.input.mod_state.shift = _ev.shiftKey;
		this.app.input.mod_state.alt = _ev.altKey;
		this.app.input.mod_state.meta = _ev.metaKey;
		var _mod_state = this.app.input.mod_state;
		if(this.app.config.runtime.prevent_default_keys.indexOf(_keycode) != -1) {
			_ev.preventDefault();
		}
		this.app.input.dispatch_key_up_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keypress: function(_ev) {
		if(_ev.which != 0 && snow_core_web_Runtime.key_press_ignored.indexOf(_ev.keyCode) == -1) {
			var _text = String.fromCharCode(_ev.charCode);
			this.app.input.dispatch_text_event(_text,0,_text.length,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		}
	}
	,on_gamepadconnected: function(_ev) {
		var _gamepad = _ev.gamepad;
		this.gamepad_btns_cache[_gamepad.index] = [];
		var _g1 = 0;
		var _g = _gamepad.buttons.length;
		while(_g1 < _g) {
			++_g1;
			this.gamepad_btns_cache[_gamepad.index].push(0);
		}
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,on_gamepaddisconnected: function(_ev) {
		this.gamepad_btns_cache[_ev.gamepad.index] = null;
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,create_window: function() {
		var config = this.app.config.window;
		this.window = window.document.createElement("canvas");
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		this.window.width = Math.floor(config.width * this.window_dpr);
		this.window.height = Math.floor(config.height * this.window_dpr);
		this.window_w = config.width;
		this.window_h = config.height;
		this.window.style.width = config.width + "px";
		this.window.style.height = config.height + "px";
		this.window.style.background = "#000";
		this.window.id = this.app.config.runtime.window_id;
		this.app.config.runtime.window_parent.appendChild(this.window);
		if(config.title != null) {
			window.document.title = config.title;
		}
		if(!this.create_render_context(this.window)) {
			this.create_render_context_failed();
			return;
		}
		this.post_render_context(this.window);
		this.setup_events();
		if(config.fullscreen) {
			this.window_fullscreen(true,config.true_fullscreen);
			this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
			var _bounds = this.window.getBoundingClientRect();
			var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
			var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
			var _w = Math.round(_bounds.width);
			var _h = Math.round(_bounds.height);
			if(_x != this.window_x || _y != this.window_y) {
				this.window_x = _x;
				this.window_y = _y;
				this.dispatch_window_ev(4,this.window_x,this.window_y);
			}
			if(_w != this.window_w || _h != this.window_h) {
				this.window_w = _w;
				this.window_h = _h;
				this.window.width = Math.floor(this.window_w * this.window_dpr);
				this.window.height = Math.floor(this.window_h * this.window_dpr);
				this.dispatch_window_ev(6,this.window.width,this.window.height);
			}
		}
	}
	,post_render_context: function(window) {
		var color = this.app.config.render.default_clear;
		snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		snow_modules_opengl_web_GL.gl.clearStencil(0);
		snow_modules_opengl_web_GL.gl.clearColor(color.r,color.g,color.b,color.a);
		snow_modules_opengl_web_GL.gl.clear(17664);
	}
	,create_render_context: function(_window) {
		var config = this.app.config.render;
		var attr = config.webgl;
		attr = this.apply_GL_attr(config,attr);
		var _gl = null;
		if(config.webgl.version != 1) {
			_gl = this.window.getContext("webgl" + config.webgl.version);
			if(_gl == null) {
				_gl = this.window.getContext("experimental-webgl" + config.webgl.version);
			}
		} else {
			_gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.window,attr);
		}
		snow_modules_opengl_web_GL.gl = _gl;
		haxe_Log.trace("  i / runtime / " + ("web / GL / context(" + Std.string(_gl != null) + ")"),{ fileName : "Runtime.hx", lineNumber : 652, className : "snow.core.web.Runtime", methodName : "create_render_context"});
		return _gl != null;
	}
	,apply_GL_attr: function(render,attr) {
		if(attr.alpha == null) {
			attr.alpha = false;
		}
		attr.alpha = attr.alpha;
		if(attr.premultipliedAlpha == null) {
			attr.premultipliedAlpha = false;
		}
		attr.premultipliedAlpha = attr.premultipliedAlpha;
		if(attr.antialias == null) {
			attr.antialias = this.app.config.render.antialiasing > 0;
		}
		attr.antialias = attr.antialias;
		if(attr.depth == null) {
			attr.depth = this.app.config.render.depth > 0;
		}
		attr.depth = attr.depth;
		if(attr.stencil == null) {
			attr.stencil = this.app.config.render.stencil > 0;
		}
		attr.stencil = attr.stencil;
		return attr;
	}
	,create_render_context_failed: function() {
		var msg = "WebGL is required to run this!<br/><br/>";
		msg += "visit <a style=\"color:#06b4fb; text-decoration:none;\" href=\"http://get.webgl.org/\">get.webgl.com</a> for info<br/>";
		msg += "and contact the developer of this app";
		var text_el;
		var overlay_el;
		text_el = window.document.createElement("div");
		overlay_el = window.document.createElement("div");
		text_el.style.marginLeft = "auto";
		text_el.style.marginRight = "auto";
		text_el.style.color = "#d3d3d3";
		text_el.style.marginTop = "5em";
		text_el.style.fontSize = "1.4em";
		text_el.style.fontFamily = "helvetica,sans-serif";
		text_el.innerHTML = msg;
		overlay_el.style.top = "0";
		overlay_el.style.left = "0";
		overlay_el.style.width = "100%";
		overlay_el.style.height = "100%";
		overlay_el.style.display = "block";
		overlay_el.style.minWidth = "100%";
		overlay_el.style.minHeight = "100%";
		overlay_el.style.textAlign = "center";
		overlay_el.style.position = "absolute";
		overlay_el.style.background = "rgba(1,1,1,0.90)";
		overlay_el.appendChild(text_el);
		window.document.body.appendChild(overlay_el);
		throw new js__$Boot_HaxeError(snow_types_Error.error("runtime / web / failed to create render context, unable to recover"));
	}
	,request_frame: function() {
		window.requestAnimationFrame($bind(this,this.loop));
	}
	,loop: function(_t) {
		if(_t == null) {
			_t = 0.016;
		}
		if(this.app.has_shutdown) {
			return false;
		}
		if(this.gamepads_supported) {
			var list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
			if(list == null) {
				throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("list was null" + (" ( " + "gamepad list not found, but they were previously?" + " )")));
			}
			var _count = list.length;
			var _idx = 0;
			while(_idx < _count) {
				var _gamepad = list[_idx];
				if(_gamepad == null) {
					++_idx;
					continue;
				}
				var _g1 = 0;
				var _g = _gamepad.axes.length;
				while(_g1 < _g) {
					var _axis_idx = _g1++;
					var _axis = _gamepad.axes[_axis_idx];
					if(_axis != 0) {
						this.app.input.dispatch_gamepad_axis_event(_gamepad.index,_axis_idx,_axis,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					}
				}
				var _prev_btn = this.gamepad_btns_cache[_gamepad.index];
				var _g11 = 0;
				var _g2 = _gamepad.buttons.length;
				while(_g11 < _g2) {
					var _btn_idx = _g11++;
					var _btn = _gamepad.buttons[_btn_idx];
					if(_btn.value != _prev_btn[_btn_idx]) {
						if(_btn.pressed) {
							this.app.input.dispatch_gamepad_button_down_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
						} else {
							this.app.input.dispatch_gamepad_button_up_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
						}
						_prev_btn[_btn_idx] = _btn.value;
					}
				}
				++_idx;
			}
		}
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		var _bounds = this.window.getBoundingClientRect();
		var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
		var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
		var _w = Math.round(_bounds.width);
		var _h = Math.round(_bounds.height);
		if(_x != this.window_x || _y != this.window_y) {
			this.window_x = _x;
			this.window_y = _y;
			this.dispatch_window_ev(4,this.window_x,this.window_y);
		}
		if(_w != this.window_w || _h != this.window_h) {
			this.window_w = _w;
			this.window_h = _h;
			this.window.width = Math.floor(this.window_w * this.window_dpr);
			this.window.height = Math.floor(this.window_h * this.window_dpr);
			this.dispatch_window_ev(6,this.window.width,this.window.height);
		}
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) {
			window.requestAnimationFrame($bind(this,this.loop));
		}
		return true;
	}
	,loop_pre_ready: function(_t) {
		if(_t == null) {
			_t = 0.016;
		}
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) {
			if(!this.app.ready) {
				window.requestAnimationFrame($bind(this,this.loop_pre_ready));
			} else {
				window.requestAnimationFrame($bind(this,this.loop));
			}
		}
		return true;
	}
	,mod_state_from_event: function(_key_event) {
		this.app.input.mod_state.none = !_key_event.altKey && !_key_event.ctrlKey && !_key_event.metaKey && !_key_event.shiftKey;
		this.app.input.mod_state.lshift = _key_event.shiftKey;
		this.app.input.mod_state.rshift = _key_event.shiftKey;
		this.app.input.mod_state.lctrl = _key_event.ctrlKey;
		this.app.input.mod_state.rctrl = _key_event.ctrlKey;
		this.app.input.mod_state.lalt = _key_event.altKey;
		this.app.input.mod_state.ralt = _key_event.altKey;
		this.app.input.mod_state.lmeta = _key_event.metaKey;
		this.app.input.mod_state.rmeta = _key_event.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _key_event.ctrlKey;
		this.app.input.mod_state.shift = _key_event.shiftKey;
		this.app.input.mod_state.alt = _key_event.altKey;
		this.app.input.mod_state.meta = _key_event.metaKey;
		return this.app.input.mod_state;
	}
	,convert_keycode: function(dom_keycode) {
		if(dom_keycode >= 65 && dom_keycode <= 90) {
			return dom_keycode + 32;
		}
		return snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
	}
	,get_window_x: function(_bounds) {
		return Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
	}
	,get_window_y: function(_bounds) {
		return Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
	}
	,update_window_bounds: function() {
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		var _bounds = this.window.getBoundingClientRect();
		var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
		var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
		var _w = Math.round(_bounds.width);
		var _h = Math.round(_bounds.height);
		if(_x != this.window_x || _y != this.window_y) {
			this.window_x = _x;
			this.window_y = _y;
			this.dispatch_window_ev(4,this.window_x,this.window_y);
		}
		if(_w != this.window_w || _h != this.window_h) {
			this.window_w = _w;
			this.window_h = _h;
			this.window.width = Math.floor(this.window_w * this.window_dpr);
			this.window.height = Math.floor(this.window_h * this.window_dpr);
			this.dispatch_window_ev(6,this.window.width,this.window.height);
		}
	}
	,gamepads_init_cache: function(_gamepad) {
		this.gamepad_btns_cache[_gamepad.index] = [];
		var _g1 = 0;
		var _g = _gamepad.buttons.length;
		while(_g1 < _g) {
			++_g1;
			this.gamepad_btns_cache[_gamepad.index].push(0);
		}
	}
	,gamepads_init: function() {
		var _list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
		if(_list != null) {
			this.gamepads_supported = true;
			this.gamepad_btns_cache = [];
			var _g = 0;
			while(_g < _list.length) {
				var _gamepad = _list[_g];
				++_g;
				if(_gamepad != null) {
					this.gamepad_btns_cache[_gamepad.index] = [];
					var _g1 = 0;
					var _g2 = _gamepad.buttons.length;
					while(_g1 < _g2) {
						_g1++;
						this.gamepad_btns_cache[_gamepad.index].push(0);
					}
				}
			}
		} else {
			haxe_Log.trace("  i / runtime / " + "Gamepads are not supported in this browser :(",{ fileName : "Runtime.hx", lineNumber : 861, className : "snow.core.web.Runtime", methodName : "gamepads_init"});
		}
	}
	,gamepads_poll: function() {
		var list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
		if(list == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("list was null" + (" ( " + "gamepad list not found, but they were previously?" + " )")));
		}
		var _count = list.length;
		var _idx = 0;
		while(_idx < _count) {
			var _gamepad = list[_idx];
			if(_gamepad == null) {
				++_idx;
				continue;
			}
			var _g1 = 0;
			var _g = _gamepad.axes.length;
			while(_g1 < _g) {
				var _axis_idx = _g1++;
				var _axis = _gamepad.axes[_axis_idx];
				if(_axis != 0) {
					this.app.input.dispatch_gamepad_axis_event(_gamepad.index,_axis_idx,_axis,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
				}
			}
			var _prev_btn = this.gamepad_btns_cache[_gamepad.index];
			var _g11 = 0;
			var _g2 = _gamepad.buttons.length;
			while(_g11 < _g2) {
				var _btn_idx = _g11++;
				var _btn = _gamepad.buttons[_btn_idx];
				if(_btn.value != _prev_btn[_btn_idx]) {
					if(_btn.pressed) {
						this.app.input.dispatch_gamepad_button_down_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					} else {
						this.app.input.dispatch_gamepad_button_up_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					}
					_prev_btn[_btn_idx] = _btn.value;
				}
			}
			++_idx;
		}
	}
	,gamepads_get_list: function() {
		if(($_=window.navigator,$bind($_,$_.getGamepads)) != null) {
			return window.navigator.getGamepads();
		}
		if(window.navigator.webkitGetGamepads != null) {
			return window.navigator.webkitGetGamepads();
		}
		return null;
	}
	,guess_os: function() {
		var _ver = window.navigator.appVersion;
		var _agent = window.navigator.userAgent;
		if(new EReg("mac","gi").match(_ver)) {
			return "mac";
		}
		if(new EReg("win","gi").match(_ver)) {
			return "windows";
		}
		if(new EReg("x11","gi").match(_ver)) {
			return "linux";
		}
		if(new EReg("linux","gi").match(_ver)) {
			return "linux";
		}
		if(new EReg("android","gi").match(_ver)) {
			return "android";
		}
		if(new EReg("ipad","gi").match(_agent)) {
			return "ios";
		}
		if(new EReg("iphone","gi").match(_agent)) {
			return "ios";
		}
		if(new EReg("ipod","gi").match(_agent)) {
			return "ios";
		}
		return "unknown";
	}
	,__class__: snow_core_web_Runtime
};
var snow_core_web__$Runtime_DOMKeys = function() { };
$hxClasses["snow.core.web._Runtime.DOMKeys"] = snow_core_web__$Runtime_DOMKeys;
snow_core_web__$Runtime_DOMKeys.__name__ = ["snow","core","web","_Runtime","DOMKeys"];
snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode = function(_keycode) {
	switch(_keycode) {
	case 16:
		return 1073742049;
	case 17:
		return 1073742048;
	case 18:
		return 1073742050;
	case 20:
		return 1073741881;
	case 33:
		return 1073741899;
	case 34:
		return 1073741902;
	case 35:
		return 1073741901;
	case 36:
		return 1073741898;
	case 37:
		return 1073741904;
	case 38:
		return 1073741906;
	case 39:
		return 1073741903;
	case 40:
		return 1073741905;
	case 44:
		return 1073741894;
	case 45:
		return 1073741897;
	case 46:
		return 127;
	case 91:
		return 1073742051;
	case 93:
		return 1073742055;
	case 96:
		return 1073741922;
	case 97:
		return 1073741913;
	case 98:
		return 1073741914;
	case 99:
		return 1073741915;
	case 100:
		return 1073741916;
	case 101:
		return 1073741917;
	case 102:
		return 1073741918;
	case 103:
		return 1073741919;
	case 104:
		return 1073741920;
	case 105:
		return 1073741921;
	case 106:
		return 1073741909;
	case 107:
		return 1073741911;
	case 109:
		return 1073741910;
	case 110:
		return 1073742044;
	case 111:
		return 1073741908;
	case 112:
		return 1073741882;
	case 113:
		return 1073741883;
	case 114:
		return 1073741884;
	case 115:
		return 1073741885;
	case 116:
		return 1073741886;
	case 117:
		return 1073741887;
	case 118:
		return 1073741888;
	case 119:
		return 1073741889;
	case 120:
		return 1073741890;
	case 121:
		return 1073741891;
	case 122:
		return 1073741892;
	case 123:
		return 1073741893;
	case 124:
		return 1073741928;
	case 125:
		return 1073741929;
	case 126:
		return 1073741930;
	case 127:
		return 1073741931;
	case 128:
		return 1073741932;
	case 129:
		return 1073741933;
	case 130:
		return 1073741934;
	case 131:
		return 1073741935;
	case 132:
		return 1073741936;
	case 133:
		return 1073741937;
	case 134:
		return 1073741938;
	case 135:
		return 1073741939;
	case 144:
		return 1073741907;
	case 160:
		return 94;
	case 161:
		return 33;
	case 162:
		return 34;
	case 163:
		return 35;
	case 164:
		return 36;
	case 165:
		return 37;
	case 166:
		return 38;
	case 167:
		return 95;
	case 168:
		return 40;
	case 169:
		return 41;
	case 170:
		return 42;
	case 171:
		return 43;
	case 172:
		return 92;
	case 173:
		return 45;
	case 174:
		return 91;
	case 175:
		return 93;
	case 176:
		return 96;
	case 181:
		return 1073742086;
	case 182:
		return 1073741953;
	case 183:
		return 1073741952;
	case 188:
		return 44;
	case 190:
		return 46;
	case 191:
		return 47;
	case 192:
		return 96;
	case 219:
		return 91;
	case 220:
		return 92;
	case 221:
		return 93;
	case 222:
		return 39;
	case 224:
		return 1073742051;
	}
	return _keycode;
};
var snow_modules_interfaces_Assets = function() { };
$hxClasses["snow.modules.interfaces.Assets"] = snow_modules_interfaces_Assets;
snow_modules_interfaces_Assets.__name__ = ["snow","modules","interfaces","Assets"];
snow_modules_interfaces_Assets.prototype = {
	__class__: snow_modules_interfaces_Assets
};
var snow_core_web_assets_Assets = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.assets.Assets"] = snow_core_web_assets_Assets;
snow_core_web_assets_Assets.__name__ = ["snow","core","web","assets","Assets"];
snow_core_web_assets_Assets.__interfaces__ = [snow_modules_interfaces_Assets];
snow_core_web_assets_Assets.prototype = {
	onevent: function(event) {
	}
	,shutdown: function() {
	}
	,image_info_from_load: function(_id,_components) {
		if(_components == null) {
			_components = 4;
		}
		return this.app.io.data_flow(_id,snow_systems_assets_AssetImage.processor);
	}
	,image_info_from_element: function(_id,_elem) {
		var width_pot = this.nearest_power_of_two(_elem.width);
		var height_pot = this.nearest_power_of_two(_elem.height);
		var image_bytes = this.POT_bytes_from_element(_elem.width,_elem.height,width_pot,height_pot,_elem);
		var info = new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _elem.width, height : _elem.height, width_actual : width_pot, height_actual : height_pot, bpp_source : 4, pixels : image_bytes});
		image_bytes = null;
		return info;
	}
	,image_info_from_pixels: function(_id,_width,_height,_pixels,_bpp) {
		if(_bpp == null) {
			_bpp = 4;
		}
		return new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _width, height : _height, width_actual : _width, height_actual : _height, bpp_source : 4, pixels : _pixels});
	}
	,image_info_from_bytes: function(_id,_bytes,_components) {
		if(_components == null) {
			_components = 4;
		}
		var _gthis = this;
		if(_id == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
		}
		if(_bytes == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null"));
		}
		if(_bytes.length == 0) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_bytes.length != 0"));
		}
		var ext = haxe_io_Path.extension(_id);
		return new snow_api_Promise(function(resolve,reject) {
			var str = "";
			var i = 0;
			var len = _bytes.length;
			while(i < len) str += String.fromCharCode(_bytes[i++] & 255);
			var b64 = window.btoa(str);
			var _img = new Image();
			_img.onload = function(_) {
				var info = _gthis.image_info_from_element(_id,_img);
				resolve(info);
			};
			_img.onerror = function(e) {
				reject(snow_types_Error.error("failed to load image from bytes, on error: " + e));
			};
			_img.src = "data:image/" + ext + ";base64," + b64;
		});
	}
	,POT_bytes_from_pixels: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas = window.document.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		var image_bytes = null;
		var _pixels = new Uint8ClampedArray(_source.buffer);
		var _imgdata = tmp_context.createImageData(_width,_height);
		_imgdata.data.set(_pixels);
		try {
			tmp_context.putImageData(_imgdata,0,0);
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 183, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_pixels"});
			throw js__$Boot_HaxeError.wrap(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		_imgdata = null;
		return new Uint8Array(image_bytes.data);
	}
	,POT_bytes_from_element: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas = window.document.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		tmp_context.drawImage(_source,0,0,_width,_height);
		var image_bytes = null;
		try {
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 221, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_element"});
			throw js__$Boot_HaxeError.wrap(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		return new Uint8Array(image_bytes.data);
	}
	,nearest_power_of_two: function(_value) {
		if(!snow_core_web_assets_Assets.POT) {
			return _value;
		}
		--_value;
		_value |= _value >> 1;
		_value |= _value >> 2;
		_value |= _value >> 4;
		_value |= _value >> 8;
		_value |= _value >> 16;
		return ++_value;
	}
	,__class__: snow_core_web_assets_Assets
};
var snow_modules_interfaces_IO = function() { };
$hxClasses["snow.modules.interfaces.IO"] = snow_modules_interfaces_IO;
snow_modules_interfaces_IO.__name__ = ["snow","modules","interfaces","IO"];
snow_modules_interfaces_IO.prototype = {
	__class__: snow_modules_interfaces_IO
};
var snow_core_web_io_IO = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.io.IO"] = snow_core_web_io_IO;
snow_core_web_io_IO.__name__ = ["snow","core","web","io","IO"];
snow_core_web_io_IO.__interfaces__ = [snow_modules_interfaces_IO];
snow_core_web_io_IO.prototype = {
	shutdown: function() {
	}
	,onevent: function(_event) {
	}
	,app_path: function() {
		return "./";
	}
	,app_path_prefs: function() {
		return "./";
	}
	,url_open: function(_url) {
		if(_url != null && _url.length > 0) {
			window.open(_url,"_blank");
		}
	}
	,data_load: function(_path,_options) {
		return new snow_api_Promise(function(resolve,reject) {
			var _binary = true;
			if(_options != null) {
				if(_options.binary != null) {
					_binary = _options.binary;
				}
			}
			var request = new XMLHttpRequest();
			request.open("GET",_path,true);
			if(_binary) {
				request.overrideMimeType("text/plain; charset=x-user-defined");
			} else {
				request.overrideMimeType("text/plain; charset=UTF-8");
			}
			request.responseType = "arraybuffer";
			request.onload = function(data) {
				if(request.status == 200) {
					var this1 = new Uint8Array(request.response);
					resolve(this1);
				} else {
					reject(snow_types_Error.error("request status was " + request.status + " / " + request.statusText));
				}
			};
			request.send();
		});
	}
	,data_save: function(_path,_data,_options) {
		return false;
	}
	,string_save_path: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return haxe_io_Path.normalize(haxe_io_Path.join(["<localstorage>","" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot]));
	}
	,string_slot_id: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return "" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot;
	}
	,string_slot_destroy: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 119, className : "snow.core.web.io.IO", methodName : "string_slot_destroy"});
			return false;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		storage.removeItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot);
		return false;
	}
	,string_slot_save: function(_slot,_contents) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 136, className : "snow.core.web.io.IO", methodName : "string_slot_save"});
			return false;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		storage.setItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot,_contents);
		return true;
	}
	,string_slot_load: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
			return null;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return storage.getItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot);
	}
	,string_slot_encode: function(_string) {
		return window.btoa(_string);
	}
	,string_slot_decode: function(_string) {
		return window.atob(_string);
	}
	,__class__: snow_core_web_io_IO
};
var snow_modules_opengl_web_GL = function() { };
$hxClasses["snow.modules.opengl.web.GL"] = snow_modules_opengl_web_GL;
snow_modules_opengl_web_GL.__name__ = ["snow","modules","opengl","web","GL"];
snow_modules_opengl_web_GL.__properties__ = {get_version:"get_version"}
snow_modules_opengl_web_GL.versionString = function() {
	return "/ " + snow_modules_opengl_web_GL.gl.getParameter(7938) + " / " + snow_modules_opengl_web_GL.gl.getParameter(35724) + " / " + snow_modules_opengl_web_GL.gl.getParameter(7937) + " / " + snow_modules_opengl_web_GL.gl.getParameter(7936) + " /";
};
snow_modules_opengl_web_GL.activeTexture = function(texture) {
	snow_modules_opengl_web_GL.gl.activeTexture(texture);
};
snow_modules_opengl_web_GL.attachShader = function(program,shader) {
	snow_modules_opengl_web_GL.gl.attachShader(program,shader);
};
snow_modules_opengl_web_GL.bindAttribLocation = function(program,index,name) {
	snow_modules_opengl_web_GL.gl.bindAttribLocation(program,index,name);
};
snow_modules_opengl_web_GL.bindBuffer = function(target,buffer) {
	snow_modules_opengl_web_GL.gl.bindBuffer(target,buffer);
};
snow_modules_opengl_web_GL.bindFramebuffer = function(target,framebuffer) {
	snow_modules_opengl_web_GL.gl.bindFramebuffer(target,framebuffer);
};
snow_modules_opengl_web_GL.bindRenderbuffer = function(target,renderbuffer) {
	snow_modules_opengl_web_GL.gl.bindRenderbuffer(target,renderbuffer);
};
snow_modules_opengl_web_GL.bindTexture = function(target,texture) {
	snow_modules_opengl_web_GL.gl.bindTexture(target,texture);
};
snow_modules_opengl_web_GL.blendColor = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.blendColor(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.blendEquation = function(mode) {
	snow_modules_opengl_web_GL.gl.blendEquation(mode);
};
snow_modules_opengl_web_GL.blendEquationSeparate = function(modeRGB,modeAlpha) {
	snow_modules_opengl_web_GL.gl.blendEquationSeparate(modeRGB,modeAlpha);
};
snow_modules_opengl_web_GL.blendFunc = function(sfactor,dfactor) {
	snow_modules_opengl_web_GL.gl.blendFunc(sfactor,dfactor);
};
snow_modules_opengl_web_GL.blendFuncSeparate = function(srcRGB,dstRGB,srcAlpha,dstAlpha) {
	snow_modules_opengl_web_GL.gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
};
snow_modules_opengl_web_GL.bufferData = function(target,data,usage) {
	snow_modules_opengl_web_GL.gl.bufferData(target,data,usage);
};
snow_modules_opengl_web_GL.bufferSubData = function(target,offset,data) {
	snow_modules_opengl_web_GL.gl.bufferSubData(target,offset,data);
};
snow_modules_opengl_web_GL.checkFramebufferStatus = function(target) {
	return snow_modules_opengl_web_GL.gl.checkFramebufferStatus(target);
};
snow_modules_opengl_web_GL.clear = function(mask) {
	snow_modules_opengl_web_GL.gl.clear(mask);
};
snow_modules_opengl_web_GL.clearColor = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.clearColor(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.clearDepth = function(depth) {
	snow_modules_opengl_web_GL.gl.clearDepth(depth);
};
snow_modules_opengl_web_GL.clearStencil = function(s) {
	snow_modules_opengl_web_GL.gl.clearStencil(s);
};
snow_modules_opengl_web_GL.colorMask = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.colorMask(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.compileShader = function(shader) {
	snow_modules_opengl_web_GL.gl.compileShader(shader);
};
snow_modules_opengl_web_GL.compressedTexImage2D = function(target,level,internalformat,width,height,border,data) {
	snow_modules_opengl_web_GL.gl.compressedTexImage2D(target,level,internalformat,width,height,border,data);
};
snow_modules_opengl_web_GL.compressedTexSubImage2D = function(target,level,xoffset,yoffset,width,height,format,data) {
	snow_modules_opengl_web_GL.gl.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
};
snow_modules_opengl_web_GL.copyTexImage2D = function(target,level,internalformat,x,y,width,height,border) {
	snow_modules_opengl_web_GL.gl.copyTexImage2D(target,level,internalformat,x,y,width,height,border);
};
snow_modules_opengl_web_GL.copyTexSubImage2D = function(target,level,xoffset,yoffset,x,y,width,height) {
	snow_modules_opengl_web_GL.gl.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
};
snow_modules_opengl_web_GL.createBuffer = function() {
	return snow_modules_opengl_web_GL.gl.createBuffer();
};
snow_modules_opengl_web_GL.createFramebuffer = function() {
	return snow_modules_opengl_web_GL.gl.createFramebuffer();
};
snow_modules_opengl_web_GL.createProgram = function() {
	return snow_modules_opengl_web_GL.gl.createProgram();
};
snow_modules_opengl_web_GL.createRenderbuffer = function() {
	return snow_modules_opengl_web_GL.gl.createRenderbuffer();
};
snow_modules_opengl_web_GL.createShader = function(type) {
	return snow_modules_opengl_web_GL.gl.createShader(type);
};
snow_modules_opengl_web_GL.createTexture = function() {
	return snow_modules_opengl_web_GL.gl.createTexture();
};
snow_modules_opengl_web_GL.cullFace = function(mode) {
	snow_modules_opengl_web_GL.gl.cullFace(mode);
};
snow_modules_opengl_web_GL.deleteBuffer = function(buffer) {
	snow_modules_opengl_web_GL.gl.deleteBuffer(buffer);
};
snow_modules_opengl_web_GL.deleteFramebuffer = function(framebuffer) {
	snow_modules_opengl_web_GL.gl.deleteFramebuffer(framebuffer);
};
snow_modules_opengl_web_GL.deleteProgram = function(program) {
	snow_modules_opengl_web_GL.gl.deleteProgram(program);
};
snow_modules_opengl_web_GL.deleteRenderbuffer = function(renderbuffer) {
	snow_modules_opengl_web_GL.gl.deleteRenderbuffer(renderbuffer);
};
snow_modules_opengl_web_GL.deleteShader = function(shader) {
	snow_modules_opengl_web_GL.gl.deleteShader(shader);
};
snow_modules_opengl_web_GL.deleteTexture = function(texture) {
	snow_modules_opengl_web_GL.gl.deleteTexture(texture);
};
snow_modules_opengl_web_GL.depthFunc = function(func) {
	snow_modules_opengl_web_GL.gl.depthFunc(func);
};
snow_modules_opengl_web_GL.depthMask = function(flag) {
	snow_modules_opengl_web_GL.gl.depthMask(flag);
};
snow_modules_opengl_web_GL.depthRange = function(zNear,zFar) {
	snow_modules_opengl_web_GL.gl.depthRange(zNear,zFar);
};
snow_modules_opengl_web_GL.detachShader = function(program,shader) {
	snow_modules_opengl_web_GL.gl.detachShader(program,shader);
};
snow_modules_opengl_web_GL.disable = function(cap) {
	snow_modules_opengl_web_GL.gl.disable(cap);
};
snow_modules_opengl_web_GL.disableVertexAttribArray = function(index) {
	snow_modules_opengl_web_GL.gl.disableVertexAttribArray(index);
};
snow_modules_opengl_web_GL.drawArrays = function(mode,first,count) {
	snow_modules_opengl_web_GL.gl.drawArrays(mode,first,count);
};
snow_modules_opengl_web_GL.drawElements = function(mode,count,type,offset) {
	snow_modules_opengl_web_GL.gl.drawElements(mode,count,type,offset);
};
snow_modules_opengl_web_GL.enable = function(cap) {
	snow_modules_opengl_web_GL.gl.enable(cap);
};
snow_modules_opengl_web_GL.enableVertexAttribArray = function(index) {
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(index);
};
snow_modules_opengl_web_GL.finish = function() {
	snow_modules_opengl_web_GL.gl.finish();
};
snow_modules_opengl_web_GL.flush = function() {
	snow_modules_opengl_web_GL.gl.flush();
};
snow_modules_opengl_web_GL.framebufferRenderbuffer = function(target,attachment,renderbuffertarget,renderbuffer) {
	snow_modules_opengl_web_GL.gl.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
};
snow_modules_opengl_web_GL.framebufferTexture2D = function(target,attachment,textarget,texture,level) {
	snow_modules_opengl_web_GL.gl.framebufferTexture2D(target,attachment,textarget,texture,level);
};
snow_modules_opengl_web_GL.frontFace = function(mode) {
	snow_modules_opengl_web_GL.gl.frontFace(mode);
};
snow_modules_opengl_web_GL.generateMipmap = function(target) {
	snow_modules_opengl_web_GL.gl.generateMipmap(target);
};
snow_modules_opengl_web_GL.getActiveAttrib = function(program,index) {
	return snow_modules_opengl_web_GL.gl.getActiveAttrib(program,index);
};
snow_modules_opengl_web_GL.getActiveUniform = function(program,index) {
	return snow_modules_opengl_web_GL.gl.getActiveUniform(program,index);
};
snow_modules_opengl_web_GL.getAttachedShaders = function(program) {
	return snow_modules_opengl_web_GL.gl.getAttachedShaders(program);
};
snow_modules_opengl_web_GL.getAttribLocation = function(program,name) {
	return snow_modules_opengl_web_GL.gl.getAttribLocation(program,name);
};
snow_modules_opengl_web_GL.getBufferParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getBufferParameter(target,pname);
};
snow_modules_opengl_web_GL.getContextAttributes = function() {
	return snow_modules_opengl_web_GL.gl.getContextAttributes();
};
snow_modules_opengl_web_GL.getError = function() {
	return snow_modules_opengl_web_GL.gl.getError();
};
snow_modules_opengl_web_GL.getExtension = function(name) {
	return snow_modules_opengl_web_GL.gl.getExtension(name);
};
snow_modules_opengl_web_GL.getFramebufferAttachmentParameter = function(target,attachment,pname) {
	return snow_modules_opengl_web_GL.gl.getFramebufferAttachmentParameter(target,attachment,pname);
};
snow_modules_opengl_web_GL.getParameter = function(pname) {
	return snow_modules_opengl_web_GL.gl.getParameter(pname);
};
snow_modules_opengl_web_GL.getProgramInfoLog = function(program) {
	return snow_modules_opengl_web_GL.gl.getProgramInfoLog(program);
};
snow_modules_opengl_web_GL.getProgramParameter = function(program,pname) {
	return snow_modules_opengl_web_GL.gl.getProgramParameter(program,pname);
};
snow_modules_opengl_web_GL.getRenderbufferParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getRenderbufferParameter(target,pname);
};
snow_modules_opengl_web_GL.getShaderInfoLog = function(shader) {
	return snow_modules_opengl_web_GL.gl.getShaderInfoLog(shader);
};
snow_modules_opengl_web_GL.getShaderParameter = function(shader,pname) {
	return snow_modules_opengl_web_GL.gl.getShaderParameter(shader,pname);
};
snow_modules_opengl_web_GL.getShaderPrecisionFormat = function(shadertype,precisiontype) {
	return snow_modules_opengl_web_GL.gl.getShaderPrecisionFormat(shadertype,precisiontype);
};
snow_modules_opengl_web_GL.getShaderSource = function(shader) {
	return snow_modules_opengl_web_GL.gl.getShaderSource(shader);
};
snow_modules_opengl_web_GL.getSupportedExtensions = function() {
	return snow_modules_opengl_web_GL.gl.getSupportedExtensions();
};
snow_modules_opengl_web_GL.getTexParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getTexParameter(target,pname);
};
snow_modules_opengl_web_GL.getUniform = function(program,location) {
	return snow_modules_opengl_web_GL.gl.getUniform(program,location);
};
snow_modules_opengl_web_GL.getUniformLocation = function(program,name) {
	return snow_modules_opengl_web_GL.gl.getUniformLocation(program,name);
};
snow_modules_opengl_web_GL.getVertexAttrib = function(index,pname) {
	return snow_modules_opengl_web_GL.gl.getVertexAttrib(index,pname);
};
snow_modules_opengl_web_GL.getVertexAttribOffset = function(index,pname) {
	return snow_modules_opengl_web_GL.gl.getVertexAttribOffset(index,pname);
};
snow_modules_opengl_web_GL.hint = function(target,mode) {
	snow_modules_opengl_web_GL.gl.hint(target,mode);
};
snow_modules_opengl_web_GL.isBuffer = function(buffer) {
	return snow_modules_opengl_web_GL.gl.isBuffer(buffer);
};
snow_modules_opengl_web_GL.isEnabled = function(cap) {
	return snow_modules_opengl_web_GL.gl.isEnabled(cap);
};
snow_modules_opengl_web_GL.isFramebuffer = function(framebuffer) {
	return snow_modules_opengl_web_GL.gl.isFramebuffer(framebuffer);
};
snow_modules_opengl_web_GL.isProgram = function(program) {
	return snow_modules_opengl_web_GL.gl.isProgram(program);
};
snow_modules_opengl_web_GL.isRenderbuffer = function(renderbuffer) {
	return snow_modules_opengl_web_GL.gl.isRenderbuffer(renderbuffer);
};
snow_modules_opengl_web_GL.isShader = function(shader) {
	return snow_modules_opengl_web_GL.gl.isShader(shader);
};
snow_modules_opengl_web_GL.isTexture = function(texture) {
	return snow_modules_opengl_web_GL.gl.isTexture(texture);
};
snow_modules_opengl_web_GL.lineWidth = function(width) {
	snow_modules_opengl_web_GL.gl.lineWidth(width);
};
snow_modules_opengl_web_GL.linkProgram = function(program) {
	snow_modules_opengl_web_GL.gl.linkProgram(program);
};
snow_modules_opengl_web_GL.pixelStorei = function(pname,param) {
	snow_modules_opengl_web_GL.gl.pixelStorei(pname,param);
};
snow_modules_opengl_web_GL.polygonOffset = function(factor,units) {
	snow_modules_opengl_web_GL.gl.polygonOffset(factor,units);
};
snow_modules_opengl_web_GL.readPixels = function(x,y,width,height,format,type,data) {
	snow_modules_opengl_web_GL.gl.readPixels(x,y,width,height,format,type,data);
};
snow_modules_opengl_web_GL.renderbufferStorage = function(target,internalformat,width,height) {
	snow_modules_opengl_web_GL.gl.renderbufferStorage(target,internalformat,width,height);
};
snow_modules_opengl_web_GL.sampleCoverage = function(value,invert) {
	snow_modules_opengl_web_GL.gl.sampleCoverage(value,invert);
};
snow_modules_opengl_web_GL.scissor = function(x,y,width,height) {
	snow_modules_opengl_web_GL.gl.scissor(x,y,width,height);
};
snow_modules_opengl_web_GL.shaderSource = function(shader,source) {
	snow_modules_opengl_web_GL.gl.shaderSource(shader,source);
};
snow_modules_opengl_web_GL.stencilFunc = function(func,ref,mask) {
	snow_modules_opengl_web_GL.gl.stencilFunc(func,ref,mask);
};
snow_modules_opengl_web_GL.stencilFuncSeparate = function(face,func,ref,mask) {
	snow_modules_opengl_web_GL.gl.stencilFuncSeparate(face,func,ref,mask);
};
snow_modules_opengl_web_GL.stencilMask = function(mask) {
	snow_modules_opengl_web_GL.gl.stencilMask(mask);
};
snow_modules_opengl_web_GL.stencilMaskSeparate = function(face,mask) {
	snow_modules_opengl_web_GL.gl.stencilMaskSeparate(face,mask);
};
snow_modules_opengl_web_GL.stencilOp = function(fail,zfail,zpass) {
	snow_modules_opengl_web_GL.gl.stencilOp(fail,zfail,zpass);
};
snow_modules_opengl_web_GL.stencilOpSeparate = function(face,fail,zfail,zpass) {
	snow_modules_opengl_web_GL.gl.stencilOpSeparate(face,fail,zfail,zpass);
};
snow_modules_opengl_web_GL.texImage2D = function(target,level,internalformat,width,height,border,format,type,data) {
	snow_modules_opengl_web_GL.gl.texImage2D(target,level,internalformat,width,height,border,format,type,data);
};
snow_modules_opengl_web_GL.texParameterf = function(target,pname,param) {
	snow_modules_opengl_web_GL.gl.texParameterf(target,pname,param);
};
snow_modules_opengl_web_GL.texParameteri = function(target,pname,param) {
	snow_modules_opengl_web_GL.gl.texParameteri(target,pname,param);
};
snow_modules_opengl_web_GL.texSubImage2D = function(target,level,xoffset,yoffset,width,height,format,type,data) {
	snow_modules_opengl_web_GL.gl.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,data);
};
snow_modules_opengl_web_GL.uniform1f = function(location,x) {
	snow_modules_opengl_web_GL.gl.uniform1f(location,x);
};
snow_modules_opengl_web_GL.uniform1fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform1fv(location,data);
};
snow_modules_opengl_web_GL.uniform1i = function(location,x) {
	snow_modules_opengl_web_GL.gl.uniform1i(location,x);
};
snow_modules_opengl_web_GL.uniform1iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform1iv(location,data);
};
snow_modules_opengl_web_GL.uniform2f = function(location,x,y) {
	snow_modules_opengl_web_GL.gl.uniform2f(location,x,y);
};
snow_modules_opengl_web_GL.uniform2fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform2fv(location,data);
};
snow_modules_opengl_web_GL.uniform2i = function(location,x,y) {
	snow_modules_opengl_web_GL.gl.uniform2i(location,x,y);
};
snow_modules_opengl_web_GL.uniform2iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform2iv(location,data);
};
snow_modules_opengl_web_GL.uniform3f = function(location,x,y,z) {
	snow_modules_opengl_web_GL.gl.uniform3f(location,x,y,z);
};
snow_modules_opengl_web_GL.uniform3fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform3fv(location,data);
};
snow_modules_opengl_web_GL.uniform3i = function(location,x,y,z) {
	snow_modules_opengl_web_GL.gl.uniform3i(location,x,y,z);
};
snow_modules_opengl_web_GL.uniform3iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform3iv(location,data);
};
snow_modules_opengl_web_GL.uniform4f = function(location,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.uniform4f(location,x,y,z,w);
};
snow_modules_opengl_web_GL.uniform4fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform4fv(location,data);
};
snow_modules_opengl_web_GL.uniform4i = function(location,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.uniform4i(location,x,y,z,w);
};
snow_modules_opengl_web_GL.uniform4iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform4iv(location,data);
};
snow_modules_opengl_web_GL.uniformMatrix2fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix2fv(location,transpose,data);
};
snow_modules_opengl_web_GL.uniformMatrix3fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix3fv(location,transpose,data);
};
snow_modules_opengl_web_GL.uniformMatrix4fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix4fv(location,transpose,data);
};
snow_modules_opengl_web_GL.useProgram = function(program) {
	snow_modules_opengl_web_GL.gl.useProgram(program);
};
snow_modules_opengl_web_GL.validateProgram = function(program) {
	snow_modules_opengl_web_GL.gl.validateProgram(program);
};
snow_modules_opengl_web_GL.vertexAttrib1f = function(indx,x) {
	snow_modules_opengl_web_GL.gl.vertexAttrib1f(indx,x);
};
snow_modules_opengl_web_GL.vertexAttrib1fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib1fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib2f = function(indx,x,y) {
	snow_modules_opengl_web_GL.gl.vertexAttrib2f(indx,x,y);
};
snow_modules_opengl_web_GL.vertexAttrib2fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib2fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib3f = function(indx,x,y,z) {
	snow_modules_opengl_web_GL.gl.vertexAttrib3f(indx,x,y,z);
};
snow_modules_opengl_web_GL.vertexAttrib3fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib3fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib4f = function(indx,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.vertexAttrib4f(indx,x,y,z,w);
};
snow_modules_opengl_web_GL.vertexAttrib4fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib4fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttribPointer = function(indx,size,type,normalized,stride,offset) {
	snow_modules_opengl_web_GL.gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);
};
snow_modules_opengl_web_GL.viewport = function(x,y,width,height) {
	snow_modules_opengl_web_GL.gl.viewport(x,y,width,height);
};
snow_modules_opengl_web_GL.get_version = function() {
	return 7938;
};
var snow_modules_webaudio_Audio = function(_app) {
	this.active = false;
	this.handle_seq = 0;
	this.app = _app;
	this.instances = new haxe_ds_IntMap();
	try {
		this.context = new AudioContext();
	} catch( err ) {
		try {
			this.context = new window.webkitAudioContext();
		} catch( err1 ) {
			haxe_Log.trace("    i / audio / " + "WebAudio: no AudioContext could be created! No audio loading or playback will be available.",{ fileName : "Audio.hx", lineNumber : 59, className : "snow.modules.webaudio.Audio", methodName : "new"});
			return;
		}
	}
	if(this.context == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("context was null" + (" ( " + "Audio / webaudio / no AudioContext could be created, is the Web Audio API supported?" + " )")));
	}
	var info = "channelCount: " + this.context.destination.channelCount + ", " + ("channelCountMode: \"" + this.context.destination.channelCountMode + "\", ") + ("channelInterpretation: \"" + this.context.destination.channelInterpretation + "\", ") + ("maxChannelCount: " + this.context.destination.maxChannelCount + ", ") + ("numberOfInputs: " + this.context.destination.numberOfInputs + ", ") + ("numberOfOutputs: " + this.context.destination.numberOfOutputs);
	haxe_Log.trace("    i / audio / " + ("webaudio: " + Std.string(this.context) + " / sampleRate: " + this.context.sampleRate + " / destination: " + info),{ fileName : "Audio.hx", lineNumber : 74, className : "snow.modules.webaudio.Audio", methodName : "new"});
	this.active = true;
};
$hxClasses["snow.modules.webaudio.Audio"] = snow_modules_webaudio_Audio;
snow_modules_webaudio_Audio.__name__ = ["snow","modules","webaudio","Audio"];
snow_modules_webaudio_Audio.__interfaces__ = [snow_modules_interfaces_Audio];
snow_modules_webaudio_Audio.prototype = {
	shutdown: function() {
		this.context.close();
	}
	,onevent: function(event) {
	}
	,snd_of: function(_handle) {
		return this.instances.h[_handle];
	}
	,play_buffer: function(_data) {
		var _node = this.context.createBufferSource();
		_node.buffer = _data.buffer;
		return _node;
	}
	,play_buffer_again: function(_handle,_snd,_start_time) {
		_snd.buffer_node = this.play_buffer(_snd.source.data);
		_snd.buffer_node.connect(_snd.pan_node);
		_snd.buffer_node.loop = _snd.loop;
		_snd.pan_node.connect(_snd.gain_node);
		_snd.gain_node.connect(this.context.destination);
		_snd.buffer_node.start(0,_start_time);
		var f = $bind(this,this.destroy_snd);
		var a1 = _snd;
		var tmp = function() {
			f(a1);
		};
		_snd.buffer_node.onended = tmp;
	}
	,play_instance: function(_handle,_source,_inst,_data,_buffer_node,_volume,_loop) {
		var _gthis = this;
		var _gain = this.context.createGain();
		var _pan = this.context.createPanner();
		var _node = null;
		_gain.gain.value = _volume;
		_pan.panningModel = "equalpower";
		_pan.setPosition(Math.cos(-1.5707),0,Math.sin(1.5707));
		if(_buffer_node != null) {
			_node = _buffer_node;
			_buffer_node.loop = _loop;
		}
		if(_data.media_node != null) {
			_node = _data.media_node;
			_data.media_elem.loop = _loop;
		}
		_node.connect(_pan);
		_pan.connect(_gain);
		_gain.connect(this.context.destination);
		var _data1 = _data.media_node;
		var _data2 = _data.media_elem;
		var _snd = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		var _snd1 = { handle : _handle, source : _source, instance : _inst, buffer_node : _buffer_node, media_node : _data1, media_elem : _data2, gain_node : _gain, pan_node : _pan, state : 1, time_start : _snd, loop : _loop, pan : 0};
		this.instances.h[_handle] = _snd1;
		if(_buffer_node != null) {
			_buffer_node.start(0);
			var f = $bind(this,this.destroy_snd);
			var a1 = _snd1;
			_buffer_node.onended = function() {
				f(a1);
			};
		}
		if(_data.media_node != null) {
			_data.media_elem.play();
			_data.media_node.addEventListener("ended",function() {
				_gthis.app.audio.emit_Int(0,_handle);
				_snd1.state = 2;
			});
		}
	}
	,play: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,false);
		} else {
			this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,false);
		}
		this.handle_seq++;
		return _handle;
	}
	,loop: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,true);
		} else {
			this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,true);
		}
		this.handle_seq++;
		return _handle;
	}
	,stop_buffer: function(_snd) {
		_snd.buffer_node.stop();
		_snd.buffer_node.disconnect();
		_snd.gain_node.disconnect();
		_snd.pan_node.disconnect();
		_snd.buffer_node = null;
	}
	,pause: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.time_pause = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - _snd.time_start;
		_snd.state = 0;
		if(_snd.buffer_node != null) {
			this.stop_buffer(_snd);
		} else if(_snd.media_node != null) {
			_snd.media_elem.pause();
		}
	}
	,unpause: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.state != 0) {
			return;
		}
		if(_snd.media_node == null) {
			this.play_buffer_again(_handle,_snd,_snd.time_pause);
		} else {
			_snd.media_elem.play();
		}
		_snd.state = 1;
	}
	,destroy_snd: function(_snd) {
		if(_snd.buffer_node != null) {
			_snd.buffer_node.stop();
			_snd.buffer_node.disconnect();
			_snd.buffer_node = null;
		}
		if(_snd.media_node != null) {
			_snd.media_elem.pause();
			_snd.media_elem.currentTime = 0;
			_snd.media_node.disconnect();
			_snd.media_elem = null;
			_snd.media_node = null;
		}
		if(_snd.gain_node != null) {
			_snd.gain_node.disconnect();
			_snd.gain_node = null;
		}
		if(_snd.pan_node != null) {
			_snd.pan_node.disconnect();
			_snd.pan_node = null;
		}
		this.instances.remove(_snd.handle);
		_snd = null;
	}
	,stop: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			_snd.buffer_node.stop();
			_snd.buffer_node.disconnect();
			_snd.buffer_node = null;
		}
		if(_snd.media_node != null) {
			_snd.media_elem.pause();
			_snd.media_elem.currentTime = 0;
			_snd.media_node.disconnect();
			_snd.media_elem = null;
			_snd.media_node = null;
		}
		if(_snd.gain_node != null) {
			_snd.gain_node.disconnect();
			_snd.gain_node = null;
		}
		if(_snd.pan_node != null) {
			_snd.pan_node.disconnect();
			_snd.pan_node = null;
		}
		this.instances.remove(_snd.handle);
		_snd.state = 2;
	}
	,volume: function(_handle,_volume) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.gain_node.gain.value = _volume;
	}
	,pan: function(_handle,_pan) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.pan = _pan;
		_snd.pan_node.setPosition(Math.cos((_pan - 1) * 1.5707),0,Math.sin((_pan + 1) * 1.5707));
	}
	,pitch: function(_handle,_pitch) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			_snd.buffer_node.playbackRate.value = _pitch;
		} else if(_snd.media_node != null) {
			_snd.media_elem.playbackRate = _pitch;
		}
	}
	,position: function(_handle,_time) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			this.stop_buffer(_snd);
			this.play_buffer_again(_handle,_snd,_time);
		} else {
			_snd.media_elem.currentTime = _time;
		}
	}
	,volume_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		return _snd.gain_node.gain.value;
	}
	,pan_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		return _snd.pan;
	}
	,pitch_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		var _result = 1.0;
		if(_snd.buffer_node != null) {
			_result = _snd.buffer_node.playbackRate.value;
		} else if(_snd.media_node != null) {
			_result = _snd.media_elem.playbackRate;
		}
		return _result;
	}
	,position_of: function(_handle) {
		if(this.instances.get(_handle) == null) {
			return 0.0;
		}
		return 0.0;
	}
	,state_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return -1;
		}
		return _snd.state;
	}
	,loop_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return false;
		}
		return _snd.loop;
	}
	,instance_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return null;
		}
		return _snd.instance;
	}
	,suspend: function() {
		this.context.suspend();
	}
	,resume: function() {
		this.context.resume();
	}
	,data_from_load: function(_path,_is_stream,_format) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		if(!this.active) {
			return snow_api_Promise.reject("WebAudio context unavailable");
		}
		if(_format == null) {
			switch(haxe_io_Path.extension(_path)) {
			case "ogg":
				_format = 2;
				break;
			case "pcm":
				_format = 4;
				break;
			case "wav":
				_format = 3;
				break;
			default:
				_format = 0;
			}
		}
		if(_is_stream) {
			return this.data_from_load_stream(_path,_format);
		}
		return this.data_from_load_sound(_path,_format);
	}
	,data_from_bytes: function(_id,_bytes,_format) {
		var _gthis = this;
		if(!this.active) {
			return snow_api_Promise.reject("WebAudio context unavailable");
		}
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.data_from_bytes_direct(_id,_bytes,_format,resolve,reject);
		});
	}
	,data_from_bytes_direct: function(_id,_bytes,_format,resolve,reject) {
		var _gthis = this;
		this.context.decodeAudioData(_bytes.buffer,function(_buffer) {
			var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_gthis.app,_buffer,null,null,{ id : _id, is_stream : false, format : _format, samples : null, length : _buffer.length, channels : _buffer.numberOfChannels, rate : _buffer.sampleRate | 0});
			resolve(_data);
			return;
		},function() {
			reject("failed to decode audio for `" + _id + "`");
			return;
		});
	}
	,data_from_load_sound: function(_path,_format) {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.app.io.module.data_load(_path,null).then(function(_bytes) {
				_gthis.data_from_bytes_direct(_path,_bytes,_format,resolve,reject);
			});
		});
	}
	,data_from_load_stream: function(_path,_format) {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			var _element = new Audio(_path);
			_element.autoplay = false;
			_element.controls = false;
			_element.preload = "auto";
			_element.onerror = function(err) {
				var _error;
				switch(_element.error.code) {
				case 1:
					_error = "MEDIA_ERR_ABORTED";
					break;
				case 2:
					_error = "MEDIA_ERR_NETWORK";
					break;
				case 3:
					_error = "MEDIA_ERR_DECODE";
					break;
				case 4:
					_error = "MEDIA_ERR_SRC_NOT_SUPPORTED";
					break;
				case 5:
					_error = "MEDIA_ERR_ENCRYPTED";
					break;
				default:
					_error = "unknown error";
				}
				return reject("failed to load `" + _path + "` as stream : `" + _error + "`");
			};
			_element.onloadedmetadata = function(_) {
				var _node = _gthis.context.createMediaElementSource(_element);
				var _rate = _gthis.context.sampleRate | 0;
				var _channels = _node.channelCount;
				var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_gthis.app,null,_node,_element,{ id : _path, is_stream : true, format : _format, samples : null, length : _element.duration * (_rate * _channels * 2) | 0, channels : _channels, rate : _rate});
				return resolve(_data);
			};
		});
	}
	,__class__: snow_modules_webaudio_Audio
};
var snow_types_AudioData = function(_app,_options) {
	this.is_stream = false;
	this.format = 0;
	this.bits_per_sample = 16;
	this.channels = 1;
	this.length = 0;
	this.rate = 44100;
	this.id = "AudioData";
	this.app = _app;
	if(_options.id == null) {
		_options.id = this.id;
	}
	this.id = _options.id;
	if(_options.rate == null) {
		_options.rate = this.rate;
	}
	this.rate = _options.rate;
	if(_options.length == null) {
		_options.length = this.length;
	}
	this.length = _options.length;
	if(_options.format == null) {
		_options.format = this.format;
	}
	this.format = _options.format;
	if(_options.channels == null) {
		_options.channels = this.channels;
	}
	this.channels = _options.channels;
	if(_options.bits_per_sample == null) {
		_options.bits_per_sample = this.bits_per_sample;
	}
	this.bits_per_sample = _options.bits_per_sample;
	if(_options.is_stream == null) {
		_options.is_stream = this.is_stream;
	}
	this.is_stream = _options.is_stream;
	if(_options.samples == null) {
		_options.samples = this.samples;
	}
	this.samples = _options.samples;
	_options = null;
};
$hxClasses["snow.types.AudioData"] = snow_types_AudioData;
snow_types_AudioData.__name__ = ["snow","types","AudioData"];
snow_types_AudioData.prototype = {
	destroy: function() {
		this.id = null;
		this.samples = null;
	}
	,seek: function(_to) {
		return false;
	}
	,portion: function(_into,_start,_len,_into_result) {
		return _into_result;
	}
	,toString: function() {
		var tmp = "{ \"AudioData\":true, \"id\":" + this.id + ", \"rate\":" + this.rate + ", \"length\":" + this.length + ", \"channels\":" + this.channels + ", \"format\":\"";
		var this1 = this.format;
		var tmp1;
		if(this1 == null) {
			tmp1 = "" + this1;
		} else {
			switch(this1) {
			case 0:
				tmp1 = "af_unknown";
				break;
			case 1:
				tmp1 = "af_custom";
				break;
			case 2:
				tmp1 = "af_ogg";
				break;
			case 3:
				tmp1 = "af_wav";
				break;
			case 4:
				tmp1 = "af_pcm";
				break;
			default:
				tmp1 = "" + this1;
			}
		}
		return tmp + tmp1 + "\", \"is_stream\":" + Std.string(this.is_stream) + " }";
	}
	,__class__: snow_types_AudioData
};
var snow_modules_webaudio__$Audio_AudioDataWebAudio = function(_app,_buffer,_media_node,_media_elem,_opt) {
	this.buffer = _buffer;
	this.media_node = _media_node;
	this.media_elem = _media_elem;
	snow_types_AudioData.call(this,_app,_opt);
};
$hxClasses["snow.modules.webaudio._Audio.AudioDataWebAudio"] = snow_modules_webaudio__$Audio_AudioDataWebAudio;
snow_modules_webaudio__$Audio_AudioDataWebAudio.__name__ = ["snow","modules","webaudio","_Audio","AudioDataWebAudio"];
snow_modules_webaudio__$Audio_AudioDataWebAudio.__super__ = snow_types_AudioData;
snow_modules_webaudio__$Audio_AudioDataWebAudio.prototype = $extend(snow_types_AudioData.prototype,{
	destroy: function() {
		this.buffer = null;
		this.media_node = null;
		this.media_elem = null;
	}
	,__class__: snow_modules_webaudio__$Audio_AudioDataWebAudio
});
var snow_systems_assets_Asset = function(_system,_id,_type) {
	if(_type == null) {
		_type = 0;
	}
	this.loaded = false;
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	this.system = _system;
	this.type = _type;
	this.id = _id;
};
$hxClasses["snow.systems.assets.Asset"] = snow_systems_assets_Asset;
snow_systems_assets_Asset.__name__ = ["snow","systems","assets","Asset"];
snow_systems_assets_Asset.prototype = {
	destroy: function() {
	}
	,__class__: snow_systems_assets_Asset
};
var snow_systems_assets_AssetImage = function(_system,_id,_image) {
	snow_systems_assets_Asset.call(this,_system,_id,4);
	this.set_image(_image);
};
$hxClasses["snow.systems.assets.AssetImage"] = snow_systems_assets_AssetImage;
snow_systems_assets_AssetImage.__name__ = ["snow","systems","assets","AssetImage"];
snow_systems_assets_AssetImage.load = function(_system,_id) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetImage(_system,_id,null).reload();
};
snow_systems_assets_AssetImage.load_from_bytes = function(_system,_id,_bytes) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_bytes == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetImage(_system,_id,null).reload_from_bytes(_bytes);
};
snow_systems_assets_AssetImage.load_from_pixels = function(_system,_id,_width,_height,_pixels) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_pixels == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_pixels was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetImage(_system,_id,_system.module.image_info_from_pixels(_id,_width,_height,_pixels));
};
snow_systems_assets_AssetImage.provider = function(_app,_path) {
	return _app.assets.module.image_info_from_load(_path);
};
snow_systems_assets_AssetImage.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetImage processor: data was null"));
	}
	return _app.assets.module.image_info_from_bytes(_id,_data);
};
snow_systems_assets_AssetImage.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetImage.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),null,snow_systems_assets_AssetImage.provider).then(function(_image) {
				_gthis.set_image(_image);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.image.destroy();
		this.set_image(null);
	}
	,reload_from_bytes: function(_bytes) {
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.module.image_info_from_bytes(_gthis.id,_bytes).then(function(_image) {
				_gthis.set_image(_image);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,reload_from_pixels: function(_width,_height,_pixels) {
		this.loaded = false;
		this.set_image(this.system.module.image_info_from_pixels(this.id,_width,_height,_pixels));
	}
	,set_image: function(_image) {
		this.loaded = _image != null;
		return this.image = _image;
	}
	,__class__: snow_systems_assets_AssetImage
	,__properties__: {set_image:"set_image"}
});
var snow_systems_assets_AssetAudio = function(_system,_id,_audio) {
	snow_systems_assets_Asset.call(this,_system,_id,5);
	this.set_audio(_audio);
};
$hxClasses["snow.systems.assets.AssetAudio"] = snow_systems_assets_AssetAudio;
snow_systems_assets_AssetAudio.__name__ = ["snow","systems","assets","AssetAudio"];
snow_systems_assets_AssetAudio.load = function(_system,_id,_is_stream) {
	if(_is_stream == null) {
		_is_stream = false;
	}
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetAudio(_system,_id,null).reload(_is_stream);
};
snow_systems_assets_AssetAudio.load_from_bytes = function(_system,_id,_bytes,_format) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_bytes == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetAudio(_system,_id,null).reload_from_bytes(_bytes,_format);
};
snow_systems_assets_AssetAudio.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetAudio.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function(_is_stream) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.audio.module.data_from_load(haxe_io_Path.join([_gthis.system.root,_gthis.id]),_is_stream).then(function(_audio) {
				_gthis.set_audio(_audio);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.audio.destroy();
		this.set_audio(null);
	}
	,reload_from_bytes: function(_bytes,_format) {
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.audio.module.data_from_bytes(_gthis.id,_bytes,_format).then(function(_audio) {
				_gthis.set_audio(_audio);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,set_audio: function(_audio) {
		this.loaded = _audio != null;
		return this.audio = _audio;
	}
	,__class__: snow_systems_assets_AssetAudio
	,__properties__: {set_audio:"set_audio"}
});
var snow_systems_assets_AssetBytes = function(_system,_id,_bytes) {
	snow_systems_assets_Asset.call(this,_system,_id,1);
	this.set_bytes(_bytes);
};
$hxClasses["snow.systems.assets.AssetBytes"] = snow_systems_assets_AssetBytes;
snow_systems_assets_AssetBytes.__name__ = ["snow","systems","assets","AssetBytes"];
snow_systems_assets_AssetBytes.load = function(_system,_id) {
	return new snow_systems_assets_AssetBytes(_system,_id,null).reload();
};
snow_systems_assets_AssetBytes.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetBytes.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id])).then(function(_bytes) {
				_gthis.set_bytes(_bytes);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_bytes(null);
	}
	,set_bytes: function(_bytes) {
		this.loaded = _bytes != null;
		return this.bytes = _bytes;
	}
	,__class__: snow_systems_assets_AssetBytes
	,__properties__: {set_bytes:"set_bytes"}
});
var snow_systems_assets_AssetText = function(_system,_id,_text) {
	snow_systems_assets_Asset.call(this,_system,_id,2);
	this.set_text(_text);
};
$hxClasses["snow.systems.assets.AssetText"] = snow_systems_assets_AssetText;
snow_systems_assets_AssetText.__name__ = ["snow","systems","assets","AssetText"];
snow_systems_assets_AssetText.load = function(_system,_id) {
	return new snow_systems_assets_AssetText(_system,_id,null).reload();
};
snow_systems_assets_AssetText.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetText processor: data was null"));
	}
	var _string = new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString();
	_data = null;
	return snow_api_Promise.resolve(_string);
};
snow_systems_assets_AssetText.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetText.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),snow_systems_assets_AssetText.processor).then(function(_text) {
				_gthis.set_text(_text);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_text(null);
	}
	,set_text: function(_text) {
		this.loaded = _text != null;
		return this.text = _text;
	}
	,__class__: snow_systems_assets_AssetText
	,__properties__: {set_text:"set_text"}
});
var snow_systems_assets_AssetJSON = function(_system,_id,_json) {
	snow_systems_assets_Asset.call(this,_system,_id,3);
	this.set_json(_json);
};
$hxClasses["snow.systems.assets.AssetJSON"] = snow_systems_assets_AssetJSON;
snow_systems_assets_AssetJSON.__name__ = ["snow","systems","assets","AssetJSON"];
snow_systems_assets_AssetJSON.load = function(_system,_id) {
	return new snow_systems_assets_AssetJSON(_system,_id,null).reload();
};
snow_systems_assets_AssetJSON.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetJSON: data was null"));
	}
	return new snow_api_Promise(function(resolve,reject) {
		var _data_json = null;
		try {
			_data_json = JSON.parse(new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString());
			_data = null;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			_data = null;
			return reject(snow_types_Error.parse(e));
		}
		return resolve(_data_json);
	});
};
snow_systems_assets_AssetJSON.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetJSON.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),snow_systems_assets_AssetJSON.processor).then(function(_json) {
				_gthis.set_json(_json);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_json(null);
	}
	,set_json: function(_json) {
		this.loaded = _json != null;
		return this.json = _json;
	}
	,__class__: snow_systems_assets_AssetJSON
	,__properties__: {set_json:"set_json"}
});
var snow_systems_assets_Assets = function(_app) {
	this.root = "";
	this.app = _app;
	this.module = new snow_core_web_assets_Assets(this.app);
};
$hxClasses["snow.systems.assets.Assets"] = snow_systems_assets_Assets;
snow_systems_assets_Assets.__name__ = ["snow","systems","assets","Assets"];
snow_systems_assets_Assets.prototype = {
	shutdown: function() {
	}
	,path: function(_id) {
		return haxe_io_Path.join([this.root,_id]);
	}
	,bytes: function(_id) {
		return snow_systems_assets_AssetBytes.load(this,_id);
	}
	,text: function(_id) {
		return snow_systems_assets_AssetText.load(this,_id);
	}
	,json: function(_id) {
		return snow_systems_assets_AssetJSON.load(this,_id);
	}
	,image: function(_id) {
		return snow_systems_assets_AssetImage.load(this,_id);
	}
	,image_from_bytes: function(_id,_bytes) {
		return snow_systems_assets_AssetImage.load_from_bytes(this,_id,_bytes);
	}
	,image_from_pixels: function(_id,_width,_height,_pixels) {
		return snow_systems_assets_AssetImage.load_from_pixels(this,_id,_width,_height,_pixels);
	}
	,audio: function(_id,_is_stream) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		return snow_systems_assets_AssetAudio.load(this,_id,_is_stream);
	}
	,audio_from_bytes: function(_id,_bytes,_format) {
		return snow_systems_assets_AssetAudio.load_from_bytes(this,_id,_bytes,_format);
	}
	,__class__: snow_systems_assets_Assets
};
var snow_systems_audio_Audio = function(_app) {
	this.active = false;
	this.app = _app;
	this.module = new snow_modules_webaudio_Audio(this.app);
	this.emitter = new snow_api_Emitter();
	this.active = this.module.active;
};
$hxClasses["snow.systems.audio.Audio"] = snow_systems_audio_Audio;
snow_systems_audio_Audio.__name__ = ["snow","systems","audio","Audio"];
snow_systems_audio_Audio.prototype = {
	off_Int: function(_event,_handler) {
		return this.emitter.off(_event,_handler);
	}
	,on_Int: function(_event,_handler) {
		this.emitter.on(_event,_handler);
	}
	,emit_Int: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,emit_snow_systems_audio_AudioSource: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,play: function(_source,_volume,_paused) {
		if(_paused == null) {
			_paused = false;
		}
		if(_volume == null) {
			_volume = 1.0;
		}
		if(_source == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_source != null" + (" ( " + "audio source must not be null" + " )")));
		}
		if(!this.active) {
			return -1;
		}
		return this.module.play(_source,_volume,_paused);
	}
	,loop: function(_source,_volume,_paused) {
		if(_paused == null) {
			_paused = false;
		}
		if(_volume == null) {
			_volume = 1.0;
		}
		if(_source == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_source != null" + (" ( " + "audio source must not be null" + " )")));
		}
		if(!this.active) {
			return -1;
		}
		return this.module.loop(_source,_volume,_paused);
	}
	,pause: function(_handle) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.pause(_handle);
	}
	,unpause: function(_handle) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.unpause(_handle);
	}
	,stop: function(_handle) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.stop(_handle);
	}
	,volume: function(_handle,_volume) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.volume(_handle,_volume);
	}
	,pan: function(_handle,_pan) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.pan(_handle,_pan);
	}
	,pitch: function(_handle,_pitch) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.pitch(_handle,_pitch);
	}
	,position: function(_handle,_position) {
		if(!this.active || _handle == null) {
			return;
		}
		this.module.position(_handle,_position);
	}
	,state_of: function(_handle) {
		return this.module.state_of(_handle);
	}
	,loop_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.loop_of(_handle);
	}
	,instance_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.instance_of(_handle);
	}
	,volume_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.volume_of(_handle);
	}
	,pan_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.pan_of(_handle);
	}
	,pitch_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.pitch_of(_handle);
	}
	,position_of: function(_handle) {
		if(!this.active) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		}
		return this.module.position_of(_handle);
	}
	,suspend: function() {
		if(!this.active) {
			return;
		}
		this.active = false;
		this.module.suspend();
	}
	,resume: function() {
		if(this.active || !this.module.active) {
			return;
		}
		this.active = true;
		this.module.resume();
	}
	,onevent: function(_event) {
		if(_event.type == 8) {
			switch(_event.window.type) {
			case 7:
				this.suspend();
				break;
			case 9:
				this.resume();
				break;
			default:
			}
		}
	}
	,shutdown: function() {
		this.active = false;
		this.module.shutdown();
	}
	,__class__: snow_systems_audio_Audio
};
var snow_systems_audio_AudioInstance = function(_source,_handle) {
	this.destroyed = false;
	this.source = _source;
	this.handle = _handle;
};
$hxClasses["snow.systems.audio.AudioInstance"] = snow_systems_audio_AudioInstance;
snow_systems_audio_AudioInstance.__name__ = ["snow","systems","audio","AudioInstance"];
snow_systems_audio_AudioInstance.prototype = {
	tick: function() {
	}
	,has_ended: function() {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance has_ended queried after being destroyed" + " )")));
		}
		return this.source.app.audio.state_of(this.handle) == 2;
	}
	,destroy: function() {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance being destroyed more than once" + " )")));
		}
		this.source.app.audio.emit_Int(1,this.handle);
		this.source.instance_killed(this);
		this.destroyed = true;
		this.source = null;
		this.handle = -1;
	}
	,data_get: function(_into,_start,_length,_into_result) {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance data_get queried after being destroyed" + " )")));
		}
		return this.source.data.portion(_into,_start,_length,_into_result);
	}
	,data_seek: function(_to_samples) {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance data_seek queried after being destroyed" + " )")));
		}
		return this.source.data.seek(_to_samples);
	}
	,__class__: snow_systems_audio_AudioInstance
};
var snow_systems_audio_AudioSource = function(_app,_data) {
	this.stream_buffer_count = 2;
	this.stream_buffer_length = 176400;
	this.app = _app;
	this.data = _data;
	this.instances = [];
};
$hxClasses["snow.systems.audio.AudioSource"] = snow_systems_audio_AudioSource;
snow_systems_audio_AudioSource.__name__ = ["snow","systems","audio","AudioSource"];
snow_systems_audio_AudioSource.prototype = {
	instance: function(_handle) {
		var _instance = new snow_systems_audio_AudioInstance(this,_handle);
		if(this.instances.indexOf(_instance) == -1) {
			this.instances.push(_instance);
		}
		return _instance;
	}
	,bytes_to_seconds: function(_bytes) {
		return _bytes / (this.data.rate * this.data.channels * (this.data.bits_per_sample == 16 ? 2 : 1));
	}
	,seconds_to_bytes: function(_seconds) {
		return _seconds * (this.data.rate * this.data.channels * (this.data.bits_per_sample == 16 ? 2 : 1)) | 0;
	}
	,duration: function() {
		return this.bytes_to_seconds(this.data.length);
	}
	,destroy: function() {
		var c = this.instances.length;
		var i = 0;
		haxe_Log.trace("i / audiosource / " + ("destroy " + this.data.id + ", stream=" + Std.string(this.data.is_stream) + ", instances=" + c),{ fileName : "AudioSource.hx", lineNumber : 79, className : "snow.systems.audio.AudioSource", methodName : "destroy"});
		this.app.audio.emit_snow_systems_audio_AudioSource(2,this);
		while(i < c) {
			var _instance = this.instances.pop();
			_instance.destroy();
			_instance = null;
			++i;
		}
		this.data.destroy();
		this.data = null;
		this.instances = null;
		this.app = null;
	}
	,instance_killed: function(_instance) {
		HxOverrides.remove(this.instances,_instance);
	}
	,__class__: snow_systems_audio_AudioSource
};
var snow_systems_input_Input = function(_app) {
	this.touch_count = 0;
	this.gamepad_init_count = 16;
	this.app = _app;
	this.event = new snow_types_InputEvent();
	this.key_event = new snow_types_KeyEvent();
	this.text_event = new snow_types_TextEvent();
	this.mouse_event = new snow_types_MouseEvent();
	this.touch_event = new snow_types_TouchEvent();
	this.gamepad_event = new snow_types_GamepadEvent();
	this.mod_state = new snow_types_ModState();
	this.mod_state.none = true;
	this.key_code_pressed = new haxe_ds_IntMap();
	this.key_code_down = new haxe_ds_IntMap();
	this.key_code_released = new haxe_ds_IntMap();
	this.scan_code_pressed = new haxe_ds_IntMap();
	this.scan_code_down = new haxe_ds_IntMap();
	this.scan_code_released = new haxe_ds_IntMap();
	this.mouse_button_pressed = new haxe_ds_IntMap();
	this.mouse_button_down = new haxe_ds_IntMap();
	this.mouse_button_released = new haxe_ds_IntMap();
	this.gamepad_button_pressed = new haxe_ds_IntMap();
	this.gamepad_button_down = new haxe_ds_IntMap();
	this.gamepad_button_released = new haxe_ds_IntMap();
	this.gamepad_axis_values = new haxe_ds_IntMap();
	var _g1 = 0;
	var _g = this.gamepad_init_count;
	while(_g1 < _g) {
		var i = _g1++;
		this.gamepad_button_pressed.h[i] = new haxe_ds_IntMap();
		this.gamepad_button_down.h[i] = new haxe_ds_IntMap();
		this.gamepad_button_released.h[i] = new haxe_ds_IntMap();
		this.gamepad_axis_values.h[i] = new haxe_ds_IntMap();
	}
	this.touches_down = new haxe_ds_IntMap();
};
$hxClasses["snow.systems.input.Input"] = snow_systems_input_Input;
snow_systems_input_Input.__name__ = ["snow","systems","input","Input"];
snow_systems_input_Input.prototype = {
	shutdown: function() {
	}
	,keypressed: function(_code) {
		return this.key_code_pressed.h.hasOwnProperty(_code);
	}
	,keyreleased: function(_code) {
		return this.key_code_released.h.hasOwnProperty(_code);
	}
	,keydown: function(_code) {
		return this.key_code_down.h.hasOwnProperty(_code);
	}
	,scanpressed: function(_code) {
		return this.scan_code_pressed.h.hasOwnProperty(_code);
	}
	,scanreleased: function(_code) {
		return this.scan_code_released.h.hasOwnProperty(_code);
	}
	,scandown: function(_code) {
		return this.scan_code_down.h.hasOwnProperty(_code);
	}
	,mousepressed: function(_button) {
		return this.mouse_button_pressed.h.hasOwnProperty(_button);
	}
	,mousereleased: function(_button) {
		return this.mouse_button_released.h.hasOwnProperty(_button);
	}
	,mousedown: function(_button) {
		return this.mouse_button_down.h.hasOwnProperty(_button);
	}
	,gamepadpressed: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_pressed.h[_gamepad];
		if(_gamepad_state != null) {
			return _gamepad_state.h.hasOwnProperty(_button);
		} else {
			return false;
		}
	}
	,gamepadreleased: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_released.h[_gamepad];
		if(_gamepad_state != null) {
			return _gamepad_state.h.hasOwnProperty(_button);
		} else {
			return false;
		}
	}
	,gamepaddown: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_down.h[_gamepad];
		if(_gamepad_state != null) {
			return _gamepad_state.h.hasOwnProperty(_button);
		} else {
			return false;
		}
	}
	,gamepadaxis: function(_gamepad,_axis) {
		var _gamepad_state = this.gamepad_axis_values.h[_gamepad];
		if(_gamepad_state != null) {
			if(_gamepad_state.h.hasOwnProperty(_axis)) {
				return _gamepad_state.h[_axis];
			}
		}
		return 0;
	}
	,dispatch_key_down_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		if(!repeat) {
			this.key_code_pressed.h[keycode] = false;
			this.key_code_down.h[keycode] = true;
			this.scan_code_pressed.h[scancode] = false;
			this.scan_code_down.h[scancode] = true;
		}
		var _this = this.key_event;
		_this.type = 1;
		_this.keycode = keycode;
		_this.scancode = scancode;
		_this.repeat = repeat;
		_this.mod = mod;
		var _this1 = this.event;
		_this1.type = 1;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.key = this.key_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeydown(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_key_up_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		this.key_code_released.h[keycode] = false;
		this.key_code_down.remove(keycode);
		this.scan_code_released.h[scancode] = false;
		this.scan_code_down.remove(scancode);
		var _this = this.key_event;
		_this.type = 2;
		_this.keycode = keycode;
		_this.scancode = scancode;
		_this.repeat = repeat;
		_this.mod = mod;
		var _this1 = this.event;
		_this1.type = 1;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.key = this.key_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeyup(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_text_event: function(text,start,length,type,timestamp,window_id) {
		var _this = this.text_event;
		_this.type = type;
		_this.text = text;
		_this.start = start;
		_this.length = length;
		var _this1 = this.event;
		_this1.type = 2;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.text = this.text_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontextinput(text,start,length,type,timestamp,window_id);
	}
	,dispatch_mouse_move_event: function(x,y,xrel,yrel,timestamp,window_id) {
		var _this = this.mouse_event;
		_this.type = 1;
		_this.x = x;
		_this.y = y;
		_this.x_rel = xrel;
		_this.y_rel = yrel;
		_this.button = 0;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousemove(x,y,xrel,yrel,timestamp,window_id);
	}
	,dispatch_mouse_down_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_pressed.h[button] = false;
		this.mouse_button_down.h[button] = true;
		var _this = this.mouse_event;
		_this.type = 2;
		_this.x = x;
		_this.y = y;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = button;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousedown(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_up_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_released.h[button] = false;
		this.mouse_button_down.remove(button);
		var _this = this.mouse_event;
		_this.type = 3;
		_this.x = x;
		_this.y = y;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = button;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmouseup(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_wheel_event: function(x,y,timestamp,window_id) {
		var _this = this.mouse_event;
		_this.type = 4;
		_this.x = 0;
		_this.y = 0;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = 0;
		_this.wheel_x = x;
		_this.wheel_y = y;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousewheel(x,y,timestamp,window_id);
	}
	,dispatch_touch_down_event: function(x,y,dx,dy,touch_id,timestamp) {
		if(!this.touches_down.h.hasOwnProperty(touch_id)) {
			this.touch_count++;
			this.touches_down.h[touch_id] = true;
		}
		var _this = this.touch_event;
		_this.type = 2;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchdown(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_touch_up_event: function(x,y,dx,dy,touch_id,timestamp) {
		var _this = this.touch_event;
		_this.type = 3;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchup(x,y,dx,dy,touch_id,timestamp);
		if(this.touches_down.remove(touch_id)) {
			this.touch_count--;
		}
	}
	,dispatch_touch_move_event: function(x,y,dx,dy,touch_id,timestamp) {
		var _this = this.touch_event;
		_this.type = 1;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchmove(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_gamepad_axis_event: function(gamepad,axis,value,timestamp) {
		if(!this.gamepad_axis_values.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_axis_values.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_axis_values.h[gamepad].h[axis] = value;
		var _this = this.gamepad_event;
		_this.button = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.axis = axis;
		_this.value = value;
		_this.type = 1;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadaxis(gamepad,axis,value,timestamp);
	}
	,dispatch_gamepad_button_down_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_pressed.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_pressed.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_button_pressed.h[gamepad].h[button] = false;
		this.gamepad_button_down.h[gamepad].h[button] = true;
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.type = 2;
		_this.value = value;
		_this.button = button;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddown(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_button_up_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_released.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_released.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_button_released.h[gamepad].h[button] = false;
		this.gamepad_button_down.h[gamepad].remove(button);
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.type = 3;
		_this.value = value;
		_this.button = button;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadup(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_device_event: function(gamepad,id,type,timestamp) {
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.value = null;
		_this.button = null;
		_this.device_id = id;
		_this.device_event = type;
		_this.gamepad = gamepad;
		_this.type = 4;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddevice(gamepad,id,type,timestamp);
	}
	,onevent: function(_event) {
		if(_event.type == 3) {
			this._update_keystate();
			this._update_gamepadstate();
			this._update_mousestate();
		}
	}
	,_update_mousestate: function() {
		var _code = this.mouse_button_pressed.keys();
		while(_code.hasNext()) {
			var _code1 = _code.next();
			if(this.mouse_button_pressed.h[_code1]) {
				this.mouse_button_pressed.remove(_code1);
			} else {
				this.mouse_button_pressed.h[_code1] = true;
			}
		}
		var _code2 = this.mouse_button_released.keys();
		while(_code2.hasNext()) {
			var _code3 = _code2.next();
			if(this.mouse_button_released.h[_code3]) {
				this.mouse_button_released.remove(_code3);
			} else {
				this.mouse_button_released.h[_code3] = true;
			}
		}
	}
	,_update_gamepadstate: function() {
		var _gamepad_pressed = this.gamepad_button_pressed.iterator();
		while(_gamepad_pressed.hasNext()) {
			var _gamepad_pressed1 = _gamepad_pressed.next();
			var _button = _gamepad_pressed1.keys();
			while(_button.hasNext()) {
				var _button1 = _button.next();
				if(_gamepad_pressed1.h[_button1]) {
					_gamepad_pressed1.remove(_button1);
				} else {
					_gamepad_pressed1.h[_button1] = true;
				}
			}
		}
		var _gamepad_released = this.gamepad_button_released.iterator();
		while(_gamepad_released.hasNext()) {
			var _gamepad_released1 = _gamepad_released.next();
			var _button2 = _gamepad_released1.keys();
			while(_button2.hasNext()) {
				var _button3 = _button2.next();
				if(_gamepad_released1.h[_button3]) {
					_gamepad_released1.remove(_button3);
				} else {
					_gamepad_released1.h[_button3] = true;
				}
			}
		}
	}
	,_update_keystate: function() {
		var _code = this.key_code_pressed.keys();
		while(_code.hasNext()) {
			var _code1 = _code.next();
			if(this.key_code_pressed.h[_code1]) {
				this.key_code_pressed.remove(_code1);
			} else {
				this.key_code_pressed.h[_code1] = true;
			}
		}
		var _code2 = this.key_code_released.keys();
		while(_code2.hasNext()) {
			var _code3 = _code2.next();
			if(this.key_code_released.h[_code3]) {
				this.key_code_released.remove(_code3);
			} else {
				this.key_code_released.h[_code3] = true;
			}
		}
		var _code4 = this.scan_code_pressed.keys();
		while(_code4.hasNext()) {
			var _code5 = _code4.next();
			if(this.scan_code_pressed.h[_code5]) {
				this.scan_code_pressed.remove(_code5);
			} else {
				this.scan_code_pressed.h[_code5] = true;
			}
		}
		var _code6 = this.scan_code_released.keys();
		while(_code6.hasNext()) {
			var _code7 = _code6.next();
			if(this.scan_code_released.h[_code7]) {
				this.scan_code_released.remove(_code7);
			} else {
				this.scan_code_released.h[_code7] = true;
			}
		}
	}
	,__class__: snow_systems_input_Input
};
var snow_systems_input_Keycodes = function() { };
$hxClasses["snow.systems.input.Keycodes"] = snow_systems_input_Keycodes;
snow_systems_input_Keycodes.__name__ = ["snow","systems","input","Keycodes"];
snow_systems_input_Keycodes.from_scan = function(scancode) {
	return scancode | 1073741824;
};
snow_systems_input_Keycodes.to_scan = function(keycode) {
	if((keycode & 1073741824) != 0) {
		return keycode & -1073741825;
	}
	switch(keycode) {
	case 8:
		return 42;
	case 9:
		return 43;
	case 13:
		return 40;
	case 27:
		return 41;
	case 32:
		return 44;
	case 47:
		return 56;
	case 48:
		return 39;
	case 49:
		return 30;
	case 50:
		return 31;
	case 51:
		return 32;
	case 52:
		return 33;
	case 53:
		return 34;
	case 54:
		return 35;
	case 55:
		return 36;
	case 56:
		return 37;
	case 57:
		return 38;
	case 59:
		return 51;
	case 61:
		return 46;
	case 91:
		return 47;
	case 92:
		return 49;
	case 93:
		return 48;
	case 96:
		return 53;
	case 97:
		return 4;
	case 98:
		return 5;
	case 99:
		return 6;
	case 100:
		return 7;
	case 101:
		return 8;
	case 102:
		return 9;
	case 103:
		return 10;
	case 104:
		return 11;
	case 105:
		return 12;
	case 106:
		return 13;
	case 107:
		return 14;
	case 108:
		return 15;
	case 109:
		return 16;
	case 110:
		return 17;
	case 111:
		return 18;
	case 112:
		return 19;
	case 113:
		return 20;
	case 114:
		return 21;
	case 115:
		return 22;
	case 116:
		return 23;
	case 117:
		return 24;
	case 118:
		return 25;
	case 119:
		return 26;
	case 120:
		return 27;
	case 121:
		return 28;
	case 122:
		return 29;
	}
	return 0;
};
snow_systems_input_Keycodes.$name = function(keycode) {
	if((keycode & 1073741824) != 0) {
		return snow_systems_input_Scancodes.$name(keycode & -1073741825);
	}
	switch(keycode) {
	case 8:
		return snow_systems_input_Scancodes.$name(42);
	case 9:
		return snow_systems_input_Scancodes.$name(43);
	case 13:
		return snow_systems_input_Scancodes.$name(40);
	case 27:
		return snow_systems_input_Scancodes.$name(41);
	case 32:
		return snow_systems_input_Scancodes.$name(44);
	case 127:
		return snow_systems_input_Scancodes.$name(76);
	default:
		var decoder = new haxe_Utf8();
		decoder.__b += String.fromCharCode(keycode);
		return decoder.__b;
	}
};
var snow_systems_input_Scancodes = function() { };
$hxClasses["snow.systems.input.Scancodes"] = snow_systems_input_Scancodes;
snow_systems_input_Scancodes.__name__ = ["snow","systems","input","Scancodes"];
snow_systems_input_Scancodes.$name = function(scancode) {
	var res = null;
	if(scancode >= 0 && scancode < snow_systems_input_Scancodes.scancode_names.length) {
		res = snow_systems_input_Scancodes.scancode_names[scancode];
	}
	if(res != null) {
		return res;
	} else {
		return "";
	}
};
var snow_systems_io_IO = function(_app) {
	this.string_save_prefix = "slot";
	this.app = _app;
	this.module = new snow_core_web_io_IO(this.app);
};
$hxClasses["snow.systems.io.IO"] = snow_systems_io_IO;
snow_systems_io_IO.__name__ = ["snow","systems","io","IO"];
snow_systems_io_IO.prototype = {
	app_path: function() {
		return this.module.app_path();
	}
	,app_path_prefs: function() {
		return this.module.app_path_prefs();
	}
	,url_open: function(_url) {
		this.module.url_open(_url);
	}
	,data_load: function(_path,_options) {
		return this.module.data_load(_path,_options);
	}
	,data_save: function(_path,_data,_options) {
		return this.module.data_save(_path,_data,_options);
	}
	,data_flow: function(_id,_processor,_provider) {
		var _gthis = this;
		if(_provider == null) {
			_provider = $bind(this,this.default_provider);
		}
		return new snow_api_Promise(function(resolve,reject) {
			_provider(_gthis.app,_id).then(function(data) {
				if(_processor != null) {
					_processor(_gthis.app,_id,data).then(resolve,reject);
				} else {
					resolve(data);
				}
			}).error(reject);
		});
	}
	,string_save_path: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		return this.module.string_save_path(_slot);
	}
	,string_save: function(_key,_value,_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		if(this.string_slots == null) {
			this.string_slots = new haxe_ds_IntMap();
		}
		var _string_map = this.string_slots.get(_slot);
		if(_string_map == null) {
			var _this = this.module;
			var storage = window.localStorage;
			var _string;
			if(storage == null) {
				haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
				_string = null;
			} else {
				var _parts = snow_types_Config.app_ident.split(".");
				var _appname = _parts.pop();
				_string = storage.getItem("" + _parts.join(".") + "/" + _appname + "/" + _this.app.io.string_save_prefix + "." + _slot);
			}
			if(_string == null) {
				_string_map = new haxe_ds_StringMap();
			} else {
				_string = window.atob(_string);
				_string_map = haxe_Unserializer.run(_string);
			}
			this.string_slots.set(_slot,_string_map);
		}
		var _string_map1 = _string_map;
		var _encoded_key = window.btoa(_key);
		if(_value == null) {
			_string_map1.remove(_encoded_key);
		} else {
			var _encoded_value = window.btoa(_value);
			if(__map_reserved[_encoded_key] != null) {
				_string_map1.setReserved(_encoded_key,_encoded_value);
			} else {
				_string_map1.h[_encoded_key] = _encoded_value;
			}
		}
		var _contents = haxe_Serializer.run(_string_map1);
		_contents = window.btoa(_contents);
		var _this1 = this.module;
		var storage1 = window.localStorage;
		if(storage1 == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 136, className : "snow.core.web.io.IO", methodName : "string_slot_save"});
			return false;
		} else {
			var _parts1 = snow_types_Config.app_ident.split(".");
			var _appname1 = _parts1.pop();
			storage1.setItem("" + _parts1.join(".") + "/" + _appname1 + "/" + _this1.app.io.string_save_prefix + "." + _slot,_contents);
			return true;
		}
	}
	,string_load: function(_key,_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		if(this.string_slots == null) {
			this.string_slots = new haxe_ds_IntMap();
		}
		var _string_map = this.string_slots.get(_slot);
		if(_string_map == null) {
			var _this = this.module;
			var storage = window.localStorage;
			var _string;
			if(storage == null) {
				haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
				_string = null;
			} else {
				var _parts = snow_types_Config.app_ident.split(".");
				var _appname = _parts.pop();
				_string = storage.getItem("" + _parts.join(".") + "/" + _appname + "/" + _this.app.io.string_save_prefix + "." + _slot);
			}
			if(_string == null) {
				_string_map = new haxe_ds_StringMap();
			} else {
				_string = window.atob(_string);
				_string_map = haxe_Unserializer.run(_string);
			}
			this.string_slots.set(_slot,_string_map);
		}
		var _string_map1 = _string_map;
		var _encoded_key = window.btoa(_key);
		var _encoded_value = __map_reserved[_encoded_key] != null ? _string_map1.getReserved(_encoded_key) : _string_map1.h[_encoded_key];
		if(_encoded_value == null) {
			return null;
		}
		return window.atob(_encoded_value);
	}
	,string_destroy: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		if(this.string_slots == null) {
			this.string_slots = new haxe_ds_IntMap();
		} else {
			this.string_slots.remove(_slot);
		}
		var _this = this.module;
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 119, className : "snow.core.web.io.IO", methodName : "string_slot_destroy"});
			return false;
		} else {
			var _parts = snow_types_Config.app_ident.split(".");
			var _appname = _parts.pop();
			storage.removeItem("" + _parts.join(".") + "/" + _appname + "/" + _this.app.io.string_save_prefix + "." + _slot);
			return false;
		}
	}
	,string_slots_sync: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		if(this.string_slots == null) {
			this.string_slots = new haxe_ds_IntMap();
		}
		var _string_map = this.string_slots.h[_slot];
		if(_string_map == null) {
			var _this = this.module;
			var storage = window.localStorage;
			var _string;
			if(storage == null) {
				haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
				_string = null;
			} else {
				var _parts = snow_types_Config.app_ident.split(".");
				var _appname = _parts.pop();
				_string = storage.getItem("" + _parts.join(".") + "/" + _appname + "/" + _this.app.io.string_save_prefix + "." + _slot);
			}
			if(_string == null) {
				_string_map = new haxe_ds_StringMap();
			} else {
				_string = window.atob(_string);
				_string_map = haxe_Unserializer.run(_string);
			}
			this.string_slots.h[_slot] = _string_map;
		}
		return _string_map;
	}
	,default_provider: function(_app,_id) {
		return this.module.data_load(_id,null);
	}
	,onevent: function(_event) {
	}
	,shutdown: function() {
	}
	,__class__: snow_systems_io_IO
};
var snow_types_Config = function() { };
$hxClasses["snow.types.Config"] = snow_types_Config;
snow_types_Config.__name__ = ["snow","types","Config"];
var snow_types_Error = $hxClasses["snow.types.Error"] = { __ename__ : ["snow","types","Error"], __constructs__ : ["error","init","parse"] };
snow_types_Error.error = function(value) { var $x = ["error",0,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.init = function(value) { var $x = ["init",1,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.parse = function(value) { var $x = ["parse",2,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
var snow_types__$Types_ExtensionsInit = function() { };
$hxClasses["snow.types._Types.ExtensionsInit"] = snow_types__$Types_ExtensionsInit;
snow_types__$Types_ExtensionsInit.__name__ = ["snow","types","_Types","ExtensionsInit"];
var snow_types__$Types_AssetType_$Impl_$ = {};
$hxClasses["snow.types._Types.AssetType_Impl_"] = snow_types__$Types_AssetType_$Impl_$;
snow_types__$Types_AssetType_$Impl_$.__name__ = ["snow","types","_Types","AssetType_Impl_"];
snow_types__$Types_AssetType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "at_unknown";
	case 1:
		return "at_bytes";
	case 2:
		return "at_text";
	case 3:
		return "at_json";
	case 4:
		return "at_image";
	case 5:
		return "at_audio";
	default:
		return "" + this1;
	}
};
var snow_types_ImageData = function(_app,_options) {
	this.bpp_source = 4;
	this.bpp = 4;
	this.height_actual = 0;
	this.width_actual = 0;
	this.height = 0;
	this.width = 0;
	this.id = "ImageData";
	this.app = _app;
	if(_options.id == null) {
		_options.id = this.id;
	}
	this.id = _options.id;
	this.width = _options.width;
	this.height = _options.height;
	this.width_actual = _options.width_actual;
	this.height_actual = _options.height_actual;
	this.bpp = _options.bpp;
	this.bpp_source = _options.bpp_source;
	if(_options.pixels == null) {
		_options.pixels = this.pixels;
	}
	this.pixels = _options.pixels;
	_options = null;
};
$hxClasses["snow.types.ImageData"] = snow_types_ImageData;
snow_types_ImageData.__name__ = ["snow","types","ImageData"];
snow_types_ImageData.prototype = {
	destroy: function() {
		this.id = null;
		this.pixels = null;
	}
	,toString: function() {
		return "{ \"ImageData\":true, \"id\":" + this.id + ", \"width\":" + this.width + ", \"height\":" + this.height + ", \"width_actual\":" + this.width_actual + ", \"height_actual\":" + this.height_actual + ", \"bpp\":" + this.bpp + ", \"bpp_source\":" + this.bpp_source + " }";
	}
	,__class__: snow_types_ImageData
};
var snow_types__$Types_AudioFormatType_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioFormatType_Impl_"] = snow_types__$Types_AudioFormatType_$Impl_$;
snow_types__$Types_AudioFormatType_$Impl_$.__name__ = ["snow","types","_Types","AudioFormatType_Impl_"];
snow_types__$Types_AudioFormatType_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return "" + this1;
	} else {
		switch(this1) {
		case 0:
			return "af_unknown";
		case 1:
			return "af_custom";
		case 2:
			return "af_ogg";
		case 3:
			return "af_wav";
		case 4:
			return "af_pcm";
		default:
			return "" + this1;
		}
	}
};
var snow_types__$Types_AudioEvent_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioEvent_Impl_"] = snow_types__$Types_AudioEvent_$Impl_$;
snow_types__$Types_AudioEvent_$Impl_$.__name__ = ["snow","types","_Types","AudioEvent_Impl_"];
snow_types__$Types_AudioEvent_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ae_end";
	case 1:
		return "ae_destroyed";
	case 2:
		return "ae_destroyed_source";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_AudioState_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioState_Impl_"] = snow_types__$Types_AudioState_$Impl_$;
snow_types__$Types_AudioState_$Impl_$.__name__ = ["snow","types","_Types","AudioState_Impl_"];
snow_types__$Types_AudioState_$Impl_$.toString = function(this1) {
	switch(this1) {
	case -1:
		return "as_invalid";
	case 0:
		return "as_paused";
	case 1:
		return "as_playing";
	case 2:
		return "as_stopped";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_OpenGLProfile_$Impl_$ = {};
$hxClasses["snow.types._Types.OpenGLProfile_Impl_"] = snow_types__$Types_OpenGLProfile_$Impl_$;
snow_types__$Types_OpenGLProfile_$Impl_$.__name__ = ["snow","types","_Types","OpenGLProfile_Impl_"];
snow_types__$Types_OpenGLProfile_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "compatibility";
	case 1:
		return "core";
	case 2:
		return "gles";
	default:
		return "" + this1;
	}
};
var snow_types_SystemEvent = function() {
};
$hxClasses["snow.types.SystemEvent"] = snow_types_SystemEvent;
snow_types_SystemEvent.__name__ = ["snow","types","SystemEvent"];
snow_types_SystemEvent.prototype = {
	set: function(_type,_window,_input) {
		this.type = _type;
		this.window = _window;
		this.input = _input;
	}
	,toString: function() {
		var this1 = this.type;
		var _s;
		switch(this1) {
		case 0:
			_s = "se_unknown";
			break;
		case 1:
			_s = "se_init";
			break;
		case 2:
			_s = "se_ready";
			break;
		case 3:
			_s = "se_tick";
			break;
		case 4:
			_s = "se_freeze";
			break;
		case 5:
			_s = "se_unfreeze";
			break;
		case 7:
			_s = "se_shutdown";
			break;
		case 8:
			_s = "se_window";
			break;
		case 9:
			_s = "se_input";
			break;
		case 10:
			_s = "se_quit";
			break;
		case 11:
			_s = "se_app_terminating";
			break;
		case 12:
			_s = "se_app_lowmemory";
			break;
		case 13:
			_s = "se_app_willenterbackground";
			break;
		case 14:
			_s = "se_app_didenterbackground";
			break;
		case 15:
			_s = "se_app_willenterforeground";
			break;
		case 16:
			_s = "se_app_didenterforeground";
			break;
		default:
			_s = "" + this1;
		}
		var _s1 = "{ \"SystemEvent\":true, \"type\":\"" + _s + "\"";
		if(this.window != null) {
			_s1 += ", \"window\":" + Std.string(this.window);
		}
		if(this.input != null) {
			_s1 += ", \"input\":" + Std.string(this.input);
		}
		_s1 += " }";
		return _s1;
	}
	,__class__: snow_types_SystemEvent
};
var snow_types_WindowEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
	this.type = 0;
};
$hxClasses["snow.types.WindowEvent"] = snow_types_WindowEvent;
snow_types_WindowEvent.__name__ = ["snow","types","WindowEvent"];
snow_types_WindowEvent.prototype = {
	set: function(_type,_timestamp,_window_id,_x,_y) {
		this.type = _type;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
		this.x = _x;
		this.y = _y;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "we_unknown";
			break;
		case 1:
			tmp = "we_shown";
			break;
		case 2:
			tmp = "we_hidden";
			break;
		case 3:
			tmp = "we_exposed";
			break;
		case 4:
			tmp = "we_moved";
			break;
		case 5:
			tmp = "we_resized";
			break;
		case 6:
			tmp = "we_size_changed";
			break;
		case 7:
			tmp = "we_minimized";
			break;
		case 8:
			tmp = "we_maximized";
			break;
		case 9:
			tmp = "we_restored";
			break;
		case 10:
			tmp = "we_enter";
			break;
		case 11:
			tmp = "we_leave";
			break;
		case 12:
			tmp = "we_focus_gained";
			break;
		case 13:
			tmp = "we_focus_lost";
			break;
		case 14:
			tmp = "we_close";
			break;
		default:
			tmp = "" + this1;
		}
		return "{ \"WindowEvent\":true, \"type\":\"" + tmp + "\", \"window\":" + this.window_id + ", \"x\":" + this.x + ", \"y\":" + this.y + ", \"time\":" + this.timestamp + " }";
	}
	,__class__: snow_types_WindowEvent
};
var snow_types_KeyEvent = function() {
};
$hxClasses["snow.types.KeyEvent"] = snow_types_KeyEvent;
snow_types_KeyEvent.__name__ = ["snow","types","KeyEvent"];
snow_types_KeyEvent.prototype = {
	set: function(_type,_keycode,_scancode,_repeat,_mod) {
		this.type = _type;
		this.keycode = _keycode;
		this.scancode = _scancode;
		this.repeat = _repeat;
		this.mod = _mod;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "ke_unknown";
			break;
		case 1:
			tmp = "ke_down";
			break;
		case 2:
			tmp = "ke_up";
			break;
		default:
			tmp = "" + this1;
		}
		return "{ \"KeyEvent\":true, \"type\":\"" + tmp + "\", \"keycode\":" + this.keycode + ", \"scancode\":" + this.scancode + ", \"repeat\":" + Std.string(this.repeat) + ", \"mod\":" + Std.string(this.mod) + " }";
	}
	,__class__: snow_types_KeyEvent
};
var snow_types_TextEvent = function() {
};
$hxClasses["snow.types.TextEvent"] = snow_types_TextEvent;
snow_types_TextEvent.__name__ = ["snow","types","TextEvent"];
snow_types_TextEvent.prototype = {
	set: function(_type,_text,_start,_length) {
		this.type = _type;
		this.text = _text;
		this.start = _start;
		this.length = _length;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "te_unknown";
			break;
		case 1:
			tmp = "te_edit";
			break;
		case 2:
			tmp = "te_input";
			break;
		default:
			tmp = "" + this1;
		}
		return "{ \"TextEvent\":true, \"type\":\"" + tmp + "\", \"text\":\"" + this.text + "\", \"start\":" + this.start + ", \"length\":" + this.length + " }";
	}
	,__class__: snow_types_TextEvent
};
var snow_types_MouseEvent = function() {
};
$hxClasses["snow.types.MouseEvent"] = snow_types_MouseEvent;
snow_types_MouseEvent.__name__ = ["snow","types","MouseEvent"];
snow_types_MouseEvent.prototype = {
	set: function(_type,_x,_y,_x_rel,_y_rel,_button,_wheel_x,_wheel_y) {
		this.type = _type;
		this.x = _x;
		this.y = _y;
		this.x_rel = _x_rel;
		this.y_rel = _y_rel;
		this.button = _button;
		this.wheel_x = _wheel_x;
		this.wheel_y = _wheel_y;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "me_unknown";
			break;
		case 1:
			tmp = "me_move";
			break;
		case 2:
			tmp = "me_down";
			break;
		case 3:
			tmp = "me_up";
			break;
		case 4:
			tmp = "me_wheel";
			break;
		default:
			tmp = "" + this1;
		}
		return "{ \"MouseEvent\":true, \"type\":\"" + tmp + "\", \"x\":" + this.x + ", \"y\":" + this.y + ", \"button\":" + this.button + ", \"x_rel\":" + this.x_rel + ", \"y_rel\":" + this.y_rel + ", \"wheel_x\":" + this.wheel_x + ", \"wheel_y\":" + this.wheel_y + " }";
	}
	,__class__: snow_types_MouseEvent
};
var snow_types_TouchEvent = function() {
};
$hxClasses["snow.types.TouchEvent"] = snow_types_TouchEvent;
snow_types_TouchEvent.__name__ = ["snow","types","TouchEvent"];
snow_types_TouchEvent.prototype = {
	set: function(_type,_id,_x,_y,_dx,_dy) {
		this.type = _type;
		this.touch_id = _id;
		this.x = _x;
		this.y = _y;
		this.dx = _dx;
		this.dy = _dy;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "te_unknown";
			break;
		case 1:
			tmp = "te_move";
			break;
		case 2:
			tmp = "te_down";
			break;
		case 3:
			tmp = "te_up";
			break;
		default:
			tmp = "" + this1;
		}
		return "{ \"TouchEvent\":true, \"type\":\"" + tmp + "\", \"touch_id\":" + this.touch_id + ", \"x\":" + this.x + ", \"y\":" + this.y + ", \"dx\":" + this.dx + ", \"dy\":" + this.dy + " }";
	}
	,__class__: snow_types_TouchEvent
};
var snow_types_GamepadEvent = function() {
};
$hxClasses["snow.types.GamepadEvent"] = snow_types_GamepadEvent;
snow_types_GamepadEvent.__name__ = ["snow","types","GamepadEvent"];
snow_types_GamepadEvent.prototype = {
	set_axis: function(_gamepad,_axis,_value) {
		this.button = null;
		this.device_id = null;
		this.device_event = null;
		this.axis = _axis;
		this.value = _value;
		this.type = 1;
		this.gamepad = _gamepad;
	}
	,set_button: function(_type,_gamepad,_button,_value) {
		this.axis = null;
		this.device_id = null;
		this.device_event = null;
		this.type = _type;
		this.value = _value;
		this.button = _button;
		this.gamepad = _gamepad;
	}
	,set_device: function(_gamepad,_id,_event) {
		this.axis = null;
		this.value = null;
		this.button = null;
		this.device_id = _id;
		this.device_event = _event;
		this.gamepad = _gamepad;
		this.type = 4;
	}
	,toString: function() {
		var this1 = this.type;
		var tmp;
		switch(this1) {
		case 0:
			tmp = "ge_unknown";
			break;
		case 1:
			tmp = "ge_axis";
			break;
		case 2:
			tmp = "ge_down";
			break;
		case 3:
			tmp = "ge_up";
			break;
		case 4:
			tmp = "ge_device";
			break;
		default:
			tmp = "" + this1;
		}
		var tmp1 = "{ \"GamepadEvent\":true, \"type\":\"" + tmp + "\", \"gamepad\":" + this.gamepad + ", \"axis\":" + this.axis + ", \"button\":" + this.button + ", \"value\":" + this.value + ", \"device_id\":\"" + this.device_id + "\", \"device_event\":\"";
		var this2 = this.device_event;
		var tmp2;
		switch(this2) {
		case 0:
			tmp2 = "ge_unknown";
			break;
		case 1:
			tmp2 = "ge_device_added";
			break;
		case 2:
			tmp2 = "ge_device_removed";
			break;
		case 3:
			tmp2 = "ge_device_remapped";
			break;
		default:
			tmp2 = "" + this2;
		}
		return tmp1 + tmp2 + "\" }";
	}
	,__class__: snow_types_GamepadEvent
};
var snow_types_InputEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
};
$hxClasses["snow.types.InputEvent"] = snow_types_InputEvent;
snow_types_InputEvent.__name__ = ["snow","types","InputEvent"];
snow_types_InputEvent.prototype = {
	reset: function(_type,_window_id,_timestamp) {
		this.type = _type;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
	}
	,set_key: function(_event,_window_id,_timestamp) {
		this.type = 1;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.key = _event;
	}
	,set_text: function(_event,_window_id,_timestamp) {
		this.type = 2;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.text = _event;
	}
	,set_mouse: function(_event,_window_id,_timestamp) {
		this.type = 3;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.mouse = _event;
	}
	,set_touch: function(_event,_timestamp) {
		this.type = 4;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = 0;
		this.timestamp = _timestamp;
		this.touch = _event;
	}
	,set_gamepad: function(_event,_timestamp) {
		this.type = 5;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = 0;
		this.timestamp = _timestamp;
		this.gamepad = _event;
	}
	,toString: function() {
		var this1 = this.type;
		var _s;
		switch(this1) {
		case 0:
			_s = "ie_unknown";
			break;
		case 1:
			_s = "ie_key";
			break;
		case 2:
			_s = "ie_text";
			break;
		case 3:
			_s = "ie_mouse";
			break;
		case 4:
			_s = "ie_touch";
			break;
		case 5:
			_s = "ie_gamepad";
			break;
		case 6:
			_s = "ie_joystick";
			break;
		default:
			_s = "" + this1;
		}
		var _s1 = "{ \"InputEvent\":true, \"type\":\"" + _s + "\"";
		if(this.key != null) {
			_s1 += ", \"key\":" + Std.string(this.key);
		}
		if(this.text != null) {
			_s1 += ", \"text\":" + Std.string(this.text);
		}
		if(this.mouse != null) {
			_s1 += ", \"mouse\":" + Std.string(this.mouse);
		}
		if(this.touch != null) {
			_s1 += ", \"touch\":" + Std.string(this.touch);
		}
		if(this.gamepad != null) {
			_s1 += ", \"gamepad\":" + Std.string(this.gamepad);
		}
		_s1 += "\"window\":" + this.window_id + ", \"time\":" + this.timestamp + " }";
		return _s1;
	}
	,__class__: snow_types_InputEvent
};
var snow_types_ModState = function() {
	this.meta = false;
	this.alt = false;
	this.shift = false;
	this.ctrl = false;
	this.mode = false;
	this.caps = false;
	this.num = false;
	this.rmeta = false;
	this.lmeta = false;
	this.ralt = false;
	this.lalt = false;
	this.rctrl = false;
	this.lctrl = false;
	this.rshift = false;
	this.lshift = false;
	this.none = false;
};
$hxClasses["snow.types.ModState"] = snow_types_ModState;
snow_types_ModState.__name__ = ["snow","types","ModState"];
snow_types_ModState.prototype = {
	toString: function() {
		var _s = "{ \"ModState\":true ";
		if(this.none) {
			return "{ \"ModState\":true " + ", \"none\":true }";
		}
		if(this.lshift) {
			_s = "{ \"ModState\":true " + ", \"lshift\":true";
		}
		if(this.rshift) {
			_s += ", \"rshift\":true";
		}
		if(this.lctrl) {
			_s += ", \"lctrl\":true";
		}
		if(this.rctrl) {
			_s += ", \"rctrl\":true";
		}
		if(this.lalt) {
			_s += ", \"lalt\":true";
		}
		if(this.ralt) {
			_s += ", \"ralt\":true";
		}
		if(this.lmeta) {
			_s += ", \"lmeta\":true";
		}
		if(this.rmeta) {
			_s += ", \"rmeta\":true";
		}
		if(this.num) {
			_s += ", \"num\":true";
		}
		if(this.caps) {
			_s += ", \"caps\":true";
		}
		if(this.mode) {
			_s += ", \"mode\":true";
		}
		if(this.ctrl) {
			_s += ", \"ctrl\":true";
		}
		if(this.shift) {
			_s += ", \"shift\":true";
		}
		if(this.alt) {
			_s += ", \"alt\":true";
		}
		if(this.meta) {
			_s += ", \"meta\":true";
		}
		_s += "}";
		return _s;
	}
	,__class__: snow_types_ModState
};
var snow_types__$Types_KeyEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.KeyEventType_Impl_"] = snow_types__$Types_KeyEventType_$Impl_$;
snow_types__$Types_KeyEventType_$Impl_$.__name__ = ["snow","types","_Types","KeyEventType_Impl_"];
snow_types__$Types_KeyEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ke_unknown";
	case 1:
		return "ke_down";
	case 2:
		return "ke_up";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_MouseEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.MouseEventType_Impl_"] = snow_types__$Types_MouseEventType_$Impl_$;
snow_types__$Types_MouseEventType_$Impl_$.__name__ = ["snow","types","_Types","MouseEventType_Impl_"];
snow_types__$Types_MouseEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "me_unknown";
	case 1:
		return "me_move";
	case 2:
		return "me_down";
	case 3:
		return "me_up";
	case 4:
		return "me_wheel";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_TouchEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.TouchEventType_Impl_"] = snow_types__$Types_TouchEventType_$Impl_$;
snow_types__$Types_TouchEventType_$Impl_$.__name__ = ["snow","types","_Types","TouchEventType_Impl_"];
snow_types__$Types_TouchEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "te_unknown";
	case 1:
		return "te_move";
	case 2:
		return "te_down";
	case 3:
		return "te_up";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_GamepadEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.GamepadEventType_Impl_"] = snow_types__$Types_GamepadEventType_$Impl_$;
snow_types__$Types_GamepadEventType_$Impl_$.__name__ = ["snow","types","_Types","GamepadEventType_Impl_"];
snow_types__$Types_GamepadEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ge_unknown";
	case 1:
		return "ge_axis";
	case 2:
		return "ge_down";
	case 3:
		return "ge_up";
	case 4:
		return "ge_device";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_TextEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.TextEventType_Impl_"] = snow_types__$Types_TextEventType_$Impl_$;
snow_types__$Types_TextEventType_$Impl_$.__name__ = ["snow","types","_Types","TextEventType_Impl_"];
snow_types__$Types_TextEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "te_unknown";
	case 1:
		return "te_edit";
	case 2:
		return "te_input";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_GamepadDeviceEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.GamepadDeviceEventType_Impl_"] = snow_types__$Types_GamepadDeviceEventType_$Impl_$;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.__name__ = ["snow","types","_Types","GamepadDeviceEventType_Impl_"];
snow_types__$Types_GamepadDeviceEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ge_unknown";
	case 1:
		return "ge_device_added";
	case 2:
		return "ge_device_removed";
	case 3:
		return "ge_device_remapped";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_SystemEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.SystemEventType_Impl_"] = snow_types__$Types_SystemEventType_$Impl_$;
snow_types__$Types_SystemEventType_$Impl_$.__name__ = ["snow","types","_Types","SystemEventType_Impl_"];
snow_types__$Types_SystemEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "se_unknown";
	case 1:
		return "se_init";
	case 2:
		return "se_ready";
	case 3:
		return "se_tick";
	case 4:
		return "se_freeze";
	case 5:
		return "se_unfreeze";
	case 7:
		return "se_shutdown";
	case 8:
		return "se_window";
	case 9:
		return "se_input";
	case 10:
		return "se_quit";
	case 11:
		return "se_app_terminating";
	case 12:
		return "se_app_lowmemory";
	case 13:
		return "se_app_willenterbackground";
	case 14:
		return "se_app_didenterbackground";
	case 15:
		return "se_app_willenterforeground";
	case 16:
		return "se_app_didenterforeground";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_WindowEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.WindowEventType_Impl_"] = snow_types__$Types_WindowEventType_$Impl_$;
snow_types__$Types_WindowEventType_$Impl_$.__name__ = ["snow","types","_Types","WindowEventType_Impl_"];
snow_types__$Types_WindowEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "we_unknown";
	case 1:
		return "we_shown";
	case 2:
		return "we_hidden";
	case 3:
		return "we_exposed";
	case 4:
		return "we_moved";
	case 5:
		return "we_resized";
	case 6:
		return "we_size_changed";
	case 7:
		return "we_minimized";
	case 8:
		return "we_maximized";
	case 9:
		return "we_restored";
	case 10:
		return "we_enter";
	case 11:
		return "we_leave";
	case 12:
		return "we_focus_gained";
	case 13:
		return "we_focus_lost";
	case 14:
		return "we_close";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_InputEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.InputEventType_Impl_"] = snow_types__$Types_InputEventType_$Impl_$;
snow_types__$Types_InputEventType_$Impl_$.__name__ = ["snow","types","_Types","InputEventType_Impl_"];
snow_types__$Types_InputEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ie_unknown";
	case 1:
		return "ie_key";
	case 2:
		return "ie_text";
	case 3:
		return "ie_mouse";
	case 4:
		return "ie_touch";
	case 5:
		return "ie_gamepad";
	case 6:
		return "ie_joystick";
	default:
		return "" + this1;
	}
};
var testTrilateral_TestLuxe = function() {
	this.animate = false;
	this.stageRadius = 570;
	this.upDown = false;
	this.downDown = false;
	this.rightDown = false;
	this.leftDown = false;
	luxe_Game.call(this);
};
$hxClasses["testTrilateral.TestLuxe"] = testTrilateral_TestLuxe;
testTrilateral_TestLuxe.__name__ = ["testTrilateral","TestLuxe"];
testTrilateral_TestLuxe.__super__ = luxe_Game;
testTrilateral_TestLuxe.prototype = $extend(luxe_Game.prototype,{
	ready: function() {
		this.trilateralTest = new testTrilateral_TrilateralTest(this.stageRadius,$bind(this,this.setMatrix),$bind(this,this.setAnimate));
		this.trilateralTest.setup();
		if(this.shape != null) {
			this.shape.drop();
		}
		this.shape = new phoenix_geometry_Geometry({ primitive_type : 4, batcher : Luxe.renderer.batcher});
		var tri;
		var color;
		var triangles = this.trilateralTest.triangles;
		var gameColors = this.trilateralTest.appColors;
		var _g1 = 0;
		var _g = triangles.length;
		while(_g1 < _g) {
			tri = triangles[_g1++];
			color = new phoenix_Color().rgb(gameColors[tri.colorID]);
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.ax,1. + tri.ay),color));
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.bx,1. + tri.by),color));
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.cx,1. + tri.cy),color));
		}
	}
	,setAnimate: function() {
		this.animate = true;
	}
	,setMatrix: function(matrix4) {
	}
	,renderToTriangles: function() {
		if(this.shape != null) {
			this.shape.drop();
		}
		this.shape = new phoenix_geometry_Geometry({ primitive_type : 4, batcher : Luxe.renderer.batcher});
		var tri;
		var color;
		var triangles = this.trilateralTest.triangles;
		var gameColors = this.trilateralTest.appColors;
		var _g1 = 0;
		var _g = triangles.length;
		while(_g1 < _g) {
			tri = triangles[_g1++];
			color = new phoenix_Color().rgb(gameColors[tri.colorID]);
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.ax,1. + tri.ay),color));
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.bx,1. + tri.by),color));
			this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.cx,1. + tri.cy),color));
		}
	}
	,onmousemove: function(event) {
	}
	,onkeyup: function(e) {
		if(e.keycode == 27) {
			Luxe.core.shutdown();
		}
		switch(e.keycode) {
		case 1073741903:
			this.rightDown = false;
			break;
		case 1073741904:
			this.leftDown = false;
			break;
		case 1073741905:
			this.downDown = false;
			break;
		case 1073741906:
			this.upDown = false;
			break;
		default:
		}
	}
	,onkeydown: function(e) {
		switch(e.keycode) {
		case 1073741903:
			this.rightDown = true;
			break;
		case 1073741904:
			this.leftDown = true;
			break;
		case 1073741905:
			this.downDown = true;
			break;
		case 1073741906:
			this.upDown = true;
			break;
		default:
		}
	}
	,updateMovement: function() {
		this.leftDown = false;
		this.rightDown = false;
		this.downDown = false;
		this.upDown = false;
	}
	,update: function(delta) {
		if(this.animate) {
			if(this.shape != null) {
				this.shape.drop();
			}
			this.shape = new phoenix_geometry_Geometry({ primitive_type : 4, batcher : Luxe.renderer.batcher});
			var tri;
			var color;
			var triangles = this.trilateralTest.triangles;
			var gameColors = this.trilateralTest.appColors;
			var _g1 = 0;
			var _g = triangles.length;
			while(_g1 < _g) {
				tri = triangles[_g1++];
				color = new phoenix_Color().rgb(gameColors[tri.colorID]);
				this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.ax,1. + tri.ay),color));
				this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.bx,1. + tri.by),color));
				this.shape.add(new phoenix_geometry_Vertex(new phoenix_Vector(1. + tri.cx,1. + tri.cy),color));
			}
		}
	}
	,config: function(config) {
		config.window.width = 1024;
		config.window.height = 768;
		config.render.antialiasing = 4;
		return config;
	}
	,__class__: testTrilateral_TestLuxe
});
var testTrilateral_TrilateralTest = function(stageRadius_,setMatrix_,setAnimate_) {
	this.bird_d = "M210.333,65.331C104.367,66.105-12.349,150.637,1.056,276.449c4.303,40.393,18.533,63.704,52.171,79.03c36.307,16.544,57.022,54.556,50.406,112.954c-9.935,4.88-17.405,11.031-19.132,20.015c7.531-0.17,14.943-0.312,22.59,4.341c20.333,12.375,31.296,27.363,42.979,51.72c1.714,3.572,8.192,2.849,8.312-3.078c0.17-8.467-1.856-17.454-5.226-26.933c-2.955-8.313,3.059-7.985,6.917-6.106c6.399,3.115,16.334,9.43,30.39,13.098c5.392,1.407,5.995-3.877,5.224-6.991c-1.864-7.522-11.009-10.862-24.519-19.229c-4.82-2.984-0.927-9.736,5.168-8.351l20.234,2.415c3.359,0.763,4.555-6.114,0.882-7.875c-14.198-6.804-28.897-10.098-53.864-7.799c-11.617-29.265-29.811-61.617-15.674-81.681c12.639-17.938,31.216-20.74,39.147,43.489c-5.002,3.107-11.215,5.031-11.332,13.024c7.201-2.845,11.207-1.399,14.791,0c17.912,6.998,35.462,21.826,52.982,37.309c3.739,3.303,8.413-1.718,6.991-6.034c-2.138-6.494-8.053-10.659-14.791-20.016c-3.239-4.495,5.03-7.045,10.886-6.876c13.849,0.396,22.886,8.268,35.177,11.218c4.483,1.076,9.741-1.964,6.917-6.917c-3.472-6.085-13.015-9.124-19.18-13.413c-4.357-3.029-3.025-7.132,2.697-6.602c3.905,0.361,8.478,2.271,13.908,1.767c9.946-0.925,7.717-7.169-0.883-9.566c-19.036-5.304-39.891-6.311-61.665-5.225c-43.837-8.358-31.554-84.887,0-90.363c29.571-5.132,62.966-13.339,99.928-32.156c32.668-5.429,64.835-12.446,92.939-33.85c48.106-14.469,111.903,16.113,204.241,149.695c3.926,5.681,15.819,9.94,9.524-6.351c-15.893-41.125-68.176-93.328-92.13-132.085c-24.581-39.774-14.34-61.243-39.957-91.247c-21.326-24.978-47.502-25.803-77.339-17.365c-23.461,6.634-39.234-7.117-52.98-31.273C318.42,87.525,265.838,64.927,210.333,65.331zM445.731,203.01c6.12,0,11.112,4.919,11.112,11.038c0,6.119-4.994,11.111-11.112,11.111s-11.038-4.994-11.038-11.111C434.693,207.929,439.613,203.01,445.731,203.01z";
	this.cubictest_d = "M100,200 C100,100 250,100 250,200S400,300 400,200";
	this.quadtest_d = "M200,300 Q400,50 600,300 T1000,300";
	this.theta = 0;
	this.appColors = [0,16711680,16744192,16776960,65280,255,4915330,9699539,4473924,3355443,789516,1118481,16777215,255,65280,16711680];
	this.stageRadius = stageRadius_;
	this.modelViewProjection = new khaMath_Matrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setMatrix = setMatrix_;
};
$hxClasses["testTrilateral.TrilateralTest"] = testTrilateral_TrilateralTest;
testTrilateral_TrilateralTest.__name__ = ["testTrilateral","TrilateralTest"];
testTrilateral_TrilateralTest.prototype = {
	setup: function() {
		this.centre = { x : this.stageRadius, y : this.stageRadius};
		this.quarter = this.stageRadius / 2;
		this.bottomLeft = { x : this.stageRadius - this.quarter, y : this.stageRadius + this.quarter};
		this.bottomRight = { x : this.stageRadius + this.quarter, y : this.stageRadius + this.quarter};
		this.topLeft = { x : this.stageRadius - this.quarter, y : this.stageRadius - this.quarter};
		this.topRight = { x : this.stageRadius + this.quarter, y : this.stageRadius - this.quarter};
		this.draw();
	}
	,update: function() {
	}
	,render: function() {
	}
	,draw: function() {
		this.triangles = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
		this.addPaths();
		this.pieTests();
		this.pieArc();
		this.addShapes();
		this.addJoinTestForwards();
	}
	,spin: function() {
		var m__33;
		var m__23;
		var m__13;
		var m__03;
		var m__32;
		var m__12;
		var m__02;
		var m__31;
		var m__21;
		var m__11;
		var m__01;
		var m__30;
		var m__10;
		var _this__33;
		var _this__23;
		var _this__13;
		var _this__03;
		var _this__32;
		var _this__22;
		var _this__12;
		var _this__02;
		var _this__31;
		var _this__21;
		var _this__30;
		var _this__20;
		var _this__10;
		if(this.theta > Math.PI / 2) {
			this.theta = -Math.PI / 2;
		}
		var alpha = this;
		var alpha1 = alpha.theta += Math.PI / 100;
		var ca = Math.cos(alpha1);
		var sa = Math.sin(alpha1);
		_this__10 = -sa;
		_this__20 = 0;
		_this__30 = 0;
		_this__21 = 0;
		_this__31 = 0;
		_this__02 = 0;
		_this__12 = 0;
		_this__22 = 1;
		_this__32 = 0;
		_this__03 = 0;
		_this__13 = 0;
		_this__23 = 0;
		_this__33 = 1;
		var alpha2 = this.theta;
		var ca1 = Math.cos(alpha2);
		var sa1 = Math.sin(alpha2);
		m__10 = 0;
		m__30 = 0;
		m__01 = 0;
		m__11 = 1;
		m__21 = 0;
		m__31 = 0;
		m__02 = -sa1;
		m__12 = 0;
		m__32 = 0;
		m__03 = 0;
		m__13 = 0;
		m__23 = 0;
		m__33 = 1;
		return new khaMath_Matrix4(ca * ca1 + _this__10 * m__01 + _this__20 * m__02 + _this__30 * m__03,ca * m__10 + _this__10 * m__11 + _this__20 * m__12 + _this__30 * m__13,ca * sa1 + _this__10 * m__21 + _this__20 * ca1 + _this__30 * m__23,ca * m__30 + _this__10 * m__31 + _this__20 * m__32 + _this__30 * m__33,sa * ca1 + ca * m__01 + _this__21 * m__02 + _this__31 * m__03,sa * m__10 + ca * m__11 + _this__21 * m__12 + _this__31 * m__13,sa * sa1 + ca * m__21 + _this__21 * ca1 + _this__31 * m__23,sa * m__30 + ca * m__31 + _this__21 * m__32 + _this__31 * m__33,_this__02 * ca1 + _this__12 * m__01 + _this__22 * m__02 + _this__32 * m__03,_this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12 + _this__32 * m__13,_this__02 * sa1 + _this__12 * m__21 + _this__22 * ca1 + _this__32 * m__23,_this__02 * m__30 + _this__12 * m__31 + _this__22 * m__32 + _this__32 * m__33,_this__03 * ca1 + _this__13 * m__01 + _this__23 * m__02 + _this__33 * m__03,_this__03 * m__10 + _this__13 * m__11 + _this__23 * m__12 + _this__33 * m__13,_this__03 * sa1 + _this__13 * m__21 + _this__23 * ca1 + _this__33 * m__23,_this__03 * m__30 + _this__13 * m__31 + _this__23 * m__32 + _this__33 * m__33);
	}
	,findColorID: function(col) {
		return this.appColors.indexOf(col);
	}
	,addShapes: function() {
		var tp_t1;
		var tp_t0;
		var tp_t11;
		var tp_t01;
		var tp_t12;
		var tp_t02;
		var tp_t13;
		var tp_t03;
		var tp_t14;
		var tp_t04;
		var tp_t15;
		var tp_t05;
		var tp_t16;
		var tp_t06;
		var q_D;
		var q_C;
		var q_B;
		var q_A;
		var dim_y;
		var P_x;
		var p1_y;
		var p1_x;
		var shapes = new trilateral_helper_Shapes(this.triangles,this.appColors);
		var x = (this.bottomLeft.x + this.centre.x) / 2;
		var y = (this.bottomLeft.y + this.centre.y) / 2;
		var this1 = shapes.triangles;
		var id = shapes.refCount++;
		var pi = Math.PI;
		var omega = -pi;
		var a0x = x + 80 * Math.sin(omega);
		var a0y = y + 80 * Math.cos(omega);
		omega += pi / 3;
		var a1x = x + 80 * Math.sin(omega);
		var a1y = y + 80 * Math.cos(omega);
		omega += pi / 3;
		var b0x = x + 80 * Math.sin(omega);
		var b0y = y + 80 * Math.cos(omega);
		omega += pi / 3;
		var b1x = x + 80 * Math.sin(omega);
		var b1y = y + 80 * Math.cos(omega);
		omega += pi / 3;
		var c0x = x + 80 * Math.sin(omega);
		var c0y = y + 80 * Math.cos(omega);
		omega += pi / 3;
		var c1x = x + 80 * Math.sin(omega);
		var c1y = y + 80 * Math.cos(omega);
		var tri = { t0 : new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y), t1 : new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y)};
		var colorID = shapes.colors.indexOf(16744192);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		var x1 = (this.topLeft.x + this.centre.x) / 2;
		var y1 = (this.topLeft.y + this.centre.y) / 2;
		var this2 = shapes.triangles;
		var id1 = shapes.refCount++;
		var theta = Math.PI / 4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		if(theta != 0) {
			var pi1 = Math.PI;
			var pi4 = pi1 / 4;
			var r = 56. * Math.sqrt(2);
			var aTheta = -pi1 + theta - pi4;
			var dTheta = -pi1 + theta + pi1 / 2 - pi1 / 4;
			var cTheta = theta - pi4;
			var bTheta = -pi1 + theta - pi1 / 2 - pi4;
			ax = x1 + r * Math.sin(aTheta);
			ay = y1 + r * Math.cos(aTheta);
			bx = x1 + r * Math.sin(bTheta);
			by = y1 + r * Math.cos(bTheta);
			cx = x1 + r * Math.sin(cTheta);
			cy = y1 + r * Math.cos(cTheta);
			dx = x1 + r * Math.sin(dTheta);
			dy = y1 + r * Math.cos(dTheta);
		} else {
			ax = x1 - 56.;
			ay = y1 - 56.;
			bx = ax + 112.;
			by = ay;
			cx = bx;
			cy = ay + 112.;
			dx = ax;
			dy = cy;
		}
		var tri3 = { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
		var colorID1 = shapes.colors.indexOf(16776960);
		var tri4 = tri3.t0;
		var t2 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t2.id = id1;
		t2.ax = tri4.ax;
		t2.ay = tri4.ay;
		t2.bx = tri4.bx;
		t2.by = tri4.by;
		t2.cx = tri4.cx;
		t2.cy = tri4.cy;
		t2.mark = tri4.mark;
		t2.depth = 0;
		t2.alpha = 1.;
		t2.colorID = colorID1;
		t2.colorA = colorID1;
		t2.colorB = colorID1;
		t2.colorC = colorID1;
		t2.windingAdjusted = tri4.windingAdjusted;
		this2[this2.length] = t2;
		var tri5 = tri3.t1;
		var t3 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t3.id = id1;
		t3.ax = tri5.ax;
		t3.ay = tri5.ay;
		t3.bx = tri5.bx;
		t3.by = tri5.by;
		t3.cx = tri5.cx;
		t3.cy = tri5.cy;
		t3.mark = tri5.mark;
		t3.depth = 0;
		t3.alpha = 1.;
		t3.colorID = colorID1;
		t3.colorA = colorID1;
		t3.colorB = colorID1;
		t3.colorC = colorID1;
		t3.windingAdjusted = tri5.windingAdjusted;
		this2[this2.length] = t3;
		var x2 = (this.topLeft.x + this.centre.x) / 2;
		var y2 = (this.topLeft.y + this.centre.y) / 2;
		var this3 = shapes.triangles;
		var id2 = shapes.refCount++;
		var theta1 = Math.PI / 4;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var ax1 = 0.;
		var ay1 = 0.;
		var bx1 = 0.;
		var by1 = 0.;
		var cx1 = 0.;
		var cy1 = 0.;
		var dx1 = 0.;
		var dy1 = 0.;
		var a0x1 = 0.;
		var a0y1 = 0.;
		var b0x1 = 0.;
		var b0y1 = 0.;
		var c0x1 = 0.;
		var c0y1 = 0.;
		var d0x = 0.;
		var d0y = 0.;
		if(theta1 != 0) {
			var pi2 = Math.PI;
			var pi41 = pi2 / 4;
			var r1 = 56. * Math.sqrt(2);
			var aTheta1 = -pi2 + theta1 - pi41;
			var dTheta1 = -pi2 + theta1 + pi2 / 2 - pi2 / 4;
			var cTheta1 = theta1 - pi41;
			var bTheta1 = -pi2 + theta1 - pi2 / 2 - pi41;
			var $as = Math.sin(aTheta1);
			var ac = Math.cos(aTheta1);
			var bs = Math.sin(bTheta1);
			var bc = Math.cos(bTheta1);
			var cs = Math.sin(cTheta1);
			var cc = Math.cos(cTheta1);
			var ds = Math.sin(dTheta1);
			var dc = Math.cos(dTheta1);
			var r0 = r1 - 6;
			ax1 = x2 + r1 * $as;
			ay1 = y2 + r1 * ac;
			bx1 = x2 + r1 * bs;
			by1 = y2 + r1 * bc;
			cx1 = x2 + r1 * cs;
			cy1 = y2 + r1 * cc;
			dx1 = x2 + r1 * ds;
			dy1 = y2 + r1 * dc;
			a0x1 = x2 + r0 * $as;
			a0y1 = y2 + r0 * ac;
			b0x1 = x2 + r0 * bs;
			b0y1 = y2 + r0 * bc;
			c0x1 = x2 + r0 * cs;
			c0y1 = y2 + r0 * cc;
			d0x = x2 + r0 * ds;
			d0y = y2 + r0 * dc;
		} else {
			ax1 = x2 - 56.;
			ay1 = y2 - 56.;
			bx1 = ax1 + 112.;
			by1 = ay1;
			cx1 = bx1;
			cy1 = ay1 + 112.;
			dx1 = ax1;
			dy1 = cy1;
			a0x1 = x2 - 50.;
			a0y1 = y2 - 50.;
			b0x1 = a0x1 + 100.;
			b0y1 = a0y1;
			c0x1 = b0x1;
			c0y1 = a0y1 + 100.;
			d0x = a0x1;
			d0y = c0y1;
		}
		var tri6 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,a0x1,a0y1);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(bx1,by1,b0x1,b0y1,a0x1,a0y1);
		out[out.length] = tri7;
		var tri8 = new trilateral_tri_Trilateral(d0x,d0y,c0x1,c0y1,dx1,dy1);
		out[out.length] = tri8;
		var tri9 = new trilateral_tri_Trilateral(c0x1,c0y1,cx1,cy1,dx1,dy1);
		out[out.length] = tri9;
		var tri10 = new trilateral_tri_Trilateral(ax1,ay1,a0x1,a0y1,d0x,d0y);
		out[out.length] = tri10;
		var tri11 = new trilateral_tri_Trilateral(ax1,ay1,d0x,d0y,dx1,dy1);
		out[out.length] = tri11;
		var tri12 = new trilateral_tri_Trilateral(b0x1,b0y1,bx1,by1,c0x1,c0y1);
		out[out.length] = tri12;
		var tri13 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,c0x1,c0y1);
		out[out.length] = tri13;
		var triArr = out;
		var colorID2 = shapes.colors.indexOf(3355443);
		var _g = 0;
		while(_g < triArr.length) {
			var t4 = triArr[_g];
			++_g;
			if(t4 != null) {
				var t5 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t5.id = id2;
				t5.ax = t4.ax;
				t5.ay = t4.ay;
				t5.bx = t4.bx;
				t5.by = t4.by;
				t5.cx = t4.cx;
				t5.cy = t4.cy;
				t5.mark = t4.mark;
				t5.depth = 0;
				t5.alpha = 1.;
				t5.colorID = colorID2;
				t5.colorA = colorID2;
				t5.colorB = colorID2;
				t5.colorC = colorID2;
				t5.windingAdjusted = t4.windingAdjusted;
				this3[this3.length] = t5;
			}
		}
		var this4 = shapes.triangles;
		var id3 = shapes.refCount++;
		var ax2 = 0.;
		var ay2 = 0.;
		var bx2 = 0.;
		var by2 = 0.;
		var cx2 = 0.;
		var cy2 = 0.;
		var dx2 = 0.;
		var dy2 = 0.;
		ax2 = (this.bottomRight.x + this.centre.x) / 2 - 56.;
		ay2 = (this.bottomRight.y + this.centre.y) / 2 - 56.;
		bx2 = ax2 + 112.;
		by2 = ay2;
		cx2 = bx2;
		cy2 = ay2 + 112.;
		dx2 = ax2;
		dy2 = cy2;
		var tri14 = { t0 : new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2), t1 : new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2)};
		var colorID3 = shapes.colors.indexOf(65280);
		var tri15 = tri14.t0;
		var t6 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t6.id = id3;
		t6.ax = tri15.ax;
		t6.ay = tri15.ay;
		t6.bx = tri15.bx;
		t6.by = tri15.by;
		t6.cx = tri15.cx;
		t6.cy = tri15.cy;
		t6.mark = tri15.mark;
		t6.depth = 0;
		t6.alpha = 1.;
		t6.colorID = colorID3;
		t6.colorA = colorID3;
		t6.colorB = colorID3;
		t6.colorC = colorID3;
		t6.windingAdjusted = tri15.windingAdjusted;
		this4[this4.length] = t6;
		var tri16 = tri14.t1;
		var t7 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t7.id = id3;
		t7.ax = tri16.ax;
		t7.ay = tri16.ay;
		t7.bx = tri16.bx;
		t7.by = tri16.by;
		t7.cx = tri16.cx;
		t7.cy = tri16.cy;
		t7.mark = tri16.mark;
		t7.depth = 0;
		t7.alpha = 1.;
		t7.colorID = colorID3;
		t7.colorA = colorID3;
		t7.colorB = colorID3;
		t7.colorC = colorID3;
		t7.windingAdjusted = tri16.windingAdjusted;
		this4[this4.length] = t7;
		var x3 = (this.bottomRight.x + this.centre.x) / 2;
		var y3 = (this.bottomRight.y + this.centre.y) / 2;
		var this5 = shapes.triangles;
		var id4 = shapes.refCount++;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var ax3 = 0.;
		var ay3 = 0.;
		var bx3 = 0.;
		var by3 = 0.;
		var cx3 = 0.;
		var cy3 = 0.;
		var dx3 = 0.;
		var dy3 = 0.;
		var a0x2 = 0.;
		var a0y2 = 0.;
		var b0x2 = 0.;
		var b0y2 = 0.;
		var c0x2 = 0.;
		var c0y2 = 0.;
		var d0x1 = 0.;
		var d0y1 = 0.;
		ax3 = x3 - 56.;
		ay3 = y3 - 56.;
		bx3 = ax3 + 112.;
		by3 = ay3;
		cx3 = bx3;
		cy3 = ay3 + 112.;
		dx3 = ax3;
		dy3 = cy3;
		a0x2 = x3 - 50.;
		a0y2 = y3 - 50.;
		b0x2 = a0x2 + 100.;
		b0y2 = a0y2;
		c0x2 = b0x2;
		c0y2 = a0y2 + 100.;
		d0x1 = a0x2;
		d0y1 = c0y2;
		var tri17 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,a0x2,a0y2);
		out1[out1.length] = tri17;
		var tri18 = new trilateral_tri_Trilateral(bx3,by3,b0x2,b0y2,a0x2,a0y2);
		out1[out1.length] = tri18;
		var tri19 = new trilateral_tri_Trilateral(d0x1,d0y1,c0x2,c0y2,dx3,dy3);
		out1[out1.length] = tri19;
		var tri20 = new trilateral_tri_Trilateral(c0x2,c0y2,cx3,cy3,dx3,dy3);
		out1[out1.length] = tri20;
		var tri21 = new trilateral_tri_Trilateral(ax3,ay3,a0x2,a0y2,d0x1,d0y1);
		out1[out1.length] = tri21;
		var tri22 = new trilateral_tri_Trilateral(ax3,ay3,d0x1,d0y1,dx3,dy3);
		out1[out1.length] = tri22;
		var tri23 = new trilateral_tri_Trilateral(b0x2,b0y2,bx3,by3,c0x2,c0y2);
		out1[out1.length] = tri23;
		var tri24 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,c0x2,c0y2);
		out1[out1.length] = tri24;
		var triArr1 = out1;
		var colorID4 = shapes.colors.indexOf(3355443);
		var _g1 = 0;
		while(_g1 < triArr1.length) {
			var t8 = triArr1[_g1];
			++_g1;
			if(t8 != null) {
				var t9 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t9.id = id4;
				t9.ax = t8.ax;
				t9.ay = t8.ay;
				t9.bx = t8.bx;
				t9.by = t8.by;
				t9.cx = t8.cx;
				t9.cy = t8.cy;
				t9.mark = t8.mark;
				t9.depth = 0;
				t9.alpha = 1.;
				t9.colorID = colorID4;
				t9.colorA = colorID4;
				t9.colorB = colorID4;
				t9.colorC = colorID4;
				t9.windingAdjusted = t8.windingAdjusted;
				this5[this5.length] = t9;
			}
		}
		var x4 = this.centre.x - 100;
		var y4 = this.centre.y - 50;
		var this6 = shapes.triangles;
		var id5 = shapes.refCount++;
		var bx4 = x4 + 160;
		var cy4 = y4 + 80;
		var tri25 = { t0 : new trilateral_tri_Trilateral(x4,y4,bx4,y4,x4,cy4), t1 : new trilateral_tri_Trilateral(bx4,y4,bx4,cy4,x4,cy4)};
		var colorID5 = shapes.colors.indexOf(255);
		var tri26 = tri25.t0;
		var t10 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t10.id = id5;
		t10.ax = tri26.ax;
		t10.ay = tri26.ay;
		t10.bx = tri26.bx;
		t10.by = tri26.by;
		t10.cx = tri26.cx;
		t10.cy = tri26.cy;
		t10.mark = tri26.mark;
		t10.depth = 0;
		t10.alpha = 1.;
		t10.colorID = colorID5;
		t10.colorA = colorID5;
		t10.colorB = colorID5;
		t10.colorC = colorID5;
		t10.windingAdjusted = tri26.windingAdjusted;
		this6[this6.length] = t10;
		var tri27 = tri25.t1;
		var t11 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t11.id = id5;
		t11.ax = tri27.ax;
		t11.ay = tri27.ay;
		t11.bx = tri27.bx;
		t11.by = tri27.by;
		t11.cx = tri27.cx;
		t11.cy = tri27.cy;
		t11.mark = tri27.mark;
		t11.depth = 0;
		t11.alpha = 1.;
		t11.colorID = colorID5;
		t11.colorA = colorID5;
		t11.colorB = colorID5;
		t11.colorC = colorID5;
		t11.windingAdjusted = tri27.windingAdjusted;
		this6[this6.length] = t11;
		var x5 = (this.topRight.x + this.centre.x) / 2;
		var y5 = (this.topRight.y + this.centre.y) / 2;
		var this7 = shapes.triangles;
		var id6 = shapes.refCount++;
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi3 = Math.PI;
		var theta2 = pi3 / 2;
		var step = pi3 * 2 / 36;
		var bx5;
		var by4;
		var cx4;
		var cy5;
		var _g11 = 0;
		while(_g11 < 36) {
			++_g11;
			bx5 = x5 + 80 * Math.sin(theta2);
			by4 = y5 + 80 * Math.cos(theta2);
			theta2 += step;
			cx4 = x5 + 80 * Math.sin(theta2);
			cy5 = y5 + 80 * Math.cos(theta2);
			var tri28 = new trilateral_tri_Trilateral(x5,y5,bx5,by4,cx4,cy5);
			out2[out2.length] = tri28;
		}
		var triArr2 = out2;
		var colorID6 = shapes.colors.indexOf(4915330);
		var _g2 = 0;
		while(_g2 < triArr2.length) {
			var t12 = triArr2[_g2];
			++_g2;
			if(t12 != null) {
				var t13 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t13.id = id6;
				t13.ax = t12.ax;
				t13.ay = t12.ay;
				t13.bx = t12.bx;
				t13.by = t12.by;
				t13.cx = t12.cx;
				t13.cy = t12.cy;
				t13.mark = t12.mark;
				t13.depth = 0;
				t13.alpha = 1.;
				t13.colorID = colorID6;
				t13.colorA = colorID6;
				t13.colorB = colorID6;
				t13.colorC = colorID6;
				t13.windingAdjusted = t12.windingAdjusted;
				this7[this7.length] = t13;
			}
		}
		var x6 = this.centre.x;
		var y6 = this.centre.y;
		var color = 16711680;
		var theta3 = 0.;
		var line;
		var wid = 0.08;
		var _g12 = 0;
		while(_g12 < 60) {
			++_g12;
			p1_x = x6 + 15 * Math.sin(theta3);
			p1_y = y6 + 15 * Math.cos(theta3);
			theta3 += Math.PI * 2 / 60;
			var width = wid += 0.05;
			var dx4 = x6 - p1_x;
			var dy4 = y6 - p1_y;
			P_x = x6 - width / 2;
			var omega1 = Math.atan2(dy4,dx4);
			dim_y = dx4 * dx4 + dy4 * dy4;
			var pivotX = x6 + width / 2;
			var A_ = { x : P_x, y : y6};
			var B_ = { x : P_x + width, y : y6};
			var C_ = { x : P_x + width, y : y6 + dim_y};
			var D_ = { x : P_x, y : y6 + dim_y};
			if(omega1 != 0.) {
				var sin = Math.sin(omega1);
				var cos = Math.cos(omega1);
				var px = A_.x - pivotX;
				var py = A_.y - y6;
				var px2 = px * cos - py * sin;
				py = py * cos + px * sin;
				A_ = { x : px2 + pivotX, y : py + y6};
				var px1 = B_.x - pivotX;
				var py1 = B_.y - y6;
				var px21 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				B_ = { x : px21 + pivotX, y : py1 + y6};
				var px3 = C_.x - pivotX;
				var py2 = C_.y - y6;
				var px22 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				C_ = { x : px22 + pivotX, y : py2 + y6};
				var px4 = D_.x - pivotX;
				var py3 = D_.y - y6;
				var px23 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				D_ = { x : px23 + pivotX, y : py3 + y6};
			}
			q_A = A_;
			q_B = B_;
			q_C = C_;
			q_D = D_;
			line = { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
			var this8 = shapes.triangles;
			var id7 = shapes.refCount;
			var colorID7 = shapes.colors.indexOf(color);
			var tri29 = line.t0;
			var t14 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t14.id = id7;
			t14.ax = tri29.ax;
			t14.ay = tri29.ay;
			t14.bx = tri29.bx;
			t14.by = tri29.by;
			t14.cx = tri29.cx;
			t14.cy = tri29.cy;
			t14.mark = tri29.mark;
			t14.depth = 0;
			t14.alpha = 1.;
			t14.colorID = colorID7;
			t14.colorA = colorID7;
			t14.colorB = colorID7;
			t14.colorC = colorID7;
			t14.windingAdjusted = tri29.windingAdjusted;
			this8[this8.length] = t14;
			var tri30 = line.t1;
			var t15 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t15.id = id7;
			t15.ax = tri30.ax;
			t15.ay = tri30.ay;
			t15.bx = tri30.bx;
			t15.by = tri30.by;
			t15.cx = tri30.cx;
			t15.cy = tri30.cy;
			t15.mark = tri30.mark;
			t15.depth = 0;
			t15.alpha = 1.;
			t15.colorID = colorID7;
			t15.colorA = colorID7;
			t15.colorB = colorID7;
			t15.colorC = colorID7;
			t15.windingAdjusted = tri30.windingAdjusted;
			this8[this8.length] = t15;
		}
		shapes.refCount++;
		var x7 = this.topLeft.x - 80;
		var y7 = (this.topLeft.y + this.bottomLeft.y) / 2 - 40.;
		var width1 = 160;
		var this9 = shapes.triangles;
		var id8 = shapes.refCount++;
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi5 = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax4 = x7 + 30;
		var ay4 = y7 + 30;
		var bx6 = x7 + width1 - 30;
		var by5 = y7 + 30;
		var cy6 = y7 + 80 - 30;
		var bx7 = ax4 + (width1 - 60);
		var cy7 = y7 + 80;
		tp_t06 = new trilateral_tri_Trilateral(ax4,y7,bx7,y7,ax4,cy7);
		tp_t16 = new trilateral_tri_Trilateral(bx7,y7,bx7,cy7,ax4,cy7);
		out3[out3.length] = tp_t06;
		out3[out3.length] = tp_t16;
		var dimY = 20;
		var bx8 = x7 + 30;
		var cy8 = ay4 + dimY;
		tp_t05 = new trilateral_tri_Trilateral(x7,ay4,bx8,ay4,x7,cy8);
		tp_t15 = new trilateral_tri_Trilateral(bx8,ay4,bx8,cy8,x7,cy8);
		out3[out3.length] = tp_t05;
		out3[out3.length] = tp_t15;
		var bx9 = bx6 + 30;
		var cy9 = by5 + dimY;
		tp_t04 = new trilateral_tri_Trilateral(bx6,by5,bx9,by5,bx6,cy9);
		tp_t14 = new trilateral_tri_Trilateral(bx9,by5,bx9,cy9,bx6,cy9);
		out3[out3.length] = tp_t04;
		out3[out3.length] = tp_t14;
		var beta = -pi5;
		var gamma = -pi_2;
		var out4 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step1 = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta4 = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta4 : -theta4;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step1);
		var step2 = dif / totalSteps;
		var angle = beta;
		var cx5;
		var cy10;
		var bx10 = 0;
		var by6 = 0;
		var _g13 = 0;
		var _g3 = totalSteps + 1;
		while(_g13 < _g3) {
			cx5 = ax4 + 30 * Math.sin(angle);
			cy10 = ay4 + 30 * Math.cos(angle);
			if(_g13++ != 0) {
				var t16 = new trilateral_tri_Trilateral(ax4,ay4,bx10,by6,cx5,cy10);
				out4[out4.length] = t16;
			}
			angle += step2;
			bx10 = cx5;
			by6 = cy10;
		}
		var triArr3 = out4;
		var _g4 = 0;
		while(_g4 < triArr3.length) {
			var t17 = triArr3[_g4];
			++_g4;
			out3[out3.length] = t17;
		}
		var out5 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step3 = Math.PI * 2 / 36;
		var dif2;
		pi_2 >= 0 && pi_2 > Math.PI;
		pi5 >= 0 && pi5 > Math.PI;
		var theta5 = Math.abs(pi_2 - pi5);
		var dif3 = pi_2 < pi5 ? theta5 : -theta5;
		if(dif3 > 0) {
			dif2 = dif3;
		} else {
			dif2 = 2 * Math.PI + dif3;
		}
		var totalSteps1 = Math.ceil(Math.abs(dif2) / step3);
		var step4 = dif2 / totalSteps1;
		var angle1 = pi_2;
		var cx6;
		var cy11;
		var bx11 = 0;
		var by7 = 0;
		var _g14 = 0;
		var _g5 = totalSteps1 + 1;
		while(_g14 < _g5) {
			cx6 = bx6 + 30 * Math.sin(angle1);
			cy11 = by5 + 30 * Math.cos(angle1);
			if(_g14++ != 0) {
				var t18 = new trilateral_tri_Trilateral(bx6,by5,bx11,by7,cx6,cy11);
				out5[out5.length] = t18;
			}
			angle1 += step4;
			bx11 = cx6;
			by7 = cy11;
		}
		var triArr4 = out5;
		var _g6 = 0;
		while(_g6 < triArr4.length) {
			var t19 = triArr4[_g6];
			++_g6;
			out3[out3.length] = t19;
		}
		var out6 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step5 = Math.PI * 2 / 36;
		var dif4;
		pi_2 >= 0 && pi_2 > Math.PI;
		var theta6 = Math.abs(pi_2);
		var dif5 = pi_2 < 0 ? theta6 : -theta6;
		if(dif5 < 0) {
			dif4 = dif5;
		} else {
			dif4 = -2 * Math.PI + dif5;
		}
		var totalSteps2 = Math.ceil(Math.abs(dif4) / step5);
		var step6 = dif4 / totalSteps2;
		var angle2 = pi_2;
		var cx7;
		var cy12;
		var bx12 = 0;
		var by8 = 0;
		var _g15 = 0;
		var _g7 = totalSteps2 + 1;
		while(_g15 < _g7) {
			cx7 = bx6 + 30 * Math.sin(angle2);
			cy12 = cy6 + 30 * Math.cos(angle2);
			if(_g15++ != 0) {
				var t20 = new trilateral_tri_Trilateral(bx6,cy6,bx12,by8,cx7,cy12);
				out6[out6.length] = t20;
			}
			angle2 += step6;
			bx12 = cx7;
			by8 = cy12;
		}
		var triArr5 = out6;
		var _g8 = 0;
		while(_g8 < triArr5.length) {
			var t21 = triArr5[_g8];
			++_g8;
			out3[out3.length] = t21;
		}
		var gamma1 = -pi_2;
		var out7 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step7 = Math.PI * 2 / 36;
		var dif6;
		gamma1 >= 0 && gamma1 > Math.PI;
		var theta7 = Math.abs(0 - gamma1);
		var dif7 = 0 < gamma1 ? theta7 : -theta7;
		if(dif7 < 0) {
			dif6 = dif7;
		} else {
			dif6 = -2 * Math.PI + dif7;
		}
		var totalSteps3 = Math.ceil(Math.abs(dif6) / step7);
		var step8 = dif6 / totalSteps3;
		var angle3 = 0;
		var cx8;
		var cy13;
		var bx13 = 0;
		var by9 = 0;
		var _g16 = 0;
		var _g9 = totalSteps3 + 1;
		while(_g16 < _g9) {
			cx8 = ax4 + 30 * Math.sin(angle3);
			cy13 = cy6 + 30 * Math.cos(angle3);
			if(_g16++ != 0) {
				var t22 = new trilateral_tri_Trilateral(ax4,cy6,bx13,by9,cx8,cy13);
				out7[out7.length] = t22;
			}
			angle3 += step8;
			bx13 = cx8;
			by9 = cy13;
		}
		var triArr6 = out7;
		var _g10 = 0;
		while(_g10 < triArr6.length) {
			var t23 = triArr6[_g10];
			++_g10;
			out3[out3.length] = t23;
		}
		var triArr7 = out3;
		var colorID8 = shapes.colors.indexOf(9699539);
		var _g17 = 0;
		while(_g17 < triArr7.length) {
			var t24 = triArr7[_g17];
			++_g17;
			if(t24 != null) {
				var t25 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t25.id = id8;
				t25.ax = t24.ax;
				t25.ay = t24.ay;
				t25.bx = t24.bx;
				t25.by = t24.by;
				t25.cx = t24.cx;
				t25.cy = t24.cy;
				t25.mark = t24.mark;
				t25.depth = 0;
				t25.alpha = 1.;
				t25.colorID = colorID8;
				t25.colorA = colorID8;
				t25.colorB = colorID8;
				t25.colorC = colorID8;
				t25.windingAdjusted = t24.windingAdjusted;
				this9[this9.length] = t25;
			}
		}
		var x8 = this.topLeft.x - 80;
		var y8 = (this.topLeft.y + this.bottomLeft.y) / 2 - 40.;
		var width2 = 160;
		var this10 = shapes.triangles;
		var id9 = shapes.refCount++;
		var out8 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi6 = Math.PI;
		var pi_21 = Math.PI / 2;
		var ax5 = x8 + 30;
		var ay5 = y8 + 30;
		var bx14 = x8 + width2 - 30;
		var by10 = y8 + 30;
		var cy14 = y8 + 80 - 30;
		var bx15 = ax5 + (width2 - 60);
		var cy15 = y8 + 6;
		tp_t03 = new trilateral_tri_Trilateral(ax5,y8,bx15,y8,ax5,cy15);
		tp_t13 = new trilateral_tri_Trilateral(bx15,y8,bx15,cy15,ax5,cy15);
		out8[out8.length] = tp_t03;
		out8[out8.length] = tp_t13;
		var ay6 = y8 + 80 - 6;
		var bx16 = ax5 + (width2 - 60);
		var cy16 = ay6 + 6;
		tp_t02 = new trilateral_tri_Trilateral(ax5,ay6,bx16,ay6,ax5,cy16);
		tp_t12 = new trilateral_tri_Trilateral(bx16,ay6,bx16,cy16,ax5,cy16);
		out8[out8.length] = tp_t02;
		out8[out8.length] = tp_t12;
		var dimY1 = 20;
		var bx17 = x8 + 6;
		var cy17 = ay5 + dimY1;
		tp_t01 = new trilateral_tri_Trilateral(x8,ay5,bx17,ay5,x8,cy17);
		tp_t11 = new trilateral_tri_Trilateral(bx17,ay5,bx17,cy17,x8,cy17);
		out8[out8.length] = tp_t01;
		out8[out8.length] = tp_t11;
		var x9 = x8 + width2 - 6;
		var bx18 = x9 + 6;
		var cy18 = by10 + dimY1;
		tp_t0 = new trilateral_tri_Trilateral(x9,by10,bx18,by10,x9,cy18);
		tp_t1 = new trilateral_tri_Trilateral(bx18,by10,bx18,cy18,x9,cy18);
		out8[out8.length] = tp_t0;
		out8[out8.length] = tp_t1;
		var beta1 = -pi6;
		var gamma2 = -pi_21;
		var out9 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step9 = Math.PI * 2 / 36;
		var dif8;
		beta1 >= 0 && beta1 > Math.PI;
		gamma2 >= 0 && gamma2 > Math.PI;
		var theta8 = Math.abs(beta1 - gamma2);
		var dif9 = beta1 < gamma2 ? theta8 : -theta8;
		if(dif9 > 0) {
			dif8 = dif9;
		} else {
			dif8 = 2 * Math.PI + dif9;
		}
		var totalSteps4 = Math.ceil(Math.abs(dif8) / step9);
		var step10 = dif8 / totalSteps4;
		var angle4 = beta1;
		var cx9;
		var cy19;
		var bx19 = 0;
		var by11 = 0;
		var dx5 = 0;
		var dy5 = 0;
		var ex = 0;
		var ey = 0;
		var r2 = 24;
		var _g18 = 0;
		var _g19 = totalSteps4 + 1;
		while(_g18 < _g19) {
			cx9 = ax5 + 30 * Math.sin(angle4);
			cy19 = ay5 + 30 * Math.cos(angle4);
			ex = ax5 + r2 * Math.sin(angle4);
			ey = ay5 + r2 * Math.cos(angle4);
			if(_g18++ != 0) {
				var t0 = new trilateral_tri_Trilateral(dx5,dy5,bx19,by11,cx9,cy19);
				var t110 = new trilateral_tri_Trilateral(dx5,dy5,cx9,cy19,ex,ey);
				out9[out9.length] = t0;
				out9[out9.length] = t110;
			}
			angle4 += step10;
			bx19 = cx9;
			by11 = cy19;
			dx5 = ex;
			dy5 = ey;
		}
		var triArr8 = out9;
		var _g20 = 0;
		while(_g20 < triArr8.length) {
			var t26 = triArr8[_g20];
			++_g20;
			out8[out8.length] = t26;
		}
		var out10 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step11 = Math.PI * 2 / 36;
		var dif10;
		pi_21 >= 0 && pi_21 > Math.PI;
		pi6 >= 0 && pi6 > Math.PI;
		var theta9 = Math.abs(pi_21 - pi6);
		var dif11 = pi_21 < pi6 ? theta9 : -theta9;
		if(dif11 > 0) {
			dif10 = dif11;
		} else {
			dif10 = 2 * Math.PI + dif11;
		}
		var totalSteps5 = Math.ceil(Math.abs(dif10) / step11);
		var step12 = dif10 / totalSteps5;
		var angle5 = pi_21;
		var cx10;
		var cy20;
		var bx20 = 0;
		var by12 = 0;
		var dx6 = 0;
		var dy6 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = 24;
		var _g110 = 0;
		var _g21 = totalSteps5 + 1;
		while(_g110 < _g21) {
			cx10 = bx14 + 30 * Math.sin(angle5);
			cy20 = by10 + 30 * Math.cos(angle5);
			ex1 = bx14 + r21 * Math.sin(angle5);
			ey1 = by10 + r21 * Math.cos(angle5);
			if(_g110++ != 0) {
				var t01 = new trilateral_tri_Trilateral(dx6,dy6,bx20,by12,cx10,cy20);
				var t111 = new trilateral_tri_Trilateral(dx6,dy6,cx10,cy20,ex1,ey1);
				out10[out10.length] = t01;
				out10[out10.length] = t111;
			}
			angle5 += step12;
			bx20 = cx10;
			by12 = cy20;
			dx6 = ex1;
			dy6 = ey1;
		}
		var triArr9 = out10;
		var _g22 = 0;
		while(_g22 < triArr9.length) {
			var t27 = triArr9[_g22];
			++_g22;
			out8[out8.length] = t27;
		}
		var out11 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step13 = Math.PI * 2 / 36;
		var dif12;
		pi_21 >= 0 && pi_21 > Math.PI;
		var theta10 = Math.abs(pi_21);
		var dif13 = pi_21 < 0 ? theta10 : -theta10;
		if(dif13 < 0) {
			dif12 = dif13;
		} else {
			dif12 = -2 * Math.PI + dif13;
		}
		var totalSteps6 = Math.ceil(Math.abs(dif12) / step13);
		var step14 = dif12 / totalSteps6;
		var angle6 = pi_21;
		var cx11;
		var cy21;
		var bx21 = 0;
		var by13 = 0;
		var dx7 = 0;
		var dy7 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = 24;
		var _g111 = 0;
		var _g23 = totalSteps6 + 1;
		while(_g111 < _g23) {
			cx11 = bx14 + 30 * Math.sin(angle6);
			cy21 = cy14 + 30 * Math.cos(angle6);
			ex2 = bx14 + r22 * Math.sin(angle6);
			ey2 = cy14 + r22 * Math.cos(angle6);
			if(_g111++ != 0) {
				var t02 = new trilateral_tri_Trilateral(dx7,dy7,bx21,by13,cx11,cy21);
				var t112 = new trilateral_tri_Trilateral(dx7,dy7,cx11,cy21,ex2,ey2);
				out11[out11.length] = t02;
				out11[out11.length] = t112;
			}
			angle6 += step14;
			bx21 = cx11;
			by13 = cy21;
			dx7 = ex2;
			dy7 = ey2;
		}
		var triArr10 = out11;
		var _g24 = 0;
		while(_g24 < triArr10.length) {
			var t28 = triArr10[_g24];
			++_g24;
			out8[out8.length] = t28;
		}
		var gamma3 = -pi_21;
		var out12 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step15 = Math.PI * 2 / 36;
		var dif14;
		gamma3 >= 0 && gamma3 > Math.PI;
		var theta11 = Math.abs(0 - gamma3);
		var dif15 = 0 < gamma3 ? theta11 : -theta11;
		if(dif15 < 0) {
			dif14 = dif15;
		} else {
			dif14 = -2 * Math.PI + dif15;
		}
		var totalSteps7 = Math.ceil(Math.abs(dif14) / step15);
		var step16 = dif14 / totalSteps7;
		var angle7 = 0;
		var cx12;
		var cy22;
		var bx22 = 0;
		var by14 = 0;
		var dx8 = 0;
		var dy8 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = 24;
		var _g112 = 0;
		var _g25 = totalSteps7 + 1;
		while(_g112 < _g25) {
			cx12 = ax5 + 30 * Math.sin(angle7);
			cy22 = cy14 + 30 * Math.cos(angle7);
			ex3 = ax5 + r23 * Math.sin(angle7);
			ey3 = cy14 + r23 * Math.cos(angle7);
			if(_g112++ != 0) {
				var t03 = new trilateral_tri_Trilateral(dx8,dy8,bx22,by14,cx12,cy22);
				var t113 = new trilateral_tri_Trilateral(dx8,dy8,cx12,cy22,ex3,ey3);
				out12[out12.length] = t03;
				out12[out12.length] = t113;
			}
			angle7 += step16;
			bx22 = cx12;
			by14 = cy22;
			dx8 = ex3;
			dy8 = ey3;
		}
		var triArr11 = out12;
		var _g26 = 0;
		while(_g26 < triArr11.length) {
			var t29 = triArr11[_g26];
			++_g26;
			out8[out8.length] = t29;
		}
		var triArr12 = out8;
		var colorID9 = shapes.colors.indexOf(3355443);
		var _g27 = 0;
		while(_g27 < triArr12.length) {
			var t30 = triArr12[_g27];
			++_g27;
			if(t30 != null) {
				var t31 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t31.id = id9;
				t31.ax = t30.ax;
				t31.ay = t30.ay;
				t31.bx = t30.bx;
				t31.by = t30.by;
				t31.cx = t30.cx;
				t31.cy = t30.cy;
				t31.mark = t30.mark;
				t31.depth = 0;
				t31.alpha = 1.;
				t31.colorID = colorID9;
				t31.colorA = colorID9;
				t31.colorB = colorID9;
				t31.colorC = colorID9;
				t31.windingAdjusted = t30.windingAdjusted;
				this10[this10.length] = t31;
			}
		}
	}
	,addBird: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 1;
		new justPath_SvgPath(path).parse(this.bird_d,0,0,1.5,1.5);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = 6;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = 8;
				t1.colorA = 8;
				t1.colorB = 8;
				t1.colorC = 8;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
	}
	,addQuadCurve: function() {
		var path = new trilateral_path_FineOverlap(null,null,3);
		path.width = 2;
		path.widthFunction = function(width,x,y,x_,y_) {
			return width + 0.008;
		};
		new justPath_SvgPath(path).parse(this.quadtest_d,-100,300,1,1);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = 7;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = 1;
				t1.colorA = 1;
				t1.colorB = 1;
				t1.colorC = 1;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
	}
	,addCubicCurve: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 1;
		path.widthFunction = function(width,x,y,x_,y_) {
			return width + 0.008;
		};
		new justPath_SvgPath(path).parse(this.cubictest_d,-50,500,1,1);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = 7;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = 5;
				t1.colorA = 5;
				t1.colorB = 5;
				t1.colorC = 5;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
	}
	,addPaths: function() {
		this.addBird();
		this.addQuadCurve();
		this.addCubicCurve();
	}
	,addJoinTestForwards: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 20;
		path.moveTo(200,450);
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,700,450);
		}
		path.line(700,450);
		var p = path.points[path.points.length - 1];
		var l2 = p.length;
		p[l2] = 700;
		p[l2 + 1] = 450;
		var d = path.dim[path.dim.length - 1];
		if(700 < d.minX) {
			d.minX = 700;
		}
		if(700 > d.maxX) {
			d.maxX = 700;
		}
		if(450 < d.minY) {
			d.minY = 450;
		}
		if(450 > d.maxY) {
			d.maxY = 450;
		}
		path.x = 700;
		path.y = 450;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,700,700);
		}
		path.line(700,700);
		var p1 = path.points[path.points.length - 1];
		var l21 = p1.length;
		p1[l21] = 700;
		p1[l21 + 1] = 700;
		var d1 = path.dim[path.dim.length - 1];
		if(700 < d1.minX) {
			d1.minX = 700;
		}
		if(700 > d1.maxX) {
			d1.maxX = 700;
		}
		if(700 < d1.minY) {
			d1.minY = 700;
		}
		if(700 > d1.maxY) {
			d1.maxY = 700;
		}
		path.x = 700;
		path.y = 700;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,450,750);
		}
		path.line(450,750);
		var p2 = path.points[path.points.length - 1];
		var l22 = p2.length;
		p2[l22] = 450;
		p2[l22 + 1] = 750;
		var d2 = path.dim[path.dim.length - 1];
		if(450 < d2.minX) {
			d2.minX = 450;
		}
		if(450 > d2.maxX) {
			d2.maxX = 450;
		}
		if(750 < d2.minY) {
			d2.minY = 750;
		}
		if(750 > d2.maxY) {
			d2.maxY = 750;
		}
		path.x = 450;
		path.y = 750;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,450,700);
		}
		path.line(450,700);
		var p3 = path.points[path.points.length - 1];
		var l23 = p3.length;
		p3[l23] = 450;
		p3[l23 + 1] = 700;
		var d3 = path.dim[path.dim.length - 1];
		if(450 < d3.minX) {
			d3.minX = 450;
		}
		if(450 > d3.maxX) {
			d3.maxX = 450;
		}
		if(700 < d3.minY) {
			d3.minY = 700;
		}
		if(700 > d3.maxY) {
			d3.maxY = 700;
		}
		path.x = 450;
		path.y = 700;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,200,50);
		}
		path.line(200,50);
		var p4 = path.points[path.points.length - 1];
		var l24 = p4.length;
		p4[l24] = 200;
		p4[l24 + 1] = 50;
		var d4 = path.dim[path.dim.length - 1];
		if(200 < d4.minX) {
			d4.minX = 200;
		}
		if(200 > d4.maxX) {
			d4.maxX = 200;
		}
		if(50 < d4.minY) {
			d4.minY = 50;
		}
		if(50 > d4.maxY) {
			d4.maxY = 50;
		}
		path.x = 200;
		path.y = 50;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,150,450);
		}
		path.line(150,450);
		var p5 = path.points[path.points.length - 1];
		var l25 = p5.length;
		p5[l25] = 150;
		p5[l25 + 1] = 450;
		var d5 = path.dim[path.dim.length - 1];
		if(150 < d5.minX) {
			d5.minX = 150;
		}
		if(150 > d5.maxX) {
			d5.maxX = 150;
		}
		if(450 < d5.minY) {
			d5.minY = 450;
		}
		if(450 > d5.maxY) {
			d5.maxY = 450;
		}
		path.x = 150;
		path.y = 450;
		path.moveTo(0.,0.);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var colorID = this.appColors.indexOf(16744192);
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = 10;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
	}
	,addJoinTestBackwards: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 20;
		path.moveTo(150,450);
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,200,50);
		}
		path.line(200,50);
		var p = path.points[path.points.length - 1];
		var l2 = p.length;
		p[l2] = 200;
		p[l2 + 1] = 50;
		var d = path.dim[path.dim.length - 1];
		if(200 < d.minX) {
			d.minX = 200;
		}
		if(200 > d.maxX) {
			d.maxX = 200;
		}
		if(50 < d.minY) {
			d.minY = 50;
		}
		if(50 > d.maxY) {
			d.maxY = 50;
		}
		path.x = 200;
		path.y = 50;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,450,700);
		}
		path.line(450,700);
		var p1 = path.points[path.points.length - 1];
		var l21 = p1.length;
		p1[l21] = 450;
		p1[l21 + 1] = 700;
		var d1 = path.dim[path.dim.length - 1];
		if(450 < d1.minX) {
			d1.minX = 450;
		}
		if(450 > d1.maxX) {
			d1.maxX = 450;
		}
		if(700 < d1.minY) {
			d1.minY = 700;
		}
		if(700 > d1.maxY) {
			d1.maxY = 700;
		}
		path.x = 450;
		path.y = 700;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,450,750);
		}
		path.line(450,750);
		var p2 = path.points[path.points.length - 1];
		var l22 = p2.length;
		p2[l22] = 450;
		p2[l22 + 1] = 750;
		var d2 = path.dim[path.dim.length - 1];
		if(450 < d2.minX) {
			d2.minX = 450;
		}
		if(450 > d2.maxX) {
			d2.maxX = 450;
		}
		if(750 < d2.minY) {
			d2.minY = 750;
		}
		if(750 > d2.maxY) {
			d2.maxY = 750;
		}
		path.x = 450;
		path.y = 750;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,700,700);
		}
		path.line(700,700);
		var p3 = path.points[path.points.length - 1];
		var l23 = p3.length;
		p3[l23] = 700;
		p3[l23 + 1] = 700;
		var d3 = path.dim[path.dim.length - 1];
		if(700 < d3.minX) {
			d3.minX = 700;
		}
		if(700 > d3.maxX) {
			d3.maxX = 700;
		}
		if(700 < d3.minY) {
			d3.minY = 700;
		}
		if(700 > d3.maxY) {
			d3.maxY = 700;
		}
		path.x = 700;
		path.y = 700;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,700,450);
		}
		path.line(700,450);
		var p4 = path.points[path.points.length - 1];
		var l24 = p4.length;
		p4[l24] = 700;
		p4[l24 + 1] = 450;
		var d4 = path.dim[path.dim.length - 1];
		if(700 < d4.minX) {
			d4.minX = 700;
		}
		if(700 > d4.maxX) {
			d4.maxX = 700;
		}
		if(450 < d4.minY) {
			d4.minY = 450;
		}
		if(450 > d4.maxY) {
			d4.maxY = 450;
		}
		path.x = 700;
		path.y = 450;
		if(path.widthFunction != null) {
			path.width = path.widthFunction(path.width,path.x,path.x,200,450);
		}
		path.line(200,450);
		var p5 = path.points[path.points.length - 1];
		var l25 = p5.length;
		p5[l25] = 200;
		p5[l25 + 1] = 450;
		var d5 = path.dim[path.dim.length - 1];
		if(200 < d5.minX) {
			d5.minX = 200;
		}
		if(200 > d5.maxX) {
			d5.maxX = 200;
		}
		if(450 < d5.minY) {
			d5.minY = 450;
		}
		if(450 > d5.maxY) {
			d5.maxY = 450;
		}
		path.x = 200;
		path.y = 450;
		path.moveTo(0.,0.);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var colorID = this.appColors.indexOf(16744192);
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = 10;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
	}
	,pieTests: function() {
		var pieRadius = this.quarter / 3;
		var this1 = this.triangles;
		var ax = this.topLeft.x;
		var ay = this.topLeft.y;
		var beta = Math.PI;
		var gamma = Math.PI / 16;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + pieRadius * Math.sin(angle);
			cy = ay + pieRadius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			if(t1 != null) {
				var t2 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t2.id = 0;
				t2.ax = t1.ax;
				t2.ay = t1.ay;
				t2.bx = t1.bx;
				t2.by = t1.by;
				t2.cx = t1.cx;
				t2.cy = t1.cy;
				t2.mark = t1.mark;
				t2.depth = 0;
				t2.alpha = 1.;
				t2.colorID = 1;
				t2.colorA = 1;
				t2.colorB = 1;
				t2.colorC = 1;
				t2.windingAdjusted = t1.windingAdjusted;
				this1[this1.length] = t2;
			}
		}
		var this2 = this.triangles;
		var ax1 = this.topRight.x;
		var ay1 = this.topRight.y;
		var beta1 = Math.PI;
		var gamma1 = Math.PI / 16;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step2 = Math.PI * 2 / 36;
		var dif2;
		beta1 >= 0 && beta1 > Math.PI;
		gamma1 >= 0 && gamma1 > Math.PI;
		var theta1 = Math.abs(beta1 - gamma1);
		var dif3 = beta1 < gamma1 ? theta1 : -theta1;
		if(dif3 < 0) {
			dif2 = dif3;
		} else {
			dif2 = -2 * Math.PI + dif3;
		}
		var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
		var step3 = dif2 / totalSteps1;
		var angle1 = beta1;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = ax1 + pieRadius * Math.sin(angle1);
			cy1 = ay1 + pieRadius * Math.cos(angle1);
			if(_g11++ != 0) {
				var t3 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,cx1,cy1);
				out1[out1.length] = t3;
			}
			angle1 += step3;
			bx1 = cx1;
			by1 = cy1;
		}
		var triArr1 = out1;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t4 = triArr1[_g4];
			++_g4;
			if(t4 != null) {
				var t5 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t5.id = 0;
				t5.ax = t4.ax;
				t5.ay = t4.ay;
				t5.bx = t4.bx;
				t5.by = t4.by;
				t5.cx = t4.cx;
				t5.cy = t4.cy;
				t5.mark = t4.mark;
				t5.depth = 0;
				t5.alpha = 1.;
				t5.colorID = 2;
				t5.colorA = 2;
				t5.colorB = 2;
				t5.colorC = 2;
				t5.windingAdjusted = t4.windingAdjusted;
				this2[this2.length] = t5;
			}
		}
		var this3 = this.triangles;
		var ax2 = this.bottomLeft.x;
		var ay2 = this.bottomLeft.y;
		var beta2 = Math.PI;
		var gamma2 = Math.PI / 16;
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step4 = Math.PI * 2 / 36;
		var dif4;
		beta2 >= 0 && beta2 > Math.PI;
		gamma2 >= 0 && gamma2 > Math.PI;
		var theta2 = Math.abs(beta2 - gamma2);
		var clockwise = beta2 < gamma2;
		if(theta2 <= Math.PI) {
			dif4 = clockwise ? theta2 : -theta2;
		} else if(clockwise) {
			dif4 = -(2 * Math.PI - theta2);
		} else {
			dif4 = 2 * Math.PI - theta2;
		}
		var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
		var step5 = dif4 / totalSteps2;
		var angle2 = beta2;
		var cx2;
		var cy2;
		var bx2 = 0;
		var by2 = 0;
		var _g12 = 0;
		var _g5 = totalSteps2 + 1;
		while(_g12 < _g5) {
			cx2 = ax2 + pieRadius * Math.sin(angle2);
			cy2 = ay2 + pieRadius * Math.cos(angle2);
			if(_g12++ != 0) {
				var t6 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,cx2,cy2);
				out2[out2.length] = t6;
			}
			angle2 += step5;
			bx2 = cx2;
			by2 = cy2;
		}
		var triArr2 = out2;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t7 = triArr2[_g6];
			++_g6;
			if(t7 != null) {
				var t8 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t8.id = 0;
				t8.ax = t7.ax;
				t8.ay = t7.ay;
				t8.bx = t7.bx;
				t8.by = t7.by;
				t8.cx = t7.cx;
				t8.cy = t7.cy;
				t8.mark = t7.mark;
				t8.depth = 0;
				t8.alpha = 1.;
				t8.colorID = 3;
				t8.colorA = 3;
				t8.colorB = 3;
				t8.colorC = 3;
				t8.windingAdjusted = t7.windingAdjusted;
				this3[this3.length] = t8;
			}
		}
		var this4 = this.triangles;
		var ax3 = this.bottomRight.x;
		var ay3 = this.bottomRight.y;
		var beta3 = Math.PI;
		var gamma3 = Math.PI / 16;
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step6 = Math.PI * 2 / 36;
		var dif5;
		beta3 >= 0 && beta3 > Math.PI;
		gamma3 >= 0 && gamma3 > Math.PI;
		var theta3 = Math.abs(beta3 - gamma3);
		var clockwise1 = beta3 < gamma3;
		if(theta3 > Math.PI) {
			dif5 = clockwise1 ? theta3 : -theta3;
		} else if(clockwise1) {
			dif5 = -(2 * Math.PI - theta3);
		} else {
			dif5 = 2 * Math.PI - theta3;
		}
		var totalSteps3 = Math.ceil(Math.abs(dif5) / step6);
		var step7 = dif5 / totalSteps3;
		var angle3 = beta3;
		var cx3;
		var cy3;
		var bx3 = 0;
		var by3 = 0;
		var _g13 = 0;
		var _g7 = totalSteps3 + 1;
		while(_g13 < _g7) {
			cx3 = ax3 + pieRadius * Math.sin(angle3);
			cy3 = ay3 + pieRadius * Math.cos(angle3);
			if(_g13++ != 0) {
				var t9 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,cx3,cy3);
				out3[out3.length] = t9;
			}
			angle3 += step7;
			bx3 = cx3;
			by3 = cy3;
		}
		var triArr3 = out3;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t10 = triArr3[_g8];
			++_g8;
			if(t10 != null) {
				var t11 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t11.id = 0;
				t11.ax = t10.ax;
				t11.ay = t10.ay;
				t11.bx = t10.bx;
				t11.by = t10.by;
				t11.cx = t10.cx;
				t11.cy = t10.cy;
				t11.mark = t10.mark;
				t11.depth = 0;
				t11.alpha = 1.;
				t11.colorID = 4;
				t11.colorA = 4;
				t11.colorB = 4;
				t11.colorC = 4;
				t11.windingAdjusted = t10.windingAdjusted;
				this4[this4.length] = t11;
			}
		}
	}
	,pieArc: function() {
		var pieRadius = this.quarter / 3;
		var this1 = this.triangles;
		var ax = this.topLeft.x;
		var ay = this.topLeft.y;
		var radius = pieRadius + 40;
		var beta = Math.PI;
		var gamma = Math.PI / 16;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var dx = 0;
		var dy = 0;
		var ex = 0;
		var ey = 0;
		var r2 = radius - 30;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			ex = ax + r2 * Math.sin(angle);
			ey = ay + r2 * Math.cos(angle);
			if(_g1++ != 0) {
				var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
				var t1 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
				out[out.length] = t0;
				out[out.length] = t1;
			}
			angle += step1;
			bx = cx;
			by = cy;
			dx = ex;
			dy = ey;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t = triArr[_g2];
			++_g2;
			if(t != null) {
				var t2 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t2.id = 0;
				t2.ax = t.ax;
				t2.ay = t.ay;
				t2.bx = t.bx;
				t2.by = t.by;
				t2.cx = t.cx;
				t2.cy = t.cy;
				t2.mark = t.mark;
				t2.depth = 0;
				t2.alpha = 1.;
				t2.colorID = 2;
				t2.colorA = 2;
				t2.colorB = 2;
				t2.colorC = 2;
				t2.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t2;
			}
		}
		var this2 = this.triangles;
		var ax1 = this.topRight.x;
		var ay1 = this.topRight.y;
		var radius1 = pieRadius + 40;
		var beta1 = Math.PI;
		var gamma1 = Math.PI / 16;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step2 = Math.PI * 2 / 36;
		var dif2;
		beta1 >= 0 && beta1 > Math.PI;
		gamma1 >= 0 && gamma1 > Math.PI;
		var theta1 = Math.abs(beta1 - gamma1);
		var dif3 = beta1 < gamma1 ? theta1 : -theta1;
		if(dif3 < 0) {
			dif2 = dif3;
		} else {
			dif2 = -2 * Math.PI + dif3;
		}
		var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
		var step3 = dif2 / totalSteps1;
		var angle1 = beta1;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var dx1 = 0;
		var dy1 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = radius1 - 30;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = ax1 + radius1 * Math.sin(angle1);
			cy1 = ay1 + radius1 * Math.cos(angle1);
			ex1 = ax1 + r21 * Math.sin(angle1);
			ey1 = ay1 + r21 * Math.cos(angle1);
			if(_g11++ != 0) {
				var t01 = new trilateral_tri_Trilateral(dx1,dy1,bx1,by1,cx1,cy1);
				var t11 = new trilateral_tri_Trilateral(dx1,dy1,cx1,cy1,ex1,ey1);
				out1[out1.length] = t01;
				out1[out1.length] = t11;
			}
			angle1 += step3;
			bx1 = cx1;
			by1 = cy1;
			dx1 = ex1;
			dy1 = ey1;
		}
		var triArr1 = out1;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t3 = triArr1[_g4];
			++_g4;
			if(t3 != null) {
				var t4 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t4.id = 0;
				t4.ax = t3.ax;
				t4.ay = t3.ay;
				t4.bx = t3.bx;
				t4.by = t3.by;
				t4.cx = t3.cx;
				t4.cy = t3.cy;
				t4.mark = t3.mark;
				t4.depth = 0;
				t4.alpha = 1.;
				t4.colorID = 3;
				t4.colorA = 3;
				t4.colorB = 3;
				t4.colorC = 3;
				t4.windingAdjusted = t3.windingAdjusted;
				this2[this2.length] = t4;
			}
		}
		var this3 = this.triangles;
		var ax2 = this.bottomLeft.x;
		var ay2 = this.bottomLeft.y;
		var radius2 = pieRadius + 40;
		var beta2 = Math.PI;
		var gamma2 = Math.PI / 16;
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step4 = Math.PI * 2 / 36;
		var dif4;
		beta2 >= 0 && beta2 > Math.PI;
		gamma2 >= 0 && gamma2 > Math.PI;
		var theta2 = Math.abs(beta2 - gamma2);
		var clockwise = beta2 < gamma2;
		if(theta2 <= Math.PI) {
			dif4 = clockwise ? theta2 : -theta2;
		} else if(clockwise) {
			dif4 = -(2 * Math.PI - theta2);
		} else {
			dif4 = 2 * Math.PI - theta2;
		}
		var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
		var step5 = dif4 / totalSteps2;
		var angle2 = beta2;
		var cx2;
		var cy2;
		var bx2 = 0;
		var by2 = 0;
		var dx2 = 0;
		var dy2 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = radius2 - 30;
		var _g12 = 0;
		var _g5 = totalSteps2 + 1;
		while(_g12 < _g5) {
			cx2 = ax2 + radius2 * Math.sin(angle2);
			cy2 = ay2 + radius2 * Math.cos(angle2);
			ex2 = ax2 + r22 * Math.sin(angle2);
			ey2 = ay2 + r22 * Math.cos(angle2);
			if(_g12++ != 0) {
				var t02 = new trilateral_tri_Trilateral(dx2,dy2,bx2,by2,cx2,cy2);
				var t12 = new trilateral_tri_Trilateral(dx2,dy2,cx2,cy2,ex2,ey2);
				out2[out2.length] = t02;
				out2[out2.length] = t12;
			}
			angle2 += step5;
			bx2 = cx2;
			by2 = cy2;
			dx2 = ex2;
			dy2 = ey2;
		}
		var triArr2 = out2;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t5 = triArr2[_g6];
			++_g6;
			if(t5 != null) {
				var t6 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t6.id = 0;
				t6.ax = t5.ax;
				t6.ay = t5.ay;
				t6.bx = t5.bx;
				t6.by = t5.by;
				t6.cx = t5.cx;
				t6.cy = t5.cy;
				t6.mark = t5.mark;
				t6.depth = 0;
				t6.alpha = 1.;
				t6.colorID = 4;
				t6.colorA = 4;
				t6.colorB = 4;
				t6.colorC = 4;
				t6.windingAdjusted = t5.windingAdjusted;
				this3[this3.length] = t6;
			}
		}
		var this4 = this.triangles;
		var ax3 = this.bottomRight.x;
		var ay3 = this.bottomRight.y;
		var radius3 = pieRadius + 40;
		var beta3 = Math.PI;
		var gamma3 = Math.PI / 16;
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step6 = Math.PI * 2 / 36;
		var dif5;
		beta3 >= 0 && beta3 > Math.PI;
		gamma3 >= 0 && gamma3 > Math.PI;
		var theta3 = Math.abs(beta3 - gamma3);
		var clockwise1 = beta3 < gamma3;
		if(theta3 > Math.PI) {
			dif5 = clockwise1 ? theta3 : -theta3;
		} else if(clockwise1) {
			dif5 = -(2 * Math.PI - theta3);
		} else {
			dif5 = 2 * Math.PI - theta3;
		}
		var totalSteps3 = Math.ceil(Math.abs(dif5) / step6);
		var step7 = dif5 / totalSteps3;
		var angle3 = beta3;
		var cx3;
		var cy3;
		var bx3 = 0;
		var by3 = 0;
		var dx3 = 0;
		var dy3 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = radius3 - 30;
		var _g13 = 0;
		var _g7 = totalSteps3 + 1;
		while(_g13 < _g7) {
			cx3 = ax3 + radius3 * Math.sin(angle3);
			cy3 = ay3 + radius3 * Math.cos(angle3);
			ex3 = ax3 + r23 * Math.sin(angle3);
			ey3 = ay3 + r23 * Math.cos(angle3);
			if(_g13++ != 0) {
				var t03 = new trilateral_tri_Trilateral(dx3,dy3,bx3,by3,cx3,cy3);
				var t13 = new trilateral_tri_Trilateral(dx3,dy3,cx3,cy3,ex3,ey3);
				out3[out3.length] = t03;
				out3[out3.length] = t13;
			}
			angle3 += step7;
			bx3 = cx3;
			by3 = cy3;
			dx3 = ex3;
			dy3 = ey3;
		}
		var triArr3 = out3;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t7 = triArr3[_g8];
			++_g8;
			if(t7 != null) {
				var t8 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t8.id = 0;
				t8.ax = t7.ax;
				t8.ay = t7.ay;
				t8.bx = t7.bx;
				t8.by = t7.by;
				t8.cx = t7.cx;
				t8.cy = t7.cy;
				t8.mark = t7.mark;
				t8.depth = 0;
				t8.alpha = 1.;
				t8.colorID = 5;
				t8.colorA = 5;
				t8.colorB = 5;
				t8.colorC = 5;
				t8.windingAdjusted = t7.windingAdjusted;
				this4[this4.length] = t8;
			}
		}
	}
	,__class__: testTrilateral_TrilateralTest
};
var trilateral_geom_Algebra = function() { };
$hxClasses["trilateral.geom.Algebra"] = trilateral_geom_Algebra;
trilateral_geom_Algebra.__name__ = ["trilateral","geom","Algebra"];
trilateral_geom_Algebra.theta = function(p0,p1) {
	return Math.atan2(p0.y - p1.y,p0.x - p1.x);
};
trilateral_geom_Algebra.dist = function(p0,p1) {
	var dx = p0.x - p1.x;
	var dy = p0.y - p1.y;
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.adjustWinding = function(A_,B_,C_) {
	return !((B_.x - A_.x) * (C_.y - A_.y) - (B_.y - A_.y) * (C_.x - A_.x) < 0);
};
trilateral_geom_Algebra.subtract = function(p0,p1) {
	return { x : p0.x - p1.x, y : p0.y - p1.y};
};
trilateral_geom_Algebra.cross = function(p0,p1) {
	return p0.x * p1.y - p0.y * p1.x;
};
trilateral_geom_Algebra.sign = function(n) {
	return Math.abs(n) / n | 0;
};
trilateral_geom_Algebra.quadratic = function(t,s,c,e) {
	var u = 1 - t;
	return Math.pow(u,2) * s + 2 * u * t * c + Math.pow(t,2) * e;
};
trilateral_geom_Algebra.cubic = function(t,s,c1,c2,e) {
	var u = 1 - t;
	return Math.pow(u,3) * s + 3 * Math.pow(u,2) * t * c1 + 3 * u * Math.pow(t,2) * c2 + Math.pow(t,3) * e;
};
trilateral_geom_Algebra.quadCurve = function(p,ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,2) * ax + 2 * u * t * bx + Math.pow(t,2) * cx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * by + Math.pow(t,2) * cy;
		t += step;
	}
	p[l++] = cx;
	p[l++] = cy;
	return p;
};
trilateral_geom_Algebra.cubicCurve = function(p,ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * bx + 3 * u * Math.pow(t,2) * cx + Math.pow(t,3) * dx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * by + 3 * u1 * Math.pow(t,2) * cy + Math.pow(t,3) * dy;
		t += step;
	}
	p[l++] = dx;
	p[l++] = dy;
	return p;
};
trilateral_geom_Algebra.calculateQuadStep = function(ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
};
trilateral_geom_Algebra.calculateCubicStep = function(ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
};
trilateral_geom_Algebra.lineAB = function(A,B,width) {
	var dx = A.x - B.x;
	var dy = A.y - B.y;
	var P_x = A.x - width / 2;
	var P_y = A.y;
	var omega = Math.atan2(dy,dx);
	var dim_y = dx * dx + dy * dy;
	var pivotX = A.x + width / 2;
	var pivotY = A.y;
	var A_ = { x : P_x, y : P_y};
	var B_ = { x : P_x + width, y : P_y};
	var C_ = { x : P_x + width, y : P_y + dim_y};
	var D_ = { x : P_x, y : P_y + dim_y};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px = A_.x - pivotX;
		var py = A_.y - pivotY;
		var px2 = px * cos - py * sin;
		py = py * cos + px * sin;
		A_ = { x : px2 + pivotX, y : py + pivotY};
		var px1 = B_.x - pivotX;
		var py1 = B_.y - pivotY;
		var px21 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		B_ = { x : px21 + pivotX, y : py1 + pivotY};
		var px3 = C_.x - pivotX;
		var py2 = C_.y - pivotY;
		var px22 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		C_ = { x : px22 + pivotX, y : py2 + pivotY};
		var px4 = D_.x - pivotX;
		var py3 = D_.y - pivotY;
		var px23 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		D_ = { x : px23 + pivotX, y : py3 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.lineABCoord = function(ax,ay,bx,by,width) {
	var dx = ax - bx;
	var dy = ay - by;
	var P_x = ax - width / 2;
	var omega = Math.atan2(dy,dx);
	var dim_y = dx * dx + dy * dy;
	var pivotX = ax + width / 2;
	var A_ = { x : P_x, y : ay};
	var B_ = { x : P_x + width, y : ay};
	var C_ = { x : P_x + width, y : ay + dim_y};
	var D_ = { x : P_x, y : ay + dim_y};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px = A_.x - pivotX;
		var py = A_.y - ay;
		var px2 = px * cos - py * sin;
		py = py * cos + px * sin;
		A_ = { x : px2 + pivotX, y : py + ay};
		var px1 = B_.x - pivotX;
		var py1 = B_.y - ay;
		var px21 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		B_ = { x : px21 + pivotX, y : py1 + ay};
		var px3 = C_.x - pivotX;
		var py2 = C_.y - ay;
		var px22 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		C_ = { x : px22 + pivotX, y : py2 + ay};
		var px4 = D_.x - pivotX;
		var py3 = D_.y - ay;
		var px23 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		D_ = { x : px23 + pivotX, y : py3 + ay};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.rotateVectorLine = function(pos,dim,omega,pivotX,pivotY) {
	var px = pos.x;
	var py = pos.y;
	var dx = dim.x;
	var dy = dim.y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx, y : py};
	var C_ = { x : px + dx, y : py + dy};
	var D_ = { x : px, y : py + dy};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.pivotCheap = function(p,sin,cos,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * cos - py * sin;
	py = py * cos + px * sin;
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.pivot = function(p,omega,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * Math.cos(omega) - py * Math.sin(omega);
	py = py * Math.cos(omega) + px * Math.sin(omega);
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.thetaCheap = function(dx,dy) {
	return Math.atan2(dy,dx);
};
trilateral_geom_Algebra.distCheap = function(dx,dy) {
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.distance = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return Math.sqrt(x * x + y * y);
};
var trilateral_geom_Contour = function(triArr_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.count = 0;
	this.triArr = triArr_;
	this.endLine = endLine_;
};
$hxClasses["trilateral.geom.Contour"] = trilateral_geom_Contour;
trilateral_geom_Contour.__name__ = ["trilateral","geom","Contour"];
trilateral_geom_Contour.thetaCompute = function(px,py,qx,qy) {
	return Math.atan2(py - qy,px - qx);
};
trilateral_geom_Contour.dist = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return x * x + y * y;
};
trilateral_geom_Contour.prototype = {
	reset: function() {
		this.angleA = null;
		this.count = 0;
		this.kax = null;
		this.kay = null;
		this.kbx = null;
		this.kby = null;
		this.kcx = null;
		this.kcy = null;
		this.nax = null;
		this.nay = null;
		this.nbx = null;
		this.nby = null;
		this.ncx = null;
		this.ncy = null;
		this.ax = null;
		this.ay = null;
		this.bx = null;
		this.by = null;
		this.cx = null;
		this.cy = null;
		this.dx = null;
		this.dy = null;
		this.ex = null;
		this.ey = null;
		this.fx = null;
		this.fy = null;
		this.gx = null;
		this.gy = null;
	}
	,triangleJoin: function(ax_,ay_,bx_,by_,width_,curveEnds,overlap) {
		if(overlap == null) {
			overlap = false;
		}
		if(curveEnds == null) {
			curveEnds = false;
		}
		this.halfA = Math.PI / 2;
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var x = this.dxOld - bx_;
		var y = this.dyOld - by_;
		var x1 = this.exOld - bx_;
		var y1 = this.eyOld - by_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(this.ay - this.dyOld,this.ax - this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.eyPrev,this.ax - this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(this.ay - this.eyOld,this.ax - this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.dyPrev,this.ax - this.dxPrev) - Math.PI / 2;
		}
		var dif;
		theta0 >= 0 && theta0 > Math.PI;
		theta1 >= 0 && theta1 > Math.PI;
		var theta = Math.abs(theta0 - theta1);
		var clockwise = theta0 < theta1;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		if(!overlap && this.count != 0) {
			var h = width_ * Math.sin(Math.abs(dif) / 2);
			var f;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f = theta0;
			} else {
				var a = (theta0 + Math.PI) % (2 * Math.PI);
				if(a >= 0) {
					f = a - Math.PI;
				} else {
					f = a + Math.PI;
				}
			}
			var delta = f + dif / 2 + Math.PI;
			this.jx = this.ax + h * Math.sin(delta);
			this.jy = this.ay + h * Math.cos(delta);
		}
		if(this.count == 0 && (this.endLine == 1 || this.endLine == 3)) {
			var ax = this.ax;
			var ay = this.ay;
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma = -this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif1;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta2 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			if(theta2 <= Math.PI) {
				dif1 = clockwise1 ? theta2 : -theta2;
			} else if(clockwise1) {
				dif1 = -(2 * Math.PI - theta2);
			} else {
				dif1 = 2 * Math.PI - theta2;
			}
			var totalSteps = Math.ceil(Math.abs(dif1) / step);
			var step1 = dif1 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		if(curveEnds) {
			var radius1 = width_ / 2;
			var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var totalSteps1 = Math.ceil(Math.abs(dif) / (Math.PI * 2 / 36));
			var step2 = dif / totalSteps1;
			var angle1 = theta0;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var _g11 = 0;
			var _g3 = totalSteps1 + 1;
			while(_g11 < _g3) {
				cx1 = ax_ + radius1 * Math.sin(angle1);
				cy1 = ay_ + radius1 * Math.cos(angle1);
				if(_g11++ != 0) {
					var t2 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
					out1[out1.length] = t2;
				}
				angle1 += step2;
				bx1 = cx1;
				by1 = cy1;
			}
			var this2 = this.triArr;
			var _g4 = 0;
			while(_g4 < out1.length) {
				var t3 = out1[_g4];
				++_g4;
				this2[this2.length] = t3;
			}
		} else if(this.count != 0) {
			if(overlap) {
				if(clockWise) {
					var this3 = this.triArr;
					var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
					this3[this3.length] = tri;
				} else {
					var this4 = this.triArr;
					var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
					this4[this4.length] = tri1;
				}
			} else if(clockWise) {
				var this5 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this5[this5.length] = tri2;
			} else {
				var this6 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this6[this6.length] = tri3;
			}
		}
		if(overlap) {
			var this7 = this.triArr;
			var tri4 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this7[this7.length] = tri4;
			var this8 = this.triArr;
			var tri5 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this8[this8.length] = tri5;
		} else {
			if(this.count != 0) {
				if(clockWise && !this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.jxOld,this.jyOld);
					}
					this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				}
				if(clockWise && this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.nbx,this.nby,this.ncx,this.ncy);
					}
				}
				if(!clockWise && !this.lastClock) {
					this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
					if(this.count == 1) {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.jxOld,this.jyOld);
					}
				}
				if(!clockWise && this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
					}
				}
			}
			this.quadIndex = this.triArr.length;
			if(this.count == 0) {
				var this9 = this.triArr;
				var tri6 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this9[this9.length] = tri6;
				var this10 = this.triArr;
				var tri7 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this10[this10.length] = tri7;
			} else {
				if(clockWise && !this.lastClock) {
					var this11 = this.triArr;
					var tri8 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this11[this11.length] = tri8;
					var this12 = this.triArr;
					var tri9 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this12[this12.length] = tri9;
				}
				if(clockWise && this.lastClock) {
					var this13 = this.triArr;
					var tri10 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this13[this13.length] = tri10;
					var this14 = this.triArr;
					var tri11 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this14[this14.length] = tri11;
				}
				if(!clockWise && !this.lastClock) {
					var this15 = this.triArr;
					var tri12 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
					this15[this15.length] = tri12;
					var this16 = this.triArr;
					var tri13 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
					this16[this16.length] = tri13;
				}
				if(!clockWise && this.lastClock) {
					var this17 = this.triArr;
					var tri14 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this17[this17.length] = tri14;
					var this18 = this.triArr;
					var tri15 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
					this18[this18.length] = tri15;
				}
			}
		}
		this.nax = this.dxPrev;
		this.nay = this.dyPrev;
		this.nbx = this.dx;
		this.nby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.kcx = this.ex;
		this.kcy = this.ey;
		if(curveEnds && !overlap && this.count != 0) {
			if(clockWise) {
				var this19 = this.triArr;
				var tri16 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
				this19[this19.length] = tri16;
				var this20 = this.triArr;
				var tri17 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this20[this20.length] = tri17;
			} else {
				var this21 = this.triArr;
				var tri18 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
				this21[this21.length] = tri18;
				var this22 = this.triArr;
				var tri19 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this22[this22.length] = tri19;
			}
		}
		this.jxOld = this.jx;
		this.jyOld = this.jy;
		this.lastClock = clockWise;
		this.count++;
		return this.triArr;
	}
	,overlapQuad: function() {
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
		this1[this1.length] = tri;
		var this2 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
		this2[this2.length] = tri1;
	}
	,end: function(width_) {
		var ax = this.bx;
		var ay = this.by;
		var radius = width_ / 2;
		var beta = -this.angle1 - Math.PI / 2;
		var gamma = -this.angle1 - Math.PI / 2 - Math.PI;
		var this1 = this.triArr;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			this1[this1.length] = t1;
		}
	}
	,add: function(trilateral1) {
		var this1 = this.triArr;
		this1[this1.length] = trilateral1;
	}
	,addArray: function(trilateralArray) {
		var this1 = this.triArr;
		var _g = 0;
		while(_g < trilateralArray.length) {
			var t = trilateralArray[_g];
			++_g;
			this1[this1.length] = t;
		}
	}
	,addTri: function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
		if(mark_ == null) {
			mark_ = 0;
		}
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(ax_,ay_,bx_,by_,cx_,cy_,mark_);
		this1[this1.length] = tri;
	}
	,addPie: function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
		if(sides == null) {
			sides = 36;
		}
		if(mark == null) {
			mark = 0;
		}
		var this1 = this.triArr;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / sides;
		var dif;
		switch(prefer[1]) {
		case 0:
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta = Math.abs(beta - gamma);
			var dif1 = beta < gamma ? theta : -theta;
			if(dif1 > 0) {
				dif = dif1;
			} else {
				dif = 2 * Math.PI + dif1;
			}
			break;
		case 1:
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta1 = Math.abs(beta - gamma);
			var dif2 = beta < gamma ? theta1 : -theta1;
			if(dif2 < 0) {
				dif = dif2;
			} else {
				dif = -2 * Math.PI + dif2;
			}
			break;
		case 2:
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta2 = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			if(theta2 <= Math.PI) {
				dif = clockwise ? theta2 : -theta2;
			} else if(clockwise) {
				dif = -(2 * Math.PI - theta2);
			} else {
				dif = 2 * Math.PI - theta2;
			}
			break;
		case 3:
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta3 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			if(theta3 > Math.PI) {
				dif = clockwise1 ? theta3 : -theta3;
			} else if(clockwise1) {
				dif = -(2 * Math.PI - theta3);
			} else {
				dif = 2 * Math.PI - theta3;
			}
			break;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t;
				if(mark != 0) {
					t.mark = mark;
				}
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			this1[this1.length] = t1;
		}
	}
	,computeJ: function(width_,theta0,dif) {
		var h = width_ * Math.sin(Math.abs(dif) / 2);
		var f;
		if(theta0 <= Math.PI && theta0 > -Math.PI) {
			f = theta0;
		} else {
			var a = (theta0 + Math.PI) % (2 * Math.PI);
			if(a >= 0) {
				f = a - Math.PI;
			} else {
				f = a + Math.PI;
			}
		}
		var delta = f + dif / 2 + Math.PI;
		this.jx = this.ax + h * Math.sin(delta);
		this.jy = this.ay + h * Math.cos(delta);
	}
	,addDot: function(x,y,color) {
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g1 = 0;
		while(_g1 < 36) {
			++_g1;
			bx = x + 0.008 * Math.sin(theta);
			by = y + 0.008 * Math.cos(theta);
			theta += step;
			cx = x + 0.008 * Math.sin(theta);
			cy = y + 0.008 * Math.cos(theta);
			var t = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = t;
			t.mark = color;
		}
		var this1 = this.triArr;
		var _g = 0;
		while(_g < out.length) {
			var t1 = out[_g];
			++_g;
			this1[this1.length] = t1;
		}
	}
	,addSmallTriangles: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		} else {
			var this3 = this.triArr;
			var tri2 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
			this3[this3.length] = tri2;
			var this4 = this.triArr;
			var tri3 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this4[this4.length] = tri3;
		}
	}
	,addTriangleCorners: function(oldx_,oldy_,prevx_,prevy_) {
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g1 = 0;
		while(_g1 < 36) {
			++_g1;
			bx = oldx_ + 0.01 * Math.sin(theta);
			by = oldy_ + 0.01 * Math.cos(theta);
			theta += step;
			cx = oldx_ + 0.01 * Math.sin(theta);
			cy = oldy_ + 0.01 * Math.cos(theta);
			var t = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t;
			t.mark = 4;
		}
		var this1 = this.triArr;
		var _g = 0;
		while(_g < out.length) {
			var t1 = out[_g];
			++_g;
			this1[this1.length] = t1;
		}
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g11 = 0;
		while(_g11 < 36) {
			++_g11;
			bx1 = prevx_ + 0.01 * Math.sin(theta1);
			by1 = prevy_ + 0.01 * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + 0.01 * Math.sin(theta1);
			cy1 = prevy_ + 0.01 * Math.cos(theta1);
			var t2 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t2;
			t2.mark = 3;
		}
		var this2 = this.triArr;
		var _g2 = 0;
		while(_g2 < out1.length) {
			var t3 = out1[_g2];
			++_g2;
			this2[this2.length] = t3;
		}
		var ax = this.ax;
		var ay = this.ay;
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g12 = 0;
		while(_g12 < 36) {
			++_g12;
			bx2 = ax + 0.01 * Math.sin(theta2);
			by2 = ay + 0.01 * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + 0.01 * Math.sin(theta2);
			cy2 = ay + 0.01 * Math.cos(theta2);
			var t4 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t4;
			t4.mark = 10;
		}
		var this3 = this.triArr;
		var _g3 = 0;
		while(_g3 < out2.length) {
			var t5 = out2[_g3];
			++_g3;
			this3[this3.length] = t5;
		}
		var ax1 = this.jx;
		var ay1 = this.jy;
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi3 = Math.PI;
		var theta3 = pi3 / 2;
		var step3 = pi3 * 2 / 36;
		var bx3;
		var by3;
		var cx3;
		var cy3;
		var _g13 = 0;
		while(_g13 < 36) {
			++_g13;
			bx3 = ax1 + 0.01 * Math.sin(theta3);
			by3 = ay1 + 0.01 * Math.cos(theta3);
			theta3 += step3;
			cx3 = ax1 + 0.01 * Math.sin(theta3);
			cy3 = ay1 + 0.01 * Math.cos(theta3);
			var t6 = new trilateral_tri_Trilateral(ax1,ay1,bx3,by3,cx3,cy3);
			out3[out3.length] = t6;
			t6.mark = 5;
		}
		var this4 = this.triArr;
		var _g4 = 0;
		while(_g4 < out3.length) {
			var t7 = out3[_g4];
			++_g4;
			this4[this4.length] = t7;
		}
	}
	,addTriangleCornersLess: function(oldx_,oldy_,prevx_,prevy_) {
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g1 = 0;
		while(_g1 < 36) {
			++_g1;
			bx = oldx_ + 0.01 * Math.sin(theta);
			by = oldy_ + 0.01 * Math.cos(theta);
			theta += step;
			cx = oldx_ + 0.01 * Math.sin(theta);
			cy = oldy_ + 0.01 * Math.cos(theta);
			var t = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t;
			t.mark = 4;
		}
		var this1 = this.triArr;
		var _g = 0;
		while(_g < out.length) {
			var t1 = out[_g];
			++_g;
			this1[this1.length] = t1;
		}
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g11 = 0;
		while(_g11 < 36) {
			++_g11;
			bx1 = prevx_ + 0.01 * Math.sin(theta1);
			by1 = prevy_ + 0.01 * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + 0.01 * Math.sin(theta1);
			cy1 = prevy_ + 0.01 * Math.cos(theta1);
			var t2 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t2;
			t2.mark = 3;
		}
		var this2 = this.triArr;
		var _g2 = 0;
		while(_g2 < out1.length) {
			var t3 = out1[_g2];
			++_g2;
			this2[this2.length] = t3;
		}
		var ax = this.jx;
		var ay = this.jy;
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g12 = 0;
		while(_g12 < 36) {
			++_g12;
			bx2 = ax + 0.01 * Math.sin(theta2);
			by2 = ay + 0.01 * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + 0.01 * Math.sin(theta2);
			cy2 = ay + 0.01 * Math.cos(theta2);
			var t4 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t4;
			t4.mark = 5;
		}
		var this3 = this.triArr;
		var _g3 = 0;
		while(_g3 < out2.length) {
			var t5 = out2[_g3];
			++_g3;
			this3[this3.length] = t5;
		}
	}
	,connectQuadsWhenQuadsOverlay: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
			this2[this2.length] = tri1;
		}
	}
	,connectQuads: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		}
	}
	,addInitialQuads: function(clockWise) {
		this.quadIndex = this.triArr.length;
		if(this.count == 0) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this2[this2.length] = tri1;
		} else {
			if(clockWise && !this.lastClock) {
				var this3 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this3[this3.length] = tri2;
				var this4 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this4[this4.length] = tri3;
			}
			if(clockWise && this.lastClock) {
				var this5 = this.triArr;
				var tri4 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this5[this5.length] = tri4;
				var this6 = this.triArr;
				var tri5 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this6[this6.length] = tri5;
			}
			if(!clockWise && !this.lastClock) {
				var this7 = this.triArr;
				var tri6 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
				this7[this7.length] = tri6;
				var this8 = this.triArr;
				var tri7 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this8[this8.length] = tri7;
			}
			if(!clockWise && this.lastClock) {
				var this9 = this.triArr;
				var tri8 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this9[this9.length] = tri8;
				var this10 = this.triArr;
				var tri9 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
				this10[this10.length] = tri9;
			}
		}
	}
	,addQuads: function(clockWise) {
		if(clockWise && !this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.jxOld,this.jyOld);
			}
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
		}
		if(clockWise && this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.nbx,this.nby,this.ncx,this.ncy);
			}
		}
		if(!clockWise && !this.lastClock) {
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
			if(this.count == 1) {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.jxOld,this.jyOld);
			}
		}
		if(!clockWise && this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
			}
		}
	}
	,storeLastQuads: function() {
		this.nax = this.dxPrev;
		this.nay = this.dyPrev;
		this.nbx = this.dx;
		this.nby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.kcx = this.ex;
		this.kcy = this.ey;
	}
	,isClockwise: function(x,y) {
		var x1 = this.dxOld - x;
		var y1 = this.dyOld - y;
		var x2 = this.exOld - x;
		var y2 = this.eyOld - y;
		return x1 * x1 + y1 * y1 > x2 * x2 + y2 * y2;
	}
	,line: function(ax_,ay_,bx_,by_,width_,endLineCurve) {
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.halfA = Math.PI / 2;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var dxPrev_ = this.dx;
		var dyPrev_ = this.dy;
		var exPrev_ = this.ex;
		var eyPrev_ = this.ey;
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		if(endLineCurve == null) {
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma = -this.angle1 - Math.PI / 2 - Math.PI;
			var this1 = this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			if(theta <= Math.PI) {
				dif = clockwise ? theta : -theta;
			} else if(clockwise) {
				dif = -(2 * Math.PI - theta);
			} else {
				dif = 2 * Math.PI - theta;
			}
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = bx_ + radius * Math.sin(angle);
				cy = by_ + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(bx_,by_,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		} else {
			switch(endLineCurve) {
			case 0:
				break;
			case 1:
				var radius1 = width_ / 2;
				var beta1 = -this.angle1 - Math.PI / 2;
				var gamma1 = -this.angle1 - Math.PI / 2 + Math.PI;
				var this2 = this.triArr;
				var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
				var step2 = Math.PI * 2 / 36;
				var dif1;
				beta1 >= 0 && beta1 > Math.PI;
				gamma1 >= 0 && gamma1 > Math.PI;
				var theta1 = Math.abs(beta1 - gamma1);
				var clockwise1 = beta1 < gamma1;
				if(theta1 <= Math.PI) {
					dif1 = clockwise1 ? theta1 : -theta1;
				} else if(clockwise1) {
					dif1 = -(2 * Math.PI - theta1);
				} else {
					dif1 = 2 * Math.PI - theta1;
				}
				var totalSteps1 = Math.ceil(Math.abs(dif1) / step2);
				var step3 = dif1 / totalSteps1;
				var angle1 = beta1;
				var cx1;
				var cy1;
				var bx1 = 0;
				var by1 = 0;
				var _g11 = 0;
				var _g3 = totalSteps1 + 1;
				while(_g11 < _g3) {
					cx1 = ax_ + radius1 * Math.sin(angle1);
					cy1 = ay_ + radius1 * Math.cos(angle1);
					if(_g11++ != 0) {
						var t2 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
						out1[out1.length] = t2;
					}
					angle1 += step3;
					bx1 = cx1;
					by1 = cy1;
				}
				var triArr1 = out1;
				var _g4 = 0;
				while(_g4 < triArr1.length) {
					var t3 = triArr1[_g4];
					++_g4;
					this2[this2.length] = t3;
				}
				break;
			case 3:
				var radius2 = width_ / 2;
				var beta2 = -this.angle1 - Math.PI / 2;
				var gamma2 = -this.angle1 - Math.PI / 2 - Math.PI;
				var this3 = this.triArr;
				var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
				var step4 = Math.PI * 2 / 36;
				var dif2;
				beta2 >= 0 && beta2 > Math.PI;
				gamma2 >= 0 && gamma2 > Math.PI;
				var theta2 = Math.abs(beta2 - gamma2);
				var clockwise2 = beta2 < gamma2;
				if(theta2 <= Math.PI) {
					dif2 = clockwise2 ? theta2 : -theta2;
				} else if(clockwise2) {
					dif2 = -(2 * Math.PI - theta2);
				} else {
					dif2 = 2 * Math.PI - theta2;
				}
				var totalSteps2 = Math.ceil(Math.abs(dif2) / step4);
				var step5 = dif2 / totalSteps2;
				var angle2 = beta2;
				var cx2;
				var cy2;
				var bx2 = 0;
				var by2 = 0;
				var _g12 = 0;
				var _g5 = totalSteps2 + 1;
				while(_g12 < _g5) {
					cx2 = bx_ + radius2 * Math.sin(angle2);
					cy2 = by_ + radius2 * Math.cos(angle2);
					if(_g12++ != 0) {
						var t4 = new trilateral_tri_Trilateral(bx_,by_,bx2,by2,cx2,cy2);
						out2[out2.length] = t4;
					}
					angle2 += step5;
					bx2 = cx2;
					by2 = cy2;
				}
				var triArr2 = out2;
				var _g6 = 0;
				while(_g6 < triArr2.length) {
					var t5 = triArr2[_g6];
					++_g6;
					this3[this3.length] = t5;
				}
				break;
			default:
				var radius3 = width_ / 2;
				var beta3 = -this.angle1 - Math.PI / 2;
				var gamma3 = -this.angle1 - Math.PI / 2 - Math.PI;
				var this4 = this.triArr;
				var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
				var step6 = Math.PI * 2 / 36;
				var dif3;
				beta3 >= 0 && beta3 > Math.PI;
				gamma3 >= 0 && gamma3 > Math.PI;
				var theta3 = Math.abs(beta3 - gamma3);
				var clockwise3 = beta3 < gamma3;
				if(theta3 <= Math.PI) {
					dif3 = clockwise3 ? theta3 : -theta3;
				} else if(clockwise3) {
					dif3 = -(2 * Math.PI - theta3);
				} else {
					dif3 = 2 * Math.PI - theta3;
				}
				var totalSteps3 = Math.ceil(Math.abs(dif3) / step6);
				var step7 = dif3 / totalSteps3;
				var angle3 = beta3;
				var cx3;
				var cy3;
				var bx3 = 0;
				var by3 = 0;
				var _g13 = 0;
				var _g7 = totalSteps3 + 1;
				while(_g13 < _g7) {
					cx3 = bx_ + radius3 * Math.sin(angle3);
					cy3 = by_ + radius3 * Math.cos(angle3);
					if(_g13++ != 0) {
						var t6 = new trilateral_tri_Trilateral(bx_,by_,bx3,by3,cx3,cy3);
						out3[out3.length] = t6;
					}
					angle3 += step7;
					bx3 = cx3;
					by3 = cy3;
				}
				var triArr3 = out3;
				var _g8 = 0;
				while(_g8 < triArr3.length) {
					var t7 = triArr3[_g8];
					++_g8;
					this4[this4.length] = t7;
				}
			}
		}
		var this5 = this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,exPrev_,eyPrev_,0);
		this5[this5.length] = tri;
		var this6 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,this.ex,this.ey,0);
		this6[this6.length] = tri1;
	}
	,computeDE: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
	}
	,anglesCompute: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
	}
	,thetaComputeAdj: function(qx,qy) {
		return -Math.atan2(this.ay - qy,this.ax - qx) - Math.PI / 2;
	}
	,__class__: trilateral_geom_Contour
};
var trilateral_helper_Shapes = function(triangleArray_,colors_) {
	this.refCount = 0;
	this.triangles = triangleArray_;
	this.colors = colors_;
};
$hxClasses["trilateral.helper.Shapes"] = trilateral_helper_Shapes;
trilateral_helper_Shapes.__name__ = ["trilateral","helper","Shapes"];
trilateral_helper_Shapes.prototype = {
	star: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var pi = Math.PI;
		var omega = -pi + theta;
		var a0x = x + radius * Math.sin(omega);
		var a0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var a1x = x + radius * Math.sin(omega);
		var a1y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var b0x = x + radius * Math.sin(omega);
		var b0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var b1x = x + radius * Math.sin(omega);
		var b1y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var c0x = x + radius * Math.sin(omega);
		var c0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var c1x = x + radius * Math.sin(omega);
		var c1y = y + radius * Math.cos(omega);
		var tri = { t0 : new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y), t1 : new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y)};
		var colorID = this.colors.indexOf(color);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		return this.refCount - 1;
	}
	,diamond: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var theta1 = Math.PI / 4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		if(theta1 != 0) {
			var pi = Math.PI;
			var pi4 = pi / 4;
			var r = radius * Math.sqrt(2);
			var aTheta = -pi + theta1 - pi4;
			var dTheta = -pi + theta1 + pi / 2 - pi / 4;
			var cTheta = theta1 - pi4;
			var bTheta = -pi + theta1 - pi / 2 - pi4;
			ax = x + r * Math.sin(aTheta);
			ay = y + r * Math.cos(aTheta);
			bx = x + r * Math.sin(bTheta);
			by = y + r * Math.cos(bTheta);
			cx = x + r * Math.sin(cTheta);
			cy = y + r * Math.cos(cTheta);
			dx = x + r * Math.sin(dTheta);
			dy = y + r * Math.cos(dTheta);
		} else {
			ax = x - radius;
			ay = y - radius;
			var lx = radius * 2;
			bx = ax + lx;
			by = ay;
			cx = bx;
			cy = ay + lx;
			dx = ax;
			dy = cy;
		}
		var tri = { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
		var colorID = this.colors.indexOf(color);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		return this.refCount - 1;
	}
	,diamondOutline: function(x,y,radius,thick,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var theta1 = Math.PI / 4;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		var a0x = 0.;
		var a0y = 0.;
		var b0x = 0.;
		var b0y = 0.;
		var c0x = 0.;
		var c0y = 0.;
		var d0x = 0.;
		var d0y = 0.;
		if(theta1 != 0) {
			var pi = Math.PI;
			var pi4 = pi / 4;
			var r = radius * Math.sqrt(2);
			var aTheta = -pi + theta1 - pi4;
			var dTheta = -pi + theta1 + pi / 2 - pi / 4;
			var cTheta = theta1 - pi4;
			var bTheta = -pi + theta1 - pi / 2 - pi4;
			var $as = Math.sin(aTheta);
			var ac = Math.cos(aTheta);
			var bs = Math.sin(bTheta);
			var bc = Math.cos(bTheta);
			var cs = Math.sin(cTheta);
			var cc = Math.cos(cTheta);
			var ds = Math.sin(dTheta);
			var dc = Math.cos(dTheta);
			var r0 = r - thick;
			ax = x + r * $as;
			ay = y + r * ac;
			bx = x + r * bs;
			by = y + r * bc;
			cx = x + r * cs;
			cy = y + r * cc;
			dx = x + r * ds;
			dy = y + r * dc;
			a0x = x + r0 * $as;
			a0y = y + r0 * ac;
			b0x = x + r0 * bs;
			b0y = y + r0 * bc;
			c0x = x + r0 * cs;
			c0y = y + r0 * cc;
			d0x = x + r0 * ds;
			d0y = y + r0 * dc;
		} else {
			ax = x - radius;
			ay = y - radius;
			var lx = radius * 2;
			bx = ax + lx;
			by = ay;
			cx = bx;
			cy = ay + lx;
			dx = ax;
			dy = cy;
			var radius0 = radius - thick;
			a0x = x - radius0;
			a0y = y - radius0;
			var l0x = radius0 * 2;
			b0x = a0x + l0x;
			b0y = a0y;
			c0x = b0x;
			c0y = a0y + l0x;
			d0x = a0x;
			d0y = c0y;
		}
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
		out[out.length] = tri;
		var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
		out[out.length] = tri1;
		var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
		out[out.length] = tri2;
		var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
		out[out.length] = tri3;
		var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
		out[out.length] = tri4;
		var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
		out[out.length] = tri5;
		var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
		out[out.length] = tri7;
		var triArr = out;
		var colorID = this.colors.indexOf(color);
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = id;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
		return this.refCount - 1;
	}
	,square: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
		var tri = { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
		var colorID = this.colors.indexOf(color);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		return this.refCount - 1;
	}
	,squareOutline: function(x,y,radius,thick,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		var a0x = 0.;
		var a0y = 0.;
		var b0x = 0.;
		var b0y = 0.;
		var c0x = 0.;
		var c0y = 0.;
		var d0x = 0.;
		var d0y = 0.;
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = x - radius0;
		a0y = y - radius0;
		var l0x = radius0 * 2;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0x;
		d0x = a0x;
		d0y = c0y;
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
		out[out.length] = tri;
		var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
		out[out.length] = tri1;
		var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
		out[out.length] = tri2;
		var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
		out[out.length] = tri3;
		var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
		out[out.length] = tri4;
		var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
		out[out.length] = tri5;
		var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
		out[out.length] = tri7;
		var triArr = out;
		var colorID = this.colors.indexOf(color);
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = id;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
		return this.refCount - 1;
	}
	,rectangle: function(x,y,width,height,color) {
		var this1 = this.triangles;
		var id = this.refCount++;
		var bx = x + width;
		var cy = y + height;
		var tri = { t0 : new trilateral_tri_Trilateral(x,y,bx,y,x,cy), t1 : new trilateral_tri_Trilateral(bx,y,bx,cy,x,cy)};
		var colorID = this.colors.indexOf(color);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		return this.refCount - 1;
	}
	,circle: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var theta1 = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g1 = 0;
		while(_g1 < 36) {
			++_g1;
			bx = x + radius * Math.sin(theta1);
			by = y + radius * Math.cos(theta1);
			theta1 += step;
			cx = x + radius * Math.sin(theta1);
			cy = y + radius * Math.cos(theta1);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		var triArr = out;
		var colorID = this.colors.indexOf(color);
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t1.id = id;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				this1[this1.length] = t1;
			}
		}
		return this.refCount - 1;
	}
	,roundedRectangle: function(x,y,width,height,radius,color) {
		var tp_t1;
		var tp_t0;
		var tp_t11;
		var tp_t01;
		var tp_t12;
		var tp_t02;
		var this1 = this.triangles;
		var id = this.refCount++;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax = x + radius;
		var ay = y + radius;
		var bx = x + width - radius;
		var by = y + radius;
		var cy = y + height - radius;
		var bx1 = ax + (width - radius * 2);
		var cy1 = y + height;
		tp_t02 = new trilateral_tri_Trilateral(ax,y,bx1,y,ax,cy1);
		tp_t12 = new trilateral_tri_Trilateral(bx1,y,bx1,cy1,ax,cy1);
		out[out.length] = tp_t02;
		out[out.length] = tp_t12;
		var dimY = height - 2 * radius;
		var bx2 = x + radius;
		var cy2 = ay + dimY;
		tp_t01 = new trilateral_tri_Trilateral(x,ay,bx2,ay,x,cy2);
		tp_t11 = new trilateral_tri_Trilateral(bx2,ay,bx2,cy2,x,cy2);
		out[out.length] = tp_t01;
		out[out.length] = tp_t11;
		var bx3 = bx + radius;
		var cy3 = by + dimY;
		tp_t0 = new trilateral_tri_Trilateral(bx,by,bx3,by,bx,cy3);
		tp_t1 = new trilateral_tri_Trilateral(bx3,by,bx3,cy3,bx,cy3);
		out[out.length] = tp_t0;
		out[out.length] = tp_t1;
		var beta = -pi;
		var gamma = -pi_2;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy4;
		var bx4 = 0;
		var by1 = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + radius * Math.sin(angle);
			cy4 = ay + radius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(ax,ay,bx4,by1,cx,cy4);
				out1[out1.length] = t;
			}
			angle += step1;
			bx4 = cx;
			by1 = cy4;
		}
		var triArr = out1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			out[out.length] = t1;
		}
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step2 = Math.PI * 2 / 36;
		var dif2;
		pi_2 >= 0 && pi_2 > Math.PI;
		pi >= 0 && pi > Math.PI;
		var theta1 = Math.abs(pi_2 - pi);
		var dif3 = pi_2 < pi ? theta1 : -theta1;
		if(dif3 > 0) {
			dif2 = dif3;
		} else {
			dif2 = 2 * Math.PI + dif3;
		}
		var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
		var step3 = dif2 / totalSteps1;
		var angle1 = pi_2;
		var cx1;
		var cy5;
		var bx5 = 0;
		var by2 = 0;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = bx + radius * Math.sin(angle1);
			cy5 = by + radius * Math.cos(angle1);
			if(_g11++ != 0) {
				var t2 = new trilateral_tri_Trilateral(bx,by,bx5,by2,cx1,cy5);
				out2[out2.length] = t2;
			}
			angle1 += step3;
			bx5 = cx1;
			by2 = cy5;
		}
		var triArr1 = out2;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t3 = triArr1[_g4];
			++_g4;
			out[out.length] = t3;
		}
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step4 = Math.PI * 2 / 36;
		var dif4;
		pi_2 >= 0 && pi_2 > Math.PI;
		var theta2 = Math.abs(pi_2);
		var dif5 = pi_2 < 0 ? theta2 : -theta2;
		if(dif5 < 0) {
			dif4 = dif5;
		} else {
			dif4 = -2 * Math.PI + dif5;
		}
		var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
		var step5 = dif4 / totalSteps2;
		var angle2 = pi_2;
		var cx2;
		var cy6;
		var bx6 = 0;
		var by3 = 0;
		var _g12 = 0;
		var _g5 = totalSteps2 + 1;
		while(_g12 < _g5) {
			cx2 = bx + radius * Math.sin(angle2);
			cy6 = cy + radius * Math.cos(angle2);
			if(_g12++ != 0) {
				var t4 = new trilateral_tri_Trilateral(bx,cy,bx6,by3,cx2,cy6);
				out3[out3.length] = t4;
			}
			angle2 += step5;
			bx6 = cx2;
			by3 = cy6;
		}
		var triArr2 = out3;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t5 = triArr2[_g6];
			++_g6;
			out[out.length] = t5;
		}
		var gamma1 = -pi_2;
		var out4 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step6 = Math.PI * 2 / 36;
		var dif6;
		gamma1 >= 0 && gamma1 > Math.PI;
		var theta3 = Math.abs(0 - gamma1);
		var dif7 = 0 < gamma1 ? theta3 : -theta3;
		if(dif7 < 0) {
			dif6 = dif7;
		} else {
			dif6 = -2 * Math.PI + dif7;
		}
		var totalSteps3 = Math.ceil(Math.abs(dif6) / step6);
		var step7 = dif6 / totalSteps3;
		var angle3 = 0;
		var cx3;
		var cy7;
		var bx7 = 0;
		var by4 = 0;
		var _g13 = 0;
		var _g7 = totalSteps3 + 1;
		while(_g13 < _g7) {
			cx3 = ax + radius * Math.sin(angle3);
			cy7 = cy + radius * Math.cos(angle3);
			if(_g13++ != 0) {
				var t6 = new trilateral_tri_Trilateral(ax,cy,bx7,by4,cx3,cy7);
				out4[out4.length] = t6;
			}
			angle3 += step7;
			bx7 = cx3;
			by4 = cy7;
		}
		var triArr3 = out4;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t7 = triArr3[_g8];
			++_g8;
			out[out.length] = t7;
		}
		var triArr4 = out;
		var colorID = this.colors.indexOf(color);
		var _g9 = 0;
		while(_g9 < triArr4.length) {
			var t8 = triArr4[_g9];
			++_g9;
			if(t8 != null) {
				var t9 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t9.id = id;
				t9.ax = t8.ax;
				t9.ay = t8.ay;
				t9.bx = t8.bx;
				t9.by = t8.by;
				t9.cx = t8.cx;
				t9.cy = t8.cy;
				t9.mark = t8.mark;
				t9.depth = 0;
				t9.alpha = 1.;
				t9.colorID = colorID;
				t9.colorA = colorID;
				t9.colorB = colorID;
				t9.colorC = colorID;
				t9.windingAdjusted = t8.windingAdjusted;
				this1[this1.length] = t9;
			}
		}
		return this.refCount - 1;
	}
	,roundedRectangleOutline: function(x,y,width,height,thick,radius,color) {
		var tp_t1;
		var tp_t0;
		var tp_t11;
		var tp_t01;
		var tp_t12;
		var tp_t02;
		var tp_t13;
		var tp_t03;
		var this1 = this.triangles;
		var id = this.refCount++;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax = x + radius;
		var ay = y + radius;
		var bx = x + width - radius;
		var by = y + radius;
		var cy = y + height - radius;
		var bx1 = ax + (width - radius * 2);
		var cy1 = y + thick;
		tp_t03 = new trilateral_tri_Trilateral(ax,y,bx1,y,ax,cy1);
		tp_t13 = new trilateral_tri_Trilateral(bx1,y,bx1,cy1,ax,cy1);
		out[out.length] = tp_t03;
		out[out.length] = tp_t13;
		var ay1 = y + height - thick;
		var bx2 = ax + (width - radius * 2);
		var cy2 = ay1 + thick;
		tp_t02 = new trilateral_tri_Trilateral(ax,ay1,bx2,ay1,ax,cy2);
		tp_t12 = new trilateral_tri_Trilateral(bx2,ay1,bx2,cy2,ax,cy2);
		out[out.length] = tp_t02;
		out[out.length] = tp_t12;
		var dimY = height - 2 * radius;
		var bx3 = x + thick;
		var cy3 = ay + dimY;
		tp_t01 = new trilateral_tri_Trilateral(x,ay,bx3,ay,x,cy3);
		tp_t11 = new trilateral_tri_Trilateral(bx3,ay,bx3,cy3,x,cy3);
		out[out.length] = tp_t01;
		out[out.length] = tp_t11;
		var x1 = x + width - thick;
		var bx4 = x1 + thick;
		var cy4 = by + dimY;
		tp_t0 = new trilateral_tri_Trilateral(x1,by,bx4,by,x1,cy4);
		tp_t1 = new trilateral_tri_Trilateral(bx4,by,bx4,cy4,x1,cy4);
		out[out.length] = tp_t0;
		out[out.length] = tp_t1;
		var beta = -pi;
		var gamma = -pi_2;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy5;
		var bx5 = 0;
		var by1 = 0;
		var dx = 0;
		var dy = 0;
		var ex = 0;
		var ey = 0;
		var r2 = radius - thick;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = ax + radius * Math.sin(angle);
			cy5 = ay + radius * Math.cos(angle);
			ex = ax + r2 * Math.sin(angle);
			ey = ay + r2 * Math.cos(angle);
			if(_g1++ != 0) {
				var t0 = new trilateral_tri_Trilateral(dx,dy,bx5,by1,cx,cy5);
				var t1 = new trilateral_tri_Trilateral(dx,dy,cx,cy5,ex,ey);
				out1[out1.length] = t0;
				out1[out1.length] = t1;
			}
			angle += step1;
			bx5 = cx;
			by1 = cy5;
			dx = ex;
			dy = ey;
		}
		var triArr = out1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t = triArr[_g2];
			++_g2;
			out[out.length] = t;
		}
		var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step2 = Math.PI * 2 / 36;
		var dif2;
		pi_2 >= 0 && pi_2 > Math.PI;
		pi >= 0 && pi > Math.PI;
		var theta1 = Math.abs(pi_2 - pi);
		var dif3 = pi_2 < pi ? theta1 : -theta1;
		if(dif3 > 0) {
			dif2 = dif3;
		} else {
			dif2 = 2 * Math.PI + dif3;
		}
		var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
		var step3 = dif2 / totalSteps1;
		var angle1 = pi_2;
		var cx1;
		var cy6;
		var bx6 = 0;
		var by2 = 0;
		var dx1 = 0;
		var dy1 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = radius - thick;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = bx + radius * Math.sin(angle1);
			cy6 = by + radius * Math.cos(angle1);
			ex1 = bx + r21 * Math.sin(angle1);
			ey1 = by + r21 * Math.cos(angle1);
			if(_g11++ != 0) {
				var t01 = new trilateral_tri_Trilateral(dx1,dy1,bx6,by2,cx1,cy6);
				var t11 = new trilateral_tri_Trilateral(dx1,dy1,cx1,cy6,ex1,ey1);
				out2[out2.length] = t01;
				out2[out2.length] = t11;
			}
			angle1 += step3;
			bx6 = cx1;
			by2 = cy6;
			dx1 = ex1;
			dy1 = ey1;
		}
		var triArr1 = out2;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t2 = triArr1[_g4];
			++_g4;
			out[out.length] = t2;
		}
		var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step4 = Math.PI * 2 / 36;
		var dif4;
		pi_2 >= 0 && pi_2 > Math.PI;
		var theta2 = Math.abs(pi_2);
		var dif5 = pi_2 < 0 ? theta2 : -theta2;
		if(dif5 < 0) {
			dif4 = dif5;
		} else {
			dif4 = -2 * Math.PI + dif5;
		}
		var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
		var step5 = dif4 / totalSteps2;
		var angle2 = pi_2;
		var cx2;
		var cy7;
		var bx7 = 0;
		var by3 = 0;
		var dx2 = 0;
		var dy2 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = radius - thick;
		var _g12 = 0;
		var _g5 = totalSteps2 + 1;
		while(_g12 < _g5) {
			cx2 = bx + radius * Math.sin(angle2);
			cy7 = cy + radius * Math.cos(angle2);
			ex2 = bx + r22 * Math.sin(angle2);
			ey2 = cy + r22 * Math.cos(angle2);
			if(_g12++ != 0) {
				var t02 = new trilateral_tri_Trilateral(dx2,dy2,bx7,by3,cx2,cy7);
				var t12 = new trilateral_tri_Trilateral(dx2,dy2,cx2,cy7,ex2,ey2);
				out3[out3.length] = t02;
				out3[out3.length] = t12;
			}
			angle2 += step5;
			bx7 = cx2;
			by3 = cy7;
			dx2 = ex2;
			dy2 = ey2;
		}
		var triArr2 = out3;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t3 = triArr2[_g6];
			++_g6;
			out[out.length] = t3;
		}
		var gamma1 = -pi_2;
		var out4 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step6 = Math.PI * 2 / 36;
		var dif6;
		gamma1 >= 0 && gamma1 > Math.PI;
		var theta3 = Math.abs(0 - gamma1);
		var dif7 = 0 < gamma1 ? theta3 : -theta3;
		if(dif7 < 0) {
			dif6 = dif7;
		} else {
			dif6 = -2 * Math.PI + dif7;
		}
		var totalSteps3 = Math.ceil(Math.abs(dif6) / step6);
		var step7 = dif6 / totalSteps3;
		var angle3 = 0;
		var cx3;
		var cy8;
		var bx8 = 0;
		var by4 = 0;
		var dx3 = 0;
		var dy3 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = radius - thick;
		var _g13 = 0;
		var _g7 = totalSteps3 + 1;
		while(_g13 < _g7) {
			cx3 = ax + radius * Math.sin(angle3);
			cy8 = cy + radius * Math.cos(angle3);
			ex3 = ax + r23 * Math.sin(angle3);
			ey3 = cy + r23 * Math.cos(angle3);
			if(_g13++ != 0) {
				var t03 = new trilateral_tri_Trilateral(dx3,dy3,bx8,by4,cx3,cy8);
				var t13 = new trilateral_tri_Trilateral(dx3,dy3,cx3,cy8,ex3,ey3);
				out4[out4.length] = t03;
				out4[out4.length] = t13;
			}
			angle3 += step7;
			bx8 = cx3;
			by4 = cy8;
			dx3 = ex3;
			dy3 = ey3;
		}
		var triArr3 = out4;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t4 = triArr3[_g8];
			++_g8;
			out[out.length] = t4;
		}
		var triArr4 = out;
		var colorID = this.colors.indexOf(color);
		var _g9 = 0;
		while(_g9 < triArr4.length) {
			var t5 = triArr4[_g9];
			++_g9;
			if(t5 != null) {
				var t6 = Type.createEmptyInstance(trilateral_tri_Triangle);
				t6.id = id;
				t6.ax = t5.ax;
				t6.ay = t5.ay;
				t6.bx = t5.bx;
				t6.by = t5.by;
				t6.cx = t5.cx;
				t6.cy = t5.cy;
				t6.mark = t5.mark;
				t6.depth = 0;
				t6.alpha = 1.;
				t6.colorID = colorID;
				t6.colorA = colorID;
				t6.colorB = colorID;
				t6.colorC = colorID;
				t6.windingAdjusted = t5.windingAdjusted;
				this1[this1.length] = t6;
			}
		}
		return this.refCount - 1;
	}
	,spiralLines: function(x,y,radius,nolines,startWid,stepWid,color) {
		var q_D;
		var q_C;
		var q_B;
		var q_A;
		var dim_y;
		var P_x;
		var p1_y;
		var p1_x;
		var theta = 0.;
		var line;
		var wid = startWid;
		var _g1 = 0;
		while(_g1 < nolines) {
			++_g1;
			p1_x = x + radius * Math.sin(theta);
			p1_y = y + radius * Math.cos(theta);
			theta += Math.PI * 2 / nolines;
			var width = wid += stepWid;
			var dx = x - p1_x;
			var dy = y - p1_y;
			P_x = x - width / 2;
			var omega = Math.atan2(dy,dx);
			dim_y = dx * dx + dy * dy;
			var pivotX = x + width / 2;
			var A_ = { x : P_x, y : y};
			var B_ = { x : P_x + width, y : y};
			var C_ = { x : P_x + width, y : y + dim_y};
			var D_ = { x : P_x, y : y + dim_y};
			if(omega != 0.) {
				var sin = Math.sin(omega);
				var cos = Math.cos(omega);
				var px = A_.x - pivotX;
				var py = A_.y - y;
				var px2 = px * cos - py * sin;
				py = py * cos + px * sin;
				A_ = { x : px2 + pivotX, y : py + y};
				var px1 = B_.x - pivotX;
				var py1 = B_.y - y;
				var px21 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				B_ = { x : px21 + pivotX, y : py1 + y};
				var px3 = C_.x - pivotX;
				var py2 = C_.y - y;
				var px22 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				C_ = { x : px22 + pivotX, y : py2 + y};
				var px4 = D_.x - pivotX;
				var py3 = D_.y - y;
				var px23 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				D_ = { x : px23 + pivotX, y : py3 + y};
			}
			q_A = A_;
			q_B = B_;
			q_C = C_;
			q_D = D_;
			line = { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
			var this1 = this.triangles;
			var id = this.refCount;
			var colorID = this.colors.indexOf(color);
			var tri = line.t0;
			var t = Type.createEmptyInstance(trilateral_tri_Triangle);
			t.id = id;
			t.ax = tri.ax;
			t.ay = tri.ay;
			t.bx = tri.bx;
			t.by = tri.by;
			t.cx = tri.cx;
			t.cy = tri.cy;
			t.mark = tri.mark;
			t.depth = 0;
			t.alpha = 1.;
			t.colorID = colorID;
			t.colorA = colorID;
			t.colorB = colorID;
			t.colorC = colorID;
			t.windingAdjusted = tri.windingAdjusted;
			this1[this1.length] = t;
			var tri1 = line.t1;
			var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t1.id = id;
			t1.ax = tri1.ax;
			t1.ay = tri1.ay;
			t1.bx = tri1.bx;
			t1.by = tri1.by;
			t1.cx = tri1.cx;
			t1.cy = tri1.cy;
			t1.mark = tri1.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = colorID;
			t1.colorA = colorID;
			t1.colorB = colorID;
			t1.colorC = colorID;
			t1.windingAdjusted = tri1.windingAdjusted;
			this1[this1.length] = t1;
		}
		this.refCount++;
		return this.refCount - 1;
	}
	,__class__: trilateral_helper_Shapes
};
var trilateral_pairs_Line = function() { };
$hxClasses["trilateral.pairs.Line"] = trilateral_pairs_Line;
trilateral_pairs_Line.__name__ = ["trilateral","pairs","Line"];
trilateral_pairs_Line.create = function(A,B,width) {
	var dx = A.x - B.x;
	var dy = A.y - B.y;
	var P_x = A.x - width / 2;
	var P_y = A.y;
	var omega = Math.atan2(dy,dx);
	var dim_y = dx * dx + dy * dy;
	var pivotX = A.x + width / 2;
	var pivotY = A.y;
	var A_ = { x : P_x, y : P_y};
	var B_ = { x : P_x + width, y : P_y};
	var C_ = { x : P_x + width, y : P_y + dim_y};
	var D_ = { x : P_x, y : P_y + dim_y};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px = A_.x - pivotX;
		var py = A_.y - pivotY;
		var px2 = px * cos - py * sin;
		py = py * cos + px * sin;
		A_ = { x : px2 + pivotX, y : py + pivotY};
		var px1 = B_.x - pivotX;
		var py1 = B_.y - pivotY;
		var px21 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		B_ = { x : px21 + pivotX, y : py1 + pivotY};
		var px3 = C_.x - pivotX;
		var py2 = C_.y - pivotY;
		var px22 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		C_ = { x : px22 + pivotX, y : py2 + pivotY};
		var px4 = D_.x - pivotX;
		var py3 = D_.y - pivotY;
		var px23 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		D_ = { x : px23 + pivotX, y : py3 + pivotY};
	}
	var q_A = A_;
	var q_B = B_;
	var q_C = C_;
	var q_D = D_;
	return { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
};
trilateral_pairs_Line.fromCoord = function(ax,ay,bx,by,width) {
	var dx = ax - bx;
	var dy = ay - by;
	var P_x = ax - width / 2;
	var omega = Math.atan2(dy,dx);
	var dim_y = dx * dx + dy * dy;
	var pivotX = ax + width / 2;
	var A_ = { x : P_x, y : ay};
	var B_ = { x : P_x + width, y : ay};
	var C_ = { x : P_x + width, y : ay + dim_y};
	var D_ = { x : P_x, y : ay + dim_y};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px = A_.x - pivotX;
		var py = A_.y - ay;
		var px2 = px * cos - py * sin;
		py = py * cos + px * sin;
		A_ = { x : px2 + pivotX, y : py + ay};
		var px1 = B_.x - pivotX;
		var py1 = B_.y - ay;
		var px21 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		B_ = { x : px21 + pivotX, y : py1 + ay};
		var px3 = C_.x - pivotX;
		var py2 = C_.y - ay;
		var px22 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		C_ = { x : px22 + pivotX, y : py2 + ay};
		var px4 = D_.x - pivotX;
		var py3 = D_.y - ay;
		var px23 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		D_ = { x : px23 + pivotX, y : py3 + ay};
	}
	var q_A = A_;
	var q_B = B_;
	var q_C = C_;
	var q_D = D_;
	return { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
};
var trilateral_pairs_Quad = function() { };
$hxClasses["trilateral.pairs.Quad"] = trilateral_pairs_Quad;
trilateral_pairs_Quad.__name__ = ["trilateral","pairs","Quad"];
trilateral_pairs_Quad.rectangle = function(x,y,w,h) {
	var bx = x + w;
	var cy = y + h;
	return { t0 : new trilateral_tri_Trilateral(x,y,bx,y,x,cy), t1 : new trilateral_tri_Trilateral(bx,y,bx,cy,x,cy)};
};
trilateral_pairs_Quad.squareOutline = function(px,py,radius,thick,theta) {
	if(theta == null) {
		theta = 0;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var r = radius * Math.sqrt(2);
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi / 2 - pi4;
		var $as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = px + r * $as;
		ay = py + r * ac;
		bx = px + r * bs;
		by = py + r * bc;
		cx = px + r * cs;
		cy = py + r * cc;
		dx = px + r * ds;
		dy = py + r * dc;
		a0x = px + r0 * $as;
		a0y = py + r0 * ac;
		b0x = px + r0 * bs;
		b0y = py + r0 * bc;
		c0x = px + r0 * cs;
		c0y = py + r0 * cc;
		d0x = px + r0 * ds;
		d0y = py + r0 * dc;
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = px - radius0;
		a0y = py - radius0;
		var l0x = radius0 * 2;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0x;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
trilateral_pairs_Quad.square = function(px,py,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var r = radius * Math.sqrt(2);
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi / 2 - pi4;
		ax = px + r * Math.sin(aTheta);
		ay = py + r * Math.cos(aTheta);
		bx = px + r * Math.sin(bTheta);
		by = py + r * Math.cos(bTheta);
		cx = px + r * Math.sin(cTheta);
		cy = py + r * Math.cos(cTheta);
		dx = px + r * Math.sin(dTheta);
		dy = py + r * Math.cos(dTheta);
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamond = function(x,y,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var r = radius * Math.sqrt(2);
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi / 2 - pi4;
		ax = x + r * Math.sin(aTheta);
		ay = y + r * Math.cos(aTheta);
		bx = x + r * Math.sin(bTheta);
		by = y + r * Math.cos(bTheta);
		cx = x + r * Math.sin(cTheta);
		cy = y + r * Math.cos(cTheta);
		dx = x + r * Math.sin(dTheta);
		dy = y + r * Math.cos(dTheta);
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamondOutline = function(x,y,thick,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var r = radius * Math.sqrt(2);
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi / 2 - pi4;
		var $as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = x + r * $as;
		ay = y + r * ac;
		bx = x + r * bs;
		by = y + r * bc;
		cx = x + r * cs;
		cy = y + r * cc;
		dx = x + r * ds;
		dy = y + r * dc;
		a0x = x + r0 * $as;
		a0y = y + r0 * ac;
		b0x = x + r0 * bs;
		b0y = y + r0 * bc;
		c0x = x + r0 * cs;
		c0y = y + r0 * cc;
		d0x = x + r0 * ds;
		d0y = y + r0 * dc;
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + lx;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = x - radius0;
		a0y = y - radius0;
		var l0x = radius0 * 2;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0x;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
var trilateral_pairs_Star = function() { };
$hxClasses["trilateral.pairs.Star"] = trilateral_pairs_Star;
trilateral_pairs_Star.__name__ = ["trilateral","pairs","Star"];
trilateral_pairs_Star.create = function(px,py,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var pi = Math.PI;
	var omega = -pi + theta;
	var a0x = px + radius * Math.sin(omega);
	var a0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var a1x = px + radius * Math.sin(omega);
	var a1y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var b0x = px + radius * Math.sin(omega);
	var b0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var b1x = px + radius * Math.sin(omega);
	var b1y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var c0x = px + radius * Math.sin(omega);
	var c0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var c1x = px + radius * Math.sin(omega);
	var c1y = py + radius * Math.cos(omega);
	return { t0 : new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y), t1 : new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y)};
};
var trilateral_path_Base = function(contour_,trilateralArray_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.width = 0.01;
	this.y = 0.;
	this.x = 0.;
	this.trilateralArray = trilateralArray_ == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : trilateralArray_;
	this.contour = contour_ == null ? new trilateral_geom_Contour(this.trilateralArray,endLine_) : contour_;
	this.endLine = endLine_;
	this.points = [];
	this.points[0] = [];
	this.dim = [];
};
$hxClasses["trilateral.path.Base"] = trilateral_path_Base;
trilateral_path_Base.__name__ = ["trilateral","path","Base"];
trilateral_path_Base.__interfaces__ = [justPath_IPathContext];
trilateral_path_Base.prototype = {
	initDim: function() {
		return { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
	}
	,updateDim: function(x,y) {
		var d = this.dim[this.dim.length - 1];
		if(x < d.minX) {
			d.minX = x;
		}
		if(x > d.maxX) {
			d.maxX = x;
		}
		if(y < d.minY) {
			d.minY = y;
		}
		if(y > d.maxY) {
			d.maxY = y;
		}
	}
	,moveTo: function(x_,y_) {
		if(this.endLine == 2 || this.endLine == 3) {
			var _this = this.contour;
			var ax = _this.bx;
			var ay = _this.by;
			var radius = this.width / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			if(theta <= Math.PI) {
				dif = clockwise ? theta : -theta;
			} else if(clockwise) {
				dif = -(2 * Math.PI - theta);
			} else {
				dif = 2 * Math.PI - theta;
			}
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		this.x = x_;
		this.y = y_;
		var l = this.points.length;
		this.points[l] = [];
		this.points[l][0] = x_;
		this.points[l][1] = y_;
		this.dim[this.dim.length] = { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.contour.reset();
	}
	,lineTo: function(x_,y_) {
		if(this.widthFunction != null) {
			this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
		}
		this.line(x_,y_);
		var p = this.points[this.points.length - 1];
		var l2 = p.length;
		p[l2] = x_;
		p[l2 + 1] = y_;
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.x = x_;
		this.y = y_;
	}
	,line: function(x_,y_) {
		haxe_Log.trace("lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )",{ fileName : "Base.hx", lineNumber : 73, className : "trilateral.path.Base", methodName : "lineTrace"});
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var radius = width_ / 2;
		var beta = -_this.angle1 - Math.PI / 2;
		var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
		var this1 = _this.triArr;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = x_ + radius * Math.sin(angle);
			cy = y_ + radius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(x_,y_,bx,by,cx,cy);
				out[out.length] = t;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			this1[this1.length] = t1;
		}
		var this2 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this2[this2.length] = tri;
		var this3 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this3[this3.length] = tri1;
	}
	,lineTrace: function(x_,y_) {
		haxe_Log.trace("lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )",{ fileName : "Base.hx", lineNumber : 73, className : "trilateral.path.Base", methodName : "lineTrace"});
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x3 = x1 - x2;
		var y3 = y1 - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * x1 + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * y1 + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		this.plotCoord(this.tempArr);
		this.x = x2;
		this.y = y2;
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x4 = x1 - x2;
		var y4 = y1 - y2;
		var x5 = x2 - x3;
		var y5 = y2 - y3;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x4 * x4 + y4 * y4) + Math.sqrt(x5 * x5 + y5 * y5);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * x1 + 3 * u * Math.pow(t,2) * x2 + Math.pow(t,3) * x3;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * y1 + 3 * u1 * Math.pow(t,2) * y2 + Math.pow(t,3) * y3;
			t += step;
		}
		p[l++] = x3;
		p[l++] = y3;
		this.plotCoord(this.tempArr);
		this.x = x3;
		this.y = y3;
	}
	,plotCoord: function(arr) {
		var l = arr.length;
		var i = 2;
		var x_ = arr[2];
		var y_ = arr[3];
		if(this.widthFunction != null) {
			this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
		}
		this.line(x_,y_);
		var p = this.points[this.points.length - 1];
		var l2 = p.length;
		p[l2] = x_;
		p[l2 + 1] = y_;
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.x = x_;
		this.y = y_;
		while(i < l) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
			}
			this.line(x_1,y_1);
			var p1 = this.points[this.points.length - 1];
			var l21 = p1.length;
			p1[l21] = x_1;
			p1[l21 + 1] = y_1;
			var d1 = this.dim[this.dim.length - 1];
			if(x_1 < d1.minX) {
				d1.minX = x_1;
			}
			if(x_1 > d1.maxX) {
				d1.maxX = x_1;
			}
			if(y_1 < d1.minY) {
				d1.minY = y_1;
			}
			if(y_1 > d1.maxY) {
				d1.maxY = y_1;
			}
			this.x = x_1;
			this.y = y_1;
			i += 2;
		}
	}
	,__class__: trilateral_path_Base
};
var trilateral_path_Crude = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.Crude"] = trilateral_path_Crude;
trilateral_path_Crude.__name__ = ["trilateral","path","Crude"];
trilateral_path_Crude.__super__ = trilateral_path_Base;
trilateral_path_Crude.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var radius = width_ / 2;
		var beta = -_this.angle1 - Math.PI / 2;
		var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
		var this1 = _this.triArr;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var step = Math.PI * 2 / 36;
		var dif;
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g1 = 0;
		var _g = totalSteps + 1;
		while(_g1 < _g) {
			cx = x_ + radius * Math.sin(angle);
			cy = y_ + radius * Math.cos(angle);
			if(_g1++ != 0) {
				var t = new trilateral_tri_Trilateral(x_,y_,bx,by,cx,cy);
				out[out.length] = t;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t1 = triArr[_g2];
			++_g2;
			this1[this1.length] = t1;
		}
		var this2 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this2[this2.length] = tri;
		var this3 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this3[this3.length] = tri1;
	}
	,__class__: trilateral_path_Crude
});
var trilateral_path_FillOnly = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.FillOnly"] = trilateral_path_FillOnly;
trilateral_path_FillOnly.__name__ = ["trilateral","path","FillOnly"];
trilateral_path_FillOnly.__super__ = trilateral_path_Base;
trilateral_path_FillOnly.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
	}
	,__class__: trilateral_path_FillOnly
});
var trilateral_path_Fine = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.Fine"] = trilateral_path_Fine;
trilateral_path_Fine.__name__ = ["trilateral","path","Fine"];
trilateral_path_Fine.__super__ = trilateral_path_Base;
trilateral_path_Fine.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		theta0 >= 0 && theta0 > Math.PI;
		theta1 >= 0 && theta1 > Math.PI;
		var theta = Math.abs(theta0 - theta1);
		var clockwise = theta0 < theta1;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		if(_this.count != 0) {
			var h = width_ * Math.sin(Math.abs(dif) / 2);
			var f;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f = theta0;
			} else {
				var a = (theta0 + Math.PI) % (2 * Math.PI);
				if(a >= 0) {
					f = a - Math.PI;
				} else {
					f = a + Math.PI;
				}
			}
			var delta = f + dif / 2 + Math.PI;
			_this.jx = _this.ax + h * Math.sin(delta);
			_this.jy = _this.ay + h * Math.cos(delta);
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif1;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta2 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			if(theta2 <= Math.PI) {
				dif1 = clockwise1 ? theta2 : -theta2;
			} else if(clockwise1) {
				dif1 = -(2 * Math.PI - theta2);
			} else {
				dif1 = 2 * Math.PI - theta2;
			}
			var totalSteps = Math.ceil(Math.abs(dif1) / step);
			var step1 = dif1 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		var radius1 = width_ / 2;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var totalSteps1 = Math.ceil(Math.abs(dif) / (Math.PI * 2 / 36));
		var step2 = dif / totalSteps1;
		var angle1 = theta0;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = ax_ + radius1 * Math.sin(angle1);
			cy1 = ay_ + radius1 * Math.cos(angle1);
			if(_g11++ != 0) {
				var t2 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
				out1[out1.length] = t2;
			}
			angle1 += step2;
			bx1 = cx1;
			by1 = cy1;
		}
		var this2 = _this.triArr;
		var _g4 = 0;
		while(_g4 < out1.length) {
			var t3 = out1[_g4];
			++_g4;
			this2[this2.length] = t3;
		}
		if(_this.count != 0) {
			if(clockWise && !_this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.jxOld,_this.jyOld);
				}
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
			}
			if(clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				}
			}
			if(!clockWise && !_this.lastClock) {
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.jxOld,_this.jyOld);
				}
			}
			if(!clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.ncx,_this.ncy);
				}
			}
		}
		_this.quadIndex = _this.triArr.length;
		if(_this.count == 0) {
			var this3 = _this.triArr;
			var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
			this3[this3.length] = tri;
			var this4 = _this.triArr;
			var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
			this4[this4.length] = tri1;
		} else {
			if(clockWise && !_this.lastClock) {
				var this5 = _this.triArr;
				var tri2 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this5[this5.length] = tri2;
				var this6 = _this.triArr;
				var tri3 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this6[this6.length] = tri3;
			}
			if(clockWise && _this.lastClock) {
				var this7 = _this.triArr;
				var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this7[this7.length] = tri4;
				var this8 = _this.triArr;
				var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this8[this8.length] = tri5;
			}
			if(!clockWise && !_this.lastClock) {
				var this9 = _this.triArr;
				var tri6 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
				this9[this9.length] = tri6;
				var this10 = _this.triArr;
				var tri7 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this10[this10.length] = tri7;
			}
			if(!clockWise && _this.lastClock) {
				var this11 = _this.triArr;
				var tri8 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this11[this11.length] = tri8;
				var this12 = _this.triArr;
				var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
				this12[this12.length] = tri9;
			}
		}
		_this.nax = _this.dxPrev;
		_this.nay = _this.dyPrev;
		_this.nbx = _this.dx;
		_this.nby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		if(_this.count != 0) {
			if(clockWise) {
				var this13 = _this.triArr;
				var tri10 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxOld,_this.dyOld,_this.jx,_this.jy,0);
				this13[this13.length] = tri10;
				var this14 = _this.triArr;
				var tri11 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
				this14[this14.length] = tri11;
			} else {
				var this15 = _this.triArr;
				var tri12 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exOld,_this.eyOld,_this.jx,_this.jy,0);
				this15[this15.length] = tri12;
				var this16 = _this.triArr;
				var tri13 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
				this16[this16.length] = tri13;
			}
		}
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
	,__class__: trilateral_path_Fine
});
var trilateral_path_FineOverlap = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.FineOverlap"] = trilateral_path_FineOverlap;
trilateral_path_FineOverlap.__name__ = ["trilateral","path","FineOverlap"];
trilateral_path_FineOverlap.__super__ = trilateral_path_Base;
trilateral_path_FineOverlap.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		theta0 >= 0 && theta0 > Math.PI;
		theta1 >= 0 && theta1 > Math.PI;
		var theta = Math.abs(theta0 - theta1);
		var clockwise = theta0 < theta1;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif1;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta2 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			if(theta2 <= Math.PI) {
				dif1 = clockwise1 ? theta2 : -theta2;
			} else if(clockwise1) {
				dif1 = -(2 * Math.PI - theta2);
			} else {
				dif1 = 2 * Math.PI - theta2;
			}
			var totalSteps = Math.ceil(Math.abs(dif1) / step);
			var step1 = dif1 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		var radius1 = width_ / 2;
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var totalSteps1 = Math.ceil(Math.abs(dif) / (Math.PI * 2 / 36));
		var step2 = dif / totalSteps1;
		var angle1 = theta0;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var _g11 = 0;
		var _g3 = totalSteps1 + 1;
		while(_g11 < _g3) {
			cx1 = ax_ + radius1 * Math.sin(angle1);
			cy1 = ay_ + radius1 * Math.cos(angle1);
			if(_g11++ != 0) {
				var t2 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
				out1[out1.length] = t2;
			}
			angle1 += step2;
			bx1 = cx1;
			by1 = cy1;
		}
		var this2 = _this.triArr;
		var _g4 = 0;
		while(_g4 < out1.length) {
			var t3 = out1[_g4];
			++_g4;
			this2[this2.length] = t3;
		}
		var this3 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this3[this3.length] = tri;
		var this4 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
		this4[this4.length] = tri1;
		_this.nax = _this.dxPrev;
		_this.nay = _this.dyPrev;
		_this.nbx = _this.dx;
		_this.nby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
	,__class__: trilateral_path_FineOverlap
});
var trilateral_path_Medium = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.Medium"] = trilateral_path_Medium;
trilateral_path_Medium.__name__ = ["trilateral","path","Medium"];
trilateral_path_Medium.__super__ = trilateral_path_Base;
trilateral_path_Medium.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		theta0 >= 0 && theta0 > Math.PI;
		theta1 >= 0 && theta1 > Math.PI;
		var theta = Math.abs(theta0 - theta1);
		var clockwise = theta0 < theta1;
		if(theta <= Math.PI) {
			dif = clockwise ? theta : -theta;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta);
		} else {
			dif = 2 * Math.PI - theta;
		}
		if(_this.count != 0) {
			var h = width_ * Math.sin(Math.abs(dif) / 2);
			var f;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f = theta0;
			} else {
				var a = (theta0 + Math.PI) % (2 * Math.PI);
				if(a >= 0) {
					f = a - Math.PI;
				} else {
					f = a + Math.PI;
				}
			}
			var delta = f + dif / 2 + Math.PI;
			_this.jx = _this.ax + h * Math.sin(delta);
			_this.jy = _this.ay + h * Math.cos(delta);
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif1;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta2 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			if(theta2 <= Math.PI) {
				dif1 = clockwise1 ? theta2 : -theta2;
			} else if(clockwise1) {
				dif1 = -(2 * Math.PI - theta2);
			} else {
				dif1 = 2 * Math.PI - theta2;
			}
			var totalSteps = Math.ceil(Math.abs(dif1) / step);
			var step1 = dif1 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		if(_this.count != 0) {
			if(clockWise) {
				var this2 = _this.triArr;
				var tri = new trilateral_tri_Trilateral(_this.dxOld,_this.dyOld,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
				this2[this2.length] = tri;
			} else {
				var this3 = _this.triArr;
				var tri1 = new trilateral_tri_Trilateral(_this.exOld,_this.eyOld,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
				this3[this3.length] = tri1;
			}
		}
		if(_this.count != 0) {
			if(clockWise && !_this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.jxOld,_this.jyOld);
				}
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
			}
			if(clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				}
			}
			if(!clockWise && !_this.lastClock) {
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.jxOld,_this.jyOld);
				}
			}
			if(!clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.ncx,_this.ncy);
				}
			}
		}
		_this.quadIndex = _this.triArr.length;
		if(_this.count == 0) {
			var this4 = _this.triArr;
			var tri2 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
			this4[this4.length] = tri2;
			var this5 = _this.triArr;
			var tri3 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
			this5[this5.length] = tri3;
		} else {
			if(clockWise && !_this.lastClock) {
				var this6 = _this.triArr;
				var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this6[this6.length] = tri4;
				var this7 = _this.triArr;
				var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this7[this7.length] = tri5;
			}
			if(clockWise && _this.lastClock) {
				var this8 = _this.triArr;
				var tri6 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this8[this8.length] = tri6;
				var this9 = _this.triArr;
				var tri7 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this9[this9.length] = tri7;
			}
			if(!clockWise && !_this.lastClock) {
				var this10 = _this.triArr;
				var tri8 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
				this10[this10.length] = tri8;
				var this11 = _this.triArr;
				var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this11[this11.length] = tri9;
			}
			if(!clockWise && _this.lastClock) {
				var this12 = _this.triArr;
				var tri10 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this12[this12.length] = tri10;
				var this13 = _this.triArr;
				var tri11 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
				this13[this13.length] = tri11;
			}
		}
		_this.nax = _this.dxPrev;
		_this.nay = _this.dyPrev;
		_this.nbx = _this.dx;
		_this.nby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
	,__class__: trilateral_path_Medium
});
var trilateral_path_MediumOverlap = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.MediumOverlap"] = trilateral_path_MediumOverlap;
trilateral_path_MediumOverlap.__name__ = ["trilateral","path","MediumOverlap"];
trilateral_path_MediumOverlap.__super__ = trilateral_path_Base;
trilateral_path_MediumOverlap.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		theta0 >= 0 && theta0 > Math.PI;
		theta1 >= 0 && theta1 > Math.PI;
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			if(theta <= Math.PI) {
				dif = clockwise ? theta : -theta;
			} else if(clockwise) {
				dif = -(2 * Math.PI - theta);
			} else {
				dif = 2 * Math.PI - theta;
			}
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		}
		if(_this.count != 0) {
			if(clockWise) {
				var this2 = _this.triArr;
				var tri = new trilateral_tri_Trilateral(_this.dxOld,_this.dyOld,_this.exPrev,_this.eyPrev,_this.ax,_this.ay,0);
				this2[this2.length] = tri;
			} else {
				var this3 = _this.triArr;
				var tri1 = new trilateral_tri_Trilateral(_this.exOld,_this.eyOld,_this.dxPrev,_this.dyPrev,_this.ax,_this.ay,0);
				this3[this3.length] = tri1;
			}
		}
		var this4 = _this.triArr;
		var tri2 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this4[this4.length] = tri2;
		var this5 = _this.triArr;
		var tri3 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
		this5[this5.length] = tri3;
		_this.nax = _this.dxPrev;
		_this.nay = _this.dyPrev;
		_this.nbx = _this.dx;
		_this.nby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
	,__class__: trilateral_path_MediumOverlap
});
var trilateral_path_RoundEnd = function(contour_,trilateralArray_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_);
};
$hxClasses["trilateral.path.RoundEnd"] = trilateral_path_RoundEnd;
trilateral_path_RoundEnd.__name__ = ["trilateral","path","RoundEnd"];
trilateral_path_RoundEnd.__super__ = trilateral_path_Base;
trilateral_path_RoundEnd.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		var endLineCurve = 3;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		if(endLineCurve == null) {
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
			var this1 = _this.triArr;
			var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
			var step = Math.PI * 2 / 36;
			var dif;
			beta >= 0 && beta > Math.PI;
			gamma >= 0 && gamma > Math.PI;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			if(theta <= Math.PI) {
				dif = clockwise ? theta : -theta;
			} else if(clockwise) {
				dif = -(2 * Math.PI - theta);
			} else {
				dif = 2 * Math.PI - theta;
			}
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g1 = 0;
			var _g = totalSteps + 1;
			while(_g1 < _g) {
				cx = x_ + radius * Math.sin(angle);
				cy = y_ + radius * Math.cos(angle);
				if(_g1++ != 0) {
					var t = new trilateral_tri_Trilateral(x_,y_,bx,by,cx,cy);
					out[out.length] = t;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t1 = triArr[_g2];
				++_g2;
				this1[this1.length] = t1;
			}
		} else {
			switch(endLineCurve) {
			case 0:
				break;
			case 1:
				break;
			case 3:
				var radius1 = width_ / 2;
				var beta1 = -_this.angle1 - Math.PI / 2;
				var gamma1 = -_this.angle1 - Math.PI / 2 - Math.PI;
				var this2 = _this.triArr;
				var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
				var step2 = Math.PI * 2 / 36;
				var dif1;
				beta1 >= 0 && beta1 > Math.PI;
				gamma1 >= 0 && gamma1 > Math.PI;
				var theta1 = Math.abs(beta1 - gamma1);
				var clockwise1 = beta1 < gamma1;
				if(theta1 <= Math.PI) {
					dif1 = clockwise1 ? theta1 : -theta1;
				} else if(clockwise1) {
					dif1 = -(2 * Math.PI - theta1);
				} else {
					dif1 = 2 * Math.PI - theta1;
				}
				var totalSteps1 = Math.ceil(Math.abs(dif1) / step2);
				var step3 = dif1 / totalSteps1;
				var angle1 = beta1;
				var cx1;
				var cy1;
				var bx1 = 0;
				var by1 = 0;
				var _g11 = 0;
				var _g3 = totalSteps1 + 1;
				while(_g11 < _g3) {
					cx1 = x_ + radius1 * Math.sin(angle1);
					cy1 = y_ + radius1 * Math.cos(angle1);
					if(_g11++ != 0) {
						var t2 = new trilateral_tri_Trilateral(x_,y_,bx1,by1,cx1,cy1);
						out1[out1.length] = t2;
					}
					angle1 += step3;
					bx1 = cx1;
					by1 = cy1;
				}
				var triArr1 = out1;
				var _g4 = 0;
				while(_g4 < triArr1.length) {
					var t3 = triArr1[_g4];
					++_g4;
					this2[this2.length] = t3;
				}
				break;
			default:
			}
		}
		var this3 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this3[this3.length] = tri;
		var this4 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this4[this4.length] = tri1;
	}
	,__class__: trilateral_path_RoundEnd
});
var trilateral_polys_Poly = function() { };
$hxClasses["trilateral.polys.Poly"] = trilateral_polys_Poly;
trilateral_polys_Poly.__name__ = ["trilateral","polys","Poly"];
trilateral_polys_Poly.circle = function(ax,ay,radius,sides) {
	if(sides == null) {
		sides = 36;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g1 = 0;
	while(_g1 < sides) {
		++_g1;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.pie = function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step = Math.PI * 2 / sides;
	var dif;
	switch(prefer[1]) {
	case 0:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		break;
	case 1:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta1 = Math.abs(beta - gamma);
		var dif2 = beta < gamma ? theta1 : -theta1;
		if(dif2 < 0) {
			dif = dif2;
		} else {
			dif = -2 * Math.PI + dif2;
		}
		break;
	case 2:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta2 = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		if(theta2 <= Math.PI) {
			dif = clockwise ? theta2 : -theta2;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta2);
		} else {
			dif = 2 * Math.PI - theta2;
		}
		break;
	case 3:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta3 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		if(theta3 > Math.PI) {
			dif = clockwise1 ? theta3 : -theta3;
		} else if(clockwise1) {
			dif = -(2 * Math.PI - theta3);
		} else {
			dif = 2 * Math.PI - theta3;
		}
		break;
	}
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g1 = 0;
	var _g = totalSteps + 1;
	while(_g1 < _g) {
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(_g1++ != 0) {
			var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t;
			if(mark != 0) {
				t.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.pieDif = function(ax,ay,radius,beta,dif,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var totalSteps = Math.ceil(Math.abs(dif) / (Math.PI * 2 / sides));
	var step = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g1 = 0;
	var _g = totalSteps + 1;
	while(_g1 < _g) {
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(_g1++ != 0) {
			var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t;
			if(mark != 0) {
				t.mark = mark;
			}
		}
		angle += step;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.arc = function(ax,ay,radius,width,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step = Math.PI * 2 / sides;
	var dif;
	switch(prefer[1]) {
	case 0:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta = Math.abs(beta - gamma);
		var dif1 = beta < gamma ? theta : -theta;
		if(dif1 > 0) {
			dif = dif1;
		} else {
			dif = 2 * Math.PI + dif1;
		}
		break;
	case 1:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta1 = Math.abs(beta - gamma);
		var dif2 = beta < gamma ? theta1 : -theta1;
		if(dif2 < 0) {
			dif = dif2;
		} else {
			dif = -2 * Math.PI + dif2;
		}
		break;
	case 2:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta2 = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		if(theta2 <= Math.PI) {
			dif = clockwise ? theta2 : -theta2;
		} else if(clockwise) {
			dif = -(2 * Math.PI - theta2);
		} else {
			dif = 2 * Math.PI - theta2;
		}
		break;
	case 3:
		beta >= 0 && beta > Math.PI;
		gamma >= 0 && gamma > Math.PI;
		var theta3 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		if(theta3 > Math.PI) {
			dif = clockwise1 ? theta3 : -theta3;
		} else if(clockwise1) {
			dif = -(2 * Math.PI - theta3);
		} else {
			dif = 2 * Math.PI - theta3;
		}
		break;
	}
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var dx = 0;
	var dy = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - width;
	var _g1 = 0;
	var _g = totalSteps + 1;
	while(_g1 < _g) {
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(_g1++ != 0) {
			var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
			var t1 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
			out[out.length] = t0;
			out[out.length] = t1;
			if(mark != 0) {
				t0.mark = mark;
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
		dx = ex;
		dy = ey;
	}
	return out;
};
trilateral_polys_Poly.circleMarked = function(ax,ay,radius,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g1 = 0;
	while(_g1 < sides) {
		++_g1;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var t = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = t;
		t.mark = mark;
	}
	return out;
};
trilateral_polys_Poly.circleOnSide = function(ax,ay,radius,sides) {
	if(sides == null) {
		sides = 36;
	}
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	theta -= step / 2;
	var bx;
	var by;
	var cx;
	var cy;
	var _g1 = 0;
	while(_g1 < sides) {
		++_g1;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.shape = function(x,y,radius,p) {
	if((p & 1) == 0) {
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / p;
		theta -= step / 2;
		var bx;
		var by;
		var cx;
		var cy;
		var _g1 = 0;
		var _g = p;
		while(_g1 < _g) {
			++_g1;
			bx = x + radius * Math.sin(theta);
			by = y + radius * Math.cos(theta);
			theta += step;
			cx = x + radius * Math.sin(theta);
			cy = y + radius * Math.cos(theta);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		return out;
	} else {
		var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / p;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g11 = 0;
		var _g2 = p;
		while(_g11 < _g2) {
			++_g11;
			bx1 = x + radius * Math.sin(theta1);
			by1 = y + radius * Math.cos(theta1);
			theta1 += step1;
			cx1 = x + radius * Math.sin(theta1);
			cy1 = y + radius * Math.cos(theta1);
			var tri1 = new trilateral_tri_Trilateral(x,y,bx1,by1,cx1,cy1);
			out1[out1.length] = tri1;
		}
		return out1;
	}
};
trilateral_polys_Poly.roundedRectangle = function(x,y,width,height,radius) {
	var tp_t1;
	var tp_t0;
	var tp_t11;
	var tp_t01;
	var tp_t12;
	var tp_t02;
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cy = y + height - radius;
	var bx1 = ax + (width - radius * 2);
	var cy1 = y + height;
	tp_t02 = new trilateral_tri_Trilateral(ax,y,bx1,y,ax,cy1);
	tp_t12 = new trilateral_tri_Trilateral(bx1,y,bx1,cy1,ax,cy1);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var dimY = height - 2 * radius;
	var bx2 = x + radius;
	var cy2 = ay + dimY;
	tp_t01 = new trilateral_tri_Trilateral(x,ay,bx2,ay,x,cy2);
	tp_t11 = new trilateral_tri_Trilateral(bx2,ay,bx2,cy2,x,cy2);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var bx3 = bx + radius;
	var cy3 = by + dimY;
	tp_t0 = new trilateral_tri_Trilateral(bx,by,bx3,by,bx,cy3);
	tp_t1 = new trilateral_tri_Trilateral(bx3,by,bx3,cy3,bx,cy3);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var beta = -pi;
	var gamma = -pi_2;
	var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step = Math.PI * 2 / 36;
	var dif;
	beta >= 0 && beta > Math.PI;
	gamma >= 0 && gamma > Math.PI;
	var theta = Math.abs(beta - gamma);
	var dif1 = beta < gamma ? theta : -theta;
	if(dif1 > 0) {
		dif = dif1;
	} else {
		dif = 2 * Math.PI + dif1;
	}
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy4;
	var bx4 = 0;
	var by1 = 0;
	var _g1 = 0;
	var _g = totalSteps + 1;
	while(_g1 < _g) {
		cx = ax + radius * Math.sin(angle);
		cy4 = ay + radius * Math.cos(angle);
		if(_g1++ != 0) {
			var t = new trilateral_tri_Trilateral(ax,ay,bx4,by1,cx,cy4);
			out1[out1.length] = t;
		}
		angle += step1;
		bx4 = cx;
		by1 = cy4;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t1 = triArr[_g2];
		++_g2;
		out[out.length] = t1;
	}
	var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step2 = Math.PI * 2 / 36;
	var dif2;
	pi_2 >= 0 && pi_2 > Math.PI;
	pi >= 0 && pi > Math.PI;
	var theta1 = Math.abs(pi_2 - pi);
	var dif3 = pi_2 < pi ? theta1 : -theta1;
	if(dif3 > 0) {
		dif2 = dif3;
	} else {
		dif2 = 2 * Math.PI + dif3;
	}
	var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
	var step3 = dif2 / totalSteps1;
	var angle1 = pi_2;
	var cx1;
	var cy5;
	var bx5 = 0;
	var by2 = 0;
	var _g11 = 0;
	var _g3 = totalSteps1 + 1;
	while(_g11 < _g3) {
		cx1 = bx + radius * Math.sin(angle1);
		cy5 = by + radius * Math.cos(angle1);
		if(_g11++ != 0) {
			var t2 = new trilateral_tri_Trilateral(bx,by,bx5,by2,cx1,cy5);
			out2[out2.length] = t2;
		}
		angle1 += step3;
		bx5 = cx1;
		by2 = cy5;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t3 = triArr1[_g4];
		++_g4;
		out[out.length] = t3;
	}
	var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step4 = Math.PI * 2 / 36;
	var dif4;
	pi_2 >= 0 && pi_2 > Math.PI;
	var theta2 = Math.abs(pi_2);
	var dif5 = pi_2 < 0 ? theta2 : -theta2;
	if(dif5 < 0) {
		dif4 = dif5;
	} else {
		dif4 = -2 * Math.PI + dif5;
	}
	var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
	var step5 = dif4 / totalSteps2;
	var angle2 = pi_2;
	var cx2;
	var cy6;
	var bx6 = 0;
	var by3 = 0;
	var _g12 = 0;
	var _g5 = totalSteps2 + 1;
	while(_g12 < _g5) {
		cx2 = bx + radius * Math.sin(angle2);
		cy6 = cy + radius * Math.cos(angle2);
		if(_g12++ != 0) {
			var t4 = new trilateral_tri_Trilateral(bx,cy,bx6,by3,cx2,cy6);
			out3[out3.length] = t4;
		}
		angle2 += step5;
		bx6 = cx2;
		by3 = cy6;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t5 = triArr2[_g6];
		++_g6;
		out[out.length] = t5;
	}
	var gamma1 = -pi_2;
	var out4 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step6 = Math.PI * 2 / 36;
	var dif6;
	gamma1 >= 0 && gamma1 > Math.PI;
	var theta3 = Math.abs(0 - gamma1);
	var dif7 = 0 < gamma1 ? theta3 : -theta3;
	if(dif7 < 0) {
		dif6 = dif7;
	} else {
		dif6 = -2 * Math.PI + dif7;
	}
	var totalSteps3 = Math.ceil(Math.abs(dif6) / step6);
	var step7 = dif6 / totalSteps3;
	var angle3 = 0;
	var cx3;
	var cy7;
	var bx7 = 0;
	var by4 = 0;
	var _g13 = 0;
	var _g7 = totalSteps3 + 1;
	while(_g13 < _g7) {
		cx3 = ax + radius * Math.sin(angle3);
		cy7 = cy + radius * Math.cos(angle3);
		if(_g13++ != 0) {
			var t6 = new trilateral_tri_Trilateral(ax,cy,bx7,by4,cx3,cy7);
			out4[out4.length] = t6;
		}
		angle3 += step7;
		bx7 = cx3;
		by4 = cy7;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t7 = triArr3[_g8];
		++_g8;
		out[out.length] = t7;
	}
	return out;
};
trilateral_polys_Poly.roundedRectangleOutline = function(x,y,width,height,thick,radius) {
	var tp_t1;
	var tp_t0;
	var tp_t11;
	var tp_t01;
	var tp_t12;
	var tp_t02;
	var tp_t13;
	var tp_t03;
	var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cy = y + height - radius;
	var bx1 = ax + (width - radius * 2);
	var cy1 = y + thick;
	tp_t03 = new trilateral_tri_Trilateral(ax,y,bx1,y,ax,cy1);
	tp_t13 = new trilateral_tri_Trilateral(bx1,y,bx1,cy1,ax,cy1);
	out[out.length] = tp_t03;
	out[out.length] = tp_t13;
	var ay1 = y + height - thick;
	var bx2 = ax + (width - radius * 2);
	var cy2 = ay1 + thick;
	tp_t02 = new trilateral_tri_Trilateral(ax,ay1,bx2,ay1,ax,cy2);
	tp_t12 = new trilateral_tri_Trilateral(bx2,ay1,bx2,cy2,ax,cy2);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var dimY = height - 2 * radius;
	var bx3 = x + thick;
	var cy3 = ay + dimY;
	tp_t01 = new trilateral_tri_Trilateral(x,ay,bx3,ay,x,cy3);
	tp_t11 = new trilateral_tri_Trilateral(bx3,ay,bx3,cy3,x,cy3);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var x1 = x + width - thick;
	var bx4 = x1 + thick;
	var cy4 = by + dimY;
	tp_t0 = new trilateral_tri_Trilateral(x1,by,bx4,by,x1,cy4);
	tp_t1 = new trilateral_tri_Trilateral(bx4,by,bx4,cy4,x1,cy4);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var beta = -pi;
	var gamma = -pi_2;
	var out1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step = Math.PI * 2 / 36;
	var dif;
	beta >= 0 && beta > Math.PI;
	gamma >= 0 && gamma > Math.PI;
	var theta = Math.abs(beta - gamma);
	var dif1 = beta < gamma ? theta : -theta;
	if(dif1 > 0) {
		dif = dif1;
	} else {
		dif = 2 * Math.PI + dif1;
	}
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy5;
	var bx5 = 0;
	var by1 = 0;
	var dx = 0;
	var dy = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - thick;
	var _g1 = 0;
	var _g = totalSteps + 1;
	while(_g1 < _g) {
		cx = ax + radius * Math.sin(angle);
		cy5 = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(_g1++ != 0) {
			var t0 = new trilateral_tri_Trilateral(dx,dy,bx5,by1,cx,cy5);
			var t1 = new trilateral_tri_Trilateral(dx,dy,cx,cy5,ex,ey);
			out1[out1.length] = t0;
			out1[out1.length] = t1;
		}
		angle += step1;
		bx5 = cx;
		by1 = cy5;
		dx = ex;
		dy = ey;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t = triArr[_g2];
		++_g2;
		out[out.length] = t;
	}
	var out2 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step2 = Math.PI * 2 / 36;
	var dif2;
	pi_2 >= 0 && pi_2 > Math.PI;
	pi >= 0 && pi > Math.PI;
	var theta1 = Math.abs(pi_2 - pi);
	var dif3 = pi_2 < pi ? theta1 : -theta1;
	if(dif3 > 0) {
		dif2 = dif3;
	} else {
		dif2 = 2 * Math.PI + dif3;
	}
	var totalSteps1 = Math.ceil(Math.abs(dif2) / step2);
	var step3 = dif2 / totalSteps1;
	var angle1 = pi_2;
	var cx1;
	var cy6;
	var bx6 = 0;
	var by2 = 0;
	var dx1 = 0;
	var dy1 = 0;
	var ex1 = 0;
	var ey1 = 0;
	var r21 = radius - thick;
	var _g11 = 0;
	var _g3 = totalSteps1 + 1;
	while(_g11 < _g3) {
		cx1 = bx + radius * Math.sin(angle1);
		cy6 = by + radius * Math.cos(angle1);
		ex1 = bx + r21 * Math.sin(angle1);
		ey1 = by + r21 * Math.cos(angle1);
		if(_g11++ != 0) {
			var t01 = new trilateral_tri_Trilateral(dx1,dy1,bx6,by2,cx1,cy6);
			var t11 = new trilateral_tri_Trilateral(dx1,dy1,cx1,cy6,ex1,ey1);
			out2[out2.length] = t01;
			out2[out2.length] = t11;
		}
		angle1 += step3;
		bx6 = cx1;
		by2 = cy6;
		dx1 = ex1;
		dy1 = ey1;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t2 = triArr1[_g4];
		++_g4;
		out[out.length] = t2;
	}
	var out3 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step4 = Math.PI * 2 / 36;
	var dif4;
	pi_2 >= 0 && pi_2 > Math.PI;
	var theta2 = Math.abs(pi_2);
	var dif5 = pi_2 < 0 ? theta2 : -theta2;
	if(dif5 < 0) {
		dif4 = dif5;
	} else {
		dif4 = -2 * Math.PI + dif5;
	}
	var totalSteps2 = Math.ceil(Math.abs(dif4) / step4);
	var step5 = dif4 / totalSteps2;
	var angle2 = pi_2;
	var cx2;
	var cy7;
	var bx7 = 0;
	var by3 = 0;
	var dx2 = 0;
	var dy2 = 0;
	var ex2 = 0;
	var ey2 = 0;
	var r22 = radius - thick;
	var _g12 = 0;
	var _g5 = totalSteps2 + 1;
	while(_g12 < _g5) {
		cx2 = bx + radius * Math.sin(angle2);
		cy7 = cy + radius * Math.cos(angle2);
		ex2 = bx + r22 * Math.sin(angle2);
		ey2 = cy + r22 * Math.cos(angle2);
		if(_g12++ != 0) {
			var t02 = new trilateral_tri_Trilateral(dx2,dy2,bx7,by3,cx2,cy7);
			var t12 = new trilateral_tri_Trilateral(dx2,dy2,cx2,cy7,ex2,ey2);
			out3[out3.length] = t02;
			out3[out3.length] = t12;
		}
		angle2 += step5;
		bx7 = cx2;
		by3 = cy7;
		dx2 = ex2;
		dy2 = ey2;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t3 = triArr2[_g6];
		++_g6;
		out[out.length] = t3;
	}
	var gamma1 = -pi_2;
	var out4 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
	var step6 = Math.PI * 2 / 36;
	var dif6;
	gamma1 >= 0 && gamma1 > Math.PI;
	var theta3 = Math.abs(0 - gamma1);
	var dif7 = 0 < gamma1 ? theta3 : -theta3;
	if(dif7 < 0) {
		dif6 = dif7;
	} else {
		dif6 = -2 * Math.PI + dif7;
	}
	var totalSteps3 = Math.ceil(Math.abs(dif6) / step6);
	var step7 = dif6 / totalSteps3;
	var angle3 = 0;
	var cx3;
	var cy8;
	var bx8 = 0;
	var by4 = 0;
	var dx3 = 0;
	var dy3 = 0;
	var ex3 = 0;
	var ey3 = 0;
	var r23 = radius - thick;
	var _g13 = 0;
	var _g7 = totalSteps3 + 1;
	while(_g13 < _g7) {
		cx3 = ax + radius * Math.sin(angle3);
		cy8 = cy + radius * Math.cos(angle3);
		ex3 = ax + r23 * Math.sin(angle3);
		ey3 = cy + r23 * Math.cos(angle3);
		if(_g13++ != 0) {
			var t03 = new trilateral_tri_Trilateral(dx3,dy3,bx8,by4,cx3,cy8);
			var t13 = new trilateral_tri_Trilateral(dx3,dy3,cx3,cy8,ex3,ey3);
			out4[out4.length] = t03;
			out4[out4.length] = t13;
		}
		angle3 += step7;
		bx8 = cx3;
		by4 = cy8;
		dx3 = ex3;
		dy3 = ey3;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t4 = triArr3[_g8];
		++_g8;
		out[out.length] = t4;
	}
	return out;
};
var trilateral_tri_Trilateral = function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
	if(mark_ == null) {
		mark_ = 0;
	}
	this.mark = 0;
	this.ax = ax_;
	this.ay = ay_;
	this.bx = bx_;
	this.by = by_;
	this.cx = cx_;
	this.cy = cy_;
	this.windingAdjusted = this.adjustWinding();
	if(this.windingAdjusted) {
		this.ax = ax_;
		this.ay = ay_;
		this.bx = cx_;
		this.by = cy_;
		this.cx = bx_;
		this.cy = by_;
	}
	this.mark = mark_;
};
$hxClasses["trilateral.tri.Trilateral"] = trilateral_tri_Trilateral;
trilateral_tri_Trilateral.__name__ = ["trilateral","tri","Trilateral"];
trilateral_tri_Trilateral.prototype = {
	get_x: function() {
		return Math.min(Math.min(this.ax,this.bx),this.cx);
	}
	,set_x: function(x) {
		var dx = x - this.get_x();
		this.ax += dx;
		this.bx += dx;
		this.cx += dx;
		return x;
	}
	,get_y: function() {
		return Math.min(Math.min(this.ay,this.by),this.cy);
	}
	,set_y: function(y) {
		var dy = y - this.get_y();
		this.ay += dy;
		this.by += dy;
		this.cy += dy;
		return y;
	}
	,get_right: function() {
		return Math.max(Math.max(this.ax,this.bx),this.cx);
	}
	,get_bottom: function() {
		return Math.max(Math.max(this.ay,this.by),this.cy);
	}
	,moveDelta: function(dx,dy) {
		this.ax += dx;
		this.ay += dy;
		this.bx += dx;
		this.by += dy;
		this.cx += dx;
		this.cy += dy;
	}
	,liteHit: function(px,py) {
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,fullHit: function(px,py) {
		if(px > this.get_x() && px < this.get_right() && py > this.get_y() && py < this.get_bottom()) {
			return true;
		}
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,adjustWinding: function() {
		return this.ax * this.by - this.bx * this.ay + (this.bx * this.cy - this.cx * this.by) + (this.cx * this.ay - this.ax * this.cy) > 0;
	}
	,rotate: function(x,y,theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx;
		var dy;
		dx = this.ax;
		dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
	,rotateTrig: function(x,y,cos,sin) {
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx;
		var dy;
		dx = this.ax;
		dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
	,__class__: trilateral_tri_Trilateral
	,__properties__: {get_bottom:"get_bottom",get_right:"get_right",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var trilateral_tri_Triangle = function(id_,A,B,C,depth_,colorID_) {
	this.id = id_;
	trilateral_tri_Trilateral.call(this,A.x,A.y,B.x,B.y,C.x,C.y);
	this.depth = depth_;
	this.alpha = 1.;
	this.colorID = colorID_;
	this.colorA = colorID_;
	this.colorB = colorID_;
	this.colorC = colorID_;
};
$hxClasses["trilateral.tri.Triangle"] = trilateral_tri_Triangle;
trilateral_tri_Triangle.__name__ = ["trilateral","tri","Triangle"];
trilateral_tri_Triangle.fromTrilateral = function(id_,tri,depth_,colorID_) {
	var t = Type.createEmptyInstance(trilateral_tri_Triangle);
	t.id = id_;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = depth_;
	t.alpha = 1.;
	t.colorID = colorID_;
	t.colorA = colorID_;
	t.colorB = colorID_;
	t.colorC = colorID_;
	t.windingAdjusted = tri.windingAdjusted;
	return t;
};
trilateral_tri_Triangle.__super__ = trilateral_tri_Trilateral;
trilateral_tri_Triangle.prototype = $extend(trilateral_tri_Trilateral.prototype,{
	hitTest: function(P) {
		return this.fullHit(P.x,P.y);
	}
	,drawStrips: function(drawRect) {
		var xi = Math.floor(this.get_x());
		var righti = Math.ceil(this.get_right());
		var bottomi = Math.ceil(this.get_bottom());
		var sx = 0;
		var ex = 0;
		var sFound;
		var eFound;
		var _g1 = Math.floor(this.get_y());
		while(_g1 < bottomi) {
			var y0 = _g1++;
			sFound = false;
			eFound = false;
			var _g3 = xi;
			while(_g3 < righti) {
				var x0 = _g3++;
				var planeAB = (this.ax - x0) * (this.by - y0) - (this.bx - x0) * (this.ay - y0);
				var planeBC = (this.bx - x0) * (this.cy - y0) - (this.cx - x0) * (this.by - y0);
				var planeCA = (this.cx - x0) * (this.ay - y0) - (this.ax - x0) * (this.cy - y0);
				if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0) && (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0)) {
					sx = x0;
					sFound = true;
					break;
				}
			}
			if(sFound) {
				var _g31 = sx;
				while(_g31 < righti) {
					var x01 = _g31++;
					var planeAB1 = (this.ax - x01) * (this.by - y0) - (this.bx - x01) * (this.ay - y0);
					var planeBC1 = (this.bx - x01) * (this.cy - y0) - (this.cx - x01) * (this.by - y0);
					var planeCA1 = (this.cx - x01) * (this.ay - y0) - (this.ax - x01) * (this.cy - y0);
					if(!((Math.abs(planeAB1) / planeAB1 | 0) == (Math.abs(planeBC1) / planeBC1 | 0) && (Math.abs(planeBC1) / planeBC1 | 0) == (Math.abs(planeCA1) / planeCA1 | 0))) {
						ex = x01;
						eFound = true;
						break;
					}
				}
				if(eFound) {
					drawRect(sx,y0,ex - sx,1);
				}
			}
		}
	}
	,__class__: trilateral_tri_Triangle
});
var trilateral_tri__$TriangleArray_TriangleArray_$Impl_$ = {};
$hxClasses["trilateral.tri._TriangleArray.TriangleArray_Impl_"] = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$;
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.__name__ = ["trilateral","tri","_TriangleArray","TriangleArray_Impl_"];
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new = function(t) {
	return t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getEmpty = function() {
	return trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.clear = function(this1) {
	this1 = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.pushPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.drawTriangle = function(this1,id,p0,p1,p2,colorID) {
	var tri = new trilateral_tri_Triangle(id,p0,p1,p2,0,colorID);
	this1[this1.length] = tri;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.add = function(this1,id,tri,colorID) {
	var t = Type.createEmptyInstance(trilateral_tri_Triangle);
	t.id = id;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri.windingAdjusted;
	this1[this1.length] = t;
	return t;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addPair = function(this1,id,tri,colorID) {
	var tri1 = tri.t0;
	var t = Type.createEmptyInstance(trilateral_tri_Triangle);
	t.id = id;
	t.ax = tri1.ax;
	t.ay = tri1.ay;
	t.bx = tri1.bx;
	t.by = tri1.by;
	t.cx = tri1.cx;
	t.cy = tri1.cy;
	t.mark = tri1.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri1.windingAdjusted;
	this1[this1.length] = t;
	var tri2 = tri.t1;
	var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
	t1.id = id;
	t1.ax = tri2.ax;
	t1.ay = tri2.ay;
	t1.bx = tri2.bx;
	t1.by = tri2.by;
	t1.cx = tri2.cx;
	t1.cy = tri2.cy;
	t1.mark = tri2.mark;
	t1.depth = 0;
	t1.alpha = 1.;
	t1.colorID = colorID;
	t1.colorA = colorID;
	t1.colorB = colorID;
	t1.colorC = colorID;
	t1.windingAdjusted = tri2.windingAdjusted;
	this1[this1.length] = t1;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addArray = function(this1,id,triArr,colorID) {
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		if(t != null) {
			var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t1.id = id;
			t1.ax = t.ax;
			t1.ay = t.ay;
			t1.bx = t.bx;
			t1.by = t.by;
			t1.cx = t.cx;
			t1.cy = t.cy;
			t1.mark = t.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = colorID;
			t1.colorA = colorID;
			t1.colorB = colorID;
			t1.colorC = colorID;
			t1.windingAdjusted = t.windingAdjusted;
			this1[this1.length] = t1;
		}
	}
	return triArr;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getTriangles = function(this1,id) {
	var out = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1[i].id == id) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getHitTriangles = function(this1,p) {
	var out = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1[i].hitTest(p)) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
var trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$ = {};
$hxClasses["trilateral.tri._TrilateralArray.TrilateralArray_Impl_"] = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$;
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.__name__ = ["trilateral","tri","_TrilateralArray","TrilateralArray_Impl_"];
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new = function(t) {
	return t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.reversed = function(this1) {
	this1.reverse();
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.getEmpty = function() {
	return trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.clear = function(this1) {
	this1 = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.add = function(this1,tri) {
	this1[this1.length] = tri;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addArray = function(this1,triArr) {
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		this1[this1.length] = t;
	}
	return triArr;
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
haxe_Resource.content = [{ name : "default.frag.textured.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCnVuaWZvcm0gc2FtcGxlcjJEIHRleDA7CmluIHZlYzIgdGNvb3JkOwppbiB2ZWM0IGNvbG9yOwpvdXQgdmVjNCBmcmFnOwoKdm9pZCBtYWluKCkgewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4MCwgdGNvb3JkKTsKICAgIGZyYWcgPSBjb2xvciAqIHRleGNvbG9yOwp9"},{ name : "version", data : "MS4wLjAtYWxwaGEuMw"},{ name : "default.vert.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCmxheW91dChsb2NhdGlvbiA9IDApIGluIHZlYzMgdmVydGV4UG9zaXRpb247CmxheW91dChsb2NhdGlvbiA9IDEpIGluIHZlYzIgdmVydGV4VENvb3JkOwpsYXlvdXQobG9jYXRpb24gPSAyKSBpbiB2ZWM0IHZlcnRleENvbG9yOwpsYXlvdXQobG9jYXRpb24gPSAzKSBpbiB2ZWMzIHZlcnRleE5vcm1hbDsKCm91dCB2ZWMyIHRjb29yZDsKb3V0IHZlYzQgY29sb3I7Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSBtYXQ0IG1vZGVsVmlld01hdHJpeDsKCnZvaWQgbWFpbih2b2lkKSB7CgogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRjb29yZCA9IHZlcnRleFRDb29yZDsKICAgIGNvbG9yID0gdmVydGV4Q29sb3I7Cgp9"},{ name : "default.vert.glsl", data : "YXR0cmlidXRlIHZlYzMgdmVydGV4UG9zaXRpb247CmF0dHJpYnV0ZSB2ZWMyIHZlcnRleFRDb29yZDsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7CmF0dHJpYnV0ZSB2ZWMzIHZlcnRleE5vcm1hbDsKCnZhcnlpbmcgdmVjMiB0Y29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4OwoKdm9pZCBtYWluKHZvaWQpIHsKCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGNvb3JkID0gdmVydGV4VENvb3JkOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgICAgICAvL2htbSEgSSB0aGluayBzaGFkZXJzIGFyZSBjb21waWxlZCBvcHRpbWlzZWQsIHJlbW92aW5nIHVudXNlZCB2YWx1ZXMgd2hpY2ggbWVhbnMKICAgICAgICAvL3RoYXQgdGhlIHNoYWRlcnMgZ2V0VmVydGV4Tm9ybWFsIGF0dHJpYnV0ZSByZXR1cm5zIGludmFsaWQgKC0xKSB2YWx1ZXMhCiAgICB2ZWMzIG4gPSB2ZXJ0ZXhOb3JtYWw7CiAgICBnbF9Qb2ludFNpemUgPSAxLjA7Cgp9"},{ name : "default.frag.bitmapfont.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCiNkZWZpbmUgT1VUTElORSAxCiNkZWZpbmUgR0xPVyAxCiNkZWZpbmUgU1VQRVJTQU1QTEUgMQoKdW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsKaW4gdmVjMiB0Y29vcmQ7CmluIHZlYzQgY29sb3I7Cm91dCB2ZWM0IGZyYWc7Cgp1bmlmb3JtIGZsb2F0IHNtb290aG5lc3M7CnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOwoKdW5pZm9ybSB2ZWM0IG91dGxpbmVfY29sb3I7CnVuaWZvcm0gZmxvYXQgb3V0bGluZTsKCnVuaWZvcm0gdmVjNCBnbG93X2NvbG9yOwp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOwp1bmlmb3JtIGZsb2F0IGdsb3dfYW1vdW50OwoKCmZsb2F0IGVkZ2UoZmxvYXQgdmFsdWUsIGZsb2F0IGFtb3VudCwgZmxvYXQgdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodmFsdWUgLSBhbW91bnQsIHZhbHVlICsgYW1vdW50LCB0KTsKfQoKZmxvYXQgZ2V0KHZlYzIgdXYsIGZsb2F0IHdpZHRoKSB7CiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZSh0ZXgwLCB1dikuYTsKICAgIHJldHVybiBzbW9vdGhzdGVwKDAuNSAtIHdpZHRoLCAwLjUgKyB3aWR0aCwgdGV4YSk7Cn0KCnZvaWQgbWFpbigpIHsKCi8vYmFzaWMgc2RmCgogICAgZmxvYXQgZGlzdCA9IHRleHR1cmUodGV4MCwgdGNvb3JkKS5hOwogICAgICAgIC8vZndpZHRoIGtlZXBzIHdpZHRoIHNpbWlsYXIgZGVzcGl0ZSBzY2FsaW5nLCBzZWUgYmVsb3cgZm9yIG9wdGlvbnMKICAgIGZsb2F0IHNtb290aGFtdCA9IHNtb290aG5lc3MgKiBmd2lkdGgoZGlzdCk7CiAgICAvLyBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogbGVuZ3RoKHZlYzIoZEZkeChkaXN0KSwgZEZkeShkaXN0KSkpOwoKICAgICAgICAvL2NhbGN1bGF0ZSB0aGUgZWRnZSBzbW9vdGhpbmcKICAgIGZsb2F0IGFscGhhID0gZWRnZSgxLjAgLSB0aGlja25lc3MsIHNtb290aGFtdCwgZGlzdCk7CgovL3N1cGVyIHNhbXBsaW5nCgogICAgICAgICNpZiBTVVBFUlNBTVBMRSA9PSAxCgogICAgICAgICAgICAgICAgLy90aGVzZSB2YWx1ZXMgY2FuIGJlIGV4cG9zZWQgbGF0ZXIKICAgICAgICAgICAgICAgIC8vdGhlIGN1cnJlbnQgYmVpbmcgMC4yNS9zcXJ0KDIpCiAgICAgICAgICAgIGZsb2F0IGZhY3RvciA9IDAuMTc2Nzc2Njk1MzsKICAgICAgICAgICAgZmxvYXQgc2FtcGxlYW10ID0gMC41OwogICAgICAgICAgICAgICAgLy90aGlzIGlzIGEgc2ltcGxlIGJveCBmaWx0ZXIgYXJvdW5kIHRoZSBwb2ludCwKICAgICAgICAgICAgICAgIC8vd2UgdXNlIGEgc2VwYXJhdGUgd2lkdGggZm9yIG5vdwogICAgICAgICAgICBmbG9hdCBzYW1wbGV3ID0gc2FtcGxlYW10ICogZndpZHRoKGRpc3QpOwogICAgICAgICAgICB2ZWMyIHNhbXBsZW9mZnNldCA9IGZhY3RvciAqIChkRmR4KHRjb29yZCkgKyBkRmR5KHRjb29yZCkpOwogICAgICAgICAgICB2ZWM0IGZsdHIgPSB2ZWM0KHRjb29yZCAtIHNhbXBsZW9mZnNldCwgdGNvb3JkICsgc2FtcGxlb2Zmc2V0KTsKCiAgICAgICAgICAgIGZsb2F0IHRvdGFsID0gZ2V0KCBmbHRyLnh5LCBzYW1wbGV3ICkgKyBnZXQoIGZsdHIuencsIHNhbXBsZXcgKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0KCBmbHRyLnh3LCBzYW1wbGV3ICkgKyBnZXQoIGZsdHIuenksIHNhbXBsZXcgKTsKCiAgICAgICAgICAgIGFscGhhID0gKGFscGhhICsgMC41ICogdG90YWwpIC8gMy4wOwoKICAgICAgICAjZW5kaWYgLy9TVVBFUlNBTVBMRQoKICAgICAgICAvL3RoZSBiYXNlIGNvbG9yICsgc2NhbGVkIGJ5IHRoZSBuZXcgYWxwaGEKICAgIHZlYzQgZmluYWxDb2xvciA9IHZlYzQoY29sb3IucmdiLCBjb2xvci5hICogYWxwaGEpOwoKLy9vdXRsaW5lCgogICAgI2lmIE9VVExJTkUgPT0gMQoKICAgICAgICAgICAgLy93aXAKICAgICAgICBpZihvdXRsaW5lID4gMC4wKSB7CgogICAgICAgICAgICAvL3JhbmdlIG9mIDEuMCB+IDAuMSwgd2UgZ2V0IDAgfiAxCiAgICAgICAgICAgIGZsb2F0IF9vdXRsaW5lID0gMC45IC0gKG91dGxpbmUgKiAwLjkpOwogICAgICAgICAgICBmbG9hdCBfb3V0bGluZV9hID0gZWRnZShfb3V0bGluZSwgc21vb3RoYW10LCBkaXN0KTsKICAgICAgICAgICAgdmVjNCBfb3V0bGluZV9jID0gdmVjNChvdXRsaW5lX2NvbG9yLnJnYiwgb3V0bGluZV9jb2xvci5hICogX291dGxpbmVfYSk7CgogICAgICAgICAgICBmaW5hbENvbG9yID0gbWl4KF9vdXRsaW5lX2MsIGZpbmFsQ29sb3IsIGFscGhhKTsKCiAgICAgICAgfSAvL291dGxpbmUgPiAwLjAKCiAgICAjZW5kaWYgLy9PVVRMSU5FCgovLyBnbG93CgogICAgI2lmIEdMT1cgPT0gMQoKICAgICAgICAgICAgLy93aXAKICAgICAgICBpZihnbG93X2Ftb3VudCA+IDAuMCkgewoKICAgICAgICAgICAgLy86dG9kbzogZXhwb3NlIG9mZnNldCBmb3IgZGlyZWN0aW9uYWwgc2hhZG93CiAgICAgICAgICAgIC8vIHZlYzIgX2dsb3dfb2ZmcyA9IHZlYzIoMCwwKTsKICAgICAgICAgICAgLy8gZmxvYXQgX2dsb3dfZGlzdCA9IHRleHR1cmUodGV4MCwgdGNvb3JkIC0gX2dsb3dfb2Zmc2V0KS5hOwoKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7CiAgICAgICAgICAgIGZsb2F0IF9nbG93X2xpbWl0ID0gKF9nbG93X2FtdCAqIGdsb3dfdGhyZXNob2xkKTsKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYSA9IGVkZ2UoX2dsb3dfYW10LCBfZ2xvd19saW1pdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsKCiAgICAgICAgICAgIGZpbmFsQ29sb3IgPSBtaXgoX2dsb3dfYywgZmluYWxDb2xvciwgZmluYWxDb2xvci5hKTsKCiAgICAgICAgfSAvL2dsb3dfYW1vdW50ID4gMAoKICAgICNlbmRpZiAvL0dMT1cKCi8vZG9uZQoKICAgIGZyYWcgPSBmaW5hbENvbG9yOwoKCn0gLy9tYWluCg"},{ name : "build", data : "K2EwZTlkODM2NDg"},{ name : "default.frag.glsl", data : "dmFyeWluZyB2ZWMyIHRjb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkgewogICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7Cn0"},{ name : "default.fnt", data : ""},{ name : "default.png", data : ""},{ name : "default.frag.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCmluIHZlYzQgY29sb3I7CmluIHZlYzIgdGNvb3JkOwoKb3V0IHZlYzQgZnJhZzsKCnZvaWQgbWFpbigpewogICAgZnJhZyA9IGNvbG9yOwp9Cg"},{ name : "default.frag.textured.glsl", data : "dW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsKdmFyeWluZyB2ZWMyIHRjb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkgewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgwLCB0Y29vcmQpOwogICAgZ2xfRnJhZ0NvbG9yID0gY29sb3IgKiB0ZXhjb2xvcjsKfQ"},{ name : "default.frag.bitmapfont.glsl", data : "I2RlZmluZSBPVVRMSU5FIDEKI2RlZmluZSBHTE9XIDEKI2RlZmluZSBTVVBFUlNBTVBMRSAxCgp1bmlmb3JtIHNhbXBsZXIyRCB0ZXgwOwp2YXJ5aW5nIHZlYzIgdGNvb3JkOwp2YXJ5aW5nIHZlYzQgY29sb3I7Cgp1bmlmb3JtIGZsb2F0IHNtb290aG5lc3M7CnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOwoKdW5pZm9ybSB2ZWM0IG91dGxpbmVfY29sb3I7CnVuaWZvcm0gZmxvYXQgb3V0bGluZTsKCnVuaWZvcm0gdmVjNCBnbG93X2NvbG9yOwp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOwp1bmlmb3JtIGZsb2F0IGdsb3dfYW1vdW50OwoKCmZsb2F0IGVkZ2UoZmxvYXQgdmFsdWUsIGZsb2F0IGFtb3VudCwgZmxvYXQgdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodmFsdWUgLSBhbW91bnQsIHZhbHVlICsgYW1vdW50LCB0KTsKfQoKZmxvYXQgZ2V0KHZlYzIgdXYsIGZsb2F0IHdpZHRoKSB7CiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZTJEKHRleDAsIHV2KS5hOwogICAgcmV0dXJuIHNtb290aHN0ZXAoMC41IC0gd2lkdGgsIDAuNSArIHdpZHRoLCB0ZXhhKTsKfQoKdm9pZCBtYWluKCkgewoKLy9iYXNpYyBzZGYKCiAgICBmbG9hdCBkaXN0ID0gdGV4dHVyZTJEKHRleDAsIHRjb29yZCkuYTsKICAgICAgICAvL2Z3aWR0aCBrZWVwcyB3aWR0aCBzaW1pbGFyIGRlc3BpdGUgc2NhbGluZywgc2VlIGJlbG93IGZvciBvcHRpb25zCiAgICBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogZndpZHRoKGRpc3QpOwogICAgLy8gZmxvYXQgc21vb3RoYW10ID0gc21vb3RobmVzcyAqIGxlbmd0aCh2ZWMyKGRGZHgoZGlzdCksIGRGZHkoZGlzdCkpKTsKCiAgICAgICAgLy9jYWxjdWxhdGUgdGhlIGVkZ2Ugc21vb3RoaW5nCiAgICBmbG9hdCBhbHBoYSA9IGVkZ2UoMS4wIC0gdGhpY2tuZXNzLCBzbW9vdGhhbXQsIGRpc3QpOwoKLy9zdXBlciBzYW1wbGluZwoKICAgICAgICAjaWYgU1VQRVJTQU1QTEUgPT0gMQoKICAgICAgICAgICAgICAgIC8vdGhlc2UgdmFsdWVzIGNhbiBiZSBleHBvc2VkIGxhdGVyCiAgICAgICAgICAgICAgICAvL3RoZSBjdXJyZW50IGJlaW5nIDAuMjUvc3FydCgyKQogICAgICAgICAgICBmbG9hdCBmYWN0b3IgPSAwLjE3Njc3NjY5NTM7CiAgICAgICAgICAgIGZsb2F0IHNhbXBsZWFtdCA9IDAuNTsKICAgICAgICAgICAgICAgIC8vdGhpcyBpcyBhIHNpbXBsZSBib3ggZmlsdGVyIGFyb3VuZCB0aGUgcG9pbnQsCiAgICAgICAgICAgICAgICAvL3dlIHVzZSBhIHNlcGFyYXRlIHdpZHRoIGZvciBub3cKICAgICAgICAgICAgZmxvYXQgc2FtcGxldyA9IHNhbXBsZWFtdCAqIGZ3aWR0aChkaXN0KTsKICAgICAgICAgICAgdmVjMiBzYW1wbGVvZmZzZXQgPSBmYWN0b3IgKiAoZEZkeCh0Y29vcmQpICsgZEZkeSh0Y29vcmQpKTsKICAgICAgICAgICAgdmVjNCBmbHRyID0gdmVjNCh0Y29vcmQgLSBzYW1wbGVvZmZzZXQsIHRjb29yZCArIHNhbXBsZW9mZnNldCk7CgogICAgICAgICAgICBmbG9hdCB0b3RhbCA9IGdldCggZmx0ci54eSwgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp3LCBzYW1wbGV3ICkgKwogICAgICAgICAgICAgICAgICAgICAgICAgIGdldCggZmx0ci54dywgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp5LCBzYW1wbGV3ICk7CgogICAgICAgICAgICBhbHBoYSA9IChhbHBoYSArIDAuNSAqIHRvdGFsKSAvIDMuMDsKCiAgICAgICAgI2VuZGlmIC8vU1VQRVJTQU1QTEUKCiAgICAgICAgLy90aGUgYmFzZSBjb2xvciArIHNjYWxlZCBieSB0aGUgbmV3IGFscGhhCiAgICB2ZWM0IGZpbmFsQ29sb3IgPSB2ZWM0KGNvbG9yLnJnYiwgY29sb3IuYSAqIGFscGhhKTsKCi8vb3V0bGluZQoKICAgICNpZiBPVVRMSU5FID09IDEKCiAgICAgICAgICAgIC8vd2lwCiAgICAgICAgaWYob3V0bGluZSA+IDAuMCkgewoKICAgICAgICAgICAgLy9yYW5nZSBvZiAxLjAgfiAwLjEsIHdlIGdldCAwIH4gMQogICAgICAgICAgICBmbG9hdCBfb3V0bGluZSA9IDAuOSAtIChvdXRsaW5lICogMC45KTsKICAgICAgICAgICAgZmxvYXQgX291dGxpbmVfYSA9IGVkZ2UoX291dGxpbmUsIHNtb290aGFtdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgX291dGxpbmVfYyA9IHZlYzQob3V0bGluZV9jb2xvci5yZ2IsIG91dGxpbmVfY29sb3IuYSAqIF9vdXRsaW5lX2EpOwoKICAgICAgICAgICAgZmluYWxDb2xvciA9IG1peChfb3V0bGluZV9jLCBmaW5hbENvbG9yLCBhbHBoYSk7CgogICAgICAgIH0gLy9vdXRsaW5lID4gMC4wCgogICAgI2VuZGlmIC8vT1VUTElORQoKLy8gZ2xvdwoKICAgICNpZiBHTE9XID09IDEKCiAgICAgICAgICAgIC8vd2lwCiAgICAgICAgaWYoZ2xvd19hbW91bnQgPiAwLjApIHsKCiAgICAgICAgICAgIC8vOnRvZG86IGV4cG9zZSBvZmZzZXQgZm9yIGRpcmVjdGlvbmFsIHNoYWRvdwogICAgICAgICAgICAvLyB2ZWMyIF9nbG93X29mZnMgPSB2ZWMyKDAsMCk7CiAgICAgICAgICAgIC8vIGZsb2F0IF9nbG93X2Rpc3QgPSB0ZXh0dXJlMkQodGV4MCwgdGNvb3JkIC0gX2dsb3dfb2Zmc2V0KS5hOwoKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7CiAgICAgICAgICAgIGZsb2F0IF9nbG93X2xpbWl0ID0gKF9nbG93X2FtdCAqIGdsb3dfdGhyZXNob2xkKTsKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYSA9IGVkZ2UoX2dsb3dfYW10LCBfZ2xvd19saW1pdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsKCiAgICAgICAgICAgIGZpbmFsQ29sb3IgPSBtaXgoX2dsb3dfYywgZmluYWxDb2xvciwgZmluYWxDb2xvci5hKTsKCiAgICAgICAgfSAvL2dsb3dfYW1vdW50ID4gMAoKICAgICNlbmRpZiAvL0dMT1cKCi8vZG9uZQoKICAgIGdsX0ZyYWdDb2xvciA9IGZpbmFsQ29sb3I7CgoKfSAvL21haW4K"}];
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
khaMath_Matrix4.width = 4;
khaMath_Matrix4.height = 4;
luxe_Debug.debug_batch_tag = "batcher.debug_batcher";
luxe_Debug.trace_callbacks = [];
luxe_Debug.shut_down = false;
luxe_Debug.tracing = false;
luxe_Tag.update = "update dt";
luxe_Tag.tick = "tick dt";
luxe_Tag.game_update = "game.update";
luxe_Tag.render = "core.render";
luxe_Tag.debug = "core.debug";
luxe_Tag.updates = "core.updates";
luxe_Tag.events = "core.events";
luxe_Tag.audio = "core.audio";
luxe_Tag.input = "core.input";
luxe_Tag.timer = "core.timer";
luxe_Tag.scene = "core.scene";
luxe_Log._level = 1;
luxe_Log._log_width = 16;
luxe_Physics.tag_physics = "physics";
luxe_debug_ProfilerDebugView.color_red = new phoenix_Color().rgb(13369344);
luxe_debug_ProfilerDebugView.color_green = new phoenix_Color().rgb(2263108);
luxe_debug_ProfilerDebugView.color_normal = new phoenix_Color().rgb(15790320);
luxe_macros_BuildVersion._save = false;
luxe_structural__$BalancedBST_NodeColor.red = true;
luxe_structural__$BalancedBST_NodeColor.black = false;
luxe_tween_actuators_SimpleActuator.actuators = [];
luxe_tween_actuators_SimpleActuator.actuatorsLength = 0;
luxe_tween_actuators_SimpleActuator.addedEvent = false;
luxe_tween_actuators_SimpleActuator.update_timer = 0;
luxe_tween_actuators_SimpleActuator.current_time = 0;
luxe_tween_Actuate.defaultActuator = luxe_tween_actuators_SimpleActuator;
luxe_tween_Actuate.defaultEase = luxe_tween_easing_Quad.get_easeOut();
luxe_tween_Actuate.targetLibraries = new haxe_ds_ObjectMap();
luxe_utils_GeometryUtils.two_pi = 6.283185307179586;
luxe_utils_Maths._PI_OVER_180 = 0.0174532925199432781;
luxe_utils_Maths._180_OVER_PI = 57.2957795130823797;
luxe_utils_unifill_Unicode.minCodePoint = 0;
luxe_utils_unifill_Unicode.maxCodePoint = 1114111;
luxe_utils_unifill_Unicode.minHighSurrogate = 55296;
luxe_utils_unifill_Unicode.maxHighSurrogate = 56319;
luxe_utils_unifill_Unicode.minLowSurrogate = 56320;
luxe_utils_unifill_Unicode.maxLowSurrogate = 57343;
phoenix_Batcher._sequence_key = -1;
phoenix_Batcher.all = [];
phoenix_Batcher.vert_attribute = 0;
phoenix_Batcher.tcoord_attribute = 1;
phoenix_Batcher.color_attribute = 2;
phoenix_Batcher.normal_attribute = 3;
phoenix_Texture.default_filter = 9729;
phoenix_Texture.default_clamp = 33071;
phoenix_geometry_Geometry._sequence_key = -1;
phoenix_geometry_TextGeometry.tab_regex = new EReg("\t","gim");
snow_Snow.next_queue = [];
snow_Snow.defer_queue = [];
snow_api_Debug._level = 1;
snow_api_Debug._log_width = 16;
snow_api_Promises.calls = [];
snow_api_Promises.defers = [];
snow_api_Timer.running_timers = [];
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.BYTES_PER_ELEMENT = 1;
snow_core_web_Runtime.web_window_id = 1;
snow_core_web_Runtime.timestamp_start = 0.0;
snow_core_web_Runtime.key_press_ignored = [8,13];
snow_core_web__$Runtime_DOMKeys.dom_shift = 16;
snow_core_web__$Runtime_DOMKeys.dom_ctrl = 17;
snow_core_web__$Runtime_DOMKeys.dom_alt = 18;
snow_core_web__$Runtime_DOMKeys.dom_capslock = 20;
snow_core_web__$Runtime_DOMKeys.dom_pageup = 33;
snow_core_web__$Runtime_DOMKeys.dom_pagedown = 34;
snow_core_web__$Runtime_DOMKeys.dom_end = 35;
snow_core_web__$Runtime_DOMKeys.dom_home = 36;
snow_core_web__$Runtime_DOMKeys.dom_left = 37;
snow_core_web__$Runtime_DOMKeys.dom_up = 38;
snow_core_web__$Runtime_DOMKeys.dom_right = 39;
snow_core_web__$Runtime_DOMKeys.dom_down = 40;
snow_core_web__$Runtime_DOMKeys.dom_printscr = 44;
snow_core_web__$Runtime_DOMKeys.dom_insert = 45;
snow_core_web__$Runtime_DOMKeys.dom_delete = 46;
snow_core_web__$Runtime_DOMKeys.dom_lmeta = 91;
snow_core_web__$Runtime_DOMKeys.dom_rmeta = 93;
snow_core_web__$Runtime_DOMKeys.dom_kp_0 = 96;
snow_core_web__$Runtime_DOMKeys.dom_kp_1 = 97;
snow_core_web__$Runtime_DOMKeys.dom_kp_2 = 98;
snow_core_web__$Runtime_DOMKeys.dom_kp_3 = 99;
snow_core_web__$Runtime_DOMKeys.dom_kp_4 = 100;
snow_core_web__$Runtime_DOMKeys.dom_kp_5 = 101;
snow_core_web__$Runtime_DOMKeys.dom_kp_6 = 102;
snow_core_web__$Runtime_DOMKeys.dom_kp_7 = 103;
snow_core_web__$Runtime_DOMKeys.dom_kp_8 = 104;
snow_core_web__$Runtime_DOMKeys.dom_kp_9 = 105;
snow_core_web__$Runtime_DOMKeys.dom_kp_multiply = 106;
snow_core_web__$Runtime_DOMKeys.dom_kp_plus = 107;
snow_core_web__$Runtime_DOMKeys.dom_kp_minus = 109;
snow_core_web__$Runtime_DOMKeys.dom_kp_decimal = 110;
snow_core_web__$Runtime_DOMKeys.dom_kp_divide = 111;
snow_core_web__$Runtime_DOMKeys.dom_kp_numlock = 144;
snow_core_web__$Runtime_DOMKeys.dom_f1 = 112;
snow_core_web__$Runtime_DOMKeys.dom_f2 = 113;
snow_core_web__$Runtime_DOMKeys.dom_f3 = 114;
snow_core_web__$Runtime_DOMKeys.dom_f4 = 115;
snow_core_web__$Runtime_DOMKeys.dom_f5 = 116;
snow_core_web__$Runtime_DOMKeys.dom_f6 = 117;
snow_core_web__$Runtime_DOMKeys.dom_f7 = 118;
snow_core_web__$Runtime_DOMKeys.dom_f8 = 119;
snow_core_web__$Runtime_DOMKeys.dom_f9 = 120;
snow_core_web__$Runtime_DOMKeys.dom_f10 = 121;
snow_core_web__$Runtime_DOMKeys.dom_f11 = 122;
snow_core_web__$Runtime_DOMKeys.dom_f12 = 123;
snow_core_web__$Runtime_DOMKeys.dom_f13 = 124;
snow_core_web__$Runtime_DOMKeys.dom_f14 = 125;
snow_core_web__$Runtime_DOMKeys.dom_f15 = 126;
snow_core_web__$Runtime_DOMKeys.dom_f16 = 127;
snow_core_web__$Runtime_DOMKeys.dom_f17 = 128;
snow_core_web__$Runtime_DOMKeys.dom_f18 = 129;
snow_core_web__$Runtime_DOMKeys.dom_f19 = 130;
snow_core_web__$Runtime_DOMKeys.dom_f20 = 131;
snow_core_web__$Runtime_DOMKeys.dom_f21 = 132;
snow_core_web__$Runtime_DOMKeys.dom_f22 = 133;
snow_core_web__$Runtime_DOMKeys.dom_f23 = 134;
snow_core_web__$Runtime_DOMKeys.dom_f24 = 135;
snow_core_web__$Runtime_DOMKeys.dom_caret = 160;
snow_core_web__$Runtime_DOMKeys.dom_exclaim = 161;
snow_core_web__$Runtime_DOMKeys.dom_quotedbl = 162;
snow_core_web__$Runtime_DOMKeys.dom_hash = 163;
snow_core_web__$Runtime_DOMKeys.dom_dollar = 164;
snow_core_web__$Runtime_DOMKeys.dom_percent = 165;
snow_core_web__$Runtime_DOMKeys.dom_ampersand = 166;
snow_core_web__$Runtime_DOMKeys.dom_underscore = 167;
snow_core_web__$Runtime_DOMKeys.dom_leftparen = 168;
snow_core_web__$Runtime_DOMKeys.dom_rightparen = 169;
snow_core_web__$Runtime_DOMKeys.dom_asterisk = 170;
snow_core_web__$Runtime_DOMKeys.dom_plus = 171;
snow_core_web__$Runtime_DOMKeys.dom_pipe = 172;
snow_core_web__$Runtime_DOMKeys.dom_minus = 173;
snow_core_web__$Runtime_DOMKeys.dom_leftbrace = 174;
snow_core_web__$Runtime_DOMKeys.dom_rightbrace = 175;
snow_core_web__$Runtime_DOMKeys.dom_tilde = 176;
snow_core_web__$Runtime_DOMKeys.dom_audiomute = 181;
snow_core_web__$Runtime_DOMKeys.dom_volumedown = 182;
snow_core_web__$Runtime_DOMKeys.dom_volumeup = 183;
snow_core_web__$Runtime_DOMKeys.dom_comma = 188;
snow_core_web__$Runtime_DOMKeys.dom_period = 190;
snow_core_web__$Runtime_DOMKeys.dom_slash = 191;
snow_core_web__$Runtime_DOMKeys.dom_backquote = 192;
snow_core_web__$Runtime_DOMKeys.dom_leftbracket = 219;
snow_core_web__$Runtime_DOMKeys.dom_rightbracket = 221;
snow_core_web__$Runtime_DOMKeys.dom_backslash = 220;
snow_core_web__$Runtime_DOMKeys.dom_quote = 222;
snow_core_web__$Runtime_DOMKeys.dom_meta = 224;
snow_core_web_assets_Assets.POT = true;
snow_modules_opengl_web_GL.DEPTH_BUFFER_BIT = 256;
snow_modules_opengl_web_GL.STENCIL_BUFFER_BIT = 1024;
snow_modules_opengl_web_GL.COLOR_BUFFER_BIT = 16384;
snow_modules_opengl_web_GL.POINTS = 0;
snow_modules_opengl_web_GL.LINES = 1;
snow_modules_opengl_web_GL.LINE_LOOP = 2;
snow_modules_opengl_web_GL.LINE_STRIP = 3;
snow_modules_opengl_web_GL.TRIANGLES = 4;
snow_modules_opengl_web_GL.TRIANGLE_STRIP = 5;
snow_modules_opengl_web_GL.TRIANGLE_FAN = 6;
snow_modules_opengl_web_GL.ZERO = 0;
snow_modules_opengl_web_GL.ONE = 1;
snow_modules_opengl_web_GL.SRC_COLOR = 768;
snow_modules_opengl_web_GL.ONE_MINUS_SRC_COLOR = 769;
snow_modules_opengl_web_GL.SRC_ALPHA = 770;
snow_modules_opengl_web_GL.ONE_MINUS_SRC_ALPHA = 771;
snow_modules_opengl_web_GL.DST_ALPHA = 772;
snow_modules_opengl_web_GL.ONE_MINUS_DST_ALPHA = 773;
snow_modules_opengl_web_GL.DST_COLOR = 774;
snow_modules_opengl_web_GL.ONE_MINUS_DST_COLOR = 775;
snow_modules_opengl_web_GL.SRC_ALPHA_SATURATE = 776;
snow_modules_opengl_web_GL.FUNC_ADD = 32774;
snow_modules_opengl_web_GL.BLEND_EQUATION = 32777;
snow_modules_opengl_web_GL.BLEND_EQUATION_RGB = 32777;
snow_modules_opengl_web_GL.BLEND_EQUATION_ALPHA = 34877;
snow_modules_opengl_web_GL.FUNC_SUBTRACT = 32778;
snow_modules_opengl_web_GL.FUNC_REVERSE_SUBTRACT = 32779;
snow_modules_opengl_web_GL.BLEND_DST_RGB = 32968;
snow_modules_opengl_web_GL.BLEND_SRC_RGB = 32969;
snow_modules_opengl_web_GL.BLEND_DST_ALPHA = 32970;
snow_modules_opengl_web_GL.BLEND_SRC_ALPHA = 32971;
snow_modules_opengl_web_GL.CONSTANT_COLOR = 32769;
snow_modules_opengl_web_GL.ONE_MINUS_CONSTANT_COLOR = 32770;
snow_modules_opengl_web_GL.CONSTANT_ALPHA = 32771;
snow_modules_opengl_web_GL.ONE_MINUS_CONSTANT_ALPHA = 32772;
snow_modules_opengl_web_GL.BLEND_COLOR = 32773;
snow_modules_opengl_web_GL.ARRAY_BUFFER = 34962;
snow_modules_opengl_web_GL.ELEMENT_ARRAY_BUFFER = 34963;
snow_modules_opengl_web_GL.ARRAY_BUFFER_BINDING = 34964;
snow_modules_opengl_web_GL.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
snow_modules_opengl_web_GL.STREAM_DRAW = 35040;
snow_modules_opengl_web_GL.STATIC_DRAW = 35044;
snow_modules_opengl_web_GL.DYNAMIC_DRAW = 35048;
snow_modules_opengl_web_GL.BUFFER_SIZE = 34660;
snow_modules_opengl_web_GL.BUFFER_USAGE = 34661;
snow_modules_opengl_web_GL.CURRENT_VERTEX_ATTRIB = 34342;
snow_modules_opengl_web_GL.FRONT = 1028;
snow_modules_opengl_web_GL.BACK = 1029;
snow_modules_opengl_web_GL.FRONT_AND_BACK = 1032;
snow_modules_opengl_web_GL.CULL_FACE = 2884;
snow_modules_opengl_web_GL.BLEND = 3042;
snow_modules_opengl_web_GL.DITHER = 3024;
snow_modules_opengl_web_GL.STENCIL_TEST = 2960;
snow_modules_opengl_web_GL.DEPTH_TEST = 2929;
snow_modules_opengl_web_GL.SCISSOR_TEST = 3089;
snow_modules_opengl_web_GL.POLYGON_OFFSET_FILL = 32823;
snow_modules_opengl_web_GL.SAMPLE_ALPHA_TO_COVERAGE = 32926;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE = 32928;
snow_modules_opengl_web_GL.NO_ERROR = 0;
snow_modules_opengl_web_GL.INVALID_ENUM = 1280;
snow_modules_opengl_web_GL.INVALID_VALUE = 1281;
snow_modules_opengl_web_GL.INVALID_OPERATION = 1282;
snow_modules_opengl_web_GL.OUT_OF_MEMORY = 1285;
snow_modules_opengl_web_GL.CW = 2304;
snow_modules_opengl_web_GL.CCW = 2305;
snow_modules_opengl_web_GL.LINE_WIDTH = 2849;
snow_modules_opengl_web_GL.ALIASED_POINT_SIZE_RANGE = 33901;
snow_modules_opengl_web_GL.ALIASED_LINE_WIDTH_RANGE = 33902;
snow_modules_opengl_web_GL.CULL_FACE_MODE = 2885;
snow_modules_opengl_web_GL.FRONT_FACE = 2886;
snow_modules_opengl_web_GL.DEPTH_RANGE = 2928;
snow_modules_opengl_web_GL.DEPTH_WRITEMASK = 2930;
snow_modules_opengl_web_GL.DEPTH_CLEAR_VALUE = 2931;
snow_modules_opengl_web_GL.DEPTH_FUNC = 2932;
snow_modules_opengl_web_GL.STENCIL_CLEAR_VALUE = 2961;
snow_modules_opengl_web_GL.STENCIL_FUNC = 2962;
snow_modules_opengl_web_GL.STENCIL_FAIL = 2964;
snow_modules_opengl_web_GL.STENCIL_PASS_DEPTH_FAIL = 2965;
snow_modules_opengl_web_GL.STENCIL_PASS_DEPTH_PASS = 2966;
snow_modules_opengl_web_GL.STENCIL_REF = 2967;
snow_modules_opengl_web_GL.STENCIL_VALUE_MASK = 2963;
snow_modules_opengl_web_GL.STENCIL_WRITEMASK = 2968;
snow_modules_opengl_web_GL.STENCIL_BACK_FUNC = 34816;
snow_modules_opengl_web_GL.STENCIL_BACK_FAIL = 34817;
snow_modules_opengl_web_GL.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
snow_modules_opengl_web_GL.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
snow_modules_opengl_web_GL.STENCIL_BACK_REF = 36003;
snow_modules_opengl_web_GL.STENCIL_BACK_VALUE_MASK = 36004;
snow_modules_opengl_web_GL.STENCIL_BACK_WRITEMASK = 36005;
snow_modules_opengl_web_GL.VIEWPORT = 2978;
snow_modules_opengl_web_GL.SCISSOR_BOX = 3088;
snow_modules_opengl_web_GL.COLOR_CLEAR_VALUE = 3106;
snow_modules_opengl_web_GL.COLOR_WRITEMASK = 3107;
snow_modules_opengl_web_GL.UNPACK_ALIGNMENT = 3317;
snow_modules_opengl_web_GL.PACK_ALIGNMENT = 3333;
snow_modules_opengl_web_GL.MAX_TEXTURE_SIZE = 3379;
snow_modules_opengl_web_GL.MAX_VIEWPORT_DIMS = 3386;
snow_modules_opengl_web_GL.SUBPIXEL_BITS = 3408;
snow_modules_opengl_web_GL.RED_BITS = 3410;
snow_modules_opengl_web_GL.GREEN_BITS = 3411;
snow_modules_opengl_web_GL.BLUE_BITS = 3412;
snow_modules_opengl_web_GL.ALPHA_BITS = 3413;
snow_modules_opengl_web_GL.DEPTH_BITS = 3414;
snow_modules_opengl_web_GL.STENCIL_BITS = 3415;
snow_modules_opengl_web_GL.POLYGON_OFFSET_UNITS = 10752;
snow_modules_opengl_web_GL.POLYGON_OFFSET_FACTOR = 32824;
snow_modules_opengl_web_GL.TEXTURE_BINDING_2D = 32873;
snow_modules_opengl_web_GL.SAMPLE_BUFFERS = 32936;
snow_modules_opengl_web_GL.SAMPLES = 32937;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE_VALUE = 32938;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE_INVERT = 32939;
snow_modules_opengl_web_GL.COMPRESSED_TEXTURE_FORMATS = 34467;
snow_modules_opengl_web_GL.DONT_CARE = 4352;
snow_modules_opengl_web_GL.FASTEST = 4353;
snow_modules_opengl_web_GL.NICEST = 4354;
snow_modules_opengl_web_GL.GENERATE_MIPMAP_HINT = 33170;
snow_modules_opengl_web_GL.BYTE = 5120;
snow_modules_opengl_web_GL.UNSIGNED_BYTE = 5121;
snow_modules_opengl_web_GL.SHORT = 5122;
snow_modules_opengl_web_GL.UNSIGNED_SHORT = 5123;
snow_modules_opengl_web_GL.INT = 5124;
snow_modules_opengl_web_GL.UNSIGNED_INT = 5125;
snow_modules_opengl_web_GL.FLOAT = 5126;
snow_modules_opengl_web_GL.DEPTH_COMPONENT = 6402;
snow_modules_opengl_web_GL.ALPHA = 6406;
snow_modules_opengl_web_GL.RGB = 6407;
snow_modules_opengl_web_GL.RGBA = 6408;
snow_modules_opengl_web_GL.LUMINANCE = 6409;
snow_modules_opengl_web_GL.LUMINANCE_ALPHA = 6410;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_4_4_4_4 = 32819;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_5_5_5_1 = 32820;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_5_6_5 = 33635;
snow_modules_opengl_web_GL.FRAGMENT_SHADER = 35632;
snow_modules_opengl_web_GL.VERTEX_SHADER = 35633;
snow_modules_opengl_web_GL.MAX_VERTEX_ATTRIBS = 34921;
snow_modules_opengl_web_GL.MAX_VERTEX_UNIFORM_VECTORS = 36347;
snow_modules_opengl_web_GL.MAX_VARYING_VECTORS = 36348;
snow_modules_opengl_web_GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
snow_modules_opengl_web_GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
snow_modules_opengl_web_GL.MAX_TEXTURE_IMAGE_UNITS = 34930;
snow_modules_opengl_web_GL.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
snow_modules_opengl_web_GL.SHADER_TYPE = 35663;
snow_modules_opengl_web_GL.DELETE_STATUS = 35712;
snow_modules_opengl_web_GL.LINK_STATUS = 35714;
snow_modules_opengl_web_GL.VALIDATE_STATUS = 35715;
snow_modules_opengl_web_GL.ATTACHED_SHADERS = 35717;
snow_modules_opengl_web_GL.ACTIVE_UNIFORMS = 35718;
snow_modules_opengl_web_GL.ACTIVE_ATTRIBUTES = 35721;
snow_modules_opengl_web_GL.SHADING_LANGUAGE_VERSION = 35724;
snow_modules_opengl_web_GL.CURRENT_PROGRAM = 35725;
snow_modules_opengl_web_GL.NEVER = 512;
snow_modules_opengl_web_GL.LESS = 513;
snow_modules_opengl_web_GL.EQUAL = 514;
snow_modules_opengl_web_GL.LEQUAL = 515;
snow_modules_opengl_web_GL.GREATER = 516;
snow_modules_opengl_web_GL.NOTEQUAL = 517;
snow_modules_opengl_web_GL.GEQUAL = 518;
snow_modules_opengl_web_GL.ALWAYS = 519;
snow_modules_opengl_web_GL.KEEP = 7680;
snow_modules_opengl_web_GL.REPLACE = 7681;
snow_modules_opengl_web_GL.INCR = 7682;
snow_modules_opengl_web_GL.DECR = 7683;
snow_modules_opengl_web_GL.INVERT = 5386;
snow_modules_opengl_web_GL.INCR_WRAP = 34055;
snow_modules_opengl_web_GL.DECR_WRAP = 34056;
snow_modules_opengl_web_GL.VENDOR = 7936;
snow_modules_opengl_web_GL.RENDERER = 7937;
snow_modules_opengl_web_GL.VERSION = 7938;
snow_modules_opengl_web_GL.NEAREST = 9728;
snow_modules_opengl_web_GL.LINEAR = 9729;
snow_modules_opengl_web_GL.NEAREST_MIPMAP_NEAREST = 9984;
snow_modules_opengl_web_GL.LINEAR_MIPMAP_NEAREST = 9985;
snow_modules_opengl_web_GL.NEAREST_MIPMAP_LINEAR = 9986;
snow_modules_opengl_web_GL.LINEAR_MIPMAP_LINEAR = 9987;
snow_modules_opengl_web_GL.TEXTURE_MAG_FILTER = 10240;
snow_modules_opengl_web_GL.TEXTURE_MIN_FILTER = 10241;
snow_modules_opengl_web_GL.TEXTURE_WRAP_S = 10242;
snow_modules_opengl_web_GL.TEXTURE_WRAP_T = 10243;
snow_modules_opengl_web_GL.TEXTURE_2D = 3553;
snow_modules_opengl_web_GL.TEXTURE = 5890;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP = 34067;
snow_modules_opengl_web_GL.TEXTURE_BINDING_CUBE_MAP = 34068;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
snow_modules_opengl_web_GL.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
snow_modules_opengl_web_GL.TEXTURE0 = 33984;
snow_modules_opengl_web_GL.TEXTURE1 = 33985;
snow_modules_opengl_web_GL.TEXTURE2 = 33986;
snow_modules_opengl_web_GL.TEXTURE3 = 33987;
snow_modules_opengl_web_GL.TEXTURE4 = 33988;
snow_modules_opengl_web_GL.TEXTURE5 = 33989;
snow_modules_opengl_web_GL.TEXTURE6 = 33990;
snow_modules_opengl_web_GL.TEXTURE7 = 33991;
snow_modules_opengl_web_GL.TEXTURE8 = 33992;
snow_modules_opengl_web_GL.TEXTURE9 = 33993;
snow_modules_opengl_web_GL.TEXTURE10 = 33994;
snow_modules_opengl_web_GL.TEXTURE11 = 33995;
snow_modules_opengl_web_GL.TEXTURE12 = 33996;
snow_modules_opengl_web_GL.TEXTURE13 = 33997;
snow_modules_opengl_web_GL.TEXTURE14 = 33998;
snow_modules_opengl_web_GL.TEXTURE15 = 33999;
snow_modules_opengl_web_GL.TEXTURE16 = 34000;
snow_modules_opengl_web_GL.TEXTURE17 = 34001;
snow_modules_opengl_web_GL.TEXTURE18 = 34002;
snow_modules_opengl_web_GL.TEXTURE19 = 34003;
snow_modules_opengl_web_GL.TEXTURE20 = 34004;
snow_modules_opengl_web_GL.TEXTURE21 = 34005;
snow_modules_opengl_web_GL.TEXTURE22 = 34006;
snow_modules_opengl_web_GL.TEXTURE23 = 34007;
snow_modules_opengl_web_GL.TEXTURE24 = 34008;
snow_modules_opengl_web_GL.TEXTURE25 = 34009;
snow_modules_opengl_web_GL.TEXTURE26 = 34010;
snow_modules_opengl_web_GL.TEXTURE27 = 34011;
snow_modules_opengl_web_GL.TEXTURE28 = 34012;
snow_modules_opengl_web_GL.TEXTURE29 = 34013;
snow_modules_opengl_web_GL.TEXTURE30 = 34014;
snow_modules_opengl_web_GL.TEXTURE31 = 34015;
snow_modules_opengl_web_GL.ACTIVE_TEXTURE = 34016;
snow_modules_opengl_web_GL.REPEAT = 10497;
snow_modules_opengl_web_GL.CLAMP_TO_EDGE = 33071;
snow_modules_opengl_web_GL.MIRRORED_REPEAT = 33648;
snow_modules_opengl_web_GL.FLOAT_VEC2 = 35664;
snow_modules_opengl_web_GL.FLOAT_VEC3 = 35665;
snow_modules_opengl_web_GL.FLOAT_VEC4 = 35666;
snow_modules_opengl_web_GL.INT_VEC2 = 35667;
snow_modules_opengl_web_GL.INT_VEC3 = 35668;
snow_modules_opengl_web_GL.INT_VEC4 = 35669;
snow_modules_opengl_web_GL.BOOL = 35670;
snow_modules_opengl_web_GL.BOOL_VEC2 = 35671;
snow_modules_opengl_web_GL.BOOL_VEC3 = 35672;
snow_modules_opengl_web_GL.BOOL_VEC4 = 35673;
snow_modules_opengl_web_GL.FLOAT_MAT2 = 35674;
snow_modules_opengl_web_GL.FLOAT_MAT3 = 35675;
snow_modules_opengl_web_GL.FLOAT_MAT4 = 35676;
snow_modules_opengl_web_GL.SAMPLER_2D = 35678;
snow_modules_opengl_web_GL.SAMPLER_CUBE = 35680;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
snow_modules_opengl_web_GL.VERTEX_PROGRAM_POINT_SIZE = 34370;
snow_modules_opengl_web_GL.POINT_SPRITE = 34913;
snow_modules_opengl_web_GL.COMPILE_STATUS = 35713;
snow_modules_opengl_web_GL.LOW_FLOAT = 36336;
snow_modules_opengl_web_GL.MEDIUM_FLOAT = 36337;
snow_modules_opengl_web_GL.HIGH_FLOAT = 36338;
snow_modules_opengl_web_GL.LOW_INT = 36339;
snow_modules_opengl_web_GL.MEDIUM_INT = 36340;
snow_modules_opengl_web_GL.HIGH_INT = 36341;
snow_modules_opengl_web_GL.FRAMEBUFFER = 36160;
snow_modules_opengl_web_GL.RENDERBUFFER = 36161;
snow_modules_opengl_web_GL.RGBA4 = 32854;
snow_modules_opengl_web_GL.RGB5_A1 = 32855;
snow_modules_opengl_web_GL.RGB565 = 36194;
snow_modules_opengl_web_GL.DEPTH_COMPONENT16 = 33189;
snow_modules_opengl_web_GL.STENCIL_INDEX = 6401;
snow_modules_opengl_web_GL.STENCIL_INDEX8 = 36168;
snow_modules_opengl_web_GL.DEPTH_STENCIL = 34041;
snow_modules_opengl_web_GL.RENDERBUFFER_WIDTH = 36162;
snow_modules_opengl_web_GL.RENDERBUFFER_HEIGHT = 36163;
snow_modules_opengl_web_GL.RENDERBUFFER_INTERNAL_FORMAT = 36164;
snow_modules_opengl_web_GL.RENDERBUFFER_RED_SIZE = 36176;
snow_modules_opengl_web_GL.RENDERBUFFER_GREEN_SIZE = 36177;
snow_modules_opengl_web_GL.RENDERBUFFER_BLUE_SIZE = 36178;
snow_modules_opengl_web_GL.RENDERBUFFER_ALPHA_SIZE = 36179;
snow_modules_opengl_web_GL.RENDERBUFFER_DEPTH_SIZE = 36180;
snow_modules_opengl_web_GL.RENDERBUFFER_STENCIL_SIZE = 36181;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
snow_modules_opengl_web_GL.COLOR_ATTACHMENT0 = 36064;
snow_modules_opengl_web_GL.DEPTH_ATTACHMENT = 36096;
snow_modules_opengl_web_GL.STENCIL_ATTACHMENT = 36128;
snow_modules_opengl_web_GL.DEPTH_STENCIL_ATTACHMENT = 33306;
snow_modules_opengl_web_GL.NONE = 0;
snow_modules_opengl_web_GL.FRAMEBUFFER_COMPLETE = 36053;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
snow_modules_opengl_web_GL.FRAMEBUFFER_UNSUPPORTED = 36061;
snow_modules_opengl_web_GL.FRAMEBUFFER_BINDING = 36006;
snow_modules_opengl_web_GL.RENDERBUFFER_BINDING = 36007;
snow_modules_opengl_web_GL.MAX_RENDERBUFFER_SIZE = 34024;
snow_modules_opengl_web_GL.INVALID_FRAMEBUFFER_OPERATION = 1286;
snow_modules_opengl_web_GL.UNPACK_FLIP_Y_WEBGL = 37440;
snow_modules_opengl_web_GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
snow_modules_opengl_web_GL.CONTEXT_LOST_WEBGL = 37442;
snow_modules_opengl_web_GL.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
snow_modules_opengl_web_GL.BROWSER_DEFAULT_WEBGL = 37444;
snow_modules_webaudio_Audio.half_pi = 1.5707;
snow_systems_input_Keycodes.unknown = 0;
snow_systems_input_Keycodes.enter = 13;
snow_systems_input_Keycodes.escape = 27;
snow_systems_input_Keycodes.backspace = 8;
snow_systems_input_Keycodes.tab = 9;
snow_systems_input_Keycodes.space = 32;
snow_systems_input_Keycodes.exclaim = 33;
snow_systems_input_Keycodes.quotedbl = 34;
snow_systems_input_Keycodes.hash = 35;
snow_systems_input_Keycodes.percent = 37;
snow_systems_input_Keycodes.dollar = 36;
snow_systems_input_Keycodes.ampersand = 38;
snow_systems_input_Keycodes.quote = 39;
snow_systems_input_Keycodes.leftparen = 40;
snow_systems_input_Keycodes.rightparen = 41;
snow_systems_input_Keycodes.asterisk = 42;
snow_systems_input_Keycodes.plus = 43;
snow_systems_input_Keycodes.comma = 44;
snow_systems_input_Keycodes.minus = 45;
snow_systems_input_Keycodes.period = 46;
snow_systems_input_Keycodes.slash = 47;
snow_systems_input_Keycodes.key_0 = 48;
snow_systems_input_Keycodes.key_1 = 49;
snow_systems_input_Keycodes.key_2 = 50;
snow_systems_input_Keycodes.key_3 = 51;
snow_systems_input_Keycodes.key_4 = 52;
snow_systems_input_Keycodes.key_5 = 53;
snow_systems_input_Keycodes.key_6 = 54;
snow_systems_input_Keycodes.key_7 = 55;
snow_systems_input_Keycodes.key_8 = 56;
snow_systems_input_Keycodes.key_9 = 57;
snow_systems_input_Keycodes.colon = 58;
snow_systems_input_Keycodes.semicolon = 59;
snow_systems_input_Keycodes.less = 60;
snow_systems_input_Keycodes.equals = 61;
snow_systems_input_Keycodes.greater = 62;
snow_systems_input_Keycodes.question = 63;
snow_systems_input_Keycodes.at = 64;
snow_systems_input_Keycodes.leftbracket = 91;
snow_systems_input_Keycodes.backslash = 92;
snow_systems_input_Keycodes.rightbracket = 93;
snow_systems_input_Keycodes.caret = 94;
snow_systems_input_Keycodes.underscore = 95;
snow_systems_input_Keycodes.backquote = 96;
snow_systems_input_Keycodes.key_a = 97;
snow_systems_input_Keycodes.key_b = 98;
snow_systems_input_Keycodes.key_c = 99;
snow_systems_input_Keycodes.key_d = 100;
snow_systems_input_Keycodes.key_e = 101;
snow_systems_input_Keycodes.key_f = 102;
snow_systems_input_Keycodes.key_g = 103;
snow_systems_input_Keycodes.key_h = 104;
snow_systems_input_Keycodes.key_i = 105;
snow_systems_input_Keycodes.key_j = 106;
snow_systems_input_Keycodes.key_k = 107;
snow_systems_input_Keycodes.key_l = 108;
snow_systems_input_Keycodes.key_m = 109;
snow_systems_input_Keycodes.key_n = 110;
snow_systems_input_Keycodes.key_o = 111;
snow_systems_input_Keycodes.key_p = 112;
snow_systems_input_Keycodes.key_q = 113;
snow_systems_input_Keycodes.key_r = 114;
snow_systems_input_Keycodes.key_s = 115;
snow_systems_input_Keycodes.key_t = 116;
snow_systems_input_Keycodes.key_u = 117;
snow_systems_input_Keycodes.key_v = 118;
snow_systems_input_Keycodes.key_w = 119;
snow_systems_input_Keycodes.key_x = 120;
snow_systems_input_Keycodes.key_y = 121;
snow_systems_input_Keycodes.key_z = 122;
snow_systems_input_Keycodes.capslock = 1073741881;
snow_systems_input_Keycodes.f1 = 1073741882;
snow_systems_input_Keycodes.f2 = 1073741883;
snow_systems_input_Keycodes.f3 = 1073741884;
snow_systems_input_Keycodes.f4 = 1073741885;
snow_systems_input_Keycodes.f5 = 1073741886;
snow_systems_input_Keycodes.f6 = 1073741887;
snow_systems_input_Keycodes.f7 = 1073741888;
snow_systems_input_Keycodes.f8 = 1073741889;
snow_systems_input_Keycodes.f9 = 1073741890;
snow_systems_input_Keycodes.f10 = 1073741891;
snow_systems_input_Keycodes.f11 = 1073741892;
snow_systems_input_Keycodes.f12 = 1073741893;
snow_systems_input_Keycodes.printscreen = 1073741894;
snow_systems_input_Keycodes.scrolllock = 1073741895;
snow_systems_input_Keycodes.pause = 1073741896;
snow_systems_input_Keycodes.insert = 1073741897;
snow_systems_input_Keycodes.home = 1073741898;
snow_systems_input_Keycodes.pageup = 1073741899;
snow_systems_input_Keycodes["delete"] = 127;
snow_systems_input_Keycodes.end = 1073741901;
snow_systems_input_Keycodes.pagedown = 1073741902;
snow_systems_input_Keycodes.right = 1073741903;
snow_systems_input_Keycodes.left = 1073741904;
snow_systems_input_Keycodes.down = 1073741905;
snow_systems_input_Keycodes.up = 1073741906;
snow_systems_input_Keycodes.numlockclear = 1073741907;
snow_systems_input_Keycodes.kp_divide = 1073741908;
snow_systems_input_Keycodes.kp_multiply = 1073741909;
snow_systems_input_Keycodes.kp_minus = 1073741910;
snow_systems_input_Keycodes.kp_plus = 1073741911;
snow_systems_input_Keycodes.kp_enter = 1073741912;
snow_systems_input_Keycodes.kp_1 = 1073741913;
snow_systems_input_Keycodes.kp_2 = 1073741914;
snow_systems_input_Keycodes.kp_3 = 1073741915;
snow_systems_input_Keycodes.kp_4 = 1073741916;
snow_systems_input_Keycodes.kp_5 = 1073741917;
snow_systems_input_Keycodes.kp_6 = 1073741918;
snow_systems_input_Keycodes.kp_7 = 1073741919;
snow_systems_input_Keycodes.kp_8 = 1073741920;
snow_systems_input_Keycodes.kp_9 = 1073741921;
snow_systems_input_Keycodes.kp_0 = 1073741922;
snow_systems_input_Keycodes.kp_period = 1073741923;
snow_systems_input_Keycodes.application = 1073741925;
snow_systems_input_Keycodes.power = 1073741926;
snow_systems_input_Keycodes.kp_equals = 1073741927;
snow_systems_input_Keycodes.f13 = 1073741928;
snow_systems_input_Keycodes.f14 = 1073741929;
snow_systems_input_Keycodes.f15 = 1073741930;
snow_systems_input_Keycodes.f16 = 1073741931;
snow_systems_input_Keycodes.f17 = 1073741932;
snow_systems_input_Keycodes.f18 = 1073741933;
snow_systems_input_Keycodes.f19 = 1073741934;
snow_systems_input_Keycodes.f20 = 1073741935;
snow_systems_input_Keycodes.f21 = 1073741936;
snow_systems_input_Keycodes.f22 = 1073741937;
snow_systems_input_Keycodes.f23 = 1073741938;
snow_systems_input_Keycodes.f24 = 1073741939;
snow_systems_input_Keycodes.execute = 1073741940;
snow_systems_input_Keycodes.help = 1073741941;
snow_systems_input_Keycodes.menu = 1073741942;
snow_systems_input_Keycodes.select = 1073741943;
snow_systems_input_Keycodes.stop = 1073741944;
snow_systems_input_Keycodes.again = 1073741945;
snow_systems_input_Keycodes.undo = 1073741946;
snow_systems_input_Keycodes.cut = 1073741947;
snow_systems_input_Keycodes.copy = 1073741948;
snow_systems_input_Keycodes.paste = 1073741949;
snow_systems_input_Keycodes.find = 1073741950;
snow_systems_input_Keycodes.mute = 1073741951;
snow_systems_input_Keycodes.volumeup = 1073741952;
snow_systems_input_Keycodes.volumedown = 1073741953;
snow_systems_input_Keycodes.kp_comma = 1073741957;
snow_systems_input_Keycodes.kp_equalsas400 = 1073741958;
snow_systems_input_Keycodes.alterase = 1073741977;
snow_systems_input_Keycodes.sysreq = 1073741978;
snow_systems_input_Keycodes.cancel = 1073741979;
snow_systems_input_Keycodes.clear = 1073741980;
snow_systems_input_Keycodes.prior = 1073741981;
snow_systems_input_Keycodes.return2 = 1073741982;
snow_systems_input_Keycodes.separator = 1073741983;
snow_systems_input_Keycodes.out = 1073741984;
snow_systems_input_Keycodes.oper = 1073741985;
snow_systems_input_Keycodes.clearagain = 1073741986;
snow_systems_input_Keycodes.crsel = 1073741987;
snow_systems_input_Keycodes.exsel = 1073741988;
snow_systems_input_Keycodes.kp_00 = 1073742000;
snow_systems_input_Keycodes.kp_000 = 1073742001;
snow_systems_input_Keycodes.thousandsseparator = 1073742002;
snow_systems_input_Keycodes.decimalseparator = 1073742003;
snow_systems_input_Keycodes.currencyunit = 1073742004;
snow_systems_input_Keycodes.currencysubunit = 1073742005;
snow_systems_input_Keycodes.kp_leftparen = 1073742006;
snow_systems_input_Keycodes.kp_rightparen = 1073742007;
snow_systems_input_Keycodes.kp_leftbrace = 1073742008;
snow_systems_input_Keycodes.kp_rightbrace = 1073742009;
snow_systems_input_Keycodes.kp_tab = 1073742010;
snow_systems_input_Keycodes.kp_backspace = 1073742011;
snow_systems_input_Keycodes.kp_a = 1073742012;
snow_systems_input_Keycodes.kp_b = 1073742013;
snow_systems_input_Keycodes.kp_c = 1073742014;
snow_systems_input_Keycodes.kp_d = 1073742015;
snow_systems_input_Keycodes.kp_e = 1073742016;
snow_systems_input_Keycodes.kp_f = 1073742017;
snow_systems_input_Keycodes.kp_xor = 1073742018;
snow_systems_input_Keycodes.kp_power = 1073742019;
snow_systems_input_Keycodes.kp_percent = 1073742020;
snow_systems_input_Keycodes.kp_less = 1073742021;
snow_systems_input_Keycodes.kp_greater = 1073742022;
snow_systems_input_Keycodes.kp_ampersand = 1073742023;
snow_systems_input_Keycodes.kp_dblampersand = 1073742024;
snow_systems_input_Keycodes.kp_verticalbar = 1073742025;
snow_systems_input_Keycodes.kp_dblverticalbar = 1073742026;
snow_systems_input_Keycodes.kp_colon = 1073742027;
snow_systems_input_Keycodes.kp_hash = 1073742028;
snow_systems_input_Keycodes.kp_space = 1073742029;
snow_systems_input_Keycodes.kp_at = 1073742030;
snow_systems_input_Keycodes.kp_exclam = 1073742031;
snow_systems_input_Keycodes.kp_memstore = 1073742032;
snow_systems_input_Keycodes.kp_memrecall = 1073742033;
snow_systems_input_Keycodes.kp_memclear = 1073742034;
snow_systems_input_Keycodes.kp_memadd = 1073742035;
snow_systems_input_Keycodes.kp_memsubtract = 1073742036;
snow_systems_input_Keycodes.kp_memmultiply = 1073742037;
snow_systems_input_Keycodes.kp_memdivide = 1073742038;
snow_systems_input_Keycodes.kp_plusminus = 1073742039;
snow_systems_input_Keycodes.kp_clear = 1073742040;
snow_systems_input_Keycodes.kp_clearentry = 1073742041;
snow_systems_input_Keycodes.kp_binary = 1073742042;
snow_systems_input_Keycodes.kp_octal = 1073742043;
snow_systems_input_Keycodes.kp_decimal = 1073742044;
snow_systems_input_Keycodes.kp_hexadecimal = 1073742045;
snow_systems_input_Keycodes.lctrl = 1073742048;
snow_systems_input_Keycodes.lshift = 1073742049;
snow_systems_input_Keycodes.lalt = 1073742050;
snow_systems_input_Keycodes.lmeta = 1073742051;
snow_systems_input_Keycodes.rctrl = 1073742052;
snow_systems_input_Keycodes.rshift = 1073742053;
snow_systems_input_Keycodes.ralt = 1073742054;
snow_systems_input_Keycodes.rmeta = 1073742055;
snow_systems_input_Keycodes.mode = 1073742081;
snow_systems_input_Keycodes.audionext = 1073742082;
snow_systems_input_Keycodes.audioprev = 1073742083;
snow_systems_input_Keycodes.audiostop = 1073742084;
snow_systems_input_Keycodes.audioplay = 1073742085;
snow_systems_input_Keycodes.audiomute = 1073742086;
snow_systems_input_Keycodes.mediaselect = 1073742087;
snow_systems_input_Keycodes.www = 1073742088;
snow_systems_input_Keycodes.mail = 1073742089;
snow_systems_input_Keycodes.calculator = 1073742090;
snow_systems_input_Keycodes.computer = 1073742091;
snow_systems_input_Keycodes.ac_search = 1073742092;
snow_systems_input_Keycodes.ac_home = 1073742093;
snow_systems_input_Keycodes.ac_back = 1073742094;
snow_systems_input_Keycodes.ac_forward = 1073742095;
snow_systems_input_Keycodes.ac_stop = 1073742096;
snow_systems_input_Keycodes.ac_refresh = 1073742097;
snow_systems_input_Keycodes.ac_bookmarks = 1073742098;
snow_systems_input_Keycodes.brightnessdown = 1073742099;
snow_systems_input_Keycodes.brightnessup = 1073742100;
snow_systems_input_Keycodes.displayswitch = 1073742101;
snow_systems_input_Keycodes.kbdillumtoggle = 1073742102;
snow_systems_input_Keycodes.kbdillumdown = 1073742103;
snow_systems_input_Keycodes.kbdillumup = 1073742104;
snow_systems_input_Keycodes.eject = 1073742105;
snow_systems_input_Keycodes.sleep = 1073742106;
snow_systems_input_Scancodes.MASK = 1073741824;
snow_systems_input_Scancodes.unknown = 0;
snow_systems_input_Scancodes.key_a = 4;
snow_systems_input_Scancodes.key_b = 5;
snow_systems_input_Scancodes.key_c = 6;
snow_systems_input_Scancodes.key_d = 7;
snow_systems_input_Scancodes.key_e = 8;
snow_systems_input_Scancodes.key_f = 9;
snow_systems_input_Scancodes.key_g = 10;
snow_systems_input_Scancodes.key_h = 11;
snow_systems_input_Scancodes.key_i = 12;
snow_systems_input_Scancodes.key_j = 13;
snow_systems_input_Scancodes.key_k = 14;
snow_systems_input_Scancodes.key_l = 15;
snow_systems_input_Scancodes.key_m = 16;
snow_systems_input_Scancodes.key_n = 17;
snow_systems_input_Scancodes.key_o = 18;
snow_systems_input_Scancodes.key_p = 19;
snow_systems_input_Scancodes.key_q = 20;
snow_systems_input_Scancodes.key_r = 21;
snow_systems_input_Scancodes.key_s = 22;
snow_systems_input_Scancodes.key_t = 23;
snow_systems_input_Scancodes.key_u = 24;
snow_systems_input_Scancodes.key_v = 25;
snow_systems_input_Scancodes.key_w = 26;
snow_systems_input_Scancodes.key_x = 27;
snow_systems_input_Scancodes.key_y = 28;
snow_systems_input_Scancodes.key_z = 29;
snow_systems_input_Scancodes.key_1 = 30;
snow_systems_input_Scancodes.key_2 = 31;
snow_systems_input_Scancodes.key_3 = 32;
snow_systems_input_Scancodes.key_4 = 33;
snow_systems_input_Scancodes.key_5 = 34;
snow_systems_input_Scancodes.key_6 = 35;
snow_systems_input_Scancodes.key_7 = 36;
snow_systems_input_Scancodes.key_8 = 37;
snow_systems_input_Scancodes.key_9 = 38;
snow_systems_input_Scancodes.key_0 = 39;
snow_systems_input_Scancodes.enter = 40;
snow_systems_input_Scancodes.escape = 41;
snow_systems_input_Scancodes.backspace = 42;
snow_systems_input_Scancodes.tab = 43;
snow_systems_input_Scancodes.space = 44;
snow_systems_input_Scancodes.minus = 45;
snow_systems_input_Scancodes.equals = 46;
snow_systems_input_Scancodes.leftbracket = 47;
snow_systems_input_Scancodes.rightbracket = 48;
snow_systems_input_Scancodes.backslash = 49;
snow_systems_input_Scancodes.nonushash = 50;
snow_systems_input_Scancodes.semicolon = 51;
snow_systems_input_Scancodes.apostrophe = 52;
snow_systems_input_Scancodes.grave = 53;
snow_systems_input_Scancodes.comma = 54;
snow_systems_input_Scancodes.period = 55;
snow_systems_input_Scancodes.slash = 56;
snow_systems_input_Scancodes.capslock = 57;
snow_systems_input_Scancodes.f1 = 58;
snow_systems_input_Scancodes.f2 = 59;
snow_systems_input_Scancodes.f3 = 60;
snow_systems_input_Scancodes.f4 = 61;
snow_systems_input_Scancodes.f5 = 62;
snow_systems_input_Scancodes.f6 = 63;
snow_systems_input_Scancodes.f7 = 64;
snow_systems_input_Scancodes.f8 = 65;
snow_systems_input_Scancodes.f9 = 66;
snow_systems_input_Scancodes.f10 = 67;
snow_systems_input_Scancodes.f11 = 68;
snow_systems_input_Scancodes.f12 = 69;
snow_systems_input_Scancodes.printscreen = 70;
snow_systems_input_Scancodes.scrolllock = 71;
snow_systems_input_Scancodes.pause = 72;
snow_systems_input_Scancodes.insert = 73;
snow_systems_input_Scancodes.home = 74;
snow_systems_input_Scancodes.pageup = 75;
snow_systems_input_Scancodes["delete"] = 76;
snow_systems_input_Scancodes.end = 77;
snow_systems_input_Scancodes.pagedown = 78;
snow_systems_input_Scancodes.right = 79;
snow_systems_input_Scancodes.left = 80;
snow_systems_input_Scancodes.down = 81;
snow_systems_input_Scancodes.up = 82;
snow_systems_input_Scancodes.numlockclear = 83;
snow_systems_input_Scancodes.kp_divide = 84;
snow_systems_input_Scancodes.kp_multiply = 85;
snow_systems_input_Scancodes.kp_minus = 86;
snow_systems_input_Scancodes.kp_plus = 87;
snow_systems_input_Scancodes.kp_enter = 88;
snow_systems_input_Scancodes.kp_1 = 89;
snow_systems_input_Scancodes.kp_2 = 90;
snow_systems_input_Scancodes.kp_3 = 91;
snow_systems_input_Scancodes.kp_4 = 92;
snow_systems_input_Scancodes.kp_5 = 93;
snow_systems_input_Scancodes.kp_6 = 94;
snow_systems_input_Scancodes.kp_7 = 95;
snow_systems_input_Scancodes.kp_8 = 96;
snow_systems_input_Scancodes.kp_9 = 97;
snow_systems_input_Scancodes.kp_0 = 98;
snow_systems_input_Scancodes.kp_period = 99;
snow_systems_input_Scancodes.nonusbackslash = 100;
snow_systems_input_Scancodes.application = 101;
snow_systems_input_Scancodes.power = 102;
snow_systems_input_Scancodes.kp_equals = 103;
snow_systems_input_Scancodes.f13 = 104;
snow_systems_input_Scancodes.f14 = 105;
snow_systems_input_Scancodes.f15 = 106;
snow_systems_input_Scancodes.f16 = 107;
snow_systems_input_Scancodes.f17 = 108;
snow_systems_input_Scancodes.f18 = 109;
snow_systems_input_Scancodes.f19 = 110;
snow_systems_input_Scancodes.f20 = 111;
snow_systems_input_Scancodes.f21 = 112;
snow_systems_input_Scancodes.f22 = 113;
snow_systems_input_Scancodes.f23 = 114;
snow_systems_input_Scancodes.f24 = 115;
snow_systems_input_Scancodes.execute = 116;
snow_systems_input_Scancodes.help = 117;
snow_systems_input_Scancodes.menu = 118;
snow_systems_input_Scancodes.select = 119;
snow_systems_input_Scancodes.stop = 120;
snow_systems_input_Scancodes.again = 121;
snow_systems_input_Scancodes.undo = 122;
snow_systems_input_Scancodes.cut = 123;
snow_systems_input_Scancodes.copy = 124;
snow_systems_input_Scancodes.paste = 125;
snow_systems_input_Scancodes.find = 126;
snow_systems_input_Scancodes.mute = 127;
snow_systems_input_Scancodes.volumeup = 128;
snow_systems_input_Scancodes.volumedown = 129;
snow_systems_input_Scancodes.kp_comma = 133;
snow_systems_input_Scancodes.kp_equalsas400 = 134;
snow_systems_input_Scancodes.international1 = 135;
snow_systems_input_Scancodes.international2 = 136;
snow_systems_input_Scancodes.international3 = 137;
snow_systems_input_Scancodes.international4 = 138;
snow_systems_input_Scancodes.international5 = 139;
snow_systems_input_Scancodes.international6 = 140;
snow_systems_input_Scancodes.international7 = 141;
snow_systems_input_Scancodes.international8 = 142;
snow_systems_input_Scancodes.international9 = 143;
snow_systems_input_Scancodes.lang1 = 144;
snow_systems_input_Scancodes.lang2 = 145;
snow_systems_input_Scancodes.lang3 = 146;
snow_systems_input_Scancodes.lang4 = 147;
snow_systems_input_Scancodes.lang5 = 148;
snow_systems_input_Scancodes.lang6 = 149;
snow_systems_input_Scancodes.lang7 = 150;
snow_systems_input_Scancodes.lang8 = 151;
snow_systems_input_Scancodes.lang9 = 152;
snow_systems_input_Scancodes.alterase = 153;
snow_systems_input_Scancodes.sysreq = 154;
snow_systems_input_Scancodes.cancel = 155;
snow_systems_input_Scancodes.clear = 156;
snow_systems_input_Scancodes.prior = 157;
snow_systems_input_Scancodes.return2 = 158;
snow_systems_input_Scancodes.separator = 159;
snow_systems_input_Scancodes.out = 160;
snow_systems_input_Scancodes.oper = 161;
snow_systems_input_Scancodes.clearagain = 162;
snow_systems_input_Scancodes.crsel = 163;
snow_systems_input_Scancodes.exsel = 164;
snow_systems_input_Scancodes.kp_00 = 176;
snow_systems_input_Scancodes.kp_000 = 177;
snow_systems_input_Scancodes.thousandsseparator = 178;
snow_systems_input_Scancodes.decimalseparator = 179;
snow_systems_input_Scancodes.currencyunit = 180;
snow_systems_input_Scancodes.currencysubunit = 181;
snow_systems_input_Scancodes.kp_leftparen = 182;
snow_systems_input_Scancodes.kp_rightparen = 183;
snow_systems_input_Scancodes.kp_leftbrace = 184;
snow_systems_input_Scancodes.kp_rightbrace = 185;
snow_systems_input_Scancodes.kp_tab = 186;
snow_systems_input_Scancodes.kp_backspace = 187;
snow_systems_input_Scancodes.kp_a = 188;
snow_systems_input_Scancodes.kp_b = 189;
snow_systems_input_Scancodes.kp_c = 190;
snow_systems_input_Scancodes.kp_d = 191;
snow_systems_input_Scancodes.kp_e = 192;
snow_systems_input_Scancodes.kp_f = 193;
snow_systems_input_Scancodes.kp_xor = 194;
snow_systems_input_Scancodes.kp_power = 195;
snow_systems_input_Scancodes.kp_percent = 196;
snow_systems_input_Scancodes.kp_less = 197;
snow_systems_input_Scancodes.kp_greater = 198;
snow_systems_input_Scancodes.kp_ampersand = 199;
snow_systems_input_Scancodes.kp_dblampersand = 200;
snow_systems_input_Scancodes.kp_verticalbar = 201;
snow_systems_input_Scancodes.kp_dblverticalbar = 202;
snow_systems_input_Scancodes.kp_colon = 203;
snow_systems_input_Scancodes.kp_hash = 204;
snow_systems_input_Scancodes.kp_space = 205;
snow_systems_input_Scancodes.kp_at = 206;
snow_systems_input_Scancodes.kp_exclam = 207;
snow_systems_input_Scancodes.kp_memstore = 208;
snow_systems_input_Scancodes.kp_memrecall = 209;
snow_systems_input_Scancodes.kp_memclear = 210;
snow_systems_input_Scancodes.kp_memadd = 211;
snow_systems_input_Scancodes.kp_memsubtract = 212;
snow_systems_input_Scancodes.kp_memmultiply = 213;
snow_systems_input_Scancodes.kp_memdivide = 214;
snow_systems_input_Scancodes.kp_plusminus = 215;
snow_systems_input_Scancodes.kp_clear = 216;
snow_systems_input_Scancodes.kp_clearentry = 217;
snow_systems_input_Scancodes.kp_binary = 218;
snow_systems_input_Scancodes.kp_octal = 219;
snow_systems_input_Scancodes.kp_decimal = 220;
snow_systems_input_Scancodes.kp_hexadecimal = 221;
snow_systems_input_Scancodes.lctrl = 224;
snow_systems_input_Scancodes.lshift = 225;
snow_systems_input_Scancodes.lalt = 226;
snow_systems_input_Scancodes.lmeta = 227;
snow_systems_input_Scancodes.rctrl = 228;
snow_systems_input_Scancodes.rshift = 229;
snow_systems_input_Scancodes.ralt = 230;
snow_systems_input_Scancodes.rmeta = 231;
snow_systems_input_Scancodes.mode = 257;
snow_systems_input_Scancodes.audionext = 258;
snow_systems_input_Scancodes.audioprev = 259;
snow_systems_input_Scancodes.audiostop = 260;
snow_systems_input_Scancodes.audioplay = 261;
snow_systems_input_Scancodes.audiomute = 262;
snow_systems_input_Scancodes.mediaselect = 263;
snow_systems_input_Scancodes.www = 264;
snow_systems_input_Scancodes.mail = 265;
snow_systems_input_Scancodes.calculator = 266;
snow_systems_input_Scancodes.computer = 267;
snow_systems_input_Scancodes.ac_search = 268;
snow_systems_input_Scancodes.ac_home = 269;
snow_systems_input_Scancodes.ac_back = 270;
snow_systems_input_Scancodes.ac_forward = 271;
snow_systems_input_Scancodes.ac_stop = 272;
snow_systems_input_Scancodes.ac_refresh = 273;
snow_systems_input_Scancodes.ac_bookmarks = 274;
snow_systems_input_Scancodes.brightnessdown = 275;
snow_systems_input_Scancodes.brightnessup = 276;
snow_systems_input_Scancodes.displayswitch = 277;
snow_systems_input_Scancodes.kbdillumtoggle = 278;
snow_systems_input_Scancodes.kbdillumdown = 279;
snow_systems_input_Scancodes.kbdillumup = 280;
snow_systems_input_Scancodes.eject = 281;
snow_systems_input_Scancodes.sleep = 282;
snow_systems_input_Scancodes.app1 = 283;
snow_systems_input_Scancodes.app2 = 284;
snow_systems_input_Scancodes.scancode_names = [null,null,null,null,"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","1","2","3","4","5","6","7","8","9","0","Enter","Escape","Backspace","Tab","Space","-","=","[","]","\\","#",";","'","`",",",".","/","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","Delete","End","PageDown","Right","Left","Down","Up","Numlock","Keypad /","Keypad *","Keypad -","Keypad +","Keypad Enter","Keypad 1","Keypad 2","Keypad 3","Keypad 4","Keypad 5","Keypad 6","Keypad 7","Keypad 8","Keypad 9","Keypad 0","Keypad .",null,"Application","Power","Keypad =","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown",null,null,null,"Keypad ,","Keypad = (AS400)",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"AltErase","SysReq","Cancel","Clear","Prior","Enter","Separator","Out","Oper","Clear / Again","CrSel","ExSel",null,null,null,null,null,null,null,null,null,null,null,"Keypad 00","Keypad 000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","Keypad (","Keypad )","Keypad {","Keypad }","Keypad Tab","Keypad Backspace","Keypad A","Keypad B","Keypad C","Keypad D","Keypad E","Keypad F","Keypad XOR","Keypad ^","Keypad %","Keypad <","Keypad >","Keypad &","Keypad &&","Keypad |","Keypad ||","Keypad :","Keypad #","Keypad Space","Keypad @","Keypad !","Keypad MemStore","Keypad MemRecall","Keypad MemClear","Keypad MemAdd","Keypad MemSubtract","Keypad MemMultiply","Keypad MemDivide","Keypad +/-","Keypad Clear","Keypad ClearEntry","Keypad Binary","Keypad Octal","Keypad Decimal","Keypad Hexadecimal",null,null,"Left Ctrl","Left Shift","Left Alt","Left Meta","Right Ctrl","Right Shift","Right Alt","Right Meta",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"ModeSwitch","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","WWW","Mail","Calculator","Computer","AC Search","AC Home","AC Back","AC Forward","AC Stop","AC Refresh","AC Bookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KBDIllumToggle","KBDIllumDown","KBDIllumUp","Eject","Sleep"];
snow_types_Config.app_runtime = "snow.core.web.Runtime";
snow_types_Config.app_config = "config.json";
snow_types_Config.app_ident = "net.nanjizal.trilateral";
snow_types_Config.app_main = "luxe.Engine";
snow_types_Config.module_assets = "snow.core.web.assets.Assets";
snow_types_Config.module_audio = "snow.modules.webaudio.Audio";
snow_types_Config.module_io = "snow.core.web.io.IO";
snow_types_Config.extensions = [];
snow_types__$Types_AssetType_$Impl_$.at_unknown = 0;
snow_types__$Types_AssetType_$Impl_$.at_bytes = 1;
snow_types__$Types_AssetType_$Impl_$.at_text = 2;
snow_types__$Types_AssetType_$Impl_$.at_json = 3;
snow_types__$Types_AssetType_$Impl_$.at_image = 4;
snow_types__$Types_AssetType_$Impl_$.at_audio = 5;
snow_types__$Types_AudioFormatType_$Impl_$.af_unknown = 0;
snow_types__$Types_AudioFormatType_$Impl_$.af_custom = 1;
snow_types__$Types_AudioFormatType_$Impl_$.af_ogg = 2;
snow_types__$Types_AudioFormatType_$Impl_$.af_wav = 3;
snow_types__$Types_AudioFormatType_$Impl_$.af_pcm = 4;
snow_types__$Types_AudioEvent_$Impl_$.ae_end = 0;
snow_types__$Types_AudioEvent_$Impl_$.ae_destroyed = 1;
snow_types__$Types_AudioEvent_$Impl_$.ae_destroyed_source = 2;
snow_types__$Types_AudioState_$Impl_$.as_invalid = -1;
snow_types__$Types_AudioState_$Impl_$.as_paused = 0;
snow_types__$Types_AudioState_$Impl_$.as_playing = 1;
snow_types__$Types_AudioState_$Impl_$.as_stopped = 2;
snow_types__$Types_OpenGLProfile_$Impl_$.compatibility = 0;
snow_types__$Types_OpenGLProfile_$Impl_$.core = 1;
snow_types__$Types_OpenGLProfile_$Impl_$.gles = 2;
snow_types__$Types_KeyEventType_$Impl_$.ke_unknown = 0;
snow_types__$Types_KeyEventType_$Impl_$.ke_down = 1;
snow_types__$Types_KeyEventType_$Impl_$.ke_up = 2;
snow_types__$Types_MouseEventType_$Impl_$.me_unknown = 0;
snow_types__$Types_MouseEventType_$Impl_$.me_move = 1;
snow_types__$Types_MouseEventType_$Impl_$.me_down = 2;
snow_types__$Types_MouseEventType_$Impl_$.me_up = 3;
snow_types__$Types_MouseEventType_$Impl_$.me_wheel = 4;
snow_types__$Types_TouchEventType_$Impl_$.te_unknown = 0;
snow_types__$Types_TouchEventType_$Impl_$.te_move = 1;
snow_types__$Types_TouchEventType_$Impl_$.te_down = 2;
snow_types__$Types_TouchEventType_$Impl_$.te_up = 3;
snow_types__$Types_GamepadEventType_$Impl_$.ge_unknown = 0;
snow_types__$Types_GamepadEventType_$Impl_$.ge_axis = 1;
snow_types__$Types_GamepadEventType_$Impl_$.ge_down = 2;
snow_types__$Types_GamepadEventType_$Impl_$.ge_up = 3;
snow_types__$Types_GamepadEventType_$Impl_$.ge_device = 4;
snow_types__$Types_TextEventType_$Impl_$.te_unknown = 0;
snow_types__$Types_TextEventType_$Impl_$.te_edit = 1;
snow_types__$Types_TextEventType_$Impl_$.te_input = 2;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_unknown = 0;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_added = 1;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_removed = 2;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_remapped = 3;
snow_types__$Types_SystemEventType_$Impl_$.se_unknown = 0;
snow_types__$Types_SystemEventType_$Impl_$.se_init = 1;
snow_types__$Types_SystemEventType_$Impl_$.se_ready = 2;
snow_types__$Types_SystemEventType_$Impl_$.se_tick = 3;
snow_types__$Types_SystemEventType_$Impl_$.se_freeze = 4;
snow_types__$Types_SystemEventType_$Impl_$.se_unfreeze = 5;
snow_types__$Types_SystemEventType_$Impl_$.se_suspend = 6;
snow_types__$Types_SystemEventType_$Impl_$.se_shutdown = 7;
snow_types__$Types_SystemEventType_$Impl_$.se_window = 8;
snow_types__$Types_SystemEventType_$Impl_$.se_input = 9;
snow_types__$Types_SystemEventType_$Impl_$.se_quit = 10;
snow_types__$Types_SystemEventType_$Impl_$.se_app_terminating = 11;
snow_types__$Types_SystemEventType_$Impl_$.se_app_lowmemory = 12;
snow_types__$Types_SystemEventType_$Impl_$.se_app_willenterbackground = 13;
snow_types__$Types_SystemEventType_$Impl_$.se_app_didenterbackground = 14;
snow_types__$Types_SystemEventType_$Impl_$.se_app_willenterforeground = 15;
snow_types__$Types_SystemEventType_$Impl_$.se_app_didenterforeground = 16;
snow_types__$Types_WindowEventType_$Impl_$.we_unknown = 0;
snow_types__$Types_WindowEventType_$Impl_$.we_shown = 1;
snow_types__$Types_WindowEventType_$Impl_$.we_hidden = 2;
snow_types__$Types_WindowEventType_$Impl_$.we_exposed = 3;
snow_types__$Types_WindowEventType_$Impl_$.we_moved = 4;
snow_types__$Types_WindowEventType_$Impl_$.we_resized = 5;
snow_types__$Types_WindowEventType_$Impl_$.we_size_changed = 6;
snow_types__$Types_WindowEventType_$Impl_$.we_minimized = 7;
snow_types__$Types_WindowEventType_$Impl_$.we_maximized = 8;
snow_types__$Types_WindowEventType_$Impl_$.we_restored = 9;
snow_types__$Types_WindowEventType_$Impl_$.we_enter = 10;
snow_types__$Types_WindowEventType_$Impl_$.we_leave = 11;
snow_types__$Types_WindowEventType_$Impl_$.we_focus_gained = 12;
snow_types__$Types_WindowEventType_$Impl_$.we_focus_lost = 13;
snow_types__$Types_WindowEventType_$Impl_$.we_close = 14;
snow_types__$Types_InputEventType_$Impl_$.ie_unknown = 0;
snow_types__$Types_InputEventType_$Impl_$.ie_key = 1;
snow_types__$Types_InputEventType_$Impl_$.ie_text = 2;
snow_types__$Types_InputEventType_$Impl_$.ie_mouse = 3;
snow_types__$Types_InputEventType_$Impl_$.ie_touch = 4;
snow_types__$Types_InputEventType_$Impl_$.ie_gamepad = 5;
snow_types__$Types_InputEventType_$Impl_$.ie_joystick = 6;
trilateral_geom_Algebra.quadStep = 0.03;
trilateral_geom_Algebra.cubicStep = 0.03;
luxe_Game.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
