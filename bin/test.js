// Generated by Haxe 3.4.0 (git build development @ 4a40be3)
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var htmlHelper_webgl_WebGLSetup = function(width_,height_,autoChild) {
	if(autoChild == null) {
		autoChild = true;
	}
	this.colors = [];
	this.indices = [];
	this.vertices = [];
	this.matrix32Array = new Float32Array([1.0,0.0,0.0,0.0,0.0,1.1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0]);
	this.modelViewProjection = new khaMath_Matrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.bgAlpha = 1.;
	this.bgBlue = 1.;
	this.bgGreen = 1.;
	this.bgRed = 1.;
	this.width = width_;
	this.height = height_;
	this.canvas = window.document.createElement("canvas");
	this.canvas.width = this.width;
	this.canvas.height = this.height;
	var style = this.canvas.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = Std.string(0 + "px");
	style.top = Std.string(0 + "px");
	style.position = "absolute";
	if(autoChild) {
		window.document.body.appendChild(this.canvas);
	}
	this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,null);
};
htmlHelper_webgl_WebGLSetup.__name__ = true;
htmlHelper_webgl_WebGLSetup.prototype = {
	setupProgram: function(vertexString,fragmentString) {
		var gl = this.gl;
		var vertexShader = gl.createShader(35633);
		gl.shaderSource(vertexShader,vertexString);
		gl.compileShader(vertexShader);
		var gl1 = this.gl;
		var fragmentShader = gl1.createShader(35632);
		gl1.shaderSource(fragmentShader,fragmentString);
		gl1.compileShader(fragmentShader);
		var gl2 = this.gl;
		var program = gl2.createProgram();
		gl2.attachShader(program,vertexShader);
		gl2.attachShader(program,fragmentShader);
		gl2.linkProgram(program);
		gl2.useProgram(program);
		this.program = program;
		return this.program;
	}
	,render: function() {
		this.gl.clearColor(this.bgRed,this.bgGreen,this.bgBlue,this.bgAlpha);
		this.gl.enable(2884);
		this.gl.cullFace(1029);
		this.gl.clear(16384);
		this.gl.viewport(0,0,this.canvas.width,this.canvas.height);
		var modelViewProjectionID = this.gl.getUniformLocation(this.program,"modelViewProjection");
		var m = this.modelViewProjection;
		this.matrix32Array.set([m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33]);
		this.gl.uniformMatrix4fv(modelViewProjectionID,false,this.matrix32Array);
		this.gl.drawArrays(4,0,this.indices.length);
	}
	,__class__: htmlHelper_webgl_WebGLSetup
};
var Test = function() {
	this.cubictest_d = "M100,200 C100,100 250,100 250,200S400,300 400,200";
	this.quadtest_d = "M200,300 Q400,50 600,300 T1000,300";
	this.theta = 0;
	this.appColors = [0,16711680,16744192,16776960,65280,255,4915330,9699539,4473924,3355443,789516,1118481,16777215,255,65280,16711680];
	htmlHelper_webgl_WebGLSetup.call(this,1140,1140);
	var dark = 0.09375;
	this.bgRed = dark;
	this.bgGreen = dark;
	this.bgBlue = dark;
	this.draw();
	this.setupProgram("attribute vec3 pos;" + "attribute vec4 color;" + "varying vec4 vcol;" + "uniform mat4 modelViewProjection;" + "void main(void) {" + " gl_Position = modelViewProjection * vec4(pos, 1.0);" + " vcol = color;" + "}","precision mediump float;" + "varying vec4 vcol;" + "void main(void) {" + " gl_FragColor = vcol;" + "}");
	this.modelViewProjection = new khaMath_Matrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	if(htmlHelper_tools_AnimateTimer.s == null) {
		htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
		htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
		window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
		htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
		htmlHelper_tools_AnimateTimer.loop(60.0);
	}
	htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render_);
	this.render();
};
Test.__name__ = true;
Test.main = function() {
	new Test();
};
Test.__super__ = htmlHelper_webgl_WebGLSetup;
Test.prototype = $extend(htmlHelper_webgl_WebGLSetup.prototype,{
	addShapes: function() {
		var q_D;
		var q_C;
		var q_B;
		var q_A;
		var dim_y;
		var P_x;
		var p1_y;
		var p1_x;
		var shapes = new trilateral_helper_Shapes(this.triangles,this.appColors);
		var this1 = shapes.triangles;
		var id = shapes.refCount++;
		var pi = Math.PI;
		var omega = -pi;
		var a0x = -0.3 + 0.2 * Math.sin(omega);
		var a0y = -0.3 + 0.2 * Math.cos(omega);
		omega += pi / 3;
		var a1x = -0.3 + 0.2 * Math.sin(omega);
		var a1y = -0.3 + 0.2 * Math.cos(omega);
		omega += pi / 3;
		var b0x = -0.3 + 0.2 * Math.sin(omega);
		var b0y = -0.3 + 0.2 * Math.cos(omega);
		omega += pi / 3;
		var b1x = -0.3 + 0.2 * Math.sin(omega);
		var b1y = -0.3 + 0.2 * Math.cos(omega);
		omega += pi / 3;
		var c0x = -0.3 + 0.2 * Math.sin(omega);
		var c0y = -0.3 + 0.2 * Math.cos(omega);
		omega += pi / 3;
		var c1x = -0.3 + 0.2 * Math.sin(omega);
		var c1y = -0.3 + 0.2 * Math.cos(omega);
		var tri = { t0 : new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y), t1 : new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y)};
		var colorID = shapes.colors.indexOf(16744192);
		var tri1 = tri.t0;
		var t = Type.createEmptyInstance(trilateral_tri_Triangle);
		t.id = id;
		t.ax = tri1.ax;
		t.ay = tri1.ay;
		t.bx = tri1.bx;
		t.by = tri1.by;
		t.cx = tri1.cx;
		t.cy = tri1.cy;
		t.mark = tri1.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = colorID;
		t.colorA = colorID;
		t.colorB = colorID;
		t.colorC = colorID;
		t.windingAdjusted = tri1.windingAdjusted;
		this1[this1.length] = t;
		var tri2 = tri.t1;
		var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t1.id = id;
		t1.ax = tri2.ax;
		t1.ay = tri2.ay;
		t1.bx = tri2.bx;
		t1.by = tri2.by;
		t1.cx = tri2.cx;
		t1.cy = tri2.cy;
		t1.mark = tri2.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = colorID;
		t1.colorA = colorID;
		t1.colorB = colorID;
		t1.colorC = colorID;
		t1.windingAdjusted = tri2.windingAdjusted;
		this1[this1.length] = t1;
		var this2 = shapes.triangles;
		var id1 = shapes.refCount++;
		var theta = Math.PI / 4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		if(theta != 0) {
			var pi1 = Math.PI;
			var pi4 = pi1 / 4;
			var r = 0.15 * Math.sqrt(2);
			var aTheta = -pi1 + theta - pi4;
			var dTheta = -pi1 + theta + pi1 / 2 - pi1 / 4;
			var cTheta = theta - pi4;
			var bTheta = -pi1 + theta - pi1 / 2 - pi4;
			ax = -0.3 + r * Math.sin(aTheta);
			ay = 0.3 + r * Math.cos(aTheta);
			bx = -0.3 + r * Math.sin(bTheta);
			by = 0.3 + r * Math.cos(bTheta);
			cx = -0.3 + r * Math.sin(cTheta);
			cy = 0.3 + r * Math.cos(cTheta);
			dx = -0.3 + r * Math.sin(dTheta);
			dy = 0.3 + r * Math.cos(dTheta);
		} else {
			ax = -0.449999999999999956;
			ay = 0.15;
			bx = -0.149999999999999967;
			by = 0.15;
			cx = -0.149999999999999967;
			cy = 0.449999999999999956;
			dx = -0.449999999999999956;
			dy = 0.449999999999999956;
		}
		var tri3 = { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
		var colorID1 = shapes.colors.indexOf(16776960);
		var tri4 = tri3.t0;
		var t2 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t2.id = id1;
		t2.ax = tri4.ax;
		t2.ay = tri4.ay;
		t2.bx = tri4.bx;
		t2.by = tri4.by;
		t2.cx = tri4.cx;
		t2.cy = tri4.cy;
		t2.mark = tri4.mark;
		t2.depth = 0;
		t2.alpha = 1.;
		t2.colorID = colorID1;
		t2.colorA = colorID1;
		t2.colorB = colorID1;
		t2.colorC = colorID1;
		t2.windingAdjusted = tri4.windingAdjusted;
		this2[this2.length] = t2;
		var tri5 = tri3.t1;
		var t3 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t3.id = id1;
		t3.ax = tri5.ax;
		t3.ay = tri5.ay;
		t3.bx = tri5.bx;
		t3.by = tri5.by;
		t3.cx = tri5.cx;
		t3.cy = tri5.cy;
		t3.mark = tri5.mark;
		t3.depth = 0;
		t3.alpha = 1.;
		t3.colorID = colorID1;
		t3.colorA = colorID1;
		t3.colorB = colorID1;
		t3.colorC = colorID1;
		t3.windingAdjusted = tri5.windingAdjusted;
		this2[this2.length] = t3;
		var this3 = shapes.triangles;
		var id2 = shapes.refCount++;
		var tri6 = { t0 : new trilateral_tri_Trilateral(0.15,-0.449999999999999956,0.449999999999999956,-0.449999999999999956,0.15,-0.149999999999999967), t1 : new trilateral_tri_Trilateral(0.449999999999999956,-0.449999999999999956,0.449999999999999956,-0.149999999999999967,0.15,-0.149999999999999967)};
		var colorID2 = shapes.colors.indexOf(65280);
		var tri7 = tri6.t0;
		var t4 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t4.id = id2;
		t4.ax = tri7.ax;
		t4.ay = tri7.ay;
		t4.bx = tri7.bx;
		t4.by = tri7.by;
		t4.cx = tri7.cx;
		t4.cy = tri7.cy;
		t4.mark = tri7.mark;
		t4.depth = 0;
		t4.alpha = 1.;
		t4.colorID = colorID2;
		t4.colorA = colorID2;
		t4.colorB = colorID2;
		t4.colorC = colorID2;
		t4.windingAdjusted = tri7.windingAdjusted;
		this3[this3.length] = t4;
		var tri8 = tri6.t1;
		var t5 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t5.id = id2;
		t5.ax = tri8.ax;
		t5.ay = tri8.ay;
		t5.bx = tri8.bx;
		t5.by = tri8.by;
		t5.cx = tri8.cx;
		t5.cy = tri8.cy;
		t5.mark = tri8.mark;
		t5.depth = 0;
		t5.alpha = 1.;
		t5.colorID = colorID2;
		t5.colorA = colorID2;
		t5.colorB = colorID2;
		t5.colorC = colorID2;
		t5.windingAdjusted = tri8.windingAdjusted;
		this3[this3.length] = t5;
		var this4 = shapes.triangles;
		var id3 = shapes.refCount++;
		var tri9 = { t0 : new trilateral_tri_Trilateral(-0.15,-0.1,0.15,-0.1,-0.15,0.1), t1 : new trilateral_tri_Trilateral(0.15,-0.1,0.15,0.1,-0.15,0.1)};
		var colorID3 = shapes.colors.indexOf(255);
		var tri10 = tri9.t0;
		var t6 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t6.id = id3;
		t6.ax = tri10.ax;
		t6.ay = tri10.ay;
		t6.bx = tri10.bx;
		t6.by = tri10.by;
		t6.cx = tri10.cx;
		t6.cy = tri10.cy;
		t6.mark = tri10.mark;
		t6.depth = 0;
		t6.alpha = 1.;
		t6.colorID = colorID3;
		t6.colorA = colorID3;
		t6.colorB = colorID3;
		t6.colorC = colorID3;
		t6.windingAdjusted = tri10.windingAdjusted;
		this4[this4.length] = t6;
		var tri11 = tri9.t1;
		var t7 = Type.createEmptyInstance(trilateral_tri_Triangle);
		t7.id = id3;
		t7.ax = tri11.ax;
		t7.ay = tri11.ay;
		t7.bx = tri11.bx;
		t7.by = tri11.by;
		t7.cx = tri11.cx;
		t7.cy = tri11.cy;
		t7.mark = tri11.mark;
		t7.depth = 0;
		t7.alpha = 1.;
		t7.colorID = colorID3;
		t7.colorA = colorID3;
		t7.colorB = colorID3;
		t7.colorC = colorID3;
		t7.windingAdjusted = tri11.windingAdjusted;
		this4[this4.length] = t7;
		var this5 = shapes.triangles;
		var id4 = shapes.refCount++;
		var out = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]);
		var pi2 = Math.PI;
		var theta1 = pi2 / 2;
		var step = pi2 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g1 = 0;
		while(_g1 < 36) {
			++_g1;
			bx1 = 0.3 + 0.1 * Math.sin(theta1);
			by1 = 0.3 + 0.1 * Math.cos(theta1);
			theta1 += step;
			cx1 = 0.3 + 0.1 * Math.sin(theta1);
			cy1 = 0.3 + 0.1 * Math.cos(theta1);
			var tri12 = new trilateral_tri_Trilateral(0.3,0.3,bx1,by1,cx1,cy1);
			out[out.length] = tri12;
		}
		var triArr = out;
		var colorID4 = shapes.colors.indexOf(4915330);
		var _g = 0;
		while(_g < triArr.length) {
			var t8 = triArr[_g];
			++_g;
			var t9 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t9.id = id4;
			t9.ax = t8.ax;
			t9.ay = t8.ay;
			t9.bx = t8.bx;
			t9.by = t8.by;
			t9.cx = t8.cx;
			t9.cy = t8.cy;
			t9.mark = t8.mark;
			t9.depth = 0;
			t9.alpha = 1.;
			t9.colorID = colorID4;
			t9.colorA = colorID4;
			t9.colorB = colorID4;
			t9.colorC = colorID4;
			t9.windingAdjusted = t8.windingAdjusted;
			this5[this5.length] = t9;
		}
		var color = 16711680;
		var theta2 = 0.;
		var line;
		var wid = 0.0001;
		var _g11 = 0;
		while(_g11 < 60) {
			++_g11;
			p1_x = 0.5 * Math.sin(theta2);
			p1_y = 0.5 * Math.cos(theta2);
			theta2 += Math.PI * 2 / 60;
			var width = wid += 0.0003;
			var dx1 = 0. - p1_x;
			var dy1 = 0. - p1_y;
			P_x = 0. - width / 2;
			var omega1 = Math.atan2(dy1,dx1);
			dim_y = dx1 * dx1 + dy1 * dy1;
			var pivotX = width / 2;
			var A_ = { x : P_x, y : 0.};
			var B_ = { x : P_x + width, y : 0.};
			var C_ = { x : P_x + width, y : dim_y};
			var D_ = { x : P_x, y : dim_y};
			if(omega1 != 0.) {
				var sin = Math.sin(omega1);
				var cos = Math.cos(omega1);
				var px = A_.x - pivotX;
				var py = A_.y;
				var px2 = px * cos - py * sin;
				py = py * cos + px * sin;
				A_ = { x : px2 + pivotX, y : py};
				var px1 = B_.x - pivotX;
				var py1 = B_.y;
				var px21 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				B_ = { x : px21 + pivotX, y : py1};
				var px3 = C_.x - pivotX;
				var py2 = C_.y;
				var px22 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				C_ = { x : px22 + pivotX, y : py2};
				var px4 = D_.x - pivotX;
				var py3 = D_.y;
				var px23 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				D_ = { x : px23 + pivotX, y : py3};
			}
			q_A = A_;
			q_B = B_;
			q_C = C_;
			q_D = D_;
			line = { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
			var this6 = shapes.triangles;
			var id5 = shapes.refCount;
			var colorID5 = shapes.colors.indexOf(color);
			var tri13 = line.t0;
			var t10 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t10.id = id5;
			t10.ax = tri13.ax;
			t10.ay = tri13.ay;
			t10.bx = tri13.bx;
			t10.by = tri13.by;
			t10.cx = tri13.cx;
			t10.cy = tri13.cy;
			t10.mark = tri13.mark;
			t10.depth = 0;
			t10.alpha = 1.;
			t10.colorID = colorID5;
			t10.colorA = colorID5;
			t10.colorB = colorID5;
			t10.colorC = colorID5;
			t10.windingAdjusted = tri13.windingAdjusted;
			this6[this6.length] = t10;
			var tri14 = line.t1;
			var t11 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t11.id = id5;
			t11.ax = tri14.ax;
			t11.ay = tri14.ay;
			t11.bx = tri14.bx;
			t11.by = tri14.by;
			t11.cx = tri14.cx;
			t11.cy = tri14.cy;
			t11.mark = tri14.mark;
			t11.depth = 0;
			t11.alpha = 1.;
			t11.colorID = colorID5;
			t11.colorA = colorID5;
			t11.colorB = colorID5;
			t11.colorC = colorID5;
			t11.windingAdjusted = tri14.windingAdjusted;
			this6[this6.length] = t11;
		}
		shapes.refCount++;
	}
	,addPaths: function() {
		var path = new trilateral_path_Medium();
		path.width = 0.001;
		path.widthFunction = function(width,x,y,x_,y_) {
			return width + 0.0001;
		};
		var p = new justPath_SvgPath(path);
		p.parse(this.cubictest_d,-1.,-0.6,0.002,0.002);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			var t1 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t1.id = 6;
			t1.ax = t.ax;
			t1.ay = t.ay;
			t1.bx = t.bx;
			t1.by = t.by;
			t1.cx = t.cx;
			t1.cy = t.cy;
			t1.mark = t.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = 1;
			t1.colorA = 1;
			t1.colorB = 1;
			t1.colorC = 1;
			t1.windingAdjusted = t.windingAdjusted;
			this1[this1.length] = t1;
		}
		path.trilateralArray = [];
		path.width = 0.001;
		path.widthFunction = function(width1,x1,y1,x_1,y_1) {
			return width1 + 0.001 * y1;
		};
		p.parse(this.quadtest_d,-1.2,-0.6,0.002,0.002);
		var this2 = this.triangles;
		var triArr1 = path.trilateralArray;
		var _g1 = 0;
		while(_g1 < triArr1.length) {
			var t2 = triArr1[_g1];
			++_g1;
			var t3 = Type.createEmptyInstance(trilateral_tri_Triangle);
			t3.id = 6;
			t3.ax = t2.ax;
			t3.ay = t2.ay;
			t3.bx = t2.bx;
			t3.by = t2.by;
			t3.cx = t2.cx;
			t3.cy = t2.cy;
			t3.mark = t2.mark;
			t3.depth = 0;
			t3.alpha = 1.;
			t3.colorID = 7;
			t3.colorA = 7;
			t3.colorB = 7;
			t3.colorC = 7;
			t3.windingAdjusted = t2.windingAdjusted;
			this2[this2.length] = t3;
		}
	}
	,draw: function() {
		this.triangles = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]);
		this.addShapes();
		this.addPaths();
	}
	,setTriangles: function(triangles,triangleColors) {
		var rgb;
		var count = 0;
		var i = 0;
		var c = 0;
		var j = 0;
		var _g = 0;
		while(_g < triangles.length) {
			var tri = triangles[_g];
			++_g;
			this.vertices[i++] = tri.ax;
			this.vertices[i++] = tri.ay + 0.3;
			this.vertices[i++] = tri.depth;
			this.vertices[i++] = tri.bx;
			this.vertices[i++] = tri.by + 0.3;
			this.vertices[i++] = tri.depth;
			this.vertices[i++] = tri.cx;
			this.vertices[i++] = tri.cy + 0.3;
			this.vertices[i++] = tri.depth;
			if(tri.mark) {
				var $int = triangleColors[12];
				rgb = { r : ($int >> 16 & 255) / 255, g : ($int >> 8 & 255) / 255, b : ($int & 255) / 255};
			} else {
				var int1 = triangleColors[tri.colorID];
				rgb = { r : (int1 >> 16 & 255) / 255, g : (int1 >> 8 & 255) / 255, b : (int1 & 255) / 255};
			}
			var _g1 = 0;
			while(_g1 < 3) {
				++_g1;
				this.colors[c++] = rgb.r;
				this.colors[c++] = rgb.g;
				this.colors[c++] = rgb.b;
				this.colors[c++] = 1.0;
				this.indices[j++] = count++;
			}
		}
		var gl = this.gl;
		var program = this.program;
		var vertices = this.vertices;
		var colors = this.colors;
		gl.bindBuffer(34962,gl.createBuffer());
		gl.bufferData(34962,new Float32Array(vertices),35044);
		var position = gl.getAttribLocation(program,"pos");
		gl.vertexAttribPointer(position,3,5126,false,0,0);
		gl.enableVertexAttribArray(position);
		gl.bindBuffer(34962,null);
		gl.bindBuffer(34962,gl.createBuffer());
		gl.bufferData(34962,new Float32Array(colors),35044);
		var col = gl.getAttribLocation(program,"color");
		gl.vertexAttribPointer(col,4,5126,false,0,0);
		gl.enableVertexAttribArray(col);
		gl.bindBuffer(34962,null);
	}
	,render_: function(i) {
		this.render();
	}
	,render: function() {
		var m__33;
		var m__23;
		var m__13;
		var m__03;
		var m__32;
		var m__12;
		var m__02;
		var m__31;
		var m__21;
		var m__11;
		var m__01;
		var m__30;
		var m__10;
		var _this__33;
		var _this__23;
		var _this__13;
		var _this__03;
		var _this__32;
		var _this__22;
		var _this__12;
		var _this__02;
		var _this__31;
		var _this__21;
		var _this__30;
		var _this__20;
		var _this__10;
		if(this.theta > Math.PI / 2) {
			this.theta = -Math.PI / 2;
		}
		var alpha = this;
		var alpha1 = alpha.theta += Math.PI / 100;
		var ca = Math.cos(alpha1);
		var sa = Math.sin(alpha1);
		_this__10 = -sa;
		_this__20 = 0;
		_this__30 = 0;
		_this__21 = 0;
		_this__31 = 0;
		_this__02 = 0;
		_this__12 = 0;
		_this__22 = 1;
		_this__32 = 0;
		_this__03 = 0;
		_this__13 = 0;
		_this__23 = 0;
		_this__33 = 1;
		var alpha2 = this.theta;
		var ca1 = Math.cos(alpha2);
		var sa1 = Math.sin(alpha2);
		m__10 = 0;
		m__30 = 0;
		m__01 = 0;
		m__11 = 1;
		m__21 = 0;
		m__31 = 0;
		m__02 = -sa1;
		m__12 = 0;
		m__32 = 0;
		m__03 = 0;
		m__13 = 0;
		m__23 = 0;
		m__33 = 1;
		this.modelViewProjection = new khaMath_Matrix4(ca * ca1 + _this__10 * m__01 + _this__20 * m__02 + _this__30 * m__03,ca * m__10 + _this__10 * m__11 + _this__20 * m__12 + _this__30 * m__13,ca * sa1 + _this__10 * m__21 + _this__20 * ca1 + _this__30 * m__23,ca * m__30 + _this__10 * m__31 + _this__20 * m__32 + _this__30 * m__33,sa * ca1 + ca * m__01 + _this__21 * m__02 + _this__31 * m__03,sa * m__10 + ca * m__11 + _this__21 * m__12 + _this__31 * m__13,sa * sa1 + ca * m__21 + _this__21 * ca1 + _this__31 * m__23,sa * m__30 + ca * m__31 + _this__21 * m__32 + _this__31 * m__33,_this__02 * ca1 + _this__12 * m__01 + _this__22 * m__02 + _this__32 * m__03,_this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12 + _this__32 * m__13,_this__02 * sa1 + _this__12 * m__21 + _this__22 * ca1 + _this__32 * m__23,_this__02 * m__30 + _this__12 * m__31 + _this__22 * m__32 + _this__32 * m__33,_this__03 * ca1 + _this__13 * m__01 + _this__23 * m__02 + _this__33 * m__03,_this__03 * m__10 + _this__13 * m__11 + _this__23 * m__12 + _this__33 * m__13,_this__03 * sa1 + _this__13 * m__21 + _this__23 * ca1 + _this__33 * m__23,_this__03 * m__30 + _this__13 * m__31 + _this__23 * m__32 + _this__33 * m__33);
		this.vertices = [];
		this.indices = [];
		this.colors = [];
		this.setTriangles(this.triangles,this.appColors);
		htmlHelper_webgl_WebGLSetup.prototype.render.call(this);
	}
	,__class__: Test
});
var Type = function() { };
Type.__name__ = true;
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return (1 - (i >>> 31 << 1)) * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.__name__ = true;
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$CanvasElement_CanvasUtil = function() { };
js_html__$CanvasElement_CanvasUtil.__name__ = true;
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
js_html_compat_Float32Array.__name__ = true;
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var justPath_IPathContext = function() { };
justPath_IPathContext.__name__ = true;
justPath_IPathContext.prototype = {
	__class__: justPath_IPathContext
};
var justPath_StoreF6 = function() {
	this.count = 0;
	this.l = 0;
};
justPath_StoreF6.__name__ = true;
justPath_StoreF6.prototype = {
	hasNext: function() {
		return this.count < this.l + 1;
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
		}
		this.count++;
		return out;
	}
	,__class__: justPath_StoreF6
};
var justPath_SvgPath = function(pathContext_) {
	this.sy = 1;
	this.sx = 1;
	this.dy = 0;
	this.dx = 0;
	this.lastY = 0;
	this.lastX = 0;
	this.pathContext = pathContext_;
};
justPath_SvgPath.__name__ = true;
justPath_SvgPath.prototype = {
	parse: function(str_,dx_,dy_,sx_,sy_) {
		if(sy_ == null) {
			sy_ = 1;
		}
		if(sx_ == null) {
			sx_ = 1;
		}
		if(dy_ == null) {
			dy_ = 0;
		}
		if(dx_ == null) {
			dx_ = 0;
		}
		this.str = str_;
		this.dx = dx_;
		this.dy = dy_;
		this.sx = sx_;
		this.sy = sy_;
		this.pos = 0;
		this.l = this.str.length;
		this.c = this.str.charCodeAt(this.pos++);
		this.store = new justPath_StoreF6();
		while(this.pos < this.l) {
			switch(this.c) {
			case 65:
				console.log("elliptical_Arc - not implemented");
				this.extractArgs();
				break;
			case 66:
				console.log("bearing - not implemented");
				throw new js__$Boot_HaxeError("bearing not supported please remove");
				break;
			case 67:
				this.extractArgs();
				this.controlX = this.store.s2;
				this.controlY = this.store.s3;
				this.lastX = this.store.s4;
				this.lastY = this.store.s5;
				this.pathContext.curveTo(this.store.s0,this.store.s1,this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 72:
				this.extractArgs(false);
				this.lastX = this.store.s0 * this.sx + this.dx;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 76:
				this.extractArgs();
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 77:
				this.extractArgs();
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.moveTo(this.lastX,this.lastY);
				break;
			case 81:
				this.extractArgs();
				this.controlX = this.store.s0;
				this.controlY = this.store.s1;
				this.lastX = this.store.s2;
				this.lastY = this.store.s3;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 83:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.pathContext.curveTo(this.controlX,this.controlY,this.store.s0,this.store.s1,this.store.s2,this.store.s3);
				this.controlX = this.store.s0;
				this.controlY = this.store.s1;
				break;
			case 84:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.lastX = this.store.s0;
				this.lastY = this.store.s1;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 86:
				this.extractArgs(false);
				this.lastY = this.store.s0 * this.sy + this.dy;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 90:case 122:
				this.lastX = 0;
				this.lastY = 0;
				break;
			case 97:
				console.log("relative elliptical_Arc - not implemented");
				this.extractArgs();
				break;
			case 99:
				this.extractArgs();
				this.controlX = this.store.s2 + this.lastX;
				this.controlY = this.store.s3 + this.lastY;
				var endX = this.store.s4 + this.lastX;
				var endY = this.store.s5 + this.lastY;
				this.pathContext.curveTo(this.store.s0 + this.lastX,this.store.s1 + this.lastY,this.controlX,this.controlY,endX,endY);
				this.lastX = endX;
				this.lastY = endY;
				break;
			case 104:
				this.extractArgs(false);
				this.lastX = this.lastX + this.store.s0 * this.sx + this.dx;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 108:
				this.extractArgs();
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			case 109:
				this.extractArgs();
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.moveTo(this.lastX,this.lastY);
				break;
			case 113:
				this.extractArgs();
				this.controlX = this.lastX + this.store.s0;
				this.controlY = this.lastY + this.store.s1;
				this.lastX = this.store.s0 + this.lastX;
				this.lastY = this.store.s1 + this.lastY;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 115:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				var endX1 = this.store.s2 + this.lastX;
				var endY1 = this.store.s3 + this.lastY;
				this.pathContext.curveTo(this.controlX,this.controlY,this.store.s0 + this.lastX,this.store.s1 + this.lastY,endX1,endY1);
				this.controlX = this.store.s0 + this.lastX;
				this.controlY = this.store.s1 + this.lastY;
				this.lastX = endX1;
				this.lastY = endY1;
				break;
			case 116:
				this.extractArgs();
				this.controlX = 2 * this.lastX - this.controlX;
				this.controlY = 2 * this.lastY - this.controlY;
				this.lastX = this.store.s0 + this.lastY;
				this.lastY = this.store.s1 + this.lastX;
				this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				break;
			case 118:
				this.extractArgs(false);
				this.lastY = this.lastY + this.store.s0 * this.sy + this.dy;
				this.pathContext.lineTo(this.lastX,this.lastY);
				break;
			default:
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
		return str_;
	}
	,extractArgs: function(process) {
		if(process == null) {
			process = true;
		}
		var _this = this.store;
		_this.l = 0;
		_this.s0 = null;
		_this.s1 = null;
		_this.s2 = null;
		_this.s3 = null;
		_this.s4 = null;
		_this.s5 = null;
		this.c = this.str.charCodeAt(this.pos++);
		var temp = "";
		try {
			while(true) {
				switch(this.c) {
				case 32:case 44:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this1 = this.store;
								var v = parseFloat(temp) * this.sx + this.dx;
								switch(_this1.l) {
								case 0:
									_this1.s0 = v;
									break;
								case 1:
									_this1.s1 = v;
									break;
								case 2:
									_this1.s2 = v;
									break;
								case 3:
									_this1.s3 = v;
									break;
								case 4:
									_this1.s4 = v;
									break;
								case 5:
									_this1.s5 = v;
									break;
								default:
								}
								_this1.l++;
							} else {
								var _this2 = this.store;
								var v1 = parseFloat(temp) * this.sy + this.dy;
								switch(_this2.l) {
								case 0:
									_this2.s0 = v1;
									break;
								case 1:
									_this2.s1 = v1;
									break;
								case 2:
									_this2.s2 = v1;
									break;
								case 3:
									_this2.s3 = v1;
									break;
								case 4:
									_this2.s4 = v1;
									break;
								case 5:
									_this2.s5 = v1;
									break;
								default:
								}
								_this2.l++;
							}
						} else {
							var _this3 = this.store;
							var v2 = parseFloat(temp);
							switch(_this3.l) {
							case 0:
								_this3.s0 = v2;
								break;
							case 1:
								_this3.s1 = v2;
								break;
							case 2:
								_this3.s2 = v2;
								break;
							case 3:
								_this3.s3 = v2;
								break;
							case 4:
								_this3.s4 = v2;
								break;
							case 5:
								_this3.s5 = v2;
								break;
							default:
							}
							_this3.l++;
						}
						temp = "";
					}
					break;
				case 45:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this4 = this.store;
								var v3 = parseFloat(temp) * this.sx + this.dx;
								switch(_this4.l) {
								case 0:
									_this4.s0 = v3;
									break;
								case 1:
									_this4.s1 = v3;
									break;
								case 2:
									_this4.s2 = v3;
									break;
								case 3:
									_this4.s3 = v3;
									break;
								case 4:
									_this4.s4 = v3;
									break;
								case 5:
									_this4.s5 = v3;
									break;
								default:
								}
								_this4.l++;
							} else {
								var _this5 = this.store;
								var v4 = parseFloat(temp) * this.sy + this.dy;
								switch(_this5.l) {
								case 0:
									_this5.s0 = v4;
									break;
								case 1:
									_this5.s1 = v4;
									break;
								case 2:
									_this5.s2 = v4;
									break;
								case 3:
									_this5.s3 = v4;
									break;
								case 4:
									_this5.s4 = v4;
									break;
								case 5:
									_this5.s5 = v4;
									break;
								default:
								}
								_this5.l++;
							}
						} else {
							var _this6 = this.store;
							var v5 = parseFloat(temp);
							switch(_this6.l) {
							case 0:
								_this6.s0 = v5;
								break;
							case 1:
								_this6.s1 = v5;
								break;
							case 2:
								_this6.s2 = v5;
								break;
							case 3:
								_this6.s3 = v5;
								break;
							case 4:
								_this6.s4 = v5;
								break;
							case 5:
								_this6.s5 = v5;
								break;
							default:
							}
							_this6.l++;
						}
					}
					temp = "-";
					break;
				case 46:
					temp += ".";
					break;
				case 48:
					temp += "0";
					break;
				case 49:
					temp += "1";
					break;
				case 50:
					temp += "2";
					break;
				case 51:
					temp += "3";
					break;
				case 52:
					temp += "4";
					break;
				case 53:
					temp += "5";
					break;
				case 54:
					temp += "6";
					break;
				case 55:
					temp += "7";
					break;
				case 56:
					temp += "8";
					break;
				case 57:
					temp += "9";
					break;
				default:
					if(temp != "") {
						if(temp == "0") {
							temp = "0.1";
						}
						if(process) {
							if((this.store.l & 1) == 0) {
								var _this7 = this.store;
								var v6 = parseFloat(temp) * this.sx + this.dx;
								switch(_this7.l) {
								case 0:
									_this7.s0 = v6;
									break;
								case 1:
									_this7.s1 = v6;
									break;
								case 2:
									_this7.s2 = v6;
									break;
								case 3:
									_this7.s3 = v6;
									break;
								case 4:
									_this7.s4 = v6;
									break;
								case 5:
									_this7.s5 = v6;
									break;
								default:
								}
								_this7.l++;
							} else {
								var _this8 = this.store;
								var v7 = parseFloat(temp) * this.sy + this.dy;
								switch(_this8.l) {
								case 0:
									_this8.s0 = v7;
									break;
								case 1:
									_this8.s1 = v7;
									break;
								case 2:
									_this8.s2 = v7;
									break;
								case 3:
									_this8.s3 = v7;
									break;
								case 4:
									_this8.s4 = v7;
									break;
								case 5:
									_this8.s5 = v7;
									break;
								default:
								}
								_this8.l++;
							}
						} else {
							var _this9 = this.store;
							var v8 = parseFloat(temp);
							switch(_this9.l) {
							case 0:
								_this9.s0 = v8;
								break;
							case 1:
								_this9.s1 = v8;
								break;
							case 2:
								_this9.s2 = v8;
								break;
							case 3:
								_this9.s3 = v8;
								break;
							case 4:
								_this9.s4 = v8;
								break;
							case 5:
								_this9.s5 = v8;
								break;
							default:
							}
							_this9.l++;
						}
						temp = "";
					}
					this.pos--;
					throw "__break__";
				}
				this.c = this.str.charCodeAt(this.pos++);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
	}
	,__class__: justPath_SvgPath
};
var khaMath_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
khaMath_Matrix4.__name__ = true;
khaMath_Matrix4.prototype = {
	__class__: khaMath_Matrix4
};
var trilateral_geom_Algebra = function() { };
trilateral_geom_Algebra.__name__ = true;
var trilateral_geom_Contour = function() {
};
trilateral_geom_Contour.__name__ = true;
trilateral_geom_Contour.prototype = {
	__class__: trilateral_geom_Contour
};
var trilateral_helper_Shapes = function(triangleArray_,colors_) {
	this.refCount = 0;
	this.triangles = triangleArray_;
	this.colors = colors_;
};
trilateral_helper_Shapes.__name__ = true;
trilateral_helper_Shapes.prototype = {
	__class__: trilateral_helper_Shapes
};
var trilateral_path_Base = function(contour_,trilateralArray_) {
	this.width = 0.01;
	this.y = 0.;
	this.x = 0.;
	this.trilateralArray = trilateralArray_ == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : trilateralArray_;
	this.contour = contour_ == null ? new trilateral_geom_Contour() : contour_;
};
trilateral_path_Base.__name__ = true;
trilateral_path_Base.__interfaces__ = [justPath_IPathContext];
trilateral_path_Base.prototype = {
	moveTo: function(x_,y_) {
		this.x = x_;
		this.y = y_;
	}
	,lineTo: function(x_,y_) {
		if(this.widthFunction != null) {
			this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
		}
		this.line(x_,y_);
		this.x = x_;
		this.y = y_;
	}
	,line: function(x_,y_) {
		var tp_t1;
		var tp_t0;
		console.log("lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )");
		var this1 = this.trilateralArray;
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = this.width / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		tp_t0 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_);
		tp_t1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey);
		this1[this1.length] = tp_t0;
		this1[this1.length] = tp_t1;
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x3 = x1 - x2;
		var y3 = y1 - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * x1 + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * y1 + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		this.plotCoord(this.tempArr);
		this.x = x2;
		this.y = y2;
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x4 = x1 - x2;
		var y4 = y1 - y2;
		var x5 = x2 - x3;
		var y5 = y2 - y3;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x4 * x4 + y4 * y4) + Math.sqrt(x5 * x5 + y5 * y5);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * x1 + 3 * u * Math.pow(t,2) * x2 + Math.pow(t,3) * x3;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * y1 + 3 * u1 * Math.pow(t,2) * y2 + Math.pow(t,3) * y3;
			t += step;
		}
		p[l++] = x3;
		p[l++] = y3;
		this.plotCoord(this.tempArr);
		this.x = x3;
		this.y = y3;
	}
	,plotCoord: function(arr) {
		var l = arr.length;
		var i = 2;
		var x_ = arr[2];
		var y_ = arr[3];
		if(this.widthFunction != null) {
			this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
		}
		this.line(x_,y_);
		this.x = x_;
		this.y = y_;
		while(i < l) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
			}
			this.line(x_1,y_1);
			this.x = x_1;
			this.y = y_1;
			i += 2;
		}
	}
	,__class__: trilateral_path_Base
};
var trilateral_path_Medium = function(contour_,trilateralArray_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_);
};
trilateral_path_Medium.__name__ = true;
trilateral_path_Medium.__super__ = trilateral_path_Base;
trilateral_path_Medium.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var triArr = this.trilateralArray;
		var ax_ = this.x;
		var ay_ = this.y;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = this.width / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		if(x * x + y * y > x1 * x1 + y1 * y1) {
			var tri = new trilateral_tri_Trilateral(_this.dxOld,_this.dyOld,_this.exPrev,_this.eyPrev,ax_,ay_);
			triArr[triArr.length] = tri;
		} else {
			var tri1 = new trilateral_tri_Trilateral(_this.exOld,_this.eyOld,_this.dxPrev,_this.dyPrev,ax_,ay_);
			triArr[triArr.length] = tri1;
		}
		var tri2 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev);
		triArr[triArr.length] = tri2;
		var tri3 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey);
		triArr[triArr.length] = tri3;
	}
	,__class__: trilateral_path_Medium
});
var trilateral_tri_Trilateral = function(ax_,ay_,bx_,by_,cx_,cy_) {
	this.mark = false;
	this.ax = ax_;
	this.ay = ay_;
	this.bx = bx_;
	this.by = by_;
	this.cx = cx_;
	this.cy = cy_;
	this.windingAdjusted = this.adjustWinding();
	if(this.windingAdjusted) {
		this.ax = ax_;
		this.ay = ay_;
		this.bx = cx_;
		this.by = cy_;
		this.cx = bx_;
		this.cy = by_;
	}
};
trilateral_tri_Trilateral.__name__ = true;
trilateral_tri_Trilateral.prototype = {
	adjustWinding: function() {
		return this.ax * this.by - this.bx * this.ay + (this.bx * this.cy - this.cx * this.by) + (this.cx * this.ay - this.ax * this.cy) < 0;
	}
	,__class__: trilateral_tri_Trilateral
};
var trilateral_tri_Triangle = function() { };
trilateral_tri_Triangle.__name__ = true;
trilateral_tri_Triangle.fromTrilateral = function(id_,tri,depth_,colorID_) {
	var t = Type.createEmptyInstance(trilateral_tri_Triangle);
	t.id = id_;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = depth_;
	t.alpha = 1.;
	t.colorID = colorID_;
	t.colorA = colorID_;
	t.colorB = colorID_;
	t.colorC = colorID_;
	t.windingAdjusted = tri.windingAdjusted;
	return t;
};
trilateral_tri_Triangle.__super__ = trilateral_tri_Trilateral;
trilateral_tri_Triangle.prototype = $extend(trilateral_tri_Trilateral.prototype,{
	__class__: trilateral_tri_Triangle
});
var trilateral_tri__$TriangleArray_TriangleArray_$Impl_$ = {};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.__name__ = true;
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new = function(t) {
	return t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
};
var trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$ = {};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.__name__ = true;
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new = function(t) {
	return t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
htmlHelper_tools_AnimateTimer.counter = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
trilateral_geom_Algebra.quadStep = 0.03;
trilateral_geom_Algebra.cubicStep = 0.03;
Test.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
